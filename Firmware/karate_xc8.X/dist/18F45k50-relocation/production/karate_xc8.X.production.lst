

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Mar 18 18:40:23 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1
     7                           	psect	idataBIGRAMl,global,class=CODE,delta=1
     8                           	psect	idataBANK0,global,class=CODE,delta=1
     9                           	psect	idataBANK1,global,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
    11                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBIGRAMl,global,class=BIGRAM,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    93                           	dabs	1,0x400,48,_BDT
    94                           	dabs	1,0x500,64,_cdc_data_tx
    95                           	dabs	1,0x438,8,_CtrlTrfData
    96                           	dabs	1,0x430,8,_SetupPkt
    97                           	dabs	1,0x540,64,_cdc_data_rx
    98  0000                     
    99                           	psect	eeprom_data
   100  F00000  34 00 00 00 00 00 00 00 	db	52,0,0,0,0,0,0,0	;# 
   101  0000                     
   102                           	psect	idataCOMRAM
   103  00347E                     __pidataCOMRAM:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _U1EP0_R
   107  00347E  6A                 	db	106
   108  00347F  0F                 	db	15
   109                           
   110                           ;initializer for _tlc_nbytes
   111  003480  48                 	db	72
   112                           
   113                           	psect	idataBIGRAMl
   114  00130E                     __pidataBIGRAMl:
   115                           	opt stack 0
   116                           
   117                           ;initializer for _gamma_table
   118  00130E  0000               	dw	0
   119  001310  0000               	dw	0
   120  001312  0000               	dw	0
   121  001314  0000               	dw	0
   122  001316  0000               	dw	0
   123  001318  0000               	dw	0
   124  00131A  0000               	dw	0
   125  00131C  0001               	dw	1
   126  00131E  0001               	dw	1
   127  001320  0001               	dw	1
   128  001322  0001               	dw	1
   129  001324  0002               	dw	2
   130  001326  0002               	dw	2
   131  001328  0002               	dw	2
   132  00132A  0003               	dw	3
   133  00132C  0003               	dw	3
   134  00132E  0004               	dw	4
   135  001330  0005               	dw	5
   136  001332  0005               	dw	5
   137  001334  0006               	dw	6
   138  001336  0007               	dw	7
   139  001338  0008               	dw	8
   140  00133A  0009               	dw	9
   141  00133C  000A               	dw	10
   142  00133E  000B               	dw	11
   143  001340  000C               	dw	12
   144  001342  000E               	dw	14
   145  001344  000F               	dw	15
   146  001346  0010               	dw	16
   147  001348  0012               	dw	18
   148  00134A  0013               	dw	19
   149  00134C  0015               	dw	21
   150  00134E  0017               	dw	23
   151  001350  0019               	dw	25
   152  001352  001B               	dw	27
   153  001354  001D               	dw	29
   154  001356  001F               	dw	31
   155  001358  0021               	dw	33
   156  00135A  0023               	dw	35
   157  00135C  0025               	dw	37
   158  00135E  0028               	dw	40
   159  001360  002A               	dw	42
   160  001362  002D               	dw	45
   161  001364  0030               	dw	48
   162  001366  0033               	dw	51
   163  001368  0036               	dw	54
   164  00136A  0039               	dw	57
   165  00136C  003C               	dw	60
   166  00136E  003F               	dw	63
   167  001370  0042               	dw	66
   168  001372  0046               	dw	70
   169  001374  0049               	dw	73
   170  001376  004D               	dw	77
   171  001378  0051               	dw	81
   172  00137A  0055               	dw	85
   173  00137C  0058               	dw	88
   174  00137E  005D               	dw	93
   175  001380  0061               	dw	97
   176  001382  0065               	dw	101
   177  001384  0069               	dw	105
   178  001386  006E               	dw	110
   179  001388  0073               	dw	115
   180  00138A  0077               	dw	119
   181  00138C  007C               	dw	124
   182  00138E  0081               	dw	129
   183  001390  0086               	dw	134
   184  001392  008C               	dw	140
   185  001394  0091               	dw	145
   186  001396  0096               	dw	150
   187  001398  009C               	dw	156
   188  00139A  00A2               	dw	162
   189  00139C  00A8               	dw	168
   190  00139E  00AD               	dw	173
   191  0013A0  00B4               	dw	180
   192  0013A2  00BA               	dw	186
   193  0013A4  00C0               	dw	192
   194  0013A6  00C7               	dw	199
   195  0013A8  00CD               	dw	205
   196  0013AA  00D4               	dw	212
   197  0013AC  00DB               	dw	219
   198  0013AE  00E2               	dw	226
   199  0013B0  00E9               	dw	233
   200  0013B2  00F0               	dw	240
   201  0013B4  00F8               	dw	248
   202  0013B6  00FF               	dw	255
   203  0013B8  0107               	dw	263
   204  0013BA  010E               	dw	270
   205  0013BC  0116               	dw	278
   206  0013BE  011E               	dw	286
   207  0013C0  0127               	dw	295
   208  0013C2  012F               	dw	303
   209  0013C4  0138               	dw	312
   210  0013C6  0140               	dw	320
   211  0013C8  0149               	dw	329
   212  0013CA  0152               	dw	338
   213  0013CC  015B               	dw	347
   214  0013CE  0164               	dw	356
   215  0013D0  016D               	dw	365
   216  0013D2  0177               	dw	375
   217  0013D4  0181               	dw	385
   218  0013D6  018A               	dw	394
   219  0013D8  0194               	dw	404
   220  0013DA  019E               	dw	414
   221  0013DC  01A9               	dw	425
   222  0013DE  01B3               	dw	435
   223  0013E0  01BE               	dw	446
   224  0013E2  01C8               	dw	456
   225  0013E4  01D3               	dw	467
   226  0013E6  01DE               	dw	478
   227  0013E8  01E9               	dw	489
   228  0013EA  01F4               	dw	500
   229  0013EC  0200               	dw	512
   230  0013EE  020C               	dw	524
   231  0013F0  0217               	dw	535
   232  0013F2  0223               	dw	547
   233  0013F4  022F               	dw	559
   234  0013F6  023C               	dw	572
   235  0013F8  0248               	dw	584
   236  0013FA  0254               	dw	596
   237  0013FC  0261               	dw	609
   238  0013FE  026E               	dw	622
   239  001400  027B               	dw	635
   240  001402  0288               	dw	648
   241  001404  0296               	dw	662
   242  001406  02A3               	dw	675
   243  001408  02B1               	dw	689
   244  00140A  02BF               	dw	703
   245  00140C  02CD               	dw	717
   246  00140E  02DB               	dw	731
   247  001410  02E9               	dw	745
   248  001412  02F8               	dw	760
   249  001414  0307               	dw	775
   250  001416  0315               	dw	789
   251  001418  0325               	dw	805
   252  00141A  0334               	dw	820
   253  00141C  0343               	dw	835
   254  00141E  0353               	dw	851
   255  001420  0362               	dw	866
   256  001422  0372               	dw	882
   257  001424  0382               	dw	898
   258  001426  0393               	dw	915
   259  001428  03A3               	dw	931
   260  00142A  03B4               	dw	948
   261  00142C  03C4               	dw	964
   262  00142E  03D5               	dw	981
   263  001430  03E6               	dw	998
   264  001432  03F8               	dw	1016
   265  001434  0409               	dw	1033
   266  001436  041B               	dw	1051
   267  001438  042D               	dw	1069
   268  00143A  043F               	dw	1087
   269  00143C  0451               	dw	1105
   270  00143E  0463               	dw	1123
   271  001440  0476               	dw	1142
   272  001442  0489               	dw	1161
   273  001444  049C               	dw	1180
   274  001446  04AF               	dw	1199
   275  001448  04C2               	dw	1218
   276  00144A  04D6               	dw	1238
   277  00144C  04E9               	dw	1257
   278  00144E  04FD               	dw	1277
   279  001450  0511               	dw	1297
   280  001452  0525               	dw	1317
   281  001454  053A               	dw	1338
   282  001456  054E               	dw	1358
   283  001458  0563               	dw	1379
   284  00145A  0578               	dw	1400
   285  00145C  058D               	dw	1421
   286  00145E  05A3               	dw	1443
   287  001460  05B8               	dw	1464
   288  001462  05CE               	dw	1486
   289  001464  05E4               	dw	1508
   290  001466  05FA               	dw	1530
   291  001468  0610               	dw	1552
   292  00146A  0627               	dw	1575
   293  00146C  063E               	dw	1598
   294  00146E  0655               	dw	1621
   295  001470  066C               	dw	1644
   296  001472  0683               	dw	1667
   297  001474  069B               	dw	1691
   298  001476  06B2               	dw	1714
   299  001478  06CA               	dw	1738
   300  00147A  06E2               	dw	1762
   301  00147C  06FB               	dw	1787
   302  00147E  0713               	dw	1811
   303  001480  072C               	dw	1836
   304  001482  0745               	dw	1861
   305  001484  075E               	dw	1886
   306  001486  0777               	dw	1911
   307  001488  0791               	dw	1937
   308  00148A  07AA               	dw	1962
   309  00148C  07C4               	dw	1988
   310  00148E  07DE               	dw	2014
   311  001490  07F9               	dw	2041
   312  001492  0813               	dw	2067
   313  001494  082E               	dw	2094
   314  001496  0849               	dw	2121
   315  001498  0864               	dw	2148
   316  00149A  0880               	dw	2176
   317  00149C  089B               	dw	2203
   318  00149E  08B7               	dw	2231
   319  0014A0  08D3               	dw	2259
   320  0014A2  08EF               	dw	2287
   321  0014A4  090B               	dw	2315
   322  0014A6  0928               	dw	2344
   323  0014A8  0945               	dw	2373
   324  0014AA  0962               	dw	2402
   325  0014AC  097F               	dw	2431
   326  0014AE  099D               	dw	2461
   327  0014B0  09BA               	dw	2490
   328  0014B2  09D8               	dw	2520
   329  0014B4  09F6               	dw	2550
   330  0014B6  0A15               	dw	2581
   331  0014B8  0A33               	dw	2611
   332  0014BA  0A52               	dw	2642
   333  0014BC  0A71               	dw	2673
   334  0014BE  0A90               	dw	2704
   335  0014C0  0AB0               	dw	2736
   336  0014C2  0ACF               	dw	2767
   337  0014C4  0AEF               	dw	2799
   338  0014C6  0B0F               	dw	2831
   339  0014C8  0B2F               	dw	2863
   340  0014CA  0B50               	dw	2896
   341  0014CC  0B71               	dw	2929
   342  0014CE  0B92               	dw	2962
   343  0014D0  0BB3               	dw	2995
   344  0014D2  0BD4               	dw	3028
   345  0014D4  0BF6               	dw	3062
   346  0014D6  0C18               	dw	3096
   347  0014D8  0C3A               	dw	3130
   348  0014DA  0C5C               	dw	3164
   349  0014DC  0C7E               	dw	3198
   350  0014DE  0CA1               	dw	3233
   351  0014E0  0CC4               	dw	3268
   352  0014E2  0CE7               	dw	3303
   353  0014E4  0D0B               	dw	3339
   354  0014E6  0D2E               	dw	3374
   355  0014E8  0D52               	dw	3410
   356  0014EA  0D76               	dw	3446
   357  0014EC  0D9B               	dw	3483
   358  0014EE  0DBF               	dw	3519
   359  0014F0  0DE4               	dw	3556
   360  0014F2  0E09               	dw	3593
   361  0014F4  0E2E               	dw	3630
   362  0014F6  0E54               	dw	3668
   363  0014F8  0E79               	dw	3705
   364  0014FA  0E9F               	dw	3743
   365  0014FC  0EC5               	dw	3781
   366  0014FE  0EEC               	dw	3820
   367  001500  0F12               	dw	3858
   368  001502  0F39               	dw	3897
   369  001504  0F60               	dw	3936
   370  001506  0F88               	dw	3976
   371  001508  0FAF               	dw	4015
   372  00150A  0FD7               	dw	4055
   373  00150C  0FFF               	dw	4095
   374                           
   375                           	psect	idataBANK0
   376  003322                     __pidataBANK0:
   377                           	opt stack 0
   378                           
   379                           ;initializer for _ACTCON_R
   380  003322  B5                 	db	181
   381  003323  0F                 	db	15
   382                           
   383                           ;initializer for _ANSELA_R
   384  003324  5B                 	db	91
   385  003325  0F                 	db	15
   386                           
   387                           ;initializer for _ANSELC_R
   388  003326  5D                 	db	93
   389  003327  0F                 	db	15
   390                           
   391                           ;initializer for _IOCB_R
   392  003328  86                 	db	134
   393  003329  0F                 	db	15
   394                           
   395                           ;initializer for _OSCCON2_R
   396  00332A  D2                 	db	210
   397  00332B  0F                 	db	15
   398                           
   399                           ;initializer for _PIE2_R
   400  00332C  A0                 	db	160
   401  00332D  0F                 	db	15
   402                           
   403                           ;initializer for _PIE3_R
   404  00332E  A3                 	db	163
   405  00332F  0F                 	db	15
   406                           
   407                           ;initializer for _PIR2_R
   408  003330  A1                 	db	161
   409  003331  0F                 	db	15
   410                           
   411                           ;initializer for _PIR3_R
   412  003332  A4                 	db	164
   413  003333  0F                 	db	15
   414                           
   415                           ;initializer for _T3GCON_R
   416  003334  B4                 	db	180
   417  003335  0F                 	db	15
   418                           
   419                           ;initializer for _U1ADDR_R
   420  003336  63                 	db	99
   421  003337  0F                 	db	15
   422                           
   423                           ;initializer for _U1CNFG1_R
   424  003338  62                 	db	98
   425  003339  0F                 	db	15
   426                           
   427                           ;initializer for _U1CON_R
   428  00333A  60                 	db	96
   429  00333B  0F                 	db	15
   430                           
   431                           ;initializer for _U1EIE_R
   432  00333C  66                 	db	102
   433  00333D  0F                 	db	15
   434                           
   435                           ;initializer for _U1EIR_R
   436  00333E  67                 	db	103
   437  00333F  0F                 	db	15
   438                           
   439                           ;initializer for _U1EP1_R
   440  003340  6B                 	db	107
   441  003341  0F                 	db	15
   442                           
   443                           ;initializer for _U1IE_R
   444  003342  64                 	db	100
   445  003343  0F                 	db	15
   446                           
   447                           ;initializer for _U1IR_R
   448  003344  65                 	db	101
   449  003345  0F                 	db	15
   450                           
   451                           ;initializer for _U1STAT_R
   452  003346  61                 	db	97
   453  003347  0F                 	db	15
   454                           
   455                           ;initializer for _tcl5947_testbyte0
   456  003348  23                 	db	35
   457                           
   458                           ;initializer for _tcl5947_testbyte1
   459  003349  42                 	db	66
   460                           
   461                           ;initializer for _tlc_nchannels
   462  00334A  30                 	db	48
   463                           
   464                           	psect	idataBANK1
   465  002EC4                     __pidataBANK1:
   466                           	opt stack 0
   467                           
   468                           ;initializer for _tlc_memory
   469  002EC4  FF                 	db	255
   470  002EC5  FF                 	db	255
   471  002EC6  FF                 	db	255
   472  002EC7  FF                 	db	255
   473  002EC8  FF                 	db	255
   474  002EC9  FF                 	db	255
   475  002ECA  FF                 	db	255
   476  002ECB  FF                 	db	255
   477  002ECC  FF                 	db	255
   478  002ECD  FF                 	db	255
   479  002ECE  FF                 	db	255
   480  002ECF  FF                 	db	255
   481  002ED0  FF                 	db	255
   482  002ED1  FF                 	db	255
   483  002ED2  FF                 	db	255
   484  002ED3  FF                 	db	255
   485  002ED4  FF                 	db	255
   486  002ED5  FF                 	db	255
   487  002ED6  FF                 	db	255
   488  002ED7  FF                 	db	255
   489  002ED8  FF                 	db	255
   490  002ED9  FF                 	db	255
   491  002EDA  FF                 	db	255
   492  002EDB  FF                 	db	255
   493  002EDC  FF                 	db	255
   494  002EDD  FF                 	db	255
   495  002EDE  FF                 	db	255
   496  002EDF  FF                 	db	255
   497  002EE0  FF                 	db	255
   498  002EE1  FF                 	db	255
   499  002EE2  FF                 	db	255
   500  002EE3  FF                 	db	255
   501  002EE4  FF                 	db	255
   502  002EE5  FF                 	db	255
   503  002EE6  FF                 	db	255
   504  002EE7  FF                 	db	255
   505  002EE8  FF                 	db	255
   506  002EE9  FF                 	db	255
   507  002EEA  FF                 	db	255
   508  002EEB  FF                 	db	255
   509  002EEC  FF                 	db	255
   510  002EED  FF                 	db	255
   511  002EEE  FF                 	db	255
   512  002EEF  FF                 	db	255
   513  002EF0  FF                 	db	255
   514  002EF1  FF                 	db	255
   515  002EF2  FF                 	db	255
   516  002EF3  FF                 	db	255
   517  002EF4  FF                 	db	255
   518  002EF5  FF                 	db	255
   519  002EF6  FF                 	db	255
   520  002EF7  FF                 	db	255
   521  002EF8  FF                 	db	255
   522  002EF9  FF                 	db	255
   523  002EFA  FF                 	db	255
   524  002EFB  FF                 	db	255
   525  002EFC  FF                 	db	255
   526  002EFD  FF                 	db	255
   527  002EFE  FF                 	db	255
   528  002EFF  FF                 	db	255
   529  002F00  FF                 	db	255
   530  002F01  FF                 	db	255
   531  002F02  FF                 	db	255
   532  002F03  FF                 	db	255
   533  002F04  FF                 	db	255
   534  002F05  FF                 	db	255
   535  002F06  FF                 	db	255
   536  002F07  FF                 	db	255
   537  002F08  FF                 	db	255
   538  002F09  FF                 	db	255
   539  002F0A  FF                 	db	255
   540  002F0B  FF                 	db	255
   541                           
   542                           ;initializer for _test_pattern
   543  002F0C  FF                 	db	255
   544  002F0D  00                 	db	0
   545  002F0E  00                 	db	0
   546  002F0F  00                 	db	0
   547  002F10  FF                 	db	255
   548  002F11  00                 	db	0
   549  002F12  00                 	db	0
   550  002F13  00                 	db	0
   551  002F14  FF                 	db	255
   552  002F15  FF                 	db	255
   553  002F16  00                 	db	0
   554  002F17  FF                 	db	255
   555  002F18  00                 	db	0
   556  002F19  FF                 	db	255
   557  002F1A  FF                 	db	255
   558  002F1B  FF                 	db	255
   559  002F1C  FF                 	db	255
   560  002F1D  00                 	db	0
   561  002F1E  FF                 	db	255
   562  002F1F  FF                 	db	255
   563  002F20  FF                 	db	255
   564                           
   565                           	psect	smallconst
   566  000900                     __psmallconst:
   567                           	opt stack 0
   568  000900  00                 	db	0
   569  000901                     _USB_SD_Ptr:
   570                           	opt stack 0
   571  000901  A8                 	db	low _sd000
   572  000902  09                 	db	high _sd000
   573  000903  4E                 	db	low _sd001
   574  000904  09                 	db	high _sd001
   575  000905  74                 	db	low _sd002
   576  000906  09                 	db	high _sd002
   577  000907  9E                 	db	low _sd003
   578  000908  09                 	db	high _sd003
   579  000909                     __end_of_USB_SD_Ptr:
   580                           	opt stack 0
   581  000909                     _USB_CD_Ptr:
   582                           	opt stack 0
   583  000909  0B                 	db	low _configDescriptor1
   584  00090A  09                 	db	high _configDescriptor1
   585  00090B                     __end_of_USB_CD_Ptr:
   586                           	opt stack 0
   587  00090B                     _configDescriptor1:
   588                           	opt stack 0
   589  00090B  09                 	db	9
   590  00090C  02                 	db	2
   591  00090D  43                 	db	67
   592  00090E  00                 	db	0
   593  00090F  02                 	db	2
   594  000910  01                 	db	1
   595  000911  00                 	db	0
   596  000912  C0                 	db	192
   597  000913  32                 	db	50
   598  000914  09                 	db	9
   599  000915  04                 	db	4
   600  000916  00                 	db	0
   601  000917  00                 	db	0
   602  000918  01                 	db	1
   603  000919  02                 	db	2
   604  00091A  02                 	db	2
   605  00091B  01                 	db	1
   606  00091C  00                 	db	0
   607  00091D  05                 	db	5
   608  00091E  24                 	db	36
   609  00091F  00                 	db	0
   610  000920  10                 	db	16
   611  000921  01                 	db	1
   612  000922  04                 	db	4
   613  000923  24                 	db	36
   614  000924  02                 	db	2
   615  000925  02                 	db	2
   616  000926  05                 	db	5
   617  000927  24                 	db	36
   618  000928  06                 	db	6
   619  000929  00                 	db	0
   620  00092A  01                 	db	1
   621  00092B  05                 	db	5
   622  00092C  24                 	db	36
   623  00092D  01                 	db	1
   624  00092E  00                 	db	0
   625  00092F  01                 	db	1
   626  000930  07                 	db	7
   627  000931  05                 	db	5
   628  000932  81                 	db	129
   629  000933  03                 	db	3
   630  000934  08                 	db	8
   631  000935  00                 	db	0
   632  000936  02                 	db	2
   633  000937  09                 	db	9
   634  000938  04                 	db	4
   635  000939  01                 	db	1
   636  00093A  00                 	db	0
   637  00093B  02                 	db	2
   638  00093C  0A                 	db	10
   639  00093D  00                 	db	0
   640  00093E  00                 	db	0
   641  00093F  00                 	db	0
   642  000940  07                 	db	7
   643  000941  05                 	db	5
   644  000942  02                 	db	2
   645  000943  02                 	db	2
   646  000944  40                 	db	64
   647  000945  00                 	db	0
   648  000946  00                 	db	0
   649  000947  07                 	db	7
   650  000948  05                 	db	5
   651  000949  82                 	db	130
   652  00094A  02                 	db	2
   653  00094B  40                 	db	64
   654  00094C  00                 	db	0
   655  00094D  00                 	db	0
   656  00094E                     __end_of_configDescriptor1:
   657                           	opt stack 0
   658  00094E                     _sd001:
   659                           	opt stack 0
   660  00094E  26                 	db	38
   661  00094F  03                 	db	3
   662  000950  0063               	dw	99
   663  000952  0040               	dw	64
   664  000954  0072               	dw	114
   665  000956  0073               	dw	115
   666  000958  0074               	dw	116
   667  00095A  0065               	dw	101
   668  00095C  006E               	dw	110
   669  00095E  0070               	dw	112
   670  000960  0072               	dw	114
   671  000962  0065               	dw	101
   672  000964  0073               	dw	115
   673  000966  0073               	dw	115
   674  000968  0065               	dw	101
   675  00096A  0072               	dw	114
   676  00096C  002E               	dw	46
   677  00096E  0064               	dw	100
   678  000970  0065               	dw	101
   679  000972  00                 	db	0
   680  000973  00                 	db	0
   681  000974                     __end_of_sd001:
   682                           	opt stack 0
   683  000974                     _sd002:
   684                           	opt stack 0
   685  000974  18                 	db	24
   686  000975  03                 	db	3
   687  000976  004B               	dw	75
   688  000978  0061               	dw	97
   689  00097A  0072               	dw	114
   690  00097C  0061               	dw	97
   691  00097E  0074               	dw	116
   692  000980  0065               	dw	101
   693  000982  006C               	dw	108
   694  000984  0069               	dw	105
   695  000986  0067               	dw	103
   696  000988  0068               	dw	104
   697  00098A  0074               	dw	116
   698  00098C                     __end_of_sd002:
   699                           	opt stack 0
   700  00098C                     _device_dsc:
   701                           	opt stack 0
   702  00098C  12                 	db	18
   703  00098D  01                 	db	1
   704  00098E  0200               	dw	512
   705  000990  02                 	db	2
   706  000991  00                 	db	0
   707  000992  00                 	db	0
   708  000993  08                 	db	8
   709  000994  04D8               	dw	1240
   710  000996  000A               	dw	10
   711  000998  0100               	dw	256
   712  00099A  01                 	db	1
   713  00099B  02                 	db	2
   714  00099C  03                 	db	3
   715  00099D  01                 	db	1
   716  00099E                     __end_of_device_dsc:
   717                           	opt stack 0
   718  00099E                     _sd003:
   719                           	opt stack 0
   720  00099E  18                 	db	24
   721  00099F  03                 	db	3
   722  0009A0  0032               	dw	50
   723  0009A2  0033               	dw	51
   724  0009A4  0061               	dw	97
   725  0009A6  0066               	dw	102
   726  0009A8                     __end_of_sd003:
   727                           	opt stack 0
   728  0009A8                     _sd000:
   729                           	opt stack 0
   730  0009A8  04                 	db	4
   731  0009A9  03                 	db	3
   732  0009AA  0409               	dw	1033
   733  0009AC                     __end_of_sd000:
   734                           	opt stack 0
   735  0009AC  00                 	db	0	; dummy byte at the end
   736  0000                     
   737                           	psect	nvBANK0
   738  0000F1                     __pnvBANK0:
   739                           	opt stack 0
   740  0000F1                     _pic18_devid:
   741                           	opt stack 0
   742  0000F1                     	ds	2
   743  0000                     _ADCON0	set	4034
   744  0000                     _ADCON0bits	set	4034
   745  0000                     _ADCON1	set	4033
   746  0000                     _ADCON2	set	4032
   747  0000                     _ADRESH	set	4036
   748  0000                     _ADRESL	set	4035
   749  0000                     _DDRA	set	3986
   750  0000                     _DDRAbits	set	3986
   751  0000                     _DDRB	set	3987
   752  0000                     _DDRBbits	set	3987
   753  0000                     _DDRC	set	3988
   754  0000                     _DDRD	set	3989
   755  0000                     _DDRE	set	3990
   756  0000                     _EEADR	set	4009
   757  0000                     _EECON1bits	set	4006
   758  0000                     _EECON2	set	4007
   759  0000                     _EEDATA	set	4008
   760  0000                     _INTCONbits	set	4082
   761  0000                     _IPR1bits	set	3999
   762  0000                     _IPR2bits	set	4002
   763  0000                     _LATBbits	set	3978
   764  0000                     _LATC	set	3979
   765  0000                     _LATCbits	set	3979
   766  0000                     _OSCCON	set	4051
   767  0000                     _OSCTUNE	set	3995
   768  0000                     _PIE1bits	set	3997
   769  0000                     _PIE2	set	4000
   770  0000                     _PIR1bits	set	3998
   771  0000                     _PIR2bits	set	4001
   772  0000                     _PORTAbits	set	3968
   773  0000                     _PORTBbits	set	3969
   774  0000                     _PORTCbits	set	3970
   775  0000                     _PR2	set	4027
   776  0000                     _RCONbits	set	4048
   777  0000                     _SSP1BUF	set	4041
   778  0000                     _SSP1CON1	set	4038
   779  0000                     _SSP1CON1bits	set	4038
   780  0000                     _SSP1STAT	set	4039
   781  0000                     _SSP1STATbits	set	4039
   782  0000                     _SSPCON1	set	4038
   783  0000                     _SSPSTAT	set	4039
   784  0000                     _T2CON	set	4026
   785  0000                     _T3CON	set	4017
   786  0000                     _TABLAT	set	4085
   787  0000                     _TBLPTRH	set	4087
   788  0000                     _TBLPTRL	set	4086
   789  0000                     _TBLPTRU	set	4088
   790  0000                     _TMR3H	set	4019
   791  0000                     _TMR3L	set	4018
   792  0000                     _TRISAbits	set	3986
   793  0000                     _TRISBbits	set	3987
   794  0000                     _TRISC	set	3988
   795  0000                     _TRISCbits	set	3988
   796  0000                     _UCONbits	set	3936
   797  0000                     _UIEbits	set	3940
   798  0000                     _UIRbits	set	3941
   799  0000                     _UADDR	set	3939
   800  0000                     _UCFG	set	3938
   801  0000                     _UCON	set	3936
   802  0000                     _UEIE	set	3942
   803  0000                     _UEIR	set	3943
   804  0000                     _UEP0	set	3946
   805  0000                     _UEP1	set	3947
   806  0000                     _UIE	set	3940
   807  0000                     _UIR	set	3941
   808  0000                     _USTAT	set	3937
   809                           
   810                           ; #config settings
   811  0000                     
   812                           	psect	cinit
   813  002678                     __pcinit:
   814                           	opt stack 0
   815  002678                     start_initialization:
   816                           	opt stack 0
   817  002678                     __initialization:
   818                           	opt stack 0
   819                           
   820                           ; Clear objects allocated to BANK2 (128 bytes)
   821  002678  EE02  F000         	lfsr	0,__pbssBANK2
   822  00267C  0E80               	movlw	128
   823  00267E                     clear_0:
   824  00267E  6AEE               	clrf	postinc0,c
   825  002680  06E8               	decf	wreg,f,c
   826  002682  E1FD               	bnz	clear_0
   827                           
   828                           ; Clear objects allocated to BANK1 (128 bytes)
   829  002684  EE01  F000         	lfsr	0,__pbssBANK1
   830  002688  0E80               	movlw	128
   831  00268A                     clear_1:
   832  00268A  6AEE               	clrf	postinc0,c
   833  00268C  06E8               	decf	wreg,f,c
   834  00268E  E1FD               	bnz	clear_1
   835                           
   836                           ; Clear objects allocated to BANK0 (85 bytes)
   837  002690  EE00  F060         	lfsr	0,__pbssBANK0
   838  002694  0E55               	movlw	85
   839  002696                     clear_2:
   840  002696  6AEE               	clrf	postinc0,c
   841  002698  06E8               	decf	wreg,f,c
   842  00269A  E1FD               	bnz	clear_2
   843                           
   844                           ; Clear objects allocated to COMRAM (31 bytes)
   845  00269C  EE00  F03E         	lfsr	0,__pbssCOMRAM
   846  0026A0  0E1F               	movlw	31
   847  0026A2                     clear_3:
   848  0026A2  6AEE               	clrf	postinc0,c
   849  0026A4  06E8               	decf	wreg,f,c
   850  0026A6  E1FD               	bnz	clear_3
   851                           
   852                           ; Initialize objects allocated to BIGRAMl (512 bytes)
   853                           ; load TBLPTR registers with __pidataBIGRAMl
   854  0026A8  0E0E               	movlw	low __pidataBIGRAMl
   855  0026AA  6EF6               	movwf	tblptrl,c
   856  0026AC  0E13               	movlw	high __pidataBIGRAMl
   857  0026AE  6EF7               	movwf	tblptrh,c
   858  0026B0  0E00               	movlw	low (__pidataBIGRAMl shr (0+16))
   859  0026B2  6EF8               	movwf	tblptru,c
   860  0026B4  EE05  F080         	lfsr	0,__pdataBIGRAMl
   861  0026B8  EE12 F000          	lfsr	1,512
   862  0026BC                     copy_data0:
   863  0026BC  0009               	tblrd		*+
   864  0026BE  CFF5 FFEE          	movff	tablat,postinc0
   865  0026C2  50E5               	movf	postdec1,w,c
   866  0026C4  50E1               	movf	fsr1l,w,c
   867  0026C6  E1FA               	bnz	copy_data0
   868  0026C8  50E2               	movf	fsr1h,w,c
   869  0026CA  E1F8               	bnz	copy_data0
   870                           
   871                           ; Initialize objects allocated to BANK1 (93 bytes)
   872                           ; load TBLPTR registers with __pidataBANK1
   873  0026CC  0EC4               	movlw	low __pidataBANK1
   874  0026CE  6EF6               	movwf	tblptrl,c
   875  0026D0  0E2E               	movlw	high __pidataBANK1
   876  0026D2  6EF7               	movwf	tblptrh,c
   877  0026D4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   878  0026D6  6EF8               	movwf	tblptru,c
   879  0026D8  EE01  F080         	lfsr	0,__pdataBANK1
   880  0026DC  EE10 F05D          	lfsr	1,93
   881  0026E0                     copy_data1:
   882  0026E0  0009               	tblrd		*+
   883  0026E2  CFF5 FFEE          	movff	tablat,postinc0
   884  0026E6  50E5               	movf	postdec1,w,c
   885  0026E8  50E1               	movf	fsr1l,w,c
   886  0026EA  E1FA               	bnz	copy_data1
   887                           
   888                           ; Initialize objects allocated to BANK0 (41 bytes)
   889                           ; load TBLPTR registers with __pidataBANK0
   890  0026EC  0E22               	movlw	low __pidataBANK0
   891  0026EE  6EF6               	movwf	tblptrl,c
   892  0026F0  0E33               	movlw	high __pidataBANK0
   893  0026F2  6EF7               	movwf	tblptrh,c
   894  0026F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   895  0026F6  6EF8               	movwf	tblptru,c
   896  0026F8  EE00  F0B5         	lfsr	0,__pdataBANK0
   897  0026FC  EE10 F029          	lfsr	1,41
   898  002700                     copy_data2:
   899  002700  0009               	tblrd		*+
   900  002702  CFF5 FFEE          	movff	tablat,postinc0
   901  002706  50E5               	movf	postdec1,w,c
   902  002708  50E1               	movf	fsr1l,w,c
   903  00270A  E1FA               	bnz	copy_data2
   904                           
   905                           ; Initialize objects allocated to COMRAM (3 bytes)
   906                           ; load TBLPTR registers with __pidataCOMRAM
   907  00270C  0E7E               	movlw	low __pidataCOMRAM
   908  00270E  6EF6               	movwf	tblptrl,c
   909  002710  0E34               	movlw	high __pidataCOMRAM
   910  002712  6EF7               	movwf	tblptrh,c
   911  002714  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   912  002716  6EF8               	movwf	tblptru,c
   913  002718  0009               	tblrd		*+	;fetch initializer
   914  00271A  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   915  00271E  0009               	tblrd		*+	;fetch initializer
   916  002720  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   917  002724  0009               	tblrd		*+	;fetch initializer
   918  002726  CFF5 F05F          	movff	tablat,__pdataCOMRAM+2
   919  00272A                     end_of_initialization:
   920                           	opt stack 0
   921  00272A                     __end_of__initialization:
   922                           	opt stack 0
   923  00272A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   924  00272C  6EF8               	movwf	tblptru,c
   925  00272E  0100               	movlb	0
   926  002730  EFF2  F019         	goto	_main	;jump to C main() function
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           postdec1	equ	0xFE5
   934                           fsr1h	equ	0xFE2
   935                           fsr1l	equ	0xFE1
   936                           
   937                           	psect	bssCOMRAM
   938  00003E                     __pbssCOMRAM:
   939                           	opt stack 0
   940  00003E                     _pBDTEntryIn:
   941                           	opt stack 0
   942  00003E                     	ds	6
   943  000044                     _CDCDataOutHandle:
   944                           	opt stack 0
   945  000044                     	ds	2
   946  000046                     _pBDTEntryEP0OutCurrent:
   947                           	opt stack 0
   948  000046                     	ds	2
   949  000048                     _pBDTEntryEP0OutNext:
   950                           	opt stack 0
   951  000048                     	ds	2
   952  00004A                     _tlc_pwm_readback_value:
   953                           	opt stack 0
   954  00004A                     	ds	2
   955  00004C                     _USBDeferINDataStagePackets:
   956                           	opt stack 0
   957  00004C                     	ds	1
   958  00004D                     _USBDeferOUTDataStagePackets:
   959                           	opt stack 0
   960  00004D                     	ds	1
   961  00004E                     _USBDeferStatusStagePacket:
   962                           	opt stack 0
   963  00004E                     	ds	1
   964  00004F                     _USBStatusStageEnabledFlag1:
   965                           	opt stack 0
   966  00004F                     	ds	1
   967  000050                     _USBStatusStageEnabledFlag2:
   968                           	opt stack 0
   969  000050                     	ds	1
   970  000051                     _cdc_rx_len:
   971                           	opt stack 0
   972  000051                     	ds	1
   973  000052                     _cdc_trf_state:
   974                           	opt stack 0
   975  000052                     	ds	1
   976  000053                     _cdc_tx_len:
   977                           	opt stack 0
   978  000053                     	ds	1
   979  000054                     _controlTransferState:
   980                           	opt stack 0
   981  000054                     	ds	1
   982  000055                     _shortPacketStatus:
   983                           	opt stack 0
   984  000055                     	ds	1
   985  000056                     _inPipes:
   986                           	opt stack 0
   987  000056                     	ds	6
   988  00005C                     _USBActiveConfiguration:
   989                           	opt stack 0
   990  00005C                     	ds	1
   991                           tblptru	equ	0xFF8
   992                           tblptrh	equ	0xFF7
   993                           tblptrl	equ	0xFF6
   994                           tablat	equ	0xFF5
   995                           postinc0	equ	0xFEE
   996                           wreg	equ	0xFE8
   997                           postdec1	equ	0xFE5
   998                           fsr1h	equ	0xFE2
   999                           fsr1l	equ	0xFE1
  1000                           
  1001                           	psect	dataCOMRAM
  1002  00005D                     __pdataCOMRAM:
  1003                           	opt stack 0
  1004  00005D                     _U1EP0_R:
  1005                           	opt stack 0
  1006  00005D                     	ds	2
  1007  00005F                     _tlc_nbytes:
  1008                           	opt stack 0
  1009  00005F                     	ds	1
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           postinc0	equ	0xFEE
  1015                           wreg	equ	0xFE8
  1016                           postdec1	equ	0xFE5
  1017                           fsr1h	equ	0xFE2
  1018                           fsr1l	equ	0xFE1
  1019                           
  1020                           	psect	bssBANK0
  1021  000060                     __pbssBANK0:
  1022                           	opt stack 0
  1023  000060                     _cdc_notice:
  1024                           	opt stack 0
  1025  000060                     	ds	10
  1026  00006A                     _outPipes:
  1027                           	opt stack 0
  1028  00006A                     	ds	8
  1029  000072                     _pBDTEntryOut:
  1030                           	opt stack 0
  1031  000072                     	ds	6
  1032  000078                     _BaudRateGen:
  1033                           	opt stack 0
  1034  000078                     	ds	4
  1035  00007C                     _ep_data_in:
  1036                           	opt stack 0
  1037  00007C                     	ds	3
  1038  00007F                     _ep_data_out:
  1039                           	opt stack 0
  1040  00007F                     	ds	3
  1041  000082                     _pCDCDst:
  1042                           	opt stack 0
  1043  000082                     	ds	3
  1044  000085                     _pCDCSrc:
  1045                           	opt stack 0
  1046  000085                     	ds	3
  1047  000088                     _CDCDataInHandle:
  1048                           	opt stack 0
  1049  000088                     	ds	2
  1050  00008A                     _led_count:
  1051                           	opt stack 0
  1052  00008A                     	ds	2
  1053  00008C                     _pDst:
  1054                           	opt stack 0
  1055  00008C                     	ds	2
  1056  00008E                     _pwr_delay:
  1057                           	opt stack 0
  1058  00008E                     	ds	2
  1059  000090                     _txmiss_count:
  1060                           	opt stack 0
  1061  000090                     	ds	2
  1062  000092                     _update_count:
  1063                           	opt stack 0
  1064  000092                     	ds	2
  1065  000094                     _BothEP0OutUOWNsSet:
  1066                           	opt stack 0
  1067  000094                     	ds	1
  1068  000095                     _RemoteWakeup:
  1069                           	opt stack 0
  1070  000095                     	ds	1
  1071  000096                     _USBBusIsSuspended:
  1072                           	opt stack 0
  1073  000096                     	ds	1
  1074  000097                     _USBDeviceState:
  1075                           	opt stack 0
  1076  000097                     	ds	1
  1077  000098                     _USBStatusStageTimeoutCounter:
  1078                           	opt stack 0
  1079  000098                     	ds	1
  1080  000099                     _cdc_mem_type:
  1081                           	opt stack 0
  1082  000099                     	ds	1
  1083  00009A                     _control_signal_bitmap:
  1084                           	opt stack 0
  1085  00009A                     	ds	1
  1086  00009B                     _endpoint_number:
  1087                           	opt stack 0
  1088  00009B                     	ds	1
  1089  00009C                     _green_led_counter:
  1090                           	opt stack 0
  1091  00009C                     	ds	1
  1092  00009D                     _old_sw2:
  1093                           	opt stack 0
  1094  00009D                     	ds	1
  1095  00009E                     _pattern_number:
  1096                           	opt stack 0
  1097  00009E                     	ds	1
  1098  00009F                     _pic18_rev:
  1099                           	opt stack 0
  1100  00009F                     	ds	1
  1101  0000A0                     _tlc_request:
  1102                           	opt stack 0
  1103  0000A0                     	ds	1
  1104  0000A1                     _tmr3h_cal:
  1105                           	opt stack 0
  1106  0000A1                     	ds	1
  1107  0000A2                     _tmr3l_cal:
  1108                           	opt stack 0
  1109  0000A2                     	ds	1
  1110  0000A3                     _dummy_encapsulated_cmd_response:
  1111                           	opt stack 0
  1112  0000A3                     	ds	8
  1113  0000AB                     _line_coding:
  1114                           	opt stack 0
  1115  0000AB                     	ds	7
  1116  0000B2                     _USBAlternateInterface:
  1117                           	opt stack 0
  1118  0000B2                     	ds	2
  1119  0000B4                     _USTATcopy:
  1120                           	opt stack 0
  1121  0000B4                     	ds	1
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           postdec1	equ	0xFE5
  1129                           fsr1h	equ	0xFE2
  1130                           fsr1l	equ	0xFE1
  1131                           
  1132                           	psect	dataBANK0
  1133  0000B5                     __pdataBANK0:
  1134                           	opt stack 0
  1135  0000B5                     _ACTCON_R:
  1136                           	opt stack 0
  1137  0000B5                     	ds	2
  1138  0000B7                     _ANSELA_R:
  1139                           	opt stack 0
  1140  0000B7                     	ds	2
  1141  0000B9                     _ANSELC_R:
  1142                           	opt stack 0
  1143  0000B9                     	ds	2
  1144  0000BB                     _IOCB_R:
  1145                           	opt stack 0
  1146  0000BB                     	ds	2
  1147  0000BD                     _OSCCON2_R:
  1148                           	opt stack 0
  1149  0000BD                     	ds	2
  1150  0000BF                     _PIE2_R:
  1151                           	opt stack 0
  1152  0000BF                     	ds	2
  1153  0000C1                     _PIE3_R:
  1154                           	opt stack 0
  1155  0000C1                     	ds	2
  1156  0000C3                     _PIR2_R:
  1157                           	opt stack 0
  1158  0000C3                     	ds	2
  1159  0000C5                     _PIR3_R:
  1160                           	opt stack 0
  1161  0000C5                     	ds	2
  1162  0000C7                     _T3GCON_R:
  1163                           	opt stack 0
  1164  0000C7                     	ds	2
  1165  0000C9                     _U1ADDR_R:
  1166                           	opt stack 0
  1167  0000C9                     	ds	2
  1168  0000CB                     _U1CNFG1_R:
  1169                           	opt stack 0
  1170  0000CB                     	ds	2
  1171  0000CD                     _U1CON_R:
  1172                           	opt stack 0
  1173  0000CD                     	ds	2
  1174  0000CF                     _U1EIE_R:
  1175                           	opt stack 0
  1176  0000CF                     	ds	2
  1177  0000D1                     _U1EIR_R:
  1178                           	opt stack 0
  1179  0000D1                     	ds	2
  1180  0000D3                     _U1EP1_R:
  1181                           	opt stack 0
  1182  0000D3                     	ds	2
  1183  0000D5                     _U1IE_R:
  1184                           	opt stack 0
  1185  0000D5                     	ds	2
  1186  0000D7                     _U1IR_R:
  1187                           	opt stack 0
  1188  0000D7                     	ds	2
  1189  0000D9                     _U1STAT_R:
  1190                           	opt stack 0
  1191  0000D9                     	ds	2
  1192  0000DB                     _tcl5947_testbyte0:
  1193                           	opt stack 0
  1194  0000DB                     	ds	1
  1195  0000DC                     _tcl5947_testbyte1:
  1196                           	opt stack 0
  1197  0000DC                     	ds	1
  1198  0000DD                     _tlc_nchannels:
  1199                           	opt stack 0
  1200  0000DD                     	ds	1
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           fsr1h	equ	0xFE2
  1209                           fsr1l	equ	0xFE1
  1210                           
  1211                           	psect	bssBANK1
  1212  000100                     __pbssBANK1:
  1213                           	opt stack 0
  1214  000100                     _CDCBufferIn:
  1215                           	opt stack 0
  1216  000100                     	ds	64
  1217  000140                     _CDCBufferOut:
  1218                           	opt stack 0
  1219  000140                     	ds	64
  1220                           tblptru	equ	0xFF8
  1221                           tblptrh	equ	0xFF7
  1222                           tblptrl	equ	0xFF6
  1223                           tablat	equ	0xFF5
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           postdec1	equ	0xFE5
  1227                           fsr1h	equ	0xFE2
  1228                           fsr1l	equ	0xFE1
  1229                           
  1230                           	psect	dataBANK1
  1231  000180                     __pdataBANK1:
  1232                           	opt stack 0
  1233  000180                     _tlc_memory:
  1234                           	opt stack 0
  1235  000180                     	ds	72
  1236  0001C8                     _test_pattern:
  1237                           	opt stack 0
  1238  0001C8                     	ds	21
  1239                           tblptru	equ	0xFF8
  1240                           tblptrh	equ	0xFF7
  1241                           tblptrl	equ	0xFF6
  1242                           tablat	equ	0xFF5
  1243                           postinc0	equ	0xFEE
  1244                           wreg	equ	0xFE8
  1245                           postdec1	equ	0xFE5
  1246                           fsr1h	equ	0xFE2
  1247                           fsr1l	equ	0xFE1
  1248                           
  1249                           	psect	bssBANK2
  1250  000200                     __pbssBANK2:
  1251                           	opt stack 0
  1252  000200                     _USB_In_Buffer:
  1253                           	opt stack 0
  1254  000200                     	ds	64
  1255  000240                     _USB_Out_Buffer:
  1256                           	opt stack 0
  1257  000240                     	ds	64
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           postdec1	equ	0xFE5
  1265                           fsr1h	equ	0xFE2
  1266                           fsr1l	equ	0xFE1
  1267                           
  1268                           	psect	dataBIGRAMl
  1269  000580                     __pdataBIGRAMl:
  1270                           	opt stack 0
  1271  000580                     _gamma_table:
  1272                           	opt stack 0
  1273  000580                     	ds	512
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1h	equ	0xFE2
  1282                           fsr1l	equ	0xFE1
  1283                           
  1284                           	psect	cstackBANK0
  1285  0000DE                     __pcstackBANK0:
  1286                           	opt stack 0
  1287  0000DE                     ??_USBCtrlEPService:
  1288                           
  1289                           ; 0 bytes @ 0x0
  1290  0000DE                     	ds	2
  1291  0000E0                     USBDeviceTasks@i:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x2
  1295  0000E0                     	ds	1
  1296  0000E1                     ??_ProcessCDC:
  1297                           
  1298                           ; 0 bytes @ 0x3
  1299  0000E1                     	ds	4
  1300  0000E5                     ProcessCDC@csum:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x7
  1304  0000E5                     	ds	1
  1305  0000E6                     ProcessCDC@_c:
  1306                           	opt stack 0
  1307                           
  1308                           ; 1 bytes @ 0x8
  1309  0000E6                     	ds	1
  1310  0000E7                     ProcessCDC@checksum:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x9
  1314  0000E7                     	ds	1
  1315  0000E8                     ProcessCDC@_y:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0xA
  1319  0000E8                     	ds	2
  1320  0000EA                     ProcessCDC@cmd:
  1321                           	opt stack 0
  1322                           
  1323                           ; 1 bytes @ 0xC
  1324  0000EA                     	ds	1
  1325  0000EB                     ProcessCDC@boot_request0:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0xD
  1329  0000EB                     	ds	1
  1330  0000EC                     ProcessCDC@boot_request1:
  1331                           	opt stack 0
  1332                           
  1333                           ; 1 bytes @ 0xE
  1334  0000EC                     	ds	1
  1335  0000ED                     ProcessCDC@numBytes:
  1336                           	opt stack 0
  1337                           
  1338                           ; 1 bytes @ 0xF
  1339  0000ED                     	ds	1
  1340  0000EE                     ProcessCDC@_x:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x10
  1344  0000EE                     	ds	1
  1345  0000EF                     ProcessCDC@len:
  1346                           	opt stack 0
  1347                           
  1348                           ; 1 bytes @ 0x11
  1349  0000EF                     	ds	1
  1350  0000F0                     ProcessIO@x:
  1351                           	opt stack 0
  1352                           
  1353                           ; 1 bytes @ 0x12
  1354  0000F0                     	ds	1
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           fsr1h	equ	0xFE2
  1363                           fsr1l	equ	0xFE1
  1364                           
  1365                           	psect	cstackCOMRAM
  1366  000001                     __pcstackCOMRAM:
  1367                           	opt stack 0
  1368  000001                     ??_LowPriorityISRCode:
  1369  000001                     
  1370                           ; 1 bytes @ 0x0
  1371  000001                     	ds	17
  1372  000012                     i2WriteSPI1@TempVar:
  1373                           	opt stack 0
  1374  000012                     i2Delay100TCYx@unit:
  1375                           	opt stack 0
  1376  000012                     i2Delay10TCYx@unit:
  1377                           	opt stack 0
  1378                           
  1379                           ; 1 bytes @ 0x11
  1380  000012                     	ds	1
  1381  000013                     i2WriteSPI1@data_out:
  1382                           	opt stack 0
  1383                           
  1384                           ; 1 bytes @ 0x12
  1385  000013                     	ds	1
  1386  000014                     i2tlc5947_update@x:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0x13
  1390  000014                     	ds	1
  1391  000015                     ??_HighPriorityISRCode:
  1392                           
  1393                           ; 0 bytes @ 0x14
  1394  000015                     	ds	14
  1395  000023                     ??_readDeviceID:
  1396  000023                     ??_BlinkUSBStatus:
  1397  000023                     ??_USBStdGetDscHandler:
  1398  000023                     ??_USBStdGetStatusHandler:
  1399  000023                     ?_ReadADC:
  1400                           	opt stack 0
  1401  000023                     ?_USBTransferOnePacket:
  1402                           	opt stack 0
  1403  000023                     ?_gamma_lookup:
  1404                           	opt stack 0
  1405  000023                     ?___awdiv:
  1406                           	opt stack 0
  1407  000023                     ?___lwdiv:
  1408                           	opt stack 0
  1409  000023                     USBTransferOnePacket@dir:
  1410                           	opt stack 0
  1411  000023                     USBConfigureEndpoint@direction:
  1412                           	opt stack 0
  1413  000023                     USBCtrlTrfTxService@byteToSend:
  1414                           	opt stack 0
  1415  000023                     USBCtrlTrfRxService@i:
  1416                           	opt stack 0
  1417  000023                     OpenSPI1@bus_mode:
  1418                           	opt stack 0
  1419  000023                     ReadSPI1@TempVar:
  1420                           	opt stack 0
  1421  000023                     WriteSPI1@TempVar:
  1422                           	opt stack 0
  1423  000023                     Delay100TCYx@unit:
  1424                           	opt stack 0
  1425  000023                     Delay10TCYx@unit:
  1426                           	opt stack 0
  1427  000023                     putUSBUSART@data:
  1428                           	opt stack 0
  1429  000023                     Read_b_eep@badd:
  1430                           	opt stack 0
  1431  000023                     Write_b_eep@badd:
  1432                           	opt stack 0
  1433  000023                     ___awdiv@dividend:
  1434                           	opt stack 0
  1435  000023                     ___lwdiv@dividend:
  1436                           	opt stack 0
  1437  000023                     memset@p1:
  1438                           	opt stack 0
  1439                           
  1440                           ; 2 bytes @ 0x22
  1441  000023                     	ds	1
  1442  000024                     ??_USBConfigureEndpoint:
  1443  000024                     USBCtrlTrfRxService@byteToRead:
  1444                           	opt stack 0
  1445  000024                     USBCtrlTrfInHandler@lastDTS:
  1446                           	opt stack 0
  1447  000024                     OpenSPI1@smp_phase:
  1448                           	opt stack 0
  1449  000024                     WriteSPI1@data_out:
  1450                           	opt stack 0
  1451  000024                     USBTransferOnePacket@data:
  1452                           	opt stack 0
  1453  000024                     USBStdGetStatusHandler@p:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x23
  1457  000024                     	ds	1
  1458  000025                     ??_ReadADC:
  1459  000025                     putUSBUSART@length:
  1460                           	opt stack 0
  1461  000025                     gamma_lookup@c:
  1462                           	opt stack 0
  1463  000025                     readDeviceID@devID1:
  1464                           	opt stack 0
  1465  000025                     tlc5947_update@x:
  1466                           	opt stack 0
  1467  000025                     Write_b_eep@bdat:
  1468                           	opt stack 0
  1469  000025                     OpenSPI1@sync_mode:
  1470                           	opt stack 0
  1471  000025                     ___awdiv@divisor:
  1472                           	opt stack 0
  1473  000025                     ___lwdiv@divisor:
  1474                           	opt stack 0
  1475  000025                     memset@c:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x24
  1479  000025                     	ds	1
  1480  000026                     USBTransferOnePacket@len:
  1481                           	opt stack 0
  1482  000026                     readDeviceID@devID2:
  1483                           	opt stack 0
  1484  000026                     tlc5947_setChannel@val:
  1485                           	opt stack 0
  1486  000026                     Write_b_eep@GIE_BIT_VAL:
  1487                           	opt stack 0
  1488                           
  1489                           ; 1 bytes @ 0x25
  1490  000026                     	ds	1
  1491  000027                     ??_tlc5947_setChannel:
  1492  000027                     USBTransferOnePacket@ep:
  1493                           	opt stack 0
  1494  000027                     _readDeviceID$2794:
  1495                           	opt stack 0
  1496  000027                     ___awdiv@counter:
  1497                           	opt stack 0
  1498  000027                     ___lwdiv@quotient:
  1499                           	opt stack 0
  1500  000027                     memset@n:
  1501                           	opt stack 0
  1502                           
  1503                           ; 2 bytes @ 0x26
  1504  000027                     	ds	1
  1505  000028                     USBConfigureEndpoint@EPNum:
  1506                           	opt stack 0
  1507  000028                     ___awdiv@sign:
  1508                           	opt stack 0
  1509  000028                     USBTransferOnePacket@handle:
  1510                           	opt stack 0
  1511                           
  1512                           ; 2 bytes @ 0x27
  1513  000028                     	ds	1
  1514  000029                     ___lwdiv@counter:
  1515                           	opt stack 0
  1516  000029                     USBConfigureEndpoint@handle:
  1517                           	opt stack 0
  1518  000029                     ___awdiv@quotient:
  1519                           	opt stack 0
  1520  000029                     memset@p:
  1521                           	opt stack 0
  1522                           
  1523                           ; 2 bytes @ 0x28
  1524  000029                     	ds	1
  1525  00002A                     ??_CDCTxService:
  1526  00002A                     tlc5947_setChannel@ch:
  1527                           	opt stack 0
  1528  00002A                     getsUSBUSART@buffer:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x29
  1532  00002A                     	ds	1
  1533  00002B                     USBDeviceInit@i:
  1534                           	opt stack 0
  1535  00002B                     USBEnableEndpoint@options:
  1536                           	opt stack 0
  1537  00002B                     tlc5947_count_channels@old_data:
  1538                           	opt stack 0
  1539  00002B                     _CDCTxService$1695:
  1540                           	opt stack 0
  1541  00002B                     tlc5947_setChannel@col:
  1542                           	opt stack 0
  1543                           
  1544                           ; 2 bytes @ 0x2A
  1545  00002B                     	ds	1
  1546  00002C                     getsUSBUSART@len:
  1547                           	opt stack 0
  1548  00002C                     tlc5947_count_channels@data:
  1549                           	opt stack 0
  1550  00002C                     USBEnableEndpoint@p:
  1551                           	opt stack 0
  1552                           
  1553                           ; 2 bytes @ 0x2B
  1554  00002C                     	ds	1
  1555  00002D                     ??_getsUSBUSART:
  1556  00002D                     CDCTxService@i:
  1557                           	opt stack 0
  1558  00002D                     tlc5947_setChannel@pos:
  1559                           	opt stack 0
  1560  00002D                     tlc5947_count_channels@pos:
  1561                           	opt stack 0
  1562                           
  1563                           ; 1 bytes @ 0x2C
  1564  00002D                     	ds	1
  1565  00002E                     USBEnableEndpoint@ep:
  1566                           	opt stack 0
  1567  00002E                     CDCTxService@byte_to_send:
  1568                           	opt stack 0
  1569  00002E                     tlc5947_setChannel@mpos:
  1570                           	opt stack 0
  1571  00002E                     _getsUSBUSART$1647:
  1572                           	opt stack 0
  1573                           
  1574                           ; 2 bytes @ 0x2D
  1575  00002E                     	ds	1
  1576  00002F                     ??_tlc5947_pwm_readback:
  1577  00002F                     comm_send_rply@cc:
  1578                           	opt stack 0
  1579  00002F                     comm_send_dat@i:
  1580                           	opt stack 0
  1581  00002F                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0x2E
  1585  00002F                     	ds	1
  1586  000030                     comm_send_dat@len:
  1587                           	opt stack 0
  1588                           
  1589                           ; 1 bytes @ 0x2F
  1590  000030                     	ds	1
  1591  000031                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1592                           	opt stack 0
  1593                           
  1594                           ; 2 bytes @ 0x30
  1595  000031                     	ds	2
  1596  000033                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1597                           	opt stack 0
  1598                           
  1599                           ; 2 bytes @ 0x32
  1600  000033                     	ds	2
  1601  000035                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1602  000035                     tlc5947_pwm_readback@i:
  1603                           	opt stack 0
  1604                           
  1605                           ; 1 bytes @ 0x34
  1606  000035                     	ds	1
  1607  000036                     
  1608                           ; 0 bytes @ 0x35
  1609  000036                     	ds	1
  1610  000037                     ??_USBStdFeatureReqHandler:
  1611  000037                     USBStdSetCfgHandler@i:
  1612                           	opt stack 0
  1613                           
  1614                           ; 1 bytes @ 0x36
  1615  000037                     	ds	1
  1616  000038                     USBStdFeatureReqHandler@pUEP:
  1617                           	opt stack 0
  1618                           
  1619                           ; 2 bytes @ 0x37
  1620  000038                     	ds	2
  1621  00003A                     USBStdFeatureReqHandler@current_ep_data:
  1622                           	opt stack 0
  1623                           
  1624                           ; 1 bytes @ 0x39
  1625  00003A                     	ds	1
  1626  00003B                     USBStdFeatureReqHandler@p:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x3A
  1630  00003B                     	ds	2
  1631  00003D                     USBCtrlEPService@setup_cnt:
  1632                           	opt stack 0
  1633                           
  1634                           ; 1 bytes @ 0x3C
  1635  00003D                     	ds	1
  1636  00003E                     tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           postdec1	equ	0xFE5
  1643                           fsr1h	equ	0xFE2
  1644                           fsr1l	equ	0xFE1
  1645                           
  1646                           ; 0 bytes @ 0x3D
  1647 ;;
  1648 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1649 ;;
  1650 ;; *************** function _main *****************
  1651 ;; Defined at:
  1652 ;;		line 74 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;		None               void
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels required when called:   15
  1672 ;; This function calls:
  1673 ;;		_InitializeSystem
  1674 ;;		_ProcessIO
  1675 ;; This function is called by:
  1676 ;;		Startup code after reset
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text0
  1681  0033E4                     __ptext0:
  1682                           	opt stack 0
  1683  0033E4                     _main:
  1684                           	opt stack 16
  1685                           
  1686                           ;karate.c: 76: InitializeSystem();
  1687                           
  1688                           ;incstack = 0
  1689  0033E4  ECB5  F00C         	call	_InitializeSystem	;wreg free
  1690  0033E8  D000               	goto	l5686
  1691  0033EA                     l5686:
  1692                           
  1693                           ;karate.c: 79: if(PORTCbits.RC6 && (USBDeviceState == DETACHED_STATE)) {
  1694  0033EA  5082               	movf	3970,w,c	;volatile
  1695  0033EC  D000               	goto	l5690
  1696  0033EE                     l5690:
  1697                           
  1698                           ;karate.c: 81: }
  1699                           ;karate.c: 83: ProcessIO();
  1700  0033EE  EC75  F00F         	call	_ProcessIO	;wreg free
  1701  0033F2  D7FB               	goto	l5686
  1702  0033F4  EF55  F004         	goto	start
  1703  0033F8                     __end_of_main:
  1704                           	opt stack 0
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           postdec1	equ	0xFE5
  1712                           fsr1h	equ	0xFE2
  1713                           fsr1l	equ	0xFE1
  1714                           
  1715 ;; *************** function _ProcessIO *****************
  1716 ;; Defined at:
  1717 ;;		line 214 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  x               1   18[BANK0 ] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;		None               void
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0
  1732 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1734 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1735 ;;Total ram usage:        1 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:   14
  1738 ;; This function calls:
  1739 ;;		_BlinkUSBStatus
  1740 ;;		_CDCTxService
  1741 ;;		_ProcessCDC
  1742 ;;		_SwitchIsPressed
  1743 ;;		_USBDeviceTasks
  1744 ;;		_tlc5947_setChannel
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text1
  1751  001EEA                     __ptext1:
  1752                           	opt stack 0
  1753  001EEA                     _ProcessIO:
  1754                           	opt stack 16
  1755                           
  1756                           ;karate.c: 216: unsigned char x;
  1757                           ;karate.c: 219: USBDeviceTasks();
  1758                           
  1759                           ;incstack = 0
  1760  001EEA  EC76  F008         	call	_USBDeviceTasks	;wreg free
  1761                           
  1762                           ;karate.c: 222: BlinkUSBStatus();
  1763  001EEE  EC3F  F018         	call	_BlinkUSBStatus	;wreg free
  1764                           
  1765                           ;karate.c: 225: if (green_led_counter > 0) {
  1766  001EF2  0100               	movlb	0	; () banked
  1767  001EF4  519C               	movf	_green_led_counter& (0+255),w,b
  1768  001EF6  B4D8               	btfsc	status,2,c
  1769  001EF8  D003               	goto	l718
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;karate.c: 226: green_led_counter--;
  1773  001EFA  0100               	movlb	0	; () banked
  1774  001EFC  079C               	decf	_green_led_counter& (0+255),f,b
  1775                           
  1776                           ;karate.c: 227: } else {
  1777  001EFE  D002               	goto	l5548
  1778  001F00                     l718:
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;karate.c: 228: LATCbits.LATC2 = 0;;
  1782  001F00  948B               	bcf	3979,2,c	;volatile
  1783  001F02  D000               	goto	l5548
  1784  001F04                     l5548:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;karate.c: 229: }
  1788                           ;karate.c: 232: if (SwitchIsPressed()) {
  1789  001F04  EC51  F019         	call	_SwitchIsPressed	;wreg free
  1790  001F08  0900               	iorlw	0
  1791  001F0A  B4D8               	btfsc	status,2,c
  1792  001F0C  D057               	goto	l5568
  1793                           
  1794                           ;karate.c: 233: pattern_number++;
  1795  001F0E  0100               	movlb	0	; () banked
  1796  001F10  2B9E               	incf	_pattern_number& (0+255),f,b
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;karate.c: 234: if (pattern_number > 6) {
  1800  001F12  0E06               	movlw	6
  1801  001F14  0100               	movlb	0	; () banked
  1802  001F16  659E               	cpfsgt	_pattern_number& (0+255),b
  1803  001F18  D003               	goto	l721
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;karate.c: 235: pattern_number = 0;
  1807  001F1A  0E00               	movlw	0
  1808  001F1C  0100               	movlb	0	; () banked
  1809  001F1E  6F9E               	movwf	_pattern_number& (0+255),b
  1810  001F20                     l721:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;karate.c: 236: }
  1814                           ;karate.c: 238: tlc_request = 0;
  1815  001F20  0E00               	movlw	0
  1816  001F22  0100               	movlb	0	; () banked
  1817  001F24  6FA0               	movwf	_tlc_request& (0+255),b
  1818                           
  1819                           ;karate.c: 239: for (x=0; x < tlc_nchannels; x+=3) {
  1820  001F26  0E00               	movlw	0
  1821  001F28  0100               	movlb	0	; () banked
  1822  001F2A  6FF0               	movwf	ProcessIO@x& (0+255),b
  1823  001F2C  D03A               	goto	l5560
  1824  001F2E                     l5556:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;karate.c: 240: tlc5947_setChannel(x+0, test_pattern[0 + pattern_number*3]);
  1828  001F2E  0100               	movlb	0	; () banked
  1829  001F30  519E               	movf	_pattern_number& (0+255),w,b
  1830  001F32  0D03               	mullw	3
  1831  001F34  0EC8               	movlw	low _test_pattern
  1832  001F36  24F3               	addwf	prodl,w,c
  1833  001F38  6ED9               	movwf	fsr2l,c
  1834  001F3A  0E01               	movlw	high _test_pattern
  1835  001F3C  20F4               	addwfc	prodh,w,c
  1836  001F3E  6EDA               	movwf	fsr2h,c
  1837  001F40  50DF               	movf	indf2,w,c
  1838  001F42  6E26               	movwf	tlc5947_setChannel@val,c
  1839  001F44  0100               	movlb	0	; () banked
  1840  001F46  51F0               	movf	ProcessIO@x& (0+255),w,b
  1841  001F48  EC87  F00A         	call	_tlc5947_setChannel
  1842                           
  1843                           ;karate.c: 241: tlc5947_setChannel(x+1, test_pattern[1 + pattern_number*3]);
  1844  001F4C  0100               	movlb	0	; () banked
  1845  001F4E  519E               	movf	_pattern_number& (0+255),w,b
  1846  001F50  0D03               	mullw	3
  1847  001F52  0E01               	movlw	1
  1848  001F54  26F3               	addwf	prodl,f,c
  1849  001F56  0E00               	movlw	0
  1850  001F58  22F4               	addwfc	prodh,f,c
  1851  001F5A  0EC8               	movlw	low _test_pattern
  1852  001F5C  24F3               	addwf	prodl,w,c
  1853  001F5E  6ED9               	movwf	fsr2l,c
  1854  001F60  0E01               	movlw	high _test_pattern
  1855  001F62  20F4               	addwfc	prodh,w,c
  1856  001F64  6EDA               	movwf	fsr2h,c
  1857  001F66  50DF               	movf	indf2,w,c
  1858  001F68  6E26               	movwf	tlc5947_setChannel@val,c
  1859  001F6A  0100               	movlb	0	; () banked
  1860  001F6C  29F0               	incf	ProcessIO@x& (0+255),w,b
  1861  001F6E  EC87  F00A         	call	_tlc5947_setChannel
  1862                           
  1863                           ;karate.c: 242: tlc5947_setChannel(x+2, test_pattern[2 + pattern_number*3]);
  1864  001F72  0100               	movlb	0	; () banked
  1865  001F74  519E               	movf	_pattern_number& (0+255),w,b
  1866  001F76  0D03               	mullw	3
  1867  001F78  0E02               	movlw	2
  1868  001F7A  26F3               	addwf	prodl,f,c
  1869  001F7C  0E00               	movlw	0
  1870  001F7E  22F4               	addwfc	prodh,f,c
  1871  001F80  0EC8               	movlw	low _test_pattern
  1872  001F82  24F3               	addwf	prodl,w,c
  1873  001F84  6ED9               	movwf	fsr2l,c
  1874  001F86  0E01               	movlw	high _test_pattern
  1875  001F88  20F4               	addwfc	prodh,w,c
  1876  001F8A  6EDA               	movwf	fsr2h,c
  1877  001F8C  50DF               	movf	indf2,w,c
  1878  001F8E  6E26               	movwf	tlc5947_setChannel@val,c
  1879  001F90  0100               	movlb	0	; () banked
  1880  001F92  51F0               	movf	ProcessIO@x& (0+255),w,b
  1881  001F94  0F02               	addlw	2
  1882  001F96  EC87  F00A         	call	_tlc5947_setChannel
  1883  001F9A  0E03               	movlw	3
  1884  001F9C  0100               	movlb	0	; () banked
  1885  001F9E  27F0               	addwf	ProcessIO@x& (0+255),f,b
  1886  001FA0  D000               	goto	l5560
  1887  001FA2                     l5560:
  1888                           
  1889                           ; BSR set to: 0
  1890  001FA2  0100               	movlb	0	; () banked
  1891  001FA4  51DD               	movf	_tlc_nchannels& (0+255),w,b
  1892  001FA6  0100               	movlb	0	; () banked
  1893  001FA8  5DF0               	subwf	ProcessIO@x& (0+255),w,b
  1894  001FAA  A0D8               	btfss	status,0,c
  1895  001FAC  D7C0               	goto	l5556
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;karate.c: 243: }
  1899                           ;karate.c: 244: tlc_request = 1;
  1900                           
  1901                           ; BSR set to: 0
  1902  001FAE  0E01               	movlw	1
  1903  001FB0  0100               	movlb	0	; () banked
  1904  001FB2  6FA0               	movwf	_tlc_request& (0+255),b
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;karate.c: 247: LATCbits.LATC2 = 1;;
  1908  001FB4  848B               	bsf	3979,2,c	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;karate.c: 248: green_led_counter = 255;
  1912  001FB6  0100               	movlb	0	; () banked
  1913  001FB8  699C               	setf	_green_led_counter& (0+255),b
  1914  001FBA  D000               	goto	l5568
  1915  001FBC                     l5568:
  1916                           
  1917                           ;karate.c: 249: }
  1918                           ;karate.c: 252: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  1919  001FBC  0E1F               	movlw	31
  1920  001FBE  0100               	movlb	0	; () banked
  1921  001FC0  6597               	cpfsgt	_USBDeviceState& (0+255),b
  1922  001FC2  0012               	return	
  1923                           
  1924                           ; BSR set to: 0
  1925  001FC4  B260               	btfsc	3936,1,c	;volatile
  1926  001FC6  0012               	return	
  1927  001FC8  D001               	goto	l5572
  1928                           
  1929                           ; BSR set to: 0
  1930  001FCA  0012               	return	
  1931  001FCC                     l5572:
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;karate.c: 255: ProcessCDC();
  1935  001FCC  ECD7  F004         	call	_ProcessCDC	;wreg free
  1936                           
  1937                           ;karate.c: 256: CDCTxService();
  1938  001FD0  EC0A  F00C         	call	_CDCTxService	;wreg free
  1939  001FD4  0012               	return		;funcret
  1940  001FD6                     __end_of_ProcessIO:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           prodh	equ	0xFF4
  1947                           prodl	equ	0xFF3
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           indf2	equ	0xFDF
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _SwitchIsPressed *****************
  1959 ;; Defined at:
  1960 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      unsigned char 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    4
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_ProcessIO
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text2
  1989  0032A2                     __ptext2:
  1990                           	opt stack 0
  1991  0032A2                     _SwitchIsPressed:
  1992                           	opt stack 25
  1993                           
  1994                           ;karate.c: 187: if(PORTAbits.RA1 != old_sw2) {
  1995                           
  1996                           ;incstack = 0
  1997  0032A2  A280               	btfss	3968,1,c	;volatile
  1998  0032A4  D002               	goto	u4290
  1999  0032A6  0E01               	movlw	1
  2000  0032A8  D001               	goto	u4296
  2001  0032AA                     u4290:
  2002  0032AA  0E00               	movlw	0
  2003  0032AC                     u4296:
  2004  0032AC  0100               	movlb	0	; () banked
  2005  0032AE  199D               	xorwf	_old_sw2& (0+255),w,b
  2006  0032B0  B4D8               	btfsc	status,2,c
  2007  0032B2  D00A               	goto	l5182
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;karate.c: 188: old_sw2 = PORTAbits.RA1;
  2011  0032B4  0E00               	movlw	0
  2012  0032B6  B280               	btfsc	3968,1,c	;volatile
  2013  0032B8  0E01               	movlw	1
  2014  0032BA  0100               	movlb	0	; () banked
  2015  0032BC  6F9D               	movwf	_old_sw2& (0+255),b
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;karate.c: 189: if(PORTAbits.RA1 == 0) {
  2019  0032BE  B280               	btfsc	3968,1,c	;volatile
  2020  0032C0  D003               	goto	l5182
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;karate.c: 190: return 1;
  2024  0032C2  0E01               	movlw	1
  2025                           
  2026                           ; BSR set to: 0
  2027  0032C4  0012               	return	
  2028                           
  2029                           ; BSR set to: 0
  2030  0032C6  D000               	goto	l5182
  2031  0032C8                     l5182:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;karate.c: 191: }
  2035                           ;karate.c: 192: }
  2036                           ;karate.c: 193: return 0;
  2037  0032C8  0E00               	movlw	0
  2038  0032CA  0012               	return	
  2039                           
  2040                           ; BSR set to: 0
  2041                           
  2042                           ; BSR set to: 0
  2043  0032CC  0012               	return		;funcret
  2044  0032CE                     __end_of_SwitchIsPressed:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           prodh	equ	0xFF4
  2051                           prodl	equ	0xFF3
  2052                           postinc0	equ	0xFEE
  2053                           wreg	equ	0xFE8
  2054                           postdec1	equ	0xFE5
  2055                           fsr1h	equ	0xFE2
  2056                           fsr1l	equ	0xFE1
  2057                           indf2	equ	0xFDF
  2058                           fsr2h	equ	0xFDA
  2059                           fsr2l	equ	0xFD9
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _ProcessCDC *****************
  2063 ;; Defined at:
  2064 ;;		line 67 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  _y              2   10[BANK0 ] unsigned int 
  2069 ;;  len             1   17[BANK0 ] unsigned char 
  2070 ;;  _x              1   16[BANK0 ] unsigned char 
  2071 ;;  numBytes        1   15[BANK0 ] unsigned char 
  2072 ;;  boot_request    1   14[BANK0 ] unsigned char 
  2073 ;;  boot_request    1   13[BANK0 ] unsigned char 
  2074 ;;  cmd             1   12[BANK0 ] unsigned char 
  2075 ;;  checksum        1    9[BANK0 ] unsigned char 
  2076 ;;  _c              1    8[BANK0 ] unsigned char 
  2077 ;;  csum            1    7[BANK0 ] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0
  2088 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2089 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2090 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2091 ;;Total ram usage:       15 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:   13
  2094 ;; This function calls:
  2095 ;;		_BusyADC
  2096 ;;		_Busy_eep
  2097 ;;		_ConvertADC
  2098 ;;		_Delay10TCYx
  2099 ;;		_ReadADC
  2100 ;;		_Read_b_eep
  2101 ;;		_USBDeviceTasks
  2102 ;;		_Write_b_eep
  2103 ;;		_comm_send_dat
  2104 ;;		_comm_send_rply
  2105 ;;		_getsUSBUSART
  2106 ;;		_tlc5947_count_channels
  2107 ;;		_tlc5947_pwm_readback
  2108 ;;		_tlc5947_setChannel
  2109 ;; This function is called by:
  2110 ;;		_ProcessIO
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text3
  2115  0009AE                     __ptext3:
  2116                           	opt stack 0
  2117  0009AE                     _ProcessCDC:
  2118                           	opt stack 16
  2119                           
  2120                           ;comm.c: 69: unsigned char numBytes, len, cmd, csum;
  2121                           ;comm.c: 70: unsigned char _x,_c = 0;
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;incstack = 0
  2125  0009AE  0E00               	movlw	0
  2126  0009B0  0100               	movlb	0	; () banked
  2127  0009B2  6FE6               	movwf	ProcessCDC@_c& (0+255),b
  2128                           
  2129                           ;comm.c: 71: unsigned int _y = 0;
  2130  0009B4  0E00               	movlw	0
  2131  0009B6  0100               	movlb	0	; () banked
  2132  0009B8  6FE9               	movwf	(ProcessCDC@_y+1)& (0+255),b
  2133  0009BA  0E00               	movlw	0
  2134  0009BC  6FE8               	movwf	ProcessCDC@_y& (0+255),b
  2135                           
  2136                           ;comm.c: 73: unsigned char checksum;
  2137                           ;comm.c: 74: unsigned char boot_request0 = 0x23;
  2138  0009BE  0E23               	movlw	35
  2139  0009C0  0100               	movlb	0	; () banked
  2140  0009C2  6FEB               	movwf	ProcessCDC@boot_request0& (0+255),b
  2141                           
  2142                           ;comm.c: 75: unsigned char boot_request1 = 0x42;
  2143  0009C4  0E42               	movlw	66
  2144  0009C6  0100               	movlb	0	; () banked
  2145  0009C8  6FEC               	movwf	ProcessCDC@boot_request1& (0+255),b
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;comm.c: 78: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2149  0009CA  0E1F               	movlw	31
  2150  0009CC  0100               	movlb	0	; () banked
  2151  0009CE  6597               	cpfsgt	_USBDeviceState& (0+255),b
  2152  0009D0  0012               	return	
  2153                           
  2154                           ; BSR set to: 0
  2155  0009D2  B260               	btfsc	3936,1,c	;volatile
  2156  0009D4  0012               	return	
  2157  0009D6  D001               	goto	l5200
  2158                           
  2159                           ; BSR set to: 0
  2160  0009D8  0012               	return	
  2161  0009DA                     l5200:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;comm.c: 81: numBytes = getsUSBUSART(CDCBufferIn, 64);
  2165  0009DA  0E00               	movlw	low _CDCBufferIn
  2166  0009DC  6E2A               	movwf	getsUSBUSART@buffer,c
  2167  0009DE  0E01               	movlw	high _CDCBufferIn
  2168  0009E0  6E2B               	movwf	getsUSBUSART@buffer+1,c
  2169  0009E2  0E40               	movlw	64
  2170  0009E4  6E2C               	movwf	getsUSBUSART@len,c
  2171  0009E6  EC9A  F013         	call	_getsUSBUSART	;wreg free
  2172  0009EA  0100               	movlb	0	; () banked
  2173  0009EC  6FED               	movwf	ProcessCDC@numBytes& (0+255),b
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;comm.c: 84: if ((numBytes >= 0x04) && (CDCBufferIn[0x00] == 0xAA)) {
  2177  0009EE  0E03               	movlw	3
  2178  0009F0  0100               	movlb	0	; () banked
  2179  0009F2  65ED               	cpfsgt	ProcessCDC@numBytes& (0+255),b
  2180  0009F4  D22B               	goto	l5416
  2181                           
  2182                           ; BSR set to: 0
  2183  0009F6  0EAA               	movlw	170
  2184  0009F8  0101               	movlb	1	; () banked
  2185  0009FA  1900               	xorwf	_CDCBufferIn& (0+255),w,b
  2186  0009FC  A4D8               	btfss	status,2,c
  2187  0009FE  D226               	goto	l5416
  2188                           
  2189                           ; BSR set to: 1
  2190                           ;comm.c: 85: len = CDCBufferIn[0x03];
  2191  000A00  C103  F0EF         	movff	_CDCBufferIn+3,ProcessCDC@len
  2192                           
  2193                           ;comm.c: 86: cmd = CDCBufferIn[0x01];
  2194  000A04  C101  F0EA         	movff	_CDCBufferIn+1,ProcessCDC@cmd
  2195                           
  2196                           ;comm.c: 87: csum = CDCBufferIn[0x02];
  2197  000A08  C102  F0E5         	movff	_CDCBufferIn+2,ProcessCDC@csum
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;comm.c: 88: if ((len + 0x04) == numBytes) {
  2201  000A0C  0100               	movlb	0	; () banked
  2202  000A0E  51ED               	movf	ProcessCDC@numBytes& (0+255),w,b
  2203  000A10  0100               	movlb	0	; () banked
  2204  000A12  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2205  000A14  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2206  000A16  0100               	movlb	0	; () banked
  2207  000A18  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2208  000A1A  0100               	movlb	0	; () banked
  2209  000A1C  6FE3               	movwf	(??_ProcessCDC+2)& (0+255),b
  2210  000A1E  6BE4               	clrf	(??_ProcessCDC+3)& (0+255),b
  2211  000A20  0E04               	movlw	4
  2212  000A22  0100               	movlb	0	; () banked
  2213  000A24  27E3               	addwf	(??_ProcessCDC+2)& (0+255),f,b
  2214  000A26  0E00               	movlw	0
  2215  000A28  23E4               	addwfc	(??_ProcessCDC+3)& (0+255),f,b
  2216  000A2A  0100               	movlb	0	; () banked
  2217  000A2C  51E1               	movf	??_ProcessCDC& (0+255),w,b
  2218  000A2E  0100               	movlb	0	; () banked
  2219  000A30  19E3               	xorwf	(??_ProcessCDC+2)& (0+255),w,b
  2220  000A32  E105               	bnz	u4401
  2221  000A34  0100               	movlb	0	; () banked
  2222  000A36  51E2               	movf	(??_ProcessCDC+1)& (0+255),w,b
  2223  000A38  0100               	movlb	0	; () banked
  2224  000A3A  19E4               	xorwf	(??_ProcessCDC+3)& (0+255),w,b
  2225  000A3C  A4D8               	btfss	status,2,c
  2226  000A3E                     u4401:
  2227  000A3E  D202               	goto	l5414
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;comm.c: 91: checksum= CDCBufferIn[0x00] ^ CDCBufferIn[0x01];
  2231  000A40  0101               	movlb	1	; () banked
  2232  000A42  5101               	movf	(_CDCBufferIn+1)& (0+255),w,b
  2233  000A44  0101               	movlb	1	; () banked
  2234  000A46  1900               	xorwf	_CDCBufferIn& (0+255),w,b
  2235  000A48  0100               	movlb	0	; () banked
  2236  000A4A  6FE7               	movwf	ProcessCDC@checksum& (0+255),b
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;comm.c: 92: for (_x = 0x03; _x < numBytes; _x++) {
  2240  000A4C  0E03               	movlw	3
  2241  000A4E  0100               	movlb	0	; () banked
  2242  000A50  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2243  000A52  D00F               	goto	l5218
  2244  000A54                     l5214:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;comm.c: 93: checksum ^= CDCBufferIn[_x];
  2248  000A54  0100               	movlb	0	; () banked
  2249  000A56  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2250  000A58  0D01               	mullw	1
  2251  000A5A  0E00               	movlw	low _CDCBufferIn
  2252  000A5C  24F3               	addwf	prodl,w,c
  2253  000A5E  6ED9               	movwf	fsr2l,c
  2254  000A60  0E01               	movlw	high _CDCBufferIn
  2255  000A62  20F4               	addwfc	prodh,w,c
  2256  000A64  6EDA               	movwf	fsr2h,c
  2257  000A66  50DF               	movf	indf2,w,c
  2258  000A68  0100               	movlb	0	; () banked
  2259  000A6A  1BE7               	xorwf	ProcessCDC@checksum& (0+255),f,b
  2260                           
  2261                           ; BSR set to: 0
  2262  000A6C  0100               	movlb	0	; () banked
  2263  000A6E  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2264  000A70  D000               	goto	l5218
  2265  000A72                     l5218:
  2266                           
  2267                           ; BSR set to: 0
  2268  000A72  0100               	movlb	0	; () banked
  2269  000A74  51ED               	movf	ProcessCDC@numBytes& (0+255),w,b
  2270  000A76  0100               	movlb	0	; () banked
  2271  000A78  5DEE               	subwf	ProcessCDC@_x& (0+255),w,b
  2272  000A7A  A0D8               	btfss	status,0,c
  2273  000A7C  D7EB               	goto	l5214
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;comm.c: 94: }
  2277                           ;comm.c: 95: if (csum == checksum) {
  2278                           
  2279                           ; BSR set to: 0
  2280  000A7E  0100               	movlb	0	; () banked
  2281  000A80  51E7               	movf	ProcessCDC@checksum& (0+255),w,b
  2282  000A82  0100               	movlb	0	; () banked
  2283  000A84  19E5               	xorwf	ProcessCDC@csum& (0+255),w,b
  2284  000A86  A4D8               	btfss	status,2,c
  2285  000A88  D1D9               	goto	l5412
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;comm.c: 96: LATCbits.LATC2 = 1;;
  2289  000A8A  848B               	bsf	3979,2,c	;volatile
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;comm.c: 97: green_led_counter = 128;
  2293  000A8C  0E80               	movlw	128
  2294  000A8E  0100               	movlb	0	; () banked
  2295  000A90  6F9C               	movwf	_green_led_counter& (0+255),b
  2296                           
  2297                           ;comm.c: 99: switch (cmd) {
  2298  000A92  D1A3               	goto	l5410
  2299  000A94                     l5226:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;comm.c: 101: if (len == 0) {
  2303  000A94  0100               	movlb	0	; () banked
  2304  000A96  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2305  000A98  0100               	movlb	0	; () banked
  2306  000A9A  A4D8               	btfss	status,2,c
  2307  000A9C  D018               	goto	l5240
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;comm.c: 102: ConvertADC();
  2311  000A9E  EC3D  F01A         	call	_ConvertADC	;wreg free
  2312                           
  2313                           ;comm.c: 103: while (BusyADC());
  2314  000AA2  D000               	goto	l5230
  2315  000AA4                     l5230:
  2316  000AA4  EC32  F01A         	call	_BusyADC	;wreg free
  2317  000AA8  0900               	iorlw	0
  2318  000AAA  A4D8               	btfss	status,2,c
  2319  000AAC  D7FB               	goto	l5230
  2320                           
  2321                           ;comm.c: 104: _y = ReadADC();
  2322  000AAE  EC2A  F01A         	call	_ReadADC	;wreg free
  2323  000AB2  C023  F0E8         	movff	?_ReadADC,ProcessCDC@_y
  2324  000AB6  C024  F0E9         	movff	?_ReadADC+1,ProcessCDC@_y+1
  2325                           
  2326                           ;comm.c: 105: CDCBufferOut[0x04 + 0] = (unsigned char)(_y & 0xFF);
  2327  000ABA  C0E8  F144         	movff	ProcessCDC@_y,_CDCBufferOut+4
  2328                           
  2329                           ;comm.c: 106: CDCBufferOut[0x04 + 1] = (unsigned char)(_y>>8 & 0xFF);
  2330  000ABE  0100               	movlb	0	; () banked
  2331  000AC0  51E9               	movf	(ProcessCDC@_y+1)& (0+255),w,b
  2332  000AC2  0101               	movlb	1	; () banked
  2333  000AC4  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;comm.c: 107: comm_send_dat(2);
  2337  000AC6  0E02               	movlw	2
  2338  000AC8  ECD5  F015         	call	_comm_send_dat
  2339                           
  2340                           ;comm.c: 108: } else {
  2341  000ACC  0012               	return	
  2342  000ACE                     l5240:
  2343                           
  2344                           ;comm.c: 109: comm_send_rply(0x03);
  2345  000ACE  0E03               	movlw	3
  2346  000AD0  EC16  F018         	call	_comm_send_rply
  2347                           
  2348                           ;comm.c: 110: }
  2349                           ;comm.c: 111: break;
  2350  000AD4  0012               	return	
  2351                           
  2352                           ;comm.c: 113: case 0x20:
  2353  000AD6  D000               	goto	l5242
  2354  000AD8                     l5242:
  2355                           
  2356                           ;comm.c: 114: case 0x21:
  2357                           ;comm.c: 115: if (len == 32) {
  2358  000AD8  0E20               	movlw	32
  2359  000ADA  0100               	movlb	0	; () banked
  2360  000ADC  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2361  000ADE  A4D8               	btfss	status,2,c
  2362  000AE0  D038               	goto	l5264
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;comm.c: 116: tlc_request = 0;
  2366  000AE2  0E00               	movlw	0
  2367  000AE4  0100               	movlb	0	; () banked
  2368  000AE6  6FA0               	movwf	_tlc_request& (0+255),b
  2369                           
  2370                           ;comm.c: 117: for (_x=0; _x<32; _x++) {
  2371  000AE8  0E00               	movlw	0
  2372  000AEA  0100               	movlb	0	; () banked
  2373  000AEC  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2374  000AEE                     l5246:
  2375                           
  2376                           ; BSR set to: 0
  2377  000AEE  0E1F               	movlw	31
  2378  000AF0  0100               	movlb	0	; () banked
  2379  000AF2  65EE               	cpfsgt	ProcessCDC@_x& (0+255),b
  2380  000AF4  D001               	goto	l5250
  2381                           
  2382                           ; BSR set to: 0
  2383  000AF6  D023               	goto	l5258
  2384  000AF8                     l5250:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;comm.c: 118: _c = _x + (cmd - 0x20) * 32;
  2388  000AF8  0100               	movlb	0	; () banked
  2389  000AFA  39EA               	swapf	ProcessCDC@cmd& (0+255),w,b
  2390  000AFC  46E8               	rlncf	wreg,f,c
  2391  000AFE  0BE0               	andlw	224
  2392  000B00  0100               	movlb	0	; () banked
  2393  000B02  25EE               	addwf	ProcessCDC@_x& (0+255),w,b
  2394  000B04  0100               	movlb	0	; () banked
  2395  000B06  6FE6               	movwf	ProcessCDC@_c& (0+255),b
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;comm.c: 119: tlc5947_setChannel(_c, CDCBufferIn[0x04 + _x]);
  2399  000B08  0100               	movlb	0	; () banked
  2400  000B0A  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2401  000B0C  0100               	movlb	0	; () banked
  2402  000B0E  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2403  000B10  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2404  000B12  0E04               	movlw	4
  2405  000B14  0100               	movlb	0	; () banked
  2406  000B16  27E1               	addwf	??_ProcessCDC& (0+255),f,b
  2407  000B18  0E00               	movlw	0
  2408  000B1A  23E2               	addwfc	(??_ProcessCDC+1)& (0+255),f,b
  2409  000B1C  0E00               	movlw	low _CDCBufferIn
  2410  000B1E  0100               	movlb	0	; () banked
  2411  000B20  25E1               	addwf	??_ProcessCDC& (0+255),w,b
  2412  000B22  6ED9               	movwf	fsr2l,c
  2413  000B24  0E01               	movlw	high _CDCBufferIn
  2414  000B26  0100               	movlb	0	; () banked
  2415  000B28  21E2               	addwfc	(??_ProcessCDC+1)& (0+255),w,b
  2416  000B2A  6EDA               	movwf	fsr2h,c
  2417  000B2C  50DF               	movf	indf2,w,c
  2418  000B2E  6E26               	movwf	tlc5947_setChannel@val,c
  2419  000B30  0100               	movlb	0	; () banked
  2420  000B32  51E6               	movf	ProcessCDC@_c& (0+255),w,b
  2421  000B34  EC87  F00A         	call	_tlc5947_setChannel
  2422  000B38  0100               	movlb	0	; () banked
  2423  000B3A  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2424  000B3C  D7D8               	goto	l5246
  2425  000B3E                     l5258:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;comm.c: 120: }
  2429                           ;comm.c: 121: tlc_request = 1;
  2430  000B3E  0E01               	movlw	1
  2431  000B40  0100               	movlb	0	; () banked
  2432  000B42  6FA0               	movwf	_tlc_request& (0+255),b
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;comm.c: 122: update_count++;
  2436  000B44  0100               	movlb	0	; () banked
  2437  000B46  4B92               	infsnz	_update_count& (0+255),f,b
  2438  000B48  2B93               	incf	(_update_count+1)& (0+255),f,b
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;comm.c: 124: comm_send_rply(0x01);
  2442  000B4A  0E01               	movlw	1
  2443  000B4C  EC16  F018         	call	_comm_send_rply
  2444                           
  2445                           ;comm.c: 125: } else {
  2446  000B50  0012               	return	
  2447  000B52                     l5264:
  2448                           
  2449                           ;comm.c: 126: comm_send_rply(0x03);
  2450  000B52  0E03               	movlw	3
  2451  000B54  EC16  F018         	call	_comm_send_rply
  2452                           
  2453                           ;comm.c: 127: }
  2454                           ;comm.c: 128: break;
  2455  000B58  0012               	return	
  2456  000B5A                     l5266:
  2457                           
  2458                           ;comm.c: 132: if (len == tlc_nchannels) {
  2459  000B5A  0100               	movlb	0	; () banked
  2460  000B5C  51DD               	movf	_tlc_nchannels& (0+255),w,b
  2461  000B5E  0100               	movlb	0	; () banked
  2462  000B60  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2463  000B62  A4D8               	btfss	status,2,c
  2464  000B64  D032               	goto	l5282
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;comm.c: 133: tlc_request = 0;
  2468  000B66  0E00               	movlw	0
  2469  000B68  0100               	movlb	0	; () banked
  2470  000B6A  6FA0               	movwf	_tlc_request& (0+255),b
  2471                           
  2472                           ;comm.c: 134: for (_x = 0; _x < tlc_nchannels; _x++) {
  2473  000B6C  0E00               	movlw	0
  2474  000B6E  0100               	movlb	0	; () banked
  2475  000B70  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2476  000B72  D01B               	goto	l5274
  2477  000B74                     l5270:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;comm.c: 135: tlc5947_setChannel(_x, CDCBufferIn[0x04 + _x]);
  2481  000B74  0100               	movlb	0	; () banked
  2482  000B76  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2483  000B78  0100               	movlb	0	; () banked
  2484  000B7A  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2485  000B7C  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2486  000B7E  0E04               	movlw	4
  2487  000B80  0100               	movlb	0	; () banked
  2488  000B82  27E1               	addwf	??_ProcessCDC& (0+255),f,b
  2489  000B84  0E00               	movlw	0
  2490  000B86  23E2               	addwfc	(??_ProcessCDC+1)& (0+255),f,b
  2491  000B88  0E00               	movlw	low _CDCBufferIn
  2492  000B8A  0100               	movlb	0	; () banked
  2493  000B8C  25E1               	addwf	??_ProcessCDC& (0+255),w,b
  2494  000B8E  6ED9               	movwf	fsr2l,c
  2495  000B90  0E01               	movlw	high _CDCBufferIn
  2496  000B92  0100               	movlb	0	; () banked
  2497  000B94  21E2               	addwfc	(??_ProcessCDC+1)& (0+255),w,b
  2498  000B96  6EDA               	movwf	fsr2h,c
  2499  000B98  50DF               	movf	indf2,w,c
  2500  000B9A  6E26               	movwf	tlc5947_setChannel@val,c
  2501  000B9C  0100               	movlb	0	; () banked
  2502  000B9E  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2503  000BA0  EC87  F00A         	call	_tlc5947_setChannel
  2504  000BA4  0100               	movlb	0	; () banked
  2505  000BA6  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2506  000BA8  D000               	goto	l5274
  2507  000BAA                     l5274:
  2508                           
  2509                           ; BSR set to: 0
  2510  000BAA  0100               	movlb	0	; () banked
  2511  000BAC  51DD               	movf	_tlc_nchannels& (0+255),w,b
  2512  000BAE  0100               	movlb	0	; () banked
  2513  000BB0  5DEE               	subwf	ProcessCDC@_x& (0+255),w,b
  2514  000BB2  A0D8               	btfss	status,0,c
  2515  000BB4  D7DF               	goto	l5270
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;comm.c: 136: }
  2519                           ;comm.c: 137: tlc_request = 1;
  2520                           
  2521                           ; BSR set to: 0
  2522  000BB6  0E01               	movlw	1
  2523  000BB8  0100               	movlb	0	; () banked
  2524  000BBA  6FA0               	movwf	_tlc_request& (0+255),b
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;comm.c: 138: update_count++;
  2528  000BBC  0100               	movlb	0	; () banked
  2529  000BBE  4B92               	infsnz	_update_count& (0+255),f,b
  2530  000BC0  2B93               	incf	(_update_count+1)& (0+255),f,b
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;comm.c: 139: comm_send_rply(0x01);
  2534  000BC2  0E01               	movlw	1
  2535  000BC4  EC16  F018         	call	_comm_send_rply
  2536                           
  2537                           ;comm.c: 140: } else {
  2538  000BC8  0012               	return	
  2539  000BCA                     l5282:
  2540                           
  2541                           ;comm.c: 141: comm_send_rply(0x03);
  2542  000BCA  0E03               	movlw	3
  2543  000BCC  EC16  F018         	call	_comm_send_rply
  2544                           
  2545                           ;comm.c: 142: }
  2546                           ;comm.c: 143: break;
  2547  000BD0  0012               	return	
  2548  000BD2                     l5284:
  2549                           
  2550                           ;comm.c: 147: if (len == 2) {
  2551  000BD2  0E02               	movlw	2
  2552  000BD4  0100               	movlb	0	; () banked
  2553  000BD6  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2554  000BD8  A4D8               	btfss	status,2,c
  2555  000BDA  D010               	goto	l5294
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;comm.c: 148: tlc_request = 0;
  2559  000BDC  0E00               	movlw	0
  2560  000BDE  0100               	movlb	0	; () banked
  2561  000BE0  6FA0               	movwf	_tlc_request& (0+255),b
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;comm.c: 149: tlc5947_setChannel(CDCBufferIn[0x04], CDCBufferIn[0x04 + 1]);
  2565  000BE2  C105  F026         	movff	_CDCBufferIn+5,tlc5947_setChannel@val
  2566  000BE6  0101               	movlb	1	; () banked
  2567  000BE8  5104               	movf	(_CDCBufferIn+4)& (0+255),w,b
  2568  000BEA  EC87  F00A         	call	_tlc5947_setChannel
  2569                           
  2570                           ;comm.c: 150: tlc_request = 1;
  2571  000BEE  0E01               	movlw	1
  2572  000BF0  0100               	movlb	0	; () banked
  2573  000BF2  6FA0               	movwf	_tlc_request& (0+255),b
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;comm.c: 151: comm_send_rply(0x01);
  2577  000BF4  0E01               	movlw	1
  2578  000BF6  EC16  F018         	call	_comm_send_rply
  2579                           
  2580                           ;comm.c: 152: } else {
  2581  000BFA  0012               	return	
  2582  000BFC                     l5294:
  2583                           
  2584                           ;comm.c: 153: comm_send_rply(0x03);
  2585  000BFC  0E03               	movlw	3
  2586  000BFE  EC16  F018         	call	_comm_send_rply
  2587                           
  2588                           ;comm.c: 154: }
  2589                           ;comm.c: 155: break;
  2590  000C02  0012               	return	
  2591  000C04                     l5296:
  2592                           
  2593                           ;comm.c: 159: if (len == 0) {
  2594  000C04  0100               	movlb	0	; () banked
  2595  000C06  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2596  000C08  0100               	movlb	0	; () banked
  2597  000C0A  A4D8               	btfss	status,2,c
  2598  000C0C  D008               	goto	l5304
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;comm.c: 160: tlc5947_count_channels();
  2602  000C0E  EC5E  F016         	call	_tlc5947_count_channels	;wreg free
  2603                           
  2604                           ;comm.c: 161: CDCBufferOut[0x04 + 0] = tlc_nbytes;
  2605  000C12  C05F  F144         	movff	_tlc_nbytes,_CDCBufferOut+4
  2606                           
  2607                           ;comm.c: 162: comm_send_dat(1);
  2608  000C16  0E01               	movlw	1
  2609  000C18  ECD5  F015         	call	_comm_send_dat
  2610                           
  2611                           ;comm.c: 163: } else {
  2612  000C1C  0012               	return	
  2613  000C1E                     l5304:
  2614                           
  2615                           ;comm.c: 164: comm_send_rply(0x03);
  2616  000C1E  0E03               	movlw	3
  2617  000C20  EC16  F018         	call	_comm_send_rply
  2618                           
  2619                           ;comm.c: 165: }
  2620                           ;comm.c: 166: break;
  2621  000C24  0012               	return	
  2622  000C26                     l5306:
  2623                           
  2624                           ;comm.c: 169: if (len == 0) {
  2625  000C26  0100               	movlb	0	; () banked
  2626  000C28  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2627  000C2A  0100               	movlb	0	; () banked
  2628  000C2C  A4D8               	btfss	status,2,c
  2629  000C2E  D00B               	goto	l5316
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;comm.c: 170: tlc5947_count_channels();
  2633  000C30  EC5E  F016         	call	_tlc5947_count_channels	;wreg free
  2634                           
  2635                           ;comm.c: 171: CDCBufferOut[0x04 + 0] = tlc_nchannels;
  2636  000C34  C0DD  F144         	movff	_tlc_nchannels,_CDCBufferOut+4
  2637                           
  2638                           ;comm.c: 172: CDCBufferOut[0x04 + 1] = 0;
  2639  000C38  0E00               	movlw	0
  2640  000C3A  0101               	movlb	1	; () banked
  2641  000C3C  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2642                           
  2643                           ; BSR set to: 1
  2644                           ;comm.c: 173: comm_send_dat(2);
  2645  000C3E  0E02               	movlw	2
  2646  000C40  ECD5  F015         	call	_comm_send_dat
  2647                           
  2648                           ;comm.c: 174: } else {
  2649  000C44  0012               	return	
  2650  000C46                     l5316:
  2651                           
  2652                           ;comm.c: 175: comm_send_rply(0x03);
  2653  000C46  0E03               	movlw	3
  2654  000C48  EC16  F018         	call	_comm_send_rply
  2655                           
  2656                           ;comm.c: 176: }
  2657                           ;comm.c: 177: break;
  2658  000C4C  0012               	return	
  2659  000C4E                     l5318:
  2660                           
  2661                           ;comm.c: 180: if (len == 0) {
  2662  000C4E  0100               	movlb	0	; () banked
  2663  000C50  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2664  000C52  0100               	movlb	0	; () banked
  2665  000C54  A4D8               	btfss	status,2,c
  2666  000C56  D00B               	goto	l5328
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;comm.c: 181: tlc5947_pwm_readback();
  2670  000C58  EC53  F014         	call	_tlc5947_pwm_readback	;wreg free
  2671                           
  2672                           ;comm.c: 182: CDCBufferOut[0x04 + 0] = (unsigned char)(tlc_pwm_readback_value & 0xFF);
  2673  000C5C  C04A  F144         	movff	_tlc_pwm_readback_value,_CDCBufferOut+4
  2674                           
  2675                           ;comm.c: 183: CDCBufferOut[0x04 + 1] = (unsigned char)(tlc_pwm_readback_value>>8 & 0xFF)
      +                          ;
  2676  000C60  504B               	movf	_tlc_pwm_readback_value+1,w,c
  2677  000C62  0101               	movlb	1	; () banked
  2678  000C64  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2679                           
  2680                           ; BSR set to: 1
  2681                           ;comm.c: 184: comm_send_dat(2);
  2682  000C66  0E02               	movlw	2
  2683  000C68  ECD5  F015         	call	_comm_send_dat
  2684                           
  2685                           ;comm.c: 185: } else {
  2686  000C6C  0012               	return	
  2687  000C6E                     l5328:
  2688                           
  2689                           ;comm.c: 186: comm_send_rply(0x03);
  2690  000C6E  0E03               	movlw	3
  2691  000C70  EC16  F018         	call	_comm_send_rply
  2692                           
  2693                           ;comm.c: 187: }
  2694                           ;comm.c: 188: break;
  2695  000C74  0012               	return	
  2696  000C76                     l5330:
  2697                           
  2698                           ;comm.c: 191: if (len == 2) {
  2699  000C76  0E02               	movlw	2
  2700  000C78  0100               	movlb	0	; () banked
  2701  000C7A  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2702  000C7C  A4D8               	btfss	status,2,c
  2703  000C7E  D00E               	goto	l5336
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;comm.c: 192: tmr3l_cal = CDCBufferIn[0x04 + 0]^0xFF;
  2707  000C80  0101               	movlb	1	; () banked
  2708  000C82  5104               	movf	(_CDCBufferIn+4)& (0+255),w,b
  2709  000C84  0AFF               	xorlw	255
  2710  000C86  0100               	movlb	0	; () banked
  2711  000C88  6FA2               	movwf	_tmr3l_cal& (0+255),b
  2712                           
  2713                           ;comm.c: 193: tmr3h_cal = CDCBufferIn[0x04 + 1]^0xFF;
  2714  000C8A  0101               	movlb	1	; () banked
  2715  000C8C  5105               	movf	(_CDCBufferIn+5)& (0+255),w,b
  2716  000C8E  0AFF               	xorlw	255
  2717  000C90  0100               	movlb	0	; () banked
  2718  000C92  6FA1               	movwf	_tmr3h_cal& (0+255),b
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;comm.c: 194: comm_send_rply(0x01);
  2722  000C94  0E01               	movlw	1
  2723  000C96  EC16  F018         	call	_comm_send_rply
  2724                           
  2725                           ;comm.c: 195: } else {
  2726  000C9A  0012               	return	
  2727  000C9C                     l5336:
  2728                           
  2729                           ;comm.c: 196: comm_send_rply(0x03);
  2730  000C9C  0E03               	movlw	3
  2731  000C9E  EC16  F018         	call	_comm_send_rply
  2732                           
  2733                           ;comm.c: 197: }
  2734                           ;comm.c: 198: break;
  2735  000CA2  0012               	return	
  2736  000CA4                     l5338:
  2737                           
  2738                           ;comm.c: 201: if (len == 1) {
  2739  000CA4  0100               	movlb	0	; () banked
  2740  000CA6  05EF               	decf	ProcessCDC@len& (0+255),w,b
  2741  000CA8  A4D8               	btfss	status,2,c
  2742  000CAA  D00D               	goto	l5346
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;comm.c: 202: Busy_eep();
  2746  000CAC  EC39  F01A         	call	_Busy_eep	;wreg free
  2747                           
  2748                           ;comm.c: 203: CDCBufferOut[0x04] = Read_b_eep(CDCBufferIn[0x04]);
  2749  000CB0  C104  F023         	movff	_CDCBufferIn+4,Read_b_eep@badd
  2750  000CB4  6A24               	clrf	Read_b_eep@badd+1,c
  2751  000CB6  ECFC  F019         	call	_Read_b_eep	;wreg free
  2752  000CBA  0101               	movlb	1	; () banked
  2753  000CBC  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2754                           
  2755                           ; BSR set to: 1
  2756                           ;comm.c: 204: comm_send_dat(1);
  2757  000CBE  0E01               	movlw	1
  2758  000CC0  ECD5  F015         	call	_comm_send_dat
  2759                           
  2760                           ;comm.c: 205: } else {
  2761  000CC4  0012               	return	
  2762  000CC6                     l5346:
  2763                           
  2764                           ;comm.c: 206: comm_send_rply(0x03);
  2765  000CC6  0E03               	movlw	3
  2766  000CC8  EC16  F018         	call	_comm_send_rply
  2767                           
  2768                           ;comm.c: 207: }
  2769                           ;comm.c: 208: break;
  2770  000CCC  0012               	return	
  2771  000CCE                     l5348:
  2772                           
  2773                           ;comm.c: 211: if (len == 2) {
  2774  000CCE  0E02               	movlw	2
  2775  000CD0  0100               	movlb	0	; () banked
  2776  000CD2  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2777  000CD4  A4D8               	btfss	status,2,c
  2778  000CD6  D00D               	goto	l5356
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;comm.c: 212: Busy_eep();
  2782  000CD8  EC39  F01A         	call	_Busy_eep	;wreg free
  2783                           
  2784                           ;comm.c: 213: Write_b_eep(CDCBufferIn[0x04], CDCBufferIn[0x04+1]);
  2785  000CDC  C104  F023         	movff	_CDCBufferIn+4,Write_b_eep@badd
  2786  000CE0  6A24               	clrf	Write_b_eep@badd+1,c
  2787  000CE2  C105  F025         	movff	_CDCBufferIn+5,Write_b_eep@bdat
  2788  000CE6  ECA3  F018         	call	_Write_b_eep	;wreg free
  2789                           
  2790                           ;comm.c: 214: comm_send_rply(0x01);
  2791  000CEA  0E01               	movlw	1
  2792  000CEC  EC16  F018         	call	_comm_send_rply
  2793                           
  2794                           ;comm.c: 215: } else {
  2795  000CF0  0012               	return	
  2796  000CF2                     l5356:
  2797                           
  2798                           ;comm.c: 216: comm_send_rply(0x03);
  2799  000CF2  0E03               	movlw	3
  2800  000CF4  EC16  F018         	call	_comm_send_rply
  2801                           
  2802                           ;comm.c: 217: }
  2803                           ;comm.c: 218: break;
  2804  000CF8  0012               	return	
  2805  000CFA                     l5358:
  2806                           
  2807                           ;comm.c: 221: if (len == 0) {
  2808  000CFA  0100               	movlb	0	; () banked
  2809  000CFC  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2810  000CFE  0100               	movlb	0	; () banked
  2811  000D00  A4D8               	btfss	status,2,c
  2812  000D02  D007               	goto	l5364
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;comm.c: 222: CDCBufferOut[0x04] = 0x34;
  2816  000D04  0E34               	movlw	52
  2817  000D06  0101               	movlb	1	; () banked
  2818  000D08  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;comm.c: 223: comm_send_dat(1);
  2822  000D0A  0E01               	movlw	1
  2823  000D0C  ECD5  F015         	call	_comm_send_dat
  2824                           
  2825                           ;comm.c: 224: } else {
  2826  000D10  0012               	return	
  2827  000D12                     l5364:
  2828                           
  2829                           ;comm.c: 225: comm_send_rply(0x03);
  2830  000D12  0E03               	movlw	3
  2831  000D14  EC16  F018         	call	_comm_send_rply
  2832                           
  2833                           ;comm.c: 226: }
  2834                           ;comm.c: 227: break;
  2835  000D18  0012               	return	
  2836  000D1A                     l5366:
  2837                           
  2838                           ;comm.c: 230: if (len == 0) {
  2839  000D1A  0100               	movlb	0	; () banked
  2840  000D1C  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2841  000D1E  0100               	movlb	0	; () banked
  2842  000D20  A4D8               	btfss	status,2,c
  2843  000D22  D007               	goto	l5372
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;comm.c: 231: CDCBufferOut[0x04] = 0x01;
  2847  000D24  0E01               	movlw	1
  2848  000D26  0101               	movlb	1	; () banked
  2849  000D28  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2850                           
  2851                           ; BSR set to: 1
  2852                           ;comm.c: 232: comm_send_dat(1);
  2853  000D2A  0E01               	movlw	1
  2854  000D2C  ECD5  F015         	call	_comm_send_dat
  2855                           
  2856                           ;comm.c: 233: } else {
  2857  000D30  0012               	return	
  2858  000D32                     l5372:
  2859                           
  2860                           ;comm.c: 234: comm_send_rply(0x03);
  2861  000D32  0E03               	movlw	3
  2862  000D34  EC16  F018         	call	_comm_send_rply
  2863                           
  2864                           ;comm.c: 235: }
  2865                           ;comm.c: 236: break;
  2866  000D38  0012               	return	
  2867  000D3A                     l5374:
  2868                           
  2869                           ;comm.c: 239: if (len == 0) {
  2870  000D3A  0100               	movlb	0	; () banked
  2871  000D3C  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2872  000D3E  0100               	movlb	0	; () banked
  2873  000D40  A4D8               	btfss	status,2,c
  2874  000D42  D008               	goto	l5380
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;comm.c: 240: CDCBufferOut[0x04 + 0] = boot_request0;
  2878  000D44  C0EB  F144         	movff	ProcessCDC@boot_request0,_CDCBufferOut+4
  2879                           
  2880                           ;comm.c: 241: CDCBufferOut[0x04 + 1] = boot_request1;
  2881  000D48  C0EC  F145         	movff	ProcessCDC@boot_request1,_CDCBufferOut+5
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;comm.c: 242: comm_send_dat(2);
  2885  000D4C  0E02               	movlw	2
  2886  000D4E  ECD5  F015         	call	_comm_send_dat
  2887                           
  2888                           ;comm.c: 243: } else {
  2889  000D52  0012               	return	
  2890  000D54                     l5380:
  2891                           
  2892                           ;comm.c: 244: comm_send_rply(0x03);
  2893  000D54  0E03               	movlw	3
  2894  000D56  EC16  F018         	call	_comm_send_rply
  2895                           
  2896                           ;comm.c: 245: }
  2897                           ;comm.c: 246: break;
  2898  000D5A  0012               	return	
  2899  000D5C                     l5382:
  2900                           
  2901                           ;comm.c: 249: if (len == 2) {
  2902  000D5C  0E02               	movlw	2
  2903  000D5E  0100               	movlb	0	; () banked
  2904  000D60  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2905  000D62  A4D8               	btfss	status,2,c
  2906  000D64  D032               	goto	l5404
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;comm.c: 250: if ((CDCBufferIn[0x04] == boot_request0) && (CDCBufferIn[0x04 + 1] == boot
      +                          _request1)) {
  2910  000D66  0100               	movlb	0	; () banked
  2911  000D68  51EB               	movf	ProcessCDC@boot_request0& (0+255),w,b
  2912  000D6A  0101               	movlb	1	; () banked
  2913  000D6C  1904               	xorwf	(_CDCBufferIn+4)& (0+255),w,b
  2914  000D6E  A4D8               	btfss	status,2,c
  2915  000D70  D028               	goto	l5402
  2916                           
  2917                           ; BSR set to: 1
  2918  000D72  0100               	movlb	0	; () banked
  2919  000D74  51EC               	movf	ProcessCDC@boot_request1& (0+255),w,b
  2920  000D76  0101               	movlb	1	; () banked
  2921  000D78  1905               	xorwf	(_CDCBufferIn+5)& (0+255),w,b
  2922  000D7A  A4D8               	btfss	status,2,c
  2923  000D7C  D022               	goto	l5402
  2924                           
  2925                           ; BSR set to: 1
  2926                           ;comm.c: 251: INTCONbits.GIE = 0;
  2927  000D7E  9EF2               	bcf	intcon,7,c	;volatile
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;comm.c: 252: *U1CON_R = 0; *U1IE_R = 0; USBDeviceState = DETACHED_STATE;;
  2931  000D80  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  2932  000D84  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  2933  000D88  0E00               	movlw	0
  2934  000D8A  6EDF               	movwf	indf2,c
  2935  000D8C  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  2936  000D90  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  2937  000D94  0E00               	movlw	0
  2938  000D96  6EDF               	movwf	indf2,c
  2939                           
  2940                           ; BSR set to: 1
  2941  000D98  0E00               	movlw	0
  2942  000D9A  0100               	movlb	0	; () banked
  2943  000D9C  6F97               	movwf	_USBDeviceState& (0+255),b
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;comm.c: 253: USBDeviceTasks();
  2947  000D9E  EC76  F008         	call	_USBDeviceTasks	;wreg free
  2948                           
  2949                           ;comm.c: 254: Delay10TCYx(18);
  2950  000DA2  0E12               	movlw	18
  2951  000DA4  EC06  F01A         	call	_Delay10TCYx
  2952                           
  2953                           ;comm.c: 255: if (pic18_devid != 0x0090) {
  2954  000DA8  0E90               	movlw	144
  2955  000DAA  0100               	movlb	0	; () banked
  2956  000DAC  19F1               	xorwf	_pic18_devid& (0+255),w,b
  2957  000DAE  0100               	movlb	0	; () banked
  2958  000DB0  11F2               	iorwf	(_pic18_devid+1)& (0+255),w,b
  2959  000DB2  B4D8               	btfsc	status,2,c
  2960  000DB4  D003               	goto	l988
  2961                           
  2962                           ; BSR set to: 0
  2963  000DB6  EF9E F003          	goto	1852	;# 
  2964                           
  2965                           ;comm.c: 257: } else {
  2966  000DBA  0012               	return	
  2967  000DBC                     l988:
  2968                           
  2969                           ; BSR set to: 0
  2970  000DBC  EF92 F003          	goto	1828	;# 
  2971                           
  2972                           ;comm.c: 259: }
  2973                           ;comm.c: 260: } else {
  2974  000DC0  0012               	return	
  2975  000DC2                     l5402:
  2976                           
  2977                           ;comm.c: 262: comm_send_rply(0x02);
  2978  000DC2  0E02               	movlw	2
  2979  000DC4  EC16  F018         	call	_comm_send_rply
  2980                           
  2981                           ;comm.c: 263: }
  2982                           ;comm.c: 264: } else {
  2983  000DC8  0012               	return	
  2984  000DCA                     l5404:
  2985                           
  2986                           ;comm.c: 265: comm_send_rply(0x03);
  2987  000DCA  0E03               	movlw	3
  2988  000DCC  EC16  F018         	call	_comm_send_rply
  2989                           
  2990                           ;comm.c: 266: }
  2991                           ;comm.c: 267: break;
  2992  000DD0  0012               	return	
  2993  000DD2                     l5406:
  2994                           
  2995                           ;comm.c: 271: comm_send_rply(0xFF);
  2996  000DD2  0EFF               	movlw	255
  2997  000DD4  EC16  F018         	call	_comm_send_rply
  2998                           
  2999                           ;comm.c: 273: }
  3000                           
  3001                           ;comm.c: 272: break;
  3002  000DD8  0012               	return	
  3003  000DDA                     l5410:
  3004  000DDA  0100               	movlb	0	; () banked
  3005  000DDC  51EA               	movf	ProcessCDC@cmd& (0+255),w,b
  3006                           
  3007                           ; Switch size 1, requested type "space"
  3008                           ; Number of cases is 15, Range of values is 1 to 129
  3009                           ; switch strategies available:
  3010                           ; Name         Instructions Cycles
  3011                           ; simple_byte           46    24 (average)
  3012                           ;	Chosen strategy is simple_byte
  3013  000DDE  0A01               	xorlw	1	; case 1
  3014  000DE0  B4D8               	btfsc	status,2,c
  3015  000DE2  D78B               	goto	l5358
  3016  000DE4  0A03               	xorlw	3	; case 2
  3017  000DE6  B4D8               	btfsc	status,2,c
  3018  000DE8  D798               	goto	l5366
  3019  000DEA  0A13               	xorlw	19	; case 17
  3020  000DEC  B4D8               	btfsc	status,2,c
  3021  000DEE  D6F1               	goto	l5284
  3022  000DF0  0A03               	xorlw	3	; case 18
  3023  000DF2  B4D8               	btfsc	status,2,c
  3024  000DF4  D6B2               	goto	l5266
  3025  000DF6  0A01               	xorlw	1	; case 19
  3026  000DF8  B4D8               	btfsc	status,2,c
  3027  000DFA  D704               	goto	l5296
  3028  000DFC  0A07               	xorlw	7	; case 20
  3029  000DFE  B4D8               	btfsc	status,2,c
  3030  000E00  D726               	goto	l5318
  3031  000E02  0A01               	xorlw	1	; case 21
  3032  000E04  B4D8               	btfsc	status,2,c
  3033  000E06  D737               	goto	l5330
  3034  000E08  0A35               	xorlw	53	; case 32
  3035  000E0A  B4D8               	btfsc	status,2,c
  3036  000E0C  D665               	goto	l5242
  3037  000E0E  0A01               	xorlw	1	; case 33
  3038  000E10  B4D8               	btfsc	status,2,c
  3039  000E12  D662               	goto	l5242
  3040  000E14  0A11               	xorlw	17	; case 48
  3041  000E16  B4D8               	btfsc	status,2,c
  3042  000E18  D706               	goto	l5306
  3043  000E1A  0A70               	xorlw	112	; case 64
  3044  000E1C  B4D8               	btfsc	status,2,c
  3045  000E1E  D63A               	goto	l5226
  3046  000E20  0A10               	xorlw	16	; case 80
  3047  000E22  B4D8               	btfsc	status,2,c
  3048  000E24  D73F               	goto	l5338
  3049  000E26  0A01               	xorlw	1	; case 81
  3050  000E28  B4D8               	btfsc	status,2,c
  3051  000E2A  D751               	goto	l5348
  3052  000E2C  0AD1               	xorlw	209	; case 128
  3053  000E2E  B4D8               	btfsc	status,2,c
  3054  000E30  D784               	goto	l5374
  3055  000E32  0A01               	xorlw	1	; case 129
  3056  000E34  B4D8               	btfsc	status,2,c
  3057  000E36  D792               	goto	l5382
  3058  000E38  D7CC               	goto	l5406
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;comm.c: 274: } else {
  3062  000E3A  0012               	return	
  3063  000E3C                     l5412:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;comm.c: 276: comm_send_rply(0x04);
  3067  000E3C  0E04               	movlw	4
  3068  000E3E  EC16  F018         	call	_comm_send_rply
  3069                           
  3070                           ;comm.c: 277: }
  3071                           ;comm.c: 278: } else {
  3072  000E42  0012               	return	
  3073  000E44                     l5414:
  3074                           
  3075                           ;comm.c: 280: comm_send_rply(0x03);
  3076  000E44  0E03               	movlw	3
  3077  000E46  EC16  F018         	call	_comm_send_rply
  3078                           
  3079                           ;comm.c: 281: }
  3080                           ;comm.c: 283: } else {
  3081  000E4A  0012               	return	
  3082  000E4C                     l5416:
  3083                           
  3084                           ;comm.c: 285: len = 0;
  3085  000E4C  0E00               	movlw	0
  3086  000E4E  0100               	movlb	0	; () banked
  3087  000E50  6FEF               	movwf	ProcessCDC@len& (0+255),b
  3088  000E52  0012               	return	
  3089                           
  3090                           ; BSR set to: 0
  3091  000E54  0012               	return		;funcret
  3092  000E56                     __end_of_ProcessCDC:
  3093                           	opt stack 0
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           prodh	equ	0xFF4
  3099                           prodl	equ	0xFF3
  3100                           intcon	equ	0xFF2
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1h	equ	0xFE2
  3105                           fsr1l	equ	0xFE1
  3106                           indf2	equ	0xFDF
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8
  3110                           
  3111 ;; *************** function _getsUSBUSART *****************
  3112 ;; Defined at:
  3113 ;;		line 542 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  buffer          2   41[COMRAM] PTR unsigned char 
  3116 ;;		 -> CDCBufferIn(64), 
  3117 ;;  len             1   43[COMRAM] unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      unsigned char 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3129 ;;      Params:         3       0       0       0       0       0       0       0       0
  3130 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3131 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3132 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3133 ;;Total ram usage:        6 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    5
  3136 ;; This function calls:
  3137 ;;		_USBTransferOnePacket
  3138 ;; This function is called by:
  3139 ;;		_ProcessCDC
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text4
  3144  002734                     __ptext4:
  3145                           	opt stack 0
  3146  002734                     _getsUSBUSART:
  3147                           	opt stack 23
  3148                           
  3149                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  3150                           
  3151                           ;incstack = 0
  3152  002734  0E00               	movlw	0
  3153  002736  6E51               	movwf	_cdc_rx_len,c
  3154                           
  3155                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  3156  002738  5044               	movf	_CDCDataOutHandle,w,c
  3157  00273A  1045               	iorwf	_CDCDataOutHandle+1,w,c
  3158  00273C  B4D8               	btfsc	status,2,c
  3159  00273E  D00E               	goto	l4948
  3160  002740  C044  FFD9         	movff	_CDCDataOutHandle,fsr2l
  3161  002744  C045  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  3162  002748  AEDF               	btfss	indf2,7,c
  3163  00274A  D003               	goto	u4030
  3164  00274C  6A2D               	clrf	??_getsUSBUSART& (0+255),c
  3165  00274E  2A2D               	incf	??_getsUSBUSART& (0+255),f,c
  3166  002750  D001               	goto	u4038
  3167  002752                     u4030:
  3168  002752  6A2D               	clrf	??_getsUSBUSART& (0+255),c
  3169  002754                     u4038:
  3170  002754  502D               	movf	??_getsUSBUSART,w,c
  3171  002756  6E2E               	movwf	_getsUSBUSART$1647,c
  3172  002758  6A2F               	clrf	_getsUSBUSART$1647+1,c
  3173  00275A  D005               	goto	l4950
  3174  00275C                     l4948:
  3175  00275C  0E00               	movlw	0
  3176  00275E  6E2F               	movwf	_getsUSBUSART$1647+1,c
  3177  002760  0E00               	movlw	0
  3178  002762  6E2E               	movwf	_getsUSBUSART$1647,c
  3179  002764  D000               	goto	l4950
  3180  002766                     l4950:
  3181  002766  502E               	movf	_getsUSBUSART$1647,w,c
  3182  002768  102F               	iorwf	_getsUSBUSART$1647+1,w,c
  3183  00276A  A4D8               	btfss	status,2,c
  3184  00276C  D03E               	goto	l4966
  3185                           
  3186                           ;usb_device_cdc.c: 547: {
  3187                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3188  00276E  EE20 F001          	lfsr	2,1
  3189  002772  5044               	movf	_CDCDataOutHandle,w,c
  3190  002774  26D9               	addwf	fsr2l,f,c
  3191  002776  5045               	movf	_CDCDataOutHandle+1,w,c
  3192  002778  22DA               	addwfc	fsr2h,f,c
  3193  00277A  502C               	movf	getsUSBUSART@len,w,c
  3194  00277C  5CDE               	subwf	postinc2,w,c
  3195  00277E  B0D8               	btfsc	status,0,c
  3196  002780  D009               	goto	l4956
  3197                           
  3198                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3199  002782  EE20 F001          	lfsr	2,1
  3200  002786  5044               	movf	_CDCDataOutHandle,w,c
  3201  002788  26D9               	addwf	fsr2l,f,c
  3202  00278A  5045               	movf	_CDCDataOutHandle+1,w,c
  3203  00278C  22DA               	addwfc	fsr2h,f,c
  3204  00278E  50DF               	movf	indf2,w,c
  3205  002790  6E2C               	movwf	getsUSBUSART@len,c
  3206  002792  D000               	goto	l4956
  3207  002794                     l4956:
  3208                           
  3209                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3210  002794  0E00               	movlw	0
  3211  002796  6E51               	movwf	_cdc_rx_len,c
  3212  002798  D014               	goto	l4962
  3213  00279A                     l4958:
  3214                           
  3215                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3216  00279A  5051               	movf	_cdc_rx_len,w,c
  3217  00279C  0D01               	mullw	1
  3218  00279E  0E40               	movlw	64
  3219  0027A0  24F3               	addwf	prodl,w,c
  3220  0027A2  6ED9               	movwf	fsr2l,c
  3221  0027A4  0E05               	movlw	5
  3222  0027A6  20F4               	addwfc	prodh,w,c
  3223  0027A8  6EDA               	movwf	fsr2h,c
  3224  0027AA  5051               	movf	_cdc_rx_len,w,c
  3225  0027AC  0D01               	mullw	1
  3226  0027AE  50F3               	movf	prodl,w,c
  3227  0027B0  242A               	addwf	getsUSBUSART@buffer,w,c
  3228  0027B2  6EE1               	movwf	fsr1l,c
  3229  0027B4  50F4               	movf	prodh,w,c
  3230  0027B6  202B               	addwfc	getsUSBUSART@buffer+1,w,c
  3231  0027B8  6EE2               	movwf	fsr1h,c
  3232  0027BA  CFDF FFE7          	movff	indf2,indf1
  3233  0027BE  2A51               	incf	_cdc_rx_len,f,c
  3234  0027C0  D000               	goto	l4962
  3235  0027C2                     l4962:
  3236  0027C2  502C               	movf	getsUSBUSART@len,w,c
  3237  0027C4  5C51               	subwf	_cdc_rx_len,w,c
  3238  0027C6  A0D8               	btfss	status,0,c
  3239  0027C8  D7E8               	goto	l4958
  3240                           
  3241                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3242  0027CA  0E00               	movlw	0
  3243  0027CC  6E23               	movwf	USBTransferOnePacket@dir,c
  3244  0027CE  0E40               	movlw	64
  3245  0027D0  6E24               	movwf	USBTransferOnePacket@data,c
  3246  0027D2  0E05               	movlw	5
  3247  0027D4  6E25               	movwf	USBTransferOnePacket@data+1,c
  3248  0027D6  0E40               	movlw	64
  3249  0027D8  6E26               	movwf	USBTransferOnePacket@len,c
  3250  0027DA  0E02               	movlw	2
  3251  0027DC  ECDC  F012         	call	_USBTransferOnePacket
  3252  0027E0  C023  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  3253  0027E4  C024  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  3254  0027E8  D000               	goto	l4966
  3255  0027EA                     l4966:
  3256                           
  3257                           ;usb_device_cdc.c: 567: }
  3258                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  3259  0027EA  5051               	movf	_cdc_rx_len,w,c
  3260  0027EC  0012               	return	
  3261  0027EE  0012               	return		;funcret
  3262  0027F0                     __end_of_getsUSBUSART:
  3263                           	opt stack 0
  3264                           tblptru	equ	0xFF8
  3265                           tblptrh	equ	0xFF7
  3266                           tblptrl	equ	0xFF6
  3267                           tablat	equ	0xFF5
  3268                           prodh	equ	0xFF4
  3269                           prodl	equ	0xFF3
  3270                           intcon	equ	0xFF2
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           indf1	equ	0xFE7
  3274                           postdec1	equ	0xFE5
  3275                           fsr1h	equ	0xFE2
  3276                           fsr1l	equ	0xFE1
  3277                           indf2	equ	0xFDF
  3278                           postinc2	equ	0xFDE
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _comm_send_rply *****************
  3284 ;; Defined at:
  3285 ;;		line 20 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  cc              1    wreg     unsigned char 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  cc              1   46[COMRAM] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;		None               void
  3292 ;; Registers used:
  3293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3299 ;;      Params:         0       0       0       0       0       0       0       0       0
  3300 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3302 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3303 ;;Total ram usage:        1 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    6
  3306 ;; This function calls:
  3307 ;;		_CDCTxService
  3308 ;;		_putUSBUSART
  3309 ;; This function is called by:
  3310 ;;		_ProcessCDC
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text5
  3315  00302C                     __ptext5:
  3316                           	opt stack 0
  3317  00302C                     _comm_send_rply:
  3318                           	opt stack 22
  3319                           
  3320                           ;incstack = 0
  3321                           ;comm_send_rply@cc stored from wreg
  3322  00302C  6E2F               	movwf	comm_send_rply@cc,c
  3323                           
  3324                           ;comm.c: 22: CDCBufferOut[0x00] = 0x55;
  3325  00302E  0E55               	movlw	85
  3326  003030  0101               	movlb	1	; () banked
  3327  003032  6F40               	movwf	_CDCBufferOut& (0+255),b
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;comm.c: 23: CDCBufferOut[0x01] = cc;
  3331  003034  C02F  F141         	movff	comm_send_rply@cc,_CDCBufferOut+1
  3332                           
  3333                           ; BSR set to: 1
  3334                           ;comm.c: 24: CDCBufferOut[0x03] = 0x00;
  3335  003038  0E00               	movlw	0
  3336  00303A  0101               	movlb	1	; () banked
  3337  00303C  6F43               	movwf	(_CDCBufferOut+3)& (0+255),b
  3338                           
  3339                           ; BSR set to: 1
  3340                           ;comm.c: 25: CDCBufferOut[0x02] = CDCBufferOut[0x00] ^ CDCBufferOut[0x01] ^ CDCBufferOut
      +                          [0x03];
  3341  00303E  0101               	movlb	1	; () banked
  3342  003040  5141               	movf	(_CDCBufferOut+1)& (0+255),w,b
  3343  003042  0101               	movlb	1	; () banked
  3344  003044  1943               	xorwf	(_CDCBufferOut+3)& (0+255),w,b
  3345  003046  0101               	movlb	1	; () banked
  3346  003048  1940               	xorwf	_CDCBufferOut& (0+255),w,b
  3347  00304A  0101               	movlb	1	; () banked
  3348  00304C  6F42               	movwf	(_CDCBufferOut+2)& (0+255),b
  3349                           
  3350                           ;comm.c: 27: while (!(cdc_trf_state == 0)) CDCTxService();
  3351  00304E  D003               	goto	l5050
  3352  003050                     l5048:
  3353  003050  EC0A  F00C         	call	_CDCTxService	;wreg free
  3354  003054  D000               	goto	l5050
  3355  003056                     l5050:
  3356  003056  5052               	movf	_cdc_trf_state,w,c
  3357  003058  A4D8               	btfss	status,2,c
  3358  00305A  D7FA               	goto	l5048
  3359                           
  3360                           ;comm.c: 29: if((cdc_trf_state == 0)) {
  3361  00305C  5052               	movf	_cdc_trf_state,w,c
  3362  00305E  A4D8               	btfss	status,2,c
  3363  003060  D009               	goto	l5056
  3364                           
  3365                           ;comm.c: 30: putUSBUSART(CDCBufferOut, 4);
  3366  003062  0E40               	movlw	low _CDCBufferOut
  3367  003064  6E23               	movwf	putUSBUSART@data,c
  3368  003066  0E01               	movlw	high _CDCBufferOut
  3369  003068  6E24               	movwf	putUSBUSART@data+1,c
  3370  00306A  0E04               	movlw	4
  3371  00306C  6E25               	movwf	putUSBUSART@length,c
  3372  00306E  ECC8  F019         	call	_putUSBUSART	;wreg free
  3373                           
  3374                           ;comm.c: 31: } else {
  3375  003072  0012               	return	
  3376  003074                     l5056:
  3377                           
  3378                           ;comm.c: 32: txmiss_count++;
  3379  003074  0100               	movlb	0	; () banked
  3380  003076  4B90               	infsnz	_txmiss_count& (0+255),f,b
  3381  003078  2B91               	incf	(_txmiss_count+1)& (0+255),f,b
  3382  00307A  0012               	return	
  3383                           
  3384                           ; BSR set to: 0
  3385  00307C  0012               	return		;funcret
  3386  00307E                     __end_of_comm_send_rply:
  3387                           	opt stack 0
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           prodh	equ	0xFF4
  3393                           prodl	equ	0xFF3
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           indf1	equ	0xFE7
  3398                           postdec1	equ	0xFE5
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           postinc2	equ	0xFDE
  3403                           fsr2h	equ	0xFDA
  3404                           fsr2l	equ	0xFD9
  3405                           status	equ	0xFD8
  3406                           
  3407 ;; *************** function _comm_send_dat *****************
  3408 ;; Defined at:
  3409 ;;		line 36 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  len             1    wreg     unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  len             1   47[COMRAM] unsigned char 
  3414 ;;  i               1   46[COMRAM] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;		None               void
  3417 ;; Registers used:
  3418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0
  3425 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3427 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3428 ;;Total ram usage:        2 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    6
  3431 ;; This function calls:
  3432 ;;		_CDCTxService
  3433 ;;		_putUSBUSART
  3434 ;; This function is called by:
  3435 ;;		_ProcessCDC
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text6
  3440  002BAA                     __ptext6:
  3441                           	opt stack 0
  3442  002BAA                     _comm_send_dat:
  3443                           	opt stack 22
  3444                           
  3445                           ;incstack = 0
  3446                           ;comm_send_dat@len stored from wreg
  3447  002BAA  6E30               	movwf	comm_send_dat@len,c
  3448                           
  3449                           ;comm.c: 38: unsigned char i;
  3450                           ;comm.c: 39: if (len >60) {
  3451  002BAC  0E3C               	movlw	60
  3452  002BAE  6430               	cpfsgt	comm_send_dat@len,c
  3453  002BB0  D002               	goto	l912
  3454                           
  3455                           ;comm.c: 40: len = 60;
  3456  002BB2  0E3C               	movlw	60
  3457  002BB4  6E30               	movwf	comm_send_dat@len,c
  3458  002BB6                     l912:
  3459                           
  3460                           ;comm.c: 41: }
  3461                           ;comm.c: 43: CDCBufferOut[0x00] = 0x55;
  3462  002BB6  0E55               	movlw	85
  3463  002BB8  0101               	movlb	1	; () banked
  3464  002BBA  6F40               	movwf	_CDCBufferOut& (0+255),b
  3465                           
  3466                           ;comm.c: 44: CDCBufferOut[0x01] = 0x20;
  3467  002BBC  0E20               	movlw	32
  3468  002BBE  0101               	movlb	1	; () banked
  3469  002BC0  6F41               	movwf	(_CDCBufferOut+1)& (0+255),b
  3470                           
  3471                           ; BSR set to: 1
  3472                           ;comm.c: 45: CDCBufferOut[0x03] = len;
  3473  002BC2  C030  F143         	movff	comm_send_dat@len,_CDCBufferOut+3
  3474                           
  3475                           ; BSR set to: 1
  3476                           ;comm.c: 47: len+=4;
  3477  002BC6  0E04               	movlw	4
  3478  002BC8  2630               	addwf	comm_send_dat@len,f,c
  3479                           
  3480                           ; BSR set to: 1
  3481                           ;comm.c: 49: CDCBufferOut[0x02] = 0;
  3482  002BCA  0E00               	movlw	0
  3483  002BCC  0101               	movlb	1	; () banked
  3484  002BCE  6F42               	movwf	(_CDCBufferOut+2)& (0+255),b
  3485                           
  3486                           ; BSR set to: 1
  3487                           ;comm.c: 50: for (i = 0 ; i < len; i++) {
  3488  002BD0  0E00               	movlw	0
  3489  002BD2  6E2F               	movwf	comm_send_dat@i,c
  3490  002BD4  D012               	goto	l5076
  3491  002BD6                     l5070:
  3492                           
  3493                           ;comm.c: 51: if (i != 0x02) {
  3494  002BD6  0E02               	movlw	2
  3495  002BD8  182F               	xorwf	comm_send_dat@i,w,c
  3496  002BDA  B4D8               	btfsc	status,2,c
  3497  002BDC  D00C               	goto	l5074
  3498                           
  3499                           ;comm.c: 52: CDCBufferOut[0x02] ^= CDCBufferOut[i];
  3500  002BDE  502F               	movf	comm_send_dat@i,w,c
  3501  002BE0  0D01               	mullw	1
  3502  002BE2  0E40               	movlw	low _CDCBufferOut
  3503  002BE4  24F3               	addwf	prodl,w,c
  3504  002BE6  6ED9               	movwf	fsr2l,c
  3505  002BE8  0E01               	movlw	high _CDCBufferOut
  3506  002BEA  20F4               	addwfc	prodh,w,c
  3507  002BEC  6EDA               	movwf	fsr2h,c
  3508  002BEE  50DF               	movf	indf2,w,c
  3509  002BF0  0101               	movlb	1	; () banked
  3510  002BF2  1B42               	xorwf	(_CDCBufferOut+2)& (0+255),f,b
  3511  002BF4  D000               	goto	l5074
  3512  002BF6                     l5074:
  3513  002BF6  2A2F               	incf	comm_send_dat@i,f,c
  3514  002BF8  D000               	goto	l5076
  3515  002BFA                     l5076:
  3516  002BFA  5030               	movf	comm_send_dat@len,w,c
  3517  002BFC  5C2F               	subwf	comm_send_dat@i,w,c
  3518  002BFE  B0D8               	btfsc	status,0,c
  3519  002C00  D005               	goto	l5080
  3520  002C02  D7E9               	goto	l5070
  3521                           
  3522                           ;comm.c: 53: }
  3523                           ;comm.c: 54: }
  3524                           ;comm.c: 56: while (!(cdc_trf_state == 0)) CDCTxService();
  3525  002C04  D003               	goto	l5080
  3526  002C06                     l5078:
  3527  002C06  EC0A  F00C         	call	_CDCTxService	;wreg free
  3528  002C0A  D000               	goto	l5080
  3529  002C0C                     l5080:
  3530  002C0C  5052               	movf	_cdc_trf_state,w,c
  3531  002C0E  A4D8               	btfss	status,2,c
  3532  002C10  D7FA               	goto	l5078
  3533                           
  3534                           ;comm.c: 58: if((cdc_trf_state == 0)) {
  3535  002C12  5052               	movf	_cdc_trf_state,w,c
  3536  002C14  A4D8               	btfss	status,2,c
  3537  002C16  D009               	goto	l5086
  3538                           
  3539                           ;comm.c: 59: putUSBUSART(CDCBufferOut, len);
  3540  002C18  0E40               	movlw	low _CDCBufferOut
  3541  002C1A  6E23               	movwf	putUSBUSART@data,c
  3542  002C1C  0E01               	movlw	high _CDCBufferOut
  3543  002C1E  6E24               	movwf	putUSBUSART@data+1,c
  3544  002C20  C030  F025         	movff	comm_send_dat@len,putUSBUSART@length
  3545  002C24  ECC8  F019         	call	_putUSBUSART	;wreg free
  3546                           
  3547                           ;comm.c: 60: } else {
  3548  002C28  0012               	return	
  3549  002C2A                     l5086:
  3550                           
  3551                           ;comm.c: 61: txmiss_count++;
  3552  002C2A  0100               	movlb	0	; () banked
  3553  002C2C  4B90               	infsnz	_txmiss_count& (0+255),f,b
  3554  002C2E  2B91               	incf	(_txmiss_count+1)& (0+255),f,b
  3555  002C30  0012               	return	
  3556                           
  3557                           ; BSR set to: 0
  3558  002C32  0012               	return		;funcret
  3559  002C34                     __end_of_comm_send_dat:
  3560                           	opt stack 0
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           prodh	equ	0xFF4
  3566                           prodl	equ	0xFF3
  3567                           intcon	equ	0xFF2
  3568                           postinc0	equ	0xFEE
  3569                           wreg	equ	0xFE8
  3570                           indf1	equ	0xFE7
  3571                           postdec1	equ	0xFE5
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           indf2	equ	0xFDF
  3575                           postinc2	equ	0xFDE
  3576                           fsr2h	equ	0xFDA
  3577                           fsr2l	equ	0xFD9
  3578                           status	equ	0xFD8
  3579                           
  3580 ;; *************** function _putUSBUSART *****************
  3581 ;; Defined at:
  3582 ;;		line 613 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  data            2   34[COMRAM] PTR unsigned char 
  3585 ;;		 -> CDCBufferOut(64), 
  3586 ;;  length          1   36[COMRAM] unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;		None               void
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3598 ;;      Params:         3       0       0       0       0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3601 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3602 ;;Total ram usage:        3 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    4
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_comm_send_rply
  3609 ;;		_comm_send_dat
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text7
  3614  003390                     __ptext7:
  3615                           	opt stack 0
  3616  003390                     _putUSBUSART:
  3617                           	opt stack 23
  3618                           
  3619                           ;usb_device_cdc.c: 638: ;
  3620                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  3621                           
  3622                           ;incstack = 0
  3623  003390  5052               	movf	_cdc_trf_state,w,c
  3624  003392  A4D8               	btfss	status,2,c
  3625  003394  0012               	return	
  3626                           
  3627                           ;usb_device_cdc.c: 640: {
  3628                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3629  003396  C023  F085         	movff	putUSBUSART@data,_pCDCSrc
  3630  00339A  C024  F086         	movff	putUSBUSART@data+1,_pCDCSrc+1
  3631  00339E  C025  F053         	movff	putUSBUSART@length,_cdc_tx_len
  3632  0033A2  0E01               	movlw	1
  3633  0033A4  0100               	movlb	0	; () banked
  3634  0033A6  6F99               	movwf	_cdc_mem_type& (0+255),b
  3635                           
  3636                           ; BSR set to: 0
  3637  0033A8  0E01               	movlw	1
  3638  0033AA  6E52               	movwf	_cdc_trf_state,c
  3639  0033AC  0012               	return	
  3640                           
  3641                           ; BSR set to: 0
  3642  0033AE  0012               	return		;funcret
  3643  0033B0                     __end_of_putUSBUSART:
  3644                           	opt stack 0
  3645                           tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           prodh	equ	0xFF4
  3650                           prodl	equ	0xFF3
  3651                           intcon	equ	0xFF2
  3652                           postinc0	equ	0xFEE
  3653                           wreg	equ	0xFE8
  3654                           indf1	equ	0xFE7
  3655                           postdec1	equ	0xFE5
  3656                           fsr1h	equ	0xFE2
  3657                           fsr1l	equ	0xFE1
  3658                           indf2	equ	0xFDF
  3659                           postinc2	equ	0xFDE
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function _CDCTxService *****************
  3665 ;; Defined at:
  3666 ;;		line 893 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  byte_to_send    1   45[COMRAM] unsigned char 
  3671 ;;  i               1   44[COMRAM] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;		None               void
  3674 ;; Registers used:
  3675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0
  3682 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3683 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3684 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3685 ;;Total ram usage:        5 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    5
  3688 ;; This function calls:
  3689 ;;		_USBTransferOnePacket
  3690 ;; This function is called by:
  3691 ;;		_ProcessIO
  3692 ;;		_comm_send_rply
  3693 ;;		_comm_send_dat
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text8
  3698  001814                     __ptext8:
  3699                           	opt stack 0
  3700  001814                     _CDCTxService:
  3701                           	opt stack 22
  3702                           
  3703                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  3704                           ;usb_device_cdc.c: 896: uint8_t i;
  3705                           ;usb_device_cdc.c: 898: ;
  3706                           ;usb_device_cdc.c: 900: {};
  3707                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  3708                           
  3709                           ;incstack = 0
  3710  001814  0100               	movlb	0	; () banked
  3711  001816  5188               	movf	_CDCDataInHandle& (0+255),w,b
  3712  001818  0100               	movlb	0	; () banked
  3713  00181A  1189               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3714  00181C  B4D8               	btfsc	status,2,c
  3715  00181E  D00F               	goto	l4598
  3716                           
  3717                           ; BSR set to: 0
  3718  001820  C088  FFD9         	movff	_CDCDataInHandle,fsr2l
  3719  001824  C089  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3720  001828  0100               	movlb	0	; () banked
  3721  00182A  AEDF               	btfss	indf2,7,c
  3722  00182C  D003               	goto	u3440
  3723  00182E  6A2A               	clrf	??_CDCTxService& (0+255),c
  3724  001830  2A2A               	incf	??_CDCTxService& (0+255),f,c
  3725  001832  D001               	goto	u3448
  3726  001834                     u3440:
  3727  001834  6A2A               	clrf	??_CDCTxService& (0+255),c
  3728  001836                     u3448:
  3729  001836  502A               	movf	??_CDCTxService,w,c
  3730  001838  6E2B               	movwf	_CDCTxService$1695,c
  3731  00183A  6A2C               	clrf	_CDCTxService$1695+1,c
  3732  00183C  D005               	goto	l4600
  3733  00183E                     l4598:
  3734  00183E  0E00               	movlw	0
  3735  001840  6E2C               	movwf	_CDCTxService$1695+1,c
  3736  001842  0E00               	movlw	0
  3737  001844  6E2B               	movwf	_CDCTxService$1695,c
  3738  001846  D000               	goto	l4600
  3739  001848                     l4600:
  3740  001848  502B               	movf	_CDCTxService$1695,w,c
  3741  00184A  102C               	iorwf	_CDCTxService$1695+1,w,c
  3742  00184C  A4D8               	btfss	status,2,c
  3743  00184E  0012               	return	
  3744  001850  D001               	goto	l4604
  3745                           
  3746                           ;usb_device_cdc.c: 903: {
  3747                           ;usb_device_cdc.c: 904: ;
  3748                           ;usb_device_cdc.c: 905: return;
  3749  001852  0012               	return	
  3750  001854                     l4604:
  3751                           
  3752                           ;usb_device_cdc.c: 906: }
  3753                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  3754  001854  0E03               	movlw	3
  3755  001856  1852               	xorwf	_cdc_trf_state,w,c
  3756  001858  A4D8               	btfss	status,2,c
  3757  00185A  D002               	goto	l482
  3758                           
  3759                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  3760  00185C  0E00               	movlw	0
  3761  00185E  6E52               	movwf	_cdc_trf_state,c
  3762  001860                     l482:
  3763                           
  3764                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  3765  001860  5052               	movf	_cdc_trf_state,w,c
  3766  001862  B4D8               	btfsc	status,2,c
  3767  001864  0012               	return	
  3768  001866  D001               	goto	l4610
  3769                           
  3770                           ;usb_device_cdc.c: 920: {
  3771                           ;usb_device_cdc.c: 921: ;
  3772                           ;usb_device_cdc.c: 922: return;
  3773  001868  0012               	return	
  3774  00186A                     l4610:
  3775                           
  3776                           ;usb_device_cdc.c: 923: }
  3777                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  3778  00186A  0E02               	movlw	2
  3779  00186C  1852               	xorwf	_cdc_trf_state,w,c
  3780  00186E  A4D8               	btfss	status,2,c
  3781  001870  D012               	goto	l4616
  3782                           
  3783                           ;usb_device_cdc.c: 929: {
  3784                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3785  001872  0E01               	movlw	1
  3786  001874  6E23               	movwf	USBTransferOnePacket@dir,c
  3787  001876  0E00               	movlw	0
  3788  001878  6E24               	movwf	USBTransferOnePacket@data,c
  3789  00187A  0E00               	movlw	0
  3790  00187C  6E25               	movwf	USBTransferOnePacket@data+1,c
  3791  00187E  0E00               	movlw	0
  3792  001880  6E26               	movwf	USBTransferOnePacket@len,c
  3793  001882  0E02               	movlw	2
  3794  001884  ECDC  F012         	call	_USBTransferOnePacket
  3795  001888  C023  F088         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3796  00188C  C024  F089         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3797                           
  3798                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  3799  001890  0E03               	movlw	3
  3800  001892  6E52               	movwf	_cdc_trf_state,c
  3801                           
  3802                           ;usb_device_cdc.c: 933: }
  3803  001894  0012               	return	
  3804  001896                     l4616:
  3805                           
  3806                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  3807  001896  0452               	decf	_cdc_trf_state,w,c
  3808  001898  A4D8               	btfss	status,2,c
  3809  00189A  0012               	return	
  3810                           
  3811                           ;usb_device_cdc.c: 935: {
  3812                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  3813  00189C  0E40               	movlw	64
  3814  00189E  6453               	cpfsgt	_cdc_tx_len,c
  3815  0018A0  D003               	goto	l487
  3816                           
  3817                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  3818  0018A2  0E40               	movlw	64
  3819  0018A4  6E2E               	movwf	CDCTxService@byte_to_send,c
  3820  0018A6  D003               	goto	l4622
  3821  0018A8                     l487:
  3822                           
  3823                           ;usb_device_cdc.c: 941: else
  3824                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  3825  0018A8  C053  F02E         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3826  0018AC  D000               	goto	l4622
  3827  0018AE                     l4622:
  3828                           
  3829                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  3830  0018AE  502E               	movf	CDCTxService@byte_to_send,w,c
  3831  0018B0  0800               	sublw	0
  3832  0018B2  2453               	addwf	_cdc_tx_len,w,c
  3833  0018B4  6E53               	movwf	_cdc_tx_len,c
  3834                           
  3835                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3836  0018B6  0E00               	movlw	0
  3837  0018B8  0100               	movlb	0	; () banked
  3838  0018BA  6F82               	movwf	_pCDCDst& (0+255),b
  3839  0018BC  0E05               	movlw	5
  3840  0018BE  0100               	movlb	0	; () banked
  3841  0018C0  6F83               	movwf	(_pCDCDst+1)& (0+255),b
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;usb_device_cdc.c: 951: i = byte_to_send;
  3845  0018C2  C02E  F02D         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  3849  0018C6  0100               	movlb	0	; () banked
  3850  0018C8  5199               	movf	_cdc_mem_type& (0+255),w,b
  3851  0018CA  B4D8               	btfsc	status,2,c
  3852  0018CC  D014               	goto	l4638
  3853  0018CE  D02B               	goto	l4648
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;usb_device_cdc.c: 953: {
  3857                           ;usb_device_cdc.c: 954: while(i)
  3858  0018D0  D012               	goto	l4638
  3859  0018D2                     l4630:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;usb_device_cdc.c: 955: {
  3863                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  3864  0018D2  C085  FFD9         	movff	_pCDCSrc,fsr2l
  3865  0018D6  C086  FFDA         	movff	_pCDCSrc+1,fsr2h
  3866  0018DA  C082  FFE1         	movff	_pCDCDst,fsr1l
  3867  0018DE  C083  FFE2         	movff	_pCDCDst+1,fsr1h
  3868  0018E2  CFDF FFE7          	movff	indf2,indf1
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  3872  0018E6  0100               	movlb	0	; () banked
  3873  0018E8  4B82               	infsnz	_pCDCDst& (0+255),f,b
  3874  0018EA  2B83               	incf	(_pCDCDst+1)& (0+255),f,b
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  3878  0018EC  0100               	movlb	0	; () banked
  3879  0018EE  4B85               	infsnz	_pCDCSrc& (0+255),f,b
  3880  0018F0  2B86               	incf	(_pCDCSrc+1)& (0+255),f,b
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;usb_device_cdc.c: 959: i--;
  3884  0018F2  062D               	decf	CDCTxService@i,f,c
  3885  0018F4  D000               	goto	l4638
  3886  0018F6                     l4638:
  3887                           
  3888                           ; BSR set to: 0
  3889  0018F6  502D               	movf	CDCTxService@i,w,c
  3890  0018F8  B4D8               	btfsc	status,2,c
  3891  0018FA  D01A               	goto	l4650
  3892  0018FC  D7EA               	goto	l4630
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;usb_device_cdc.c: 960: }
  3896                           ;usb_device_cdc.c: 961: }
  3897  0018FE  D018               	goto	l4650
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;usb_device_cdc.c: 962: else
  3901                           ;usb_device_cdc.c: 963: {
  3902                           ;usb_device_cdc.c: 964: while(i)
  3903  001900  D012               	goto	l4648
  3904  001902                     l4640:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;usb_device_cdc.c: 965: {
  3908                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  3909  001902  C085  FFD9         	movff	_pCDCSrc,fsr2l
  3910  001906  C086  FFDA         	movff	_pCDCSrc+1,fsr2h
  3911  00190A  C082  FFE1         	movff	_pCDCDst,fsr1l
  3912  00190E  C083  FFE2         	movff	_pCDCDst+1,fsr1h
  3913  001912  CFDF FFE7          	movff	indf2,indf1
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  3917  001916  0100               	movlb	0	; () banked
  3918  001918  4B82               	infsnz	_pCDCDst& (0+255),f,b
  3919  00191A  2B83               	incf	(_pCDCDst+1)& (0+255),f,b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  3923  00191C  0100               	movlb	0	; () banked
  3924  00191E  4B85               	infsnz	_pCDCSrc& (0+255),f,b
  3925  001920  2B86               	incf	(_pCDCSrc+1)& (0+255),f,b
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;usb_device_cdc.c: 969: i--;
  3929  001922  062D               	decf	CDCTxService@i,f,c
  3930  001924  D000               	goto	l4648
  3931  001926                     l4648:
  3932                           
  3933                           ; BSR set to: 0
  3934  001926  502D               	movf	CDCTxService@i,w,c
  3935  001928  B4D8               	btfsc	status,2,c
  3936  00192A  D002               	goto	l4650
  3937  00192C  D7EA               	goto	l4640
  3938                           
  3939                           ; BSR set to: 0
  3940  00192E  D000               	goto	l4650
  3941  001930                     l4650:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;usb_device_cdc.c: 970: }
  3945                           ;usb_device_cdc.c: 971: }
  3946                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  3947  001930  5053               	movf	_cdc_tx_len,w,c
  3948  001932  A4D8               	btfss	status,2,c
  3949  001934  D009               	goto	l4658
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;usb_device_cdc.c: 978: {
  3953                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  3954  001936  0E40               	movlw	64
  3955  001938  182E               	xorwf	CDCTxService@byte_to_send,w,c
  3956  00193A  A4D8               	btfss	status,2,c
  3957  00193C  D002               	goto	l4656
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  3961  00193E  0E02               	movlw	2
  3962  001940  D001               	goto	L1
  3963  001942                     l4656:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;usb_device_cdc.c: 981: else
  3967                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  3968  001942  0E03               	movlw	3
  3969  001944                     L1:
  3970  001944  6E52               	movwf	_cdc_trf_state,c
  3971                           
  3972                           ; BSR set to: 0
  3973  001946  D000               	goto	l4658
  3974  001948                     l4658:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;usb_device_cdc.c: 983: }
  3978                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3979  001948  0E01               	movlw	1
  3980  00194A  6E23               	movwf	USBTransferOnePacket@dir,c
  3981  00194C  0E00               	movlw	0
  3982  00194E  6E24               	movwf	USBTransferOnePacket@data,c
  3983  001950  0E05               	movlw	5
  3984  001952  6E25               	movwf	USBTransferOnePacket@data+1,c
  3985  001954  C02E  F026         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3986  001958  0E02               	movlw	2
  3987  00195A  ECDC  F012         	call	_USBTransferOnePacket
  3988  00195E  C023  F088         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3989  001962  C024  F089         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3990  001966  0012               	return	
  3991  001968  0012               	return		;funcret
  3992  00196A                     __end_of_CDCTxService:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           prodh	equ	0xFF4
  3999                           prodl	equ	0xFF3
  4000                           intcon	equ	0xFF2
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           indf1	equ	0xFE7
  4004                           postdec1	equ	0xFE5
  4005                           fsr1h	equ	0xFE2
  4006                           fsr1l	equ	0xFE1
  4007                           indf2	equ	0xFDF
  4008                           postinc2	equ	0xFDE
  4009                           fsr2h	equ	0xFDA
  4010                           fsr2l	equ	0xFD9
  4011                           status	equ	0xFD8
  4012                           
  4013 ;; *************** function _Write_b_eep *****************
  4014 ;; Defined at:
  4015 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\write_B.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  badd            2   34[COMRAM] unsigned int 
  4018 ;;  bdat            1   36[COMRAM] unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  GIE_BIT_VAL     1   37[COMRAM] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;		None               void
  4023 ;; Registers used:
  4024 ;;		wreg, status,2
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4030 ;;      Params:         3       0       0       0       0       0       0       0       0
  4031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4033 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4034 ;;Total ram usage:        4 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    4
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_ProcessCDC
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text9
  4045  003146                     __ptext9:
  4046                           	opt stack 0
  4047  003146                     _Write_b_eep:
  4048                           	opt stack 24
  4049                           
  4050                           ;incstack = 0
  4051  003146  0E00               	movlw	0
  4052  003148  6E26               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4053  00314A  C023  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  4054  00314E  C025  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  4055  003152  9EA6               	bcf	4006,7,c	;volatile
  4056  003154  9CA6               	bcf	4006,6,c	;volatile
  4057  003156  84A6               	bsf	4006,2,c	;volatile
  4058  003158  0E00               	movlw	0
  4059  00315A  BEF2               	btfsc	intcon,7,c	;volatile
  4060  00315C  0E01               	movlw	1
  4061  00315E  6E26               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4062  003160  9EF2               	bcf	intcon,7,c	;volatile
  4063  003162  0E55               	movlw	85
  4064  003164  6EA7               	movwf	4007,c	;volatile
  4065  003166  0EAA               	movlw	170
  4066  003168  6EA7               	movwf	4007,c	;volatile
  4067  00316A  82A6               	bsf	4006,1,c	;volatile
  4068  00316C  D000               	goto	l1109
  4069  00316E                     l1109:
  4070  00316E  B2A6               	btfsc	4006,1,c	;volatile
  4071  003170  D7FE               	goto	l1109
  4072  003172  B026               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  4073  003174  D002               	bra	u4255
  4074  003176  9EF2               	bcf	intcon,7,c	;volatile
  4075  003178  D001               	bra	u4256
  4076  00317A                     u4255:
  4077  00317A  8EF2               	bsf	intcon,7,c	;volatile
  4078  00317C                     u4256:
  4079  00317C  94A6               	bcf	4006,2,c	;volatile
  4080  00317E  0012               	return		;funcret
  4081  003180                     __end_of_Write_b_eep:
  4082                           	opt stack 0
  4083                           tblptru	equ	0xFF8
  4084                           tblptrh	equ	0xFF7
  4085                           tblptrl	equ	0xFF6
  4086                           tablat	equ	0xFF5
  4087                           prodh	equ	0xFF4
  4088                           prodl	equ	0xFF3
  4089                           intcon	equ	0xFF2
  4090                           postinc0	equ	0xFEE
  4091                           wreg	equ	0xFE8
  4092                           indf1	equ	0xFE7
  4093                           postdec1	equ	0xFE5
  4094                           fsr1h	equ	0xFE2
  4095                           fsr1l	equ	0xFE1
  4096                           indf2	equ	0xFDF
  4097                           postinc2	equ	0xFDE
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function _USBDeviceTasks *****************
  4103 ;; Defined at:
  4104 ;;		line 489 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  i               1    2[BANK0 ] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;		None               void
  4111 ;; Registers used:
  4112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0
  4119 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4121 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4122 ;;Total ram usage:        1 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:   12
  4125 ;; This function calls:
  4126 ;;		_USBClearUSBInterrupt
  4127 ;;		_USBCtrlEPAllowStatusStage
  4128 ;;		_USBCtrlEPService
  4129 ;;		_USBDeviceInit
  4130 ;;		_USBStallHandler
  4131 ;;		_USBSuspend
  4132 ;;		_USBWakeFromSuspend
  4133 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4134 ;; This function is called by:
  4135 ;;		_ProcessIO
  4136 ;;		_ProcessCDC
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text10
  4141  0010EC                     __ptext10:
  4142                           	opt stack 0
  4143  0010EC                     _USBDeviceTasks:
  4144                           	opt stack 17
  4145                           
  4146                           ;usb_device.c: 491: uint8_t i;
  4147                           ;usb_device.c: 517: if (PORTCbits.RC6 != 1)
  4148                           
  4149                           ;incstack = 0
  4150  0010EC  BC82               	btfsc	3970,6,c	;volatile
  4151  0010EE  D012               	goto	l4820
  4152                           
  4153                           ;usb_device.c: 518: {
  4154                           ;usb_device.c: 520: *U1CON_R = 0;
  4155  0010F0  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4156  0010F4  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4157  0010F8  0E00               	movlw	0
  4158  0010FA  6EDF               	movwf	indf2,c
  4159                           
  4160                           ;usb_device.c: 523: *U1IE_R = 0;
  4161  0010FC  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4162  001100  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4163  001104  0E00               	movlw	0
  4164  001106  6EDF               	movwf	indf2,c
  4165                           
  4166                           ;usb_device.c: 526: USBDeviceState = DETACHED_STATE;
  4167  001108  0E00               	movlw	0
  4168  00110A  0100               	movlb	0	; () banked
  4169  00110C  6F97               	movwf	_USBDeviceState& (0+255),b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;usb_device.c: 554: USBClearUSBInterrupt();
  4173  00110E  ECDA  F018         	call	_USBClearUSBInterrupt	;wreg free
  4174                           
  4175                           ;usb_device.c: 555: return;
  4176  001112  0012               	return	
  4177  001114                     l4820:
  4178                           
  4179                           ;usb_device.c: 556: }
  4180                           ;usb_device.c: 578: if(USBDeviceState == DETACHED_STATE)
  4181  001114  0100               	movlb	0	; () banked
  4182  001116  5197               	movf	_USBDeviceState& (0+255),w,b
  4183  001118  A4D8               	btfss	status,2,c
  4184  00111A  D02E               	goto	l4834
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;usb_device.c: 579: {
  4188                           ;usb_device.c: 581: *U1CON_R = 0;
  4189  00111C  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4190  001120  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4191  001124  0E00               	movlw	0
  4192  001126  6EDF               	movwf	indf2,c
  4193                           
  4194                           ;usb_device.c: 584: *U1IE_R = 0;
  4195  001128  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4196  00112C  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4197  001130  0E00               	movlw	0
  4198  001132  6EDF               	movwf	indf2,c
  4199                           
  4200                           ;usb_device.c: 588: { *U1CNFG1_R = 0x10 | 0x00 | 0x04 | 0x02; *U1EIE_R = 0x9F; UIE = 0x3
      +                          9 | 0x40 | 0x02; };
  4201  001134  C0CB  FFD9         	movff	_U1CNFG1_R,fsr2l
  4202  001138  C0CC  FFDA         	movff	_U1CNFG1_R+1,fsr2h
  4203  00113C  0E16               	movlw	22
  4204  00113E  6EDF               	movwf	indf2,c
  4205  001140  C0CF  FFD9         	movff	_U1EIE_R,fsr2l
  4206  001144  C0D0  FFDA         	movff	_U1EIE_R+1,fsr2h
  4207  001148  0E9F               	movlw	159
  4208  00114A  6EDF               	movwf	indf2,c
  4209                           
  4210                           ; BSR set to: 0
  4211  00114C  0E7B               	movlw	123
  4212  00114E  6E64               	movwf	3940,c	;volatile
  4213                           
  4214                           ;usb_device.c: 591: while(!(*U1CON_R & 0x08)){
  4215  001150  D008               	goto	l4830
  4216  001152                     l4826:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;usb_device.c: 592: *U1CON_R |= 0x08;
  4220  001152  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4221  001156  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4222  00115A  0E00               	movlw	0
  4223  00115C  86DB               	bsf	plusw2,3,c
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;usb_device.c: 593: LATCbits.LATC2 = !LATCbits.LATC2;;
  4227  00115E  748B               	btg	3979,2,c	;volatile
  4228  001160  D000               	goto	l4830
  4229  001162                     l4830:
  4230                           
  4231                           ; BSR set to: 0
  4232  001162  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4233  001166  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4234  00116A  0100               	movlb	0	; () banked
  4235  00116C  A6DF               	btfss	indf2,3,c
  4236  00116E  D7F1               	goto	l4826
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;usb_device.c: 594: }
  4240                           ;usb_device.c: 597: USBDeviceState = ATTACHED_STATE;
  4241                           
  4242                           ; BSR set to: 0
  4243  001170  0E01               	movlw	1
  4244  001172  0100               	movlb	0	; () banked
  4245  001174  6F97               	movwf	_USBDeviceState& (0+255),b
  4246  001176  D000               	goto	l4834
  4247  001178                     l4834:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;usb_device.c: 602: }
  4251                           ;usb_device.c: 605: if(USBDeviceState == ATTACHED_STATE)
  4252  001178  0100               	movlb	0	; () banked
  4253  00117A  0597               	decf	_USBDeviceState& (0+255),w,b
  4254  00117C  B4D8               	btfsc	status,2,c
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;usb_device.c: 606: {
  4258                           ;usb_device.c: 616: if(!UCONbits.SE0)
  4259  00117E  BA60               	btfsc	3936,5,c	;volatile
  4260  001180  D012               	goto	l4846
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;usb_device.c: 617: {
  4264                           ;usb_device.c: 618: {*U1IR_R = 0;};
  4265  001182  C0D7  FFD9         	movff	_U1IR_R,fsr2l
  4266  001186  C0D8  FFDA         	movff	_U1IR_R+1,fsr2h
  4267  00118A  0E00               	movlw	0
  4268  00118C  6EDF               	movwf	indf2,c
  4269                           
  4270                           ;usb_device.c: 620: *U1IE_R=0;
  4271  00118E  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4272  001192  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4273  001196  0E00               	movlw	0
  4274  001198  6EDF               	movwf	indf2,c
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;usb_device.c: 622: UIEbits.URSTIE = 1;
  4278  00119A  8064               	bsf	3940,0,c	;volatile
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;usb_device.c: 623: UIEbits.IDLEIE = 1;
  4282  00119C  8864               	bsf	3940,4,c	;volatile
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;usb_device.c: 624: USBDeviceState = POWERED_STATE;
  4286  00119E  0E02               	movlw	2
  4287  0011A0  0100               	movlb	0	; () banked
  4288  0011A2  6F97               	movwf	_USBDeviceState& (0+255),b
  4289                           
  4290                           ; BSR set to: 0
  4291  0011A4  D000               	goto	l4846
  4292  0011A6                     l4846:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;usb_device.c: 625: }
  4296                           ;usb_device.c: 626: }
  4297                           ;usb_device.c: 642: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4298  0011A6  B465               	btfsc	3941,2,c	;volatile
  4299                           
  4300                           ; BSR set to: 0
  4301  0011A8  A464               	btfss	3940,2,c	;volatile
  4302  0011AA  D004               	goto	l4854
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;usb_device.c: 643: {
  4306                           ;usb_device.c: 644: (UIR &= 0xFB);
  4307  0011AC  9465               	bcf	3941,2,c	;volatile
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;usb_device.c: 648: USBWakeFromSuspend();
  4311  0011AE  EC85  F018         	call	_USBWakeFromSuspend	;wreg free
  4312  0011B2  D000               	goto	l4854
  4313  0011B4                     l4854:
  4314                           
  4315                           ;usb_device.c: 650: }
  4316                           ;usb_device.c: 655: if(UCONbits.SUSPND==1)
  4317  0011B4  A260               	btfss	3936,1,c	;volatile
  4318  0011B6  D003               	goto	l150
  4319                           
  4320                           ;usb_device.c: 656: {
  4321                           ;usb_device.c: 657: USBClearUSBInterrupt();
  4322  0011B8  ECDA  F018         	call	_USBClearUSBInterrupt	;wreg free
  4323                           
  4324                           ;usb_device.c: 658: return;
  4325  0011BC  0012               	return	
  4326  0011BE                     l150:
  4327                           
  4328                           ;usb_device.c: 659: }
  4329                           ;usb_device.c: 671: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4330  0011BE  B065               	btfsc	3941,0,c	;volatile
  4331  0011C0  A064               	btfss	3940,0,c	;volatile
  4332  0011C2  D007               	goto	l4868
  4333                           
  4334                           ;usb_device.c: 672: {
  4335                           ;usb_device.c: 673: USBDeviceInit();
  4336  0011C4  EC52  F00B         	call	_USBDeviceInit	;wreg free
  4337                           
  4338                           ;usb_device.c: 677: ;
  4339                           ;usb_device.c: 679: USBDeviceState = DEFAULT_STATE;
  4340  0011C8  0E04               	movlw	4
  4341  0011CA  0100               	movlb	0	; () banked
  4342  0011CC  6F97               	movwf	_USBDeviceState& (0+255),b
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;usb_device.c: 689: (UIR &= 0xFE);
  4346  0011CE  9065               	bcf	3941,0,c	;volatile
  4347  0011D0  D000               	goto	l4868
  4348  0011D2                     l4868:
  4349                           
  4350                           ;usb_device.c: 690: }
  4351                           ;usb_device.c: 695: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4352  0011D2  B865               	btfsc	3941,4,c	;volatile
  4353  0011D4  A864               	btfss	3940,4,c	;volatile
  4354  0011D6  D004               	goto	l4876
  4355                           
  4356                           ;usb_device.c: 696: {
  4357                           ;usb_device.c: 701: USBSuspend();
  4358  0011D8  ECC0  F018         	call	_USBSuspend	;wreg free
  4359                           
  4360                           ;usb_device.c: 704: (UIR &= 0xEF);
  4361  0011DC  9865               	bcf	3941,4,c	;volatile
  4362  0011DE  D000               	goto	l4876
  4363  0011E0                     l4876:
  4364                           
  4365                           ;usb_device.c: 705: }
  4366                           ;usb_device.c: 707: if(UIRbits.SOFIF)
  4367  0011E0  AC65               	btfss	3941,6,c	;volatile
  4368  0011E2  D020               	goto	l4892
  4369                           
  4370                           ;usb_device.c: 708: {
  4371                           ;usb_device.c: 709: if(UIEbits.SOFIE)
  4372  0011E4  AC64               	btfss	3940,6,c	;volatile
  4373  0011E6  D00F               	goto	l4882
  4374                           
  4375                           ;usb_device.c: 710: {
  4376                           ;usb_device.c: 711: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4377  0011E8  0E00               	movlw	0
  4378  0011EA  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4379  0011EC  0E73               	movlw	115
  4380  0011EE  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4381  0011F0  0E00               	movlw	0
  4382  0011F2  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4383  0011F4  0E00               	movlw	0
  4384  0011F6  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4385  0011F8  0E00               	movlw	0
  4386  0011FA  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4387  0011FC  0E01               	movlw	1
  4388  0011FE  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4389  001200  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4390  001204  D000               	goto	l4882
  4391  001206                     l4882:
  4392                           
  4393                           ;usb_device.c: 712: }
  4394                           ;usb_device.c: 713: (UIR &= 0xBF);
  4395  001206  9C65               	bcf	3941,6,c	;volatile
  4396                           
  4397                           ;usb_device.c: 738: if(USBStatusStageTimeoutCounter != 0u)
  4398  001208  0100               	movlb	0	; () banked
  4399  00120A  5198               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  4400  00120C  B4D8               	btfsc	status,2,c
  4401  00120E  D003               	goto	l4888
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;usb_device.c: 739: {
  4405                           ;usb_device.c: 740: USBStatusStageTimeoutCounter--;
  4406  001210  0100               	movlb	0	; () banked
  4407  001212  0798               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  4408  001214  D000               	goto	l4888
  4409  001216                     l4888:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;usb_device.c: 741: }
  4413                           ;usb_device.c: 747: if(USBStatusStageTimeoutCounter == 0)
  4414  001216  0100               	movlb	0	; () banked
  4415  001218  5198               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  4416  00121A  A4D8               	btfss	status,2,c
  4417  00121C  D003               	goto	l4892
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;usb_device.c: 748: {
  4421                           ;usb_device.c: 749: USBCtrlEPAllowStatusStage();
  4422  00121E  EC16  F012         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4423  001222  D000               	goto	l4892
  4424  001224                     l4892:
  4425                           
  4426                           ;usb_device.c: 750: }
  4427                           ;usb_device.c: 752: }
  4428                           ;usb_device.c: 754: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4429  001224  BA65               	btfsc	3941,5,c	;volatile
  4430  001226  AA64               	btfss	3940,5,c	;volatile
  4431  001228  D003               	goto	l4898
  4432                           
  4433                           ;usb_device.c: 755: {
  4434                           ;usb_device.c: 756: USBStallHandler();
  4435  00122A  ECBF  F017         	call	_USBStallHandler	;wreg free
  4436  00122E  D000               	goto	l4898
  4437  001230                     l4898:
  4438                           
  4439                           ;usb_device.c: 757: }
  4440                           ;usb_device.c: 759: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4441  001230  B265               	btfsc	3941,1,c	;volatile
  4442  001232  A264               	btfss	3940,1,c	;volatile
  4443  001234  D014               	goto	l4906
  4444                           
  4445                           ;usb_device.c: 760: {
  4446                           ;usb_device.c: 761: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4447  001236  0E7F               	movlw	127
  4448  001238  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4449  00123A  682F               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4450  00123C  0E00               	movlw	0
  4451  00123E  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4452  001240  0E00               	movlw	0
  4453  001242  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4454  001244  0E00               	movlw	0
  4455  001246  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4456  001248  0E01               	movlw	1
  4457  00124A  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4458  00124C  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4459                           
  4460                           ;usb_device.c: 762: {*U1EIR_R = 0;};
  4461  001250  C0D1  FFD9         	movff	_U1EIR_R,fsr2l
  4462  001254  C0D2  FFDA         	movff	_U1EIR_R+1,fsr2h
  4463  001258  0E00               	movlw	0
  4464  00125A  6EDF               	movwf	indf2,c
  4465  00125C  D000               	goto	l4906
  4466  00125E                     l4906:
  4467                           
  4468                           ;usb_device.c: 770: }
  4469                           ;usb_device.c: 777: if(USBDeviceState < DEFAULT_STATE)
  4470  00125E  0E04               	movlw	4
  4471  001260  0100               	movlb	0	; () banked
  4472  001262  6197               	cpfslt	_USBDeviceState& (0+255),b
  4473  001264  D003               	goto	l159
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;usb_device.c: 778: {
  4477                           ;usb_device.c: 779: USBClearUSBInterrupt();
  4478  001266  ECDA  F018         	call	_USBClearUSBInterrupt	;wreg free
  4479                           
  4480                           ;usb_device.c: 780: return;
  4481  00126A  0012               	return	
  4482  00126C                     l159:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;usb_device.c: 781: }
  4486                           ;usb_device.c: 786: if(UIEbits.TRNIE)
  4487  00126C  A664               	btfss	3940,3,c	;volatile
  4488  00126E  D04C               	goto	l4940
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;usb_device.c: 787: {
  4492                           ;usb_device.c: 788: for(i = 0; i < 4u; i++)
  4493  001270  0E00               	movlw	0
  4494  001272  0100               	movlb	0	; () banked
  4495  001274  6FE0               	movwf	USBDeviceTasks@i& (0+255),b
  4496  001276                     l4914:
  4497                           
  4498                           ; BSR set to: 0
  4499  001276  0E03               	movlw	3
  4500  001278  0100               	movlb	0	; () banked
  4501  00127A  65E0               	cpfsgt	USBDeviceTasks@i& (0+255),b
  4502  00127C  D001               	goto	l161
  4503                           
  4504                           ; BSR set to: 0
  4505  00127E  D044               	goto	l4940
  4506  001280                     l161:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;usb_device.c: 789: {
  4510                           ;usb_device.c: 790: if(UIRbits.TRNIF)
  4511  001280  A665               	btfss	3941,3,c	;volatile
  4512  001282  D042               	goto	l4940
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;usb_device.c: 791: {
  4516                           ;usb_device.c: 793: USTATcopy.Val = *U1STAT_R;
  4517  001284  C0D9  FFD9         	movff	_U1STAT_R,fsr2l
  4518  001288  C0DA  FFDA         	movff	_U1STAT_R+1,fsr2h
  4519  00128C  50DF               	movf	indf2,w,c
  4520  00128E  0100               	movlb	0	; () banked
  4521  001290  6FB4               	movwf	_USTATcopy& (0+255),b
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;usb_device.c: 794: endpoint_number = USTATcopy.endpoint_number;
  4525  001292  0100               	movlb	0	; () banked
  4526  001294  31B4               	rrcf	_USTATcopy& (0+255),w,b
  4527  001296  32E8               	rrcf	wreg,f,c
  4528  001298  32E8               	rrcf	wreg,f,c
  4529  00129A  0B0F               	andlw	15
  4530  00129C  0100               	movlb	0	; () banked
  4531  00129E  6F9B               	movwf	_endpoint_number& (0+255),b
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;usb_device.c: 796: (UIR &= 0xF7);
  4535  0012A0  9665               	bcf	3941,3,c	;volatile
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;usb_device.c: 801: if(USTATcopy.direction == 0)
  4539  0012A2  0100               	movlb	0	; () banked
  4540  0012A4  B5B4               	btfsc	_USTATcopy& (0+255),2,b
  4541  0012A6  D008               	goto	l4928
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;usb_device.c: 802: {
  4545                           ;usb_device.c: 803: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4546  0012A8  0100               	movlb	0	; () banked
  4547  0012AA  519B               	movf	_endpoint_number& (0+255),w,b
  4548  0012AC  0D01               	mullw	1
  4549  0012AE  0E7F               	movlw	low _ep_data_out
  4550  0012B0  24F3               	addwf	prodl,w,c
  4551  0012B2  6ED9               	movwf	fsr2l,c
  4552  0012B4  0E00               	movlw	high _ep_data_out
  4553  0012B6  D007               	goto	L2
  4554  0012B8                     l4928:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;usb_device.c: 805: else
  4558                           ;usb_device.c: 806: {
  4559                           ;usb_device.c: 807: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4560  0012B8  0100               	movlb	0	; () banked
  4561  0012BA  519B               	movf	_endpoint_number& (0+255),w,b
  4562  0012BC  0D01               	mullw	1
  4563  0012BE  0E7C               	movlw	low _ep_data_in
  4564  0012C0  24F3               	addwf	prodl,w,c
  4565  0012C2  6ED9               	movwf	fsr2l,c
  4566  0012C4  0E00               	movlw	high _ep_data_in
  4567  0012C6                     L2:
  4568  0012C6  20F4               	addwfc	prodh,w,c
  4569  0012C8  6EDA               	movwf	fsr2h,c
  4570  0012CA  0100               	movlb	0	; () banked
  4571  0012CC  70DF               	btg	indf2,0,c
  4572  0012CE  D000               	goto	l4930
  4573  0012D0                     l4930:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;usb_device.c: 808: }
  4577                           ;usb_device.c: 813: if(endpoint_number == 0)
  4578  0012D0  0100               	movlb	0	; () banked
  4579  0012D2  519B               	movf	_endpoint_number& (0+255),w,b
  4580  0012D4  0100               	movlb	0	; () banked
  4581  0012D6  A4D8               	btfss	status,2,c
  4582  0012D8  D003               	goto	l4934
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;usb_device.c: 814: {
  4586                           ;usb_device.c: 815: USBCtrlEPService();
  4587  0012DA  EC3D  F011         	call	_USBCtrlEPService	;wreg free
  4588                           
  4589                           ;usb_device.c: 816: }
  4590  0012DE  D010               	goto	l4936
  4591  0012E0                     l4934:
  4592                           
  4593                           ;usb_device.c: 817: else
  4594                           ;usb_device.c: 818: {
  4595                           ;usb_device.c: 819: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4596  0012E0  0E00               	movlw	0
  4597  0012E2  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4598  0012E4  0E72               	movlw	114
  4599  0012E6  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4600  0012E8  0EB4               	movlw	low _USTATcopy
  4601  0012EA  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4602  0012EC  0E00               	movlw	high _USTATcopy
  4603  0012EE  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4604  0012F0  0E00               	movlw	0
  4605  0012F2  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4606  0012F4  0E00               	movlw	0
  4607  0012F6  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4608  0012F8  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4609                           
  4610                           ;usb_device.c: 820: }
  4611                           ;usb_device.c: 821: }
  4612  0012FC  D001               	goto	l4936
  4613                           
  4614                           ;usb_device.c: 822: else
  4615                           ;usb_device.c: 823: {
  4616                           ;usb_device.c: 824: break;
  4617  0012FE  D004               	goto	l4940
  4618  001300                     l4936:
  4619  001300  0100               	movlb	0	; () banked
  4620  001302  2BE0               	incf	USBDeviceTasks@i& (0+255),f,b
  4621  001304  D7B8               	goto	l4914
  4622                           
  4623                           ; BSR set to: 0
  4624                           
  4625                           ; BSR set to: 0
  4626  001306  D000               	goto	l4940
  4627  001308                     l4940:
  4628                           
  4629                           ;usb_device.c: 825: }
  4630                           ;usb_device.c: 826: }
  4631                           ;usb_device.c: 827: }
  4632                           ;usb_device.c: 829: USBClearUSBInterrupt();
  4633  001308  ECDA  F018         	call	_USBClearUSBInterrupt	;wreg free
  4634  00130C  0012               	return		;funcret
  4635  00130E                     __end_of_USBDeviceTasks:
  4636                           	opt stack 0
  4637                           tblptru	equ	0xFF8
  4638                           tblptrh	equ	0xFF7
  4639                           tblptrl	equ	0xFF6
  4640                           tablat	equ	0xFF5
  4641                           prodh	equ	0xFF4
  4642                           prodl	equ	0xFF3
  4643                           intcon	equ	0xFF2
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           indf1	equ	0xFE7
  4647                           postdec1	equ	0xFE5
  4648                           fsr1h	equ	0xFE2
  4649                           fsr1l	equ	0xFE1
  4650                           indf2	equ	0xFDF
  4651                           postinc2	equ	0xFDE
  4652                           plusw2	equ	0xFDB
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _USBWakeFromSuspend *****************
  4658 ;; Defined at:
  4659 ;;		line 2305 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;		None               void
  4666 ;; Registers used:
  4667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    8
  4680 ;; This function calls:
  4681 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4682 ;; This function is called by:
  4683 ;;		_USBDeviceTasks
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text11
  4688  00310A                     __ptext11:
  4689                           	opt stack 0
  4690  00310A                     _USBWakeFromSuspend:
  4691                           	opt stack 20
  4692                           
  4693                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
  4694                           
  4695                           ;incstack = 0
  4696  00310A  0E00               	movlw	0
  4697  00310C  0100               	movlb	0	; () banked
  4698  00310E  6F96               	movwf	_USBBusIsSuspended& (0+255),b
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4702  003110  0E00               	movlw	0
  4703  003112  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4704  003114  0E74               	movlw	116
  4705  003116  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4706  003118  0E00               	movlw	0
  4707  00311A  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4708  00311C  0E00               	movlw	0
  4709  00311E  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4710  003120  0E00               	movlw	0
  4711  003122  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4712  003124  0E00               	movlw	0
  4713  003126  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4714  003128  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4715                           
  4716                           ;usb_device.c: 2320: *U1CON_R &= 0xFD;
  4717  00312C  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4718  003130  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4719  003134  0EFD               	movlw	253
  4720  003136  16DF               	andwf	indf2,f,c
  4721                           
  4722                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
  4723  003138  9464               	bcf	3940,2,c	;volatile
  4724                           
  4725                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
  4726  00313A  D002               	goto	l4522
  4727  00313C                     l4520:
  4728                           
  4729                           ;usb_device.c: 2345: {
  4730                           ;usb_device.c: 2346: (UIR &= 0xFB);
  4731  00313C  9465               	bcf	3941,2,c	;volatile
  4732  00313E  D000               	goto	l4522
  4733  003140                     l4522:
  4734  003140  B465               	btfsc	3941,2,c	;volatile
  4735  003142  D7FC               	goto	l4520
  4736  003144  0012               	return		;funcret
  4737  003146                     __end_of_USBWakeFromSuspend:
  4738                           	opt stack 0
  4739                           tblptru	equ	0xFF8
  4740                           tblptrh	equ	0xFF7
  4741                           tblptrl	equ	0xFF6
  4742                           tablat	equ	0xFF5
  4743                           prodh	equ	0xFF4
  4744                           prodl	equ	0xFF3
  4745                           intcon	equ	0xFF2
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           indf1	equ	0xFE7
  4749                           postdec1	equ	0xFE5
  4750                           fsr1h	equ	0xFE2
  4751                           fsr1l	equ	0xFE1
  4752                           indf2	equ	0xFDF
  4753                           postinc2	equ	0xFDE
  4754                           plusw2	equ	0xFDB
  4755                           fsr2h	equ	0xFDA
  4756                           fsr2l	equ	0xFD9
  4757                           status	equ	0xFD8
  4758                           
  4759 ;; *************** function _USBSuspend *****************
  4760 ;; Defined at:
  4761 ;;		line 2248 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4778 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    8
  4782 ;; This function calls:
  4783 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4784 ;; This function is called by:
  4785 ;;		_USBDeviceTasks
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text12
  4790  003180                     __ptext12:
  4791                           	opt stack 0
  4792  003180                     _USBSuspend:
  4793                           	opt stack 20
  4794                           
  4795                           ;usb_device.c: 2273: UIEbits.ACTVIE = 1;
  4796                           
  4797                           ;incstack = 0
  4798  003180  8464               	bsf	3940,2,c	;volatile
  4799                           
  4800                           ;usb_device.c: 2274: (UIR &= 0xEF);
  4801  003182  9865               	bcf	3941,4,c	;volatile
  4802                           
  4803                           ;usb_device.c: 2277: *U1CON_R |= 0x02;
  4804  003184  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4805  003188  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4806  00318C  0E00               	movlw	0
  4807  00318E  82DB               	bsf	plusw2,1,c
  4808                           
  4809                           ;usb_device.c: 2280: USBBusIsSuspended = 1;
  4810  003190  0E01               	movlw	1
  4811  003192  0100               	movlb	0	; () banked
  4812  003194  6F96               	movwf	_USBBusIsSuspended& (0+255),b
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4816  003196  0E00               	movlw	0
  4817  003198  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4818  00319A  0E75               	movlw	117
  4819  00319C  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4820  00319E  0E00               	movlw	0
  4821  0031A0  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4822  0031A2  0E00               	movlw	0
  4823  0031A4  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4824  0031A6  0E00               	movlw	0
  4825  0031A8  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4826  0031AA  0E00               	movlw	0
  4827  0031AC  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4828  0031AE  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4829  0031B2  0012               	return		;funcret
  4830  0031B4                     __end_of_USBSuspend:
  4831                           	opt stack 0
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           postinc0	equ	0xFEE
  4840                           wreg	equ	0xFE8
  4841                           indf1	equ	0xFE7
  4842                           postdec1	equ	0xFE5
  4843                           fsr1h	equ	0xFE2
  4844                           fsr1l	equ	0xFE1
  4845                           indf2	equ	0xFDF
  4846                           postinc2	equ	0xFDE
  4847                           plusw2	equ	0xFDB
  4848                           fsr2h	equ	0xFDA
  4849                           fsr2l	equ	0xFD9
  4850                           status	equ	0xFD8
  4851                           
  4852 ;; *************** function _USBStallHandler *****************
  4853 ;; Defined at:
  4854 ;;		line 2205 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;		None               void
  4861 ;; Registers used:
  4862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4870 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4871 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:        1 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    4
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_USBDeviceTasks
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text13
  4883  002F7E                     __ptext13:
  4884                           	opt stack 0
  4885  002F7E                     _USBStallHandler:
  4886                           	opt stack 24
  4887                           
  4888                           ;usb_device.c: 2217: if(*U1EP0_R & 0x01)
  4889                           
  4890                           ;incstack = 0
  4891  002F7E  C05D  FFD9         	movff	_U1EP0_R,fsr2l
  4892  002F82  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
  4893  002F86  A0DF               	btfss	indf2,0,c
  4894  002F88  D024               	goto	l4546
  4895                           
  4896                           ;usb_device.c: 2218: {
  4897                           ;usb_device.c: 2220: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4898  002F8A  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4899  002F8E  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4900  002F92  0E80               	movlw	128
  4901  002F94  18DE               	xorwf	postinc2,w,c
  4902  002F96  A4D8               	btfss	status,2,c
  4903  002F98  D015               	goto	l4544
  4904  002F9A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  4905  002F9E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  4906  002FA2  0E84               	movlw	132
  4907  002FA4  18DE               	xorwf	postinc2,w,c
  4908  002FA6  A4D8               	btfss	status,2,c
  4909  002FA8  D00D               	goto	l4544
  4910                           
  4911                           ;usb_device.c: 2221: {
  4912                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4913  002FAA  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4914  002FAE  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4915  002FB2  0E0C               	movlw	12
  4916  002FB4  6EDF               	movwf	indf2,c
  4917                           
  4918                           ;usb_device.c: 2224: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4919  002FB6  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4920  002FBA  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4921  002FBE  0E00               	movlw	0
  4922  002FC0  8EDB               	bsf	plusw2,7,c
  4923  002FC2  D000               	goto	l4544
  4924  002FC4                     l4544:
  4925                           
  4926                           ;usb_device.c: 2225: }
  4927                           ;usb_device.c: 2226: *U1EP0_R &= 0xFE;
  4928  002FC4  C05D  FFD9         	movff	_U1EP0_R,fsr2l
  4929  002FC8  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
  4930  002FCC  0EFE               	movlw	254
  4931  002FCE  16DF               	andwf	indf2,f,c
  4932  002FD0  D000               	goto	l4546
  4933  002FD2                     l4546:
  4934                           
  4935                           ;usb_device.c: 2227: }
  4936                           ;usb_device.c: 2229: (UIR &= 0xDF);
  4937  002FD2  9A65               	bcf	3941,5,c	;volatile
  4938  002FD4  0012               	return		;funcret
  4939  002FD6                     __end_of_USBStallHandler:
  4940                           	opt stack 0
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           prodh	equ	0xFF4
  4946                           prodl	equ	0xFF3
  4947                           intcon	equ	0xFF2
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           indf1	equ	0xFE7
  4951                           postdec1	equ	0xFE5
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           plusw2	equ	0xFDB
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function _USBCtrlEPService *****************
  4962 ;; Defined at:
  4963 ;;		line 2372 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  setup_cnt       1   60[COMRAM] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;		None               void
  4970 ;; Registers used:
  4971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0
  4978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4979 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4980 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4981 ;;Total ram usage:        3 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:   11
  4984 ;; This function calls:
  4985 ;;		_USBCtrlTrfInHandler
  4986 ;;		_USBCtrlTrfOutHandler
  4987 ;;		_USBCtrlTrfSetupHandler
  4988 ;; This function is called by:
  4989 ;;		_USBDeviceTasks
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text14
  4994  00227A                     __ptext14:
  4995                           	opt stack 0
  4996  00227A                     _USBCtrlEPService:
  4997                           	opt stack 17
  4998                           
  4999                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5000                           
  5001                           ;incstack = 0
  5002  00227A  0E2D               	movlw	45
  5003  00227C  0100               	movlb	0	; () banked
  5004  00227E  6F98               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5008  002280  C0B4  F0DE         	movff	_USTATcopy,??_USBCtrlEPService
  5009  002284  0EFD               	movlw	253
  5010  002286  0100               	movlb	0	; () banked
  5011  002288  17DE               	andwf	??_USBCtrlEPService& (0+255),f,b
  5012  00228A  A4D8               	btfss	status,2,c
  5013  00228C  D05A               	goto	l4580
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;usb_device.c: 2383: {
  5017                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5018  00228E  C0B4  F0DE         	movff	_USTATcopy,??_USBCtrlEPService
  5019  002292  0100               	movlb	0	; () banked
  5020  002294  90D8               	bcf	status,0,c
  5021  002296  33DE               	rrcf	??_USBCtrlEPService& (0+255),f,b
  5022  002298  0E3F               	movlw	63
  5023  00229A  0100               	movlb	0	; () banked
  5024  00229C  17DE               	andwf	??_USBCtrlEPService& (0+255),f,b
  5025  00229E  0100               	movlb	0	; () banked
  5026  0022A0  51DE               	movf	??_USBCtrlEPService& (0+255),w,b
  5027  0022A2  0D04               	mullw	4
  5028  0022A4  0E00               	movlw	0
  5029  0022A6  24F3               	addwf	prodl,w,c
  5030  0022A8  6E46               	movwf	_pBDTEntryEP0OutCurrent,c
  5031  0022AA  0E04               	movlw	4
  5032  0022AC  20F4               	addwfc	prodh,w,c
  5033  0022AE  6E47               	movwf	_pBDTEntryEP0OutCurrent+1,c
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5037  0022B0  C046  F048         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  5038  0022B4  C047  F049         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;usb_device.c: 2396: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5042  0022B8  0E04               	movlw	4
  5043  0022BA  1A48               	xorwf	_pBDTEntryEP0OutNext,f,c
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5047  0022BC  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5048  0022C0  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5049  0022C4  30DF               	rrcf	indf2,w,c
  5050  0022C6  32E8               	rrcf	wreg,f,c
  5051  0022C8  0B0F               	andlw	15
  5052  0022CA  0A0D               	xorlw	13
  5053  0022CC  A4D8               	btfss	status,2,c
  5054  0022CE  D036               	goto	l4578
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;usb_device.c: 2400: {
  5058                           ;usb_device.c: 2401: unsigned char setup_cnt;
  5059                           ;usb_device.c: 2407: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5060  0022D0  0E00               	movlw	0
  5061  0022D2  6E3D               	movwf	USBCtrlEPService@setup_cnt,c
  5062  0022D4                     l4562:
  5063                           
  5064                           ; BSR set to: 0
  5065  0022D4  0E07               	movlw	7
  5066  0022D6  643D               	cpfsgt	USBCtrlEPService@setup_cnt,c
  5067  0022D8  D001               	goto	l4566
  5068                           
  5069                           ; BSR set to: 0
  5070  0022DA  D023               	goto	l4574
  5071  0022DC                     l4566:
  5072                           
  5073                           ;usb_device.c: 2408: {
  5074                           ;usb_device.c: 2409: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  5075  0022DC  EE20 F002          	lfsr	2,2
  5076  0022E0  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5077  0022E2  26D9               	addwf	fsr2l,f,c
  5078  0022E4  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5079  0022E6  22DA               	addwfc	fsr2h,f,c
  5080  0022E8  CFDE F0DE          	movff	postinc2,??_USBCtrlEPService
  5081  0022EC  CFDD F0DF          	movff	postdec2,??_USBCtrlEPService+1
  5082  0022F0  C0DE  FFD9         	movff	??_USBCtrlEPService,fsr2l
  5083  0022F4  C0DF  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
  5084  0022F8  503D               	movf	USBCtrlEPService@setup_cnt,w,c
  5085  0022FA  0D01               	mullw	1
  5086  0022FC  0E30               	movlw	48
  5087  0022FE  24F3               	addwf	prodl,w,c
  5088  002300  6EE1               	movwf	fsr1l,c
  5089  002302  0E04               	movlw	4
  5090  002304  20F4               	addwfc	prodh,w,c
  5091  002306  6EE2               	movwf	fsr1h,c
  5092  002308  CFDF FFE7          	movff	indf2,indf1
  5093                           
  5094                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR++;
  5095  00230C  EE20 F002          	lfsr	2,2
  5096  002310  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5097  002312  26D9               	addwf	fsr2l,f,c
  5098  002314  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5099  002316  22DA               	addwfc	fsr2h,f,c
  5100  002318  2ADE               	incf	postinc2,f,c
  5101  00231A  0E00               	movlw	0
  5102  00231C  22DD               	addwfc	postdec2,f,c
  5103  00231E  2A3D               	incf	USBCtrlEPService@setup_cnt,f,c
  5104  002320  D7D9               	goto	l4562
  5105  002322                     l4574:
  5106                           
  5107                           ;usb_device.c: 2411: }
  5108                           ;usb_device.c: 2412: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  5109  002322  EE20 F002          	lfsr	2,2
  5110  002326  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5111  002328  26D9               	addwf	fsr2l,f,c
  5112  00232A  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5113  00232C  22DA               	addwfc	fsr2h,f,c
  5114  00232E  0E30               	movlw	48
  5115  002330  6EDE               	movwf	postinc2,c
  5116  002332  0E04               	movlw	4
  5117  002334  6EDD               	movwf	postdec2,c
  5118                           
  5119                           ;usb_device.c: 2415: USBCtrlTrfSetupHandler();
  5120  002336  EC1A  F016         	call	_USBCtrlTrfSetupHandler	;wreg free
  5121                           
  5122                           ;usb_device.c: 2416: }
  5123  00233A  0012               	return	
  5124  00233C                     l4578:
  5125                           
  5126                           ;usb_device.c: 2417: else
  5127                           ;usb_device.c: 2418: {
  5128                           ;usb_device.c: 2420: USBCtrlTrfOutHandler();
  5129  00233C  EC01  F017         	call	_USBCtrlTrfOutHandler	;wreg free
  5130                           
  5131                           ;usb_device.c: 2421: }
  5132                           ;usb_device.c: 2422: }
  5133  002340  0012               	return	
  5134  002342                     l4580:
  5135                           
  5136                           ;usb_device.c: 2423: else if((USTATcopy.Val & ~0x02) == 0x04)
  5137  002342  0100               	movlb	0	; () banked
  5138  002344  51B4               	movf	_USTATcopy& (0+255),w,b
  5139  002346  0BFD               	andlw	253
  5140  002348  0A04               	xorlw	4
  5141  00234A  A4D8               	btfss	status,2,c
  5142  00234C  0012               	return	
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;usb_device.c: 2424: {
  5146                           ;usb_device.c: 2427: USBCtrlTrfInHandler();
  5147  00234E  ECAB  F011         	call	_USBCtrlTrfInHandler	;wreg free
  5148  002352  0012               	return	
  5149  002354  0012               	return		;funcret
  5150  002356                     __end_of_USBCtrlEPService:
  5151                           	opt stack 0
  5152                           tblptru	equ	0xFF8
  5153                           tblptrh	equ	0xFF7
  5154                           tblptrl	equ	0xFF6
  5155                           tablat	equ	0xFF5
  5156                           prodh	equ	0xFF4
  5157                           prodl	equ	0xFF3
  5158                           intcon	equ	0xFF2
  5159                           postinc0	equ	0xFEE
  5160                           wreg	equ	0xFE8
  5161                           indf1	equ	0xFE7
  5162                           postdec1	equ	0xFE5
  5163                           fsr1h	equ	0xFE2
  5164                           fsr1l	equ	0xFE1
  5165                           indf2	equ	0xFDF
  5166                           postinc2	equ	0xFDE
  5167                           postdec2	equ	0xFDD
  5168                           plusw2	equ	0xFDB
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5174 ;; Defined at:
  5175 ;;		line 2472 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;		None               void
  5182 ;; Registers used:
  5183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5192 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:   10
  5196 ;; This function calls:
  5197 ;;		_USBCheckStdRequest
  5198 ;;		_USBCtrlEPServiceComplete
  5199 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5200 ;; This function is called by:
  5201 ;;		_USBCtrlEPService
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text15
  5206  002C34                     __ptext15:
  5207                           	opt stack 0
  5208  002C34                     _USBCtrlTrfSetupHandler:
  5209                           	opt stack 17
  5210                           
  5211                           ;usb_device.c: 2477: shortPacketStatus = 0;
  5212                           
  5213                           ;incstack = 0
  5214  002C34  0E00               	movlw	0
  5215  002C36  6E55               	movwf	_shortPacketStatus,c
  5216                           
  5217                           ;usb_device.c: 2478: USBDeferStatusStagePacket = 0;
  5218  002C38  0E00               	movlw	0
  5219  002C3A  6E4E               	movwf	_USBDeferStatusStagePacket,c	;volatile
  5220                           
  5221                           ;usb_device.c: 2479: USBDeferINDataStagePackets = 0;
  5222  002C3C  0E00               	movlw	0
  5223  002C3E  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5224                           
  5225                           ;usb_device.c: 2480: USBDeferOUTDataStagePackets = 0;
  5226  002C40  0E00               	movlw	0
  5227  002C42  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5228                           
  5229                           ;usb_device.c: 2481: BothEP0OutUOWNsSet = 0;
  5230  002C44  0E00               	movlw	0
  5231  002C46  0100               	movlb	0	; () banked
  5232  002C48  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  5233                           
  5234                           ;usb_device.c: 2482: controlTransferState = 0;
  5235  002C4A  0E00               	movlw	0
  5236  002C4C  6E54               	movwf	_controlTransferState,c
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5240  002C4E  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5241  002C52  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5242  002C56  0E7F               	movlw	127
  5243  002C58  16DF               	andwf	indf2,f,c
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5247  002C5A  0E04               	movlw	4
  5248  002C5C  1A3E               	xorwf	_pBDTEntryIn,f,c
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;usb_device.c: 2493: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5252  002C5E  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5253  002C62  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5254  002C66  0E7F               	movlw	127
  5255  002C68  16DF               	andwf	indf2,f,c
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;usb_device.c: 2494: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5259  002C6A  0E04               	movlw	4
  5260  002C6C  1A3E               	xorwf	_pBDTEntryIn,f,c
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;usb_device.c: 2495: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5264  002C6E  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5265  002C72  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5266  002C76  0E7F               	movlw	127
  5267  002C78  16DF               	andwf	indf2,f,c
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;usb_device.c: 2497: inPipes[0].info.Val = 0;
  5271  002C7A  0E00               	movlw	0
  5272  002C7C  6E59               	movwf	_inPipes+3,c
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;usb_device.c: 2498: inPipes[0].wCount.Val = 0;
  5276  002C7E  0E00               	movlw	0
  5277  002C80  6E5B               	movwf	_inPipes+5,c
  5278  002C82  0E00               	movlw	0
  5279  002C84  6E5A               	movwf	_inPipes+4,c
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;usb_device.c: 2499: outPipes[0].info.Val = 0;
  5283  002C86  0E00               	movlw	0
  5284  002C88  0100               	movlb	0	; () banked
  5285  002C8A  6F6D               	movwf	(_outPipes+3)& (0+255),b
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;usb_device.c: 2500: outPipes[0].wCount.Val = 0;
  5289  002C8C  0E00               	movlw	0
  5290  002C8E  0100               	movlb	0	; () banked
  5291  002C90  6F6F               	movwf	(_outPipes+5)& (0+255),b
  5292  002C92  0E00               	movlw	0
  5293  002C94  6F6E               	movwf	(_outPipes+4)& (0+255),b
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;usb_device.c: 2506: USBCheckStdRequest();
  5297  002C96  ECEB  F00F         	call	_USBCheckStdRequest	;wreg free
  5298                           
  5299                           ;usb_device.c: 2507: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5300  002C9A  0E00               	movlw	0
  5301  002C9C  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5302  002C9E  0E03               	movlw	3
  5303  002CA0  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5304  002CA2  0E00               	movlw	0
  5305  002CA4  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5306  002CA6  0E00               	movlw	0
  5307  002CA8  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5308  002CAA  0E00               	movlw	0
  5309  002CAC  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5310  002CAE  0E00               	movlw	0
  5311  002CB0  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5312  002CB2  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5313                           
  5314                           ;usb_device.c: 2520: USBCtrlEPServiceComplete();
  5315  002CB6  ECF7  F00E         	call	_USBCtrlEPServiceComplete	;wreg free
  5316  002CBA  0012               	return		;funcret
  5317  002CBC                     __end_of_USBCtrlTrfSetupHandler:
  5318                           	opt stack 0
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           intcon	equ	0xFF2
  5326                           postinc0	equ	0xFEE
  5327                           wreg	equ	0xFE8
  5328                           indf1	equ	0xFE7
  5329                           postdec1	equ	0xFE5
  5330                           fsr1h	equ	0xFE2
  5331                           fsr1l	equ	0xFE1
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           plusw2	equ	0xFDB
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _USBCtrlEPServiceComplete *****************
  5341 ;; Defined at:
  5342 ;;		line 1619 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;		None               void
  5349 ;; Registers used:
  5350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    6
  5363 ;; This function calls:
  5364 ;;		_USBCtrlEPAllowDataStage
  5365 ;;		_USBCtrlEPAllowStatusStage
  5366 ;; This function is called by:
  5367 ;;		_USBCtrlTrfSetupHandler
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text16
  5372  001DEE                     __ptext16:
  5373                           	opt stack 0
  5374  001DEE                     _USBCtrlEPServiceComplete:
  5375                           	opt stack 20
  5376                           
  5377                           ;usb_device.c: 1625: UCONbits.PKTDIS = 0;
  5378                           
  5379                           ;incstack = 0
  5380  001DEE  9860               	bcf	3936,4,c	;volatile
  5381                           
  5382                           ;usb_device.c: 1631: if(inPipes[0].info.bits.busy == 0)
  5383  001DF0  BE59               	btfsc	_inPipes+3,7,c
  5384  001DF2  D03B               	goto	l212
  5385                           
  5386                           ;usb_device.c: 1632: {
  5387                           ;usb_device.c: 1633: if(outPipes[0].info.bits.busy == 1)
  5388  001DF4  0100               	movlb	0	; () banked
  5389  001DF6  AF6D               	btfss	(_outPipes+3)& (0+255),7,b
  5390  001DF8  D00D               	goto	l4210
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;usb_device.c: 1634: {
  5394                           ;usb_device.c: 1635: controlTransferState = 2;
  5395  001DFA  0E02               	movlw	2
  5396  001DFC  6E54               	movwf	_controlTransferState,c
  5397                           
  5398                           ;usb_device.c: 1646: if(USBDeferOUTDataStagePackets == 0)
  5399  001DFE  504D               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  5400  001E00  A4D8               	btfss	status,2,c
  5401  001E02  D003               	goto	l4206
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;usb_device.c: 1647: {
  5405                           ;usb_device.c: 1648: USBCtrlEPAllowDataStage();
  5406  001E04  ECAA  F014         	call	_USBCtrlEPAllowDataStage	;wreg free
  5407  001E08  D000               	goto	l4206
  5408  001E0A                     l4206:
  5409                           
  5410                           ;usb_device.c: 1649: }
  5411                           ;usb_device.c: 1653: USBStatusStageEnabledFlag2 = 0;
  5412  001E0A  0E00               	movlw	0
  5413  001E0C  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5414                           
  5415                           ;usb_device.c: 1654: USBStatusStageEnabledFlag1 = 0;
  5416  001E0E  0E00               	movlw	0
  5417  001E10  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5418                           
  5419                           ;usb_device.c: 1655: }
  5420  001E12  0012               	return	
  5421  001E14                     l4210:
  5422                           
  5423                           ;usb_device.c: 1656: else
  5424                           ;usb_device.c: 1657: {
  5425                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->CNT = 8;
  5426  001E14  EE20 F001          	lfsr	2,1
  5427  001E18  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5428  001E1A  26D9               	addwf	fsr2l,f,c
  5429  001E1C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5430  001E1E  22DA               	addwfc	fsr2h,f,c
  5431  001E20  0E08               	movlw	8
  5432  001E22  6EDF               	movwf	indf2,c
  5433                           
  5434                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5435  001E24  EE20 F002          	lfsr	2,2
  5436  001E28  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5437  001E2A  26D9               	addwf	fsr2l,f,c
  5438  001E2C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5439  001E2E  22DA               	addwfc	fsr2h,f,c
  5440  001E30  0E30               	movlw	48
  5441  001E32  6EDE               	movwf	postinc2,c
  5442  001E34  0E04               	movlw	4
  5443  001E36  6EDD               	movwf	postdec2,c
  5444                           
  5445                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5446  001E38  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5447  001E3C  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5448  001E40  0E0C               	movlw	12
  5449  001E42  6EDF               	movwf	indf2,c
  5450                           
  5451                           ;usb_device.c: 1665: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5452  001E44  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5453  001E48  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5454  001E4C  0E00               	movlw	0
  5455  001E4E  8EDB               	bsf	plusw2,7,c
  5456                           
  5457                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val = 0x04;
  5458  001E50  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5459  001E54  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5460  001E58  0E04               	movlw	4
  5461  001E5A  6EDF               	movwf	indf2,c
  5462                           
  5463                           ;usb_device.c: 1667: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5464  001E5C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5465  001E60  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5466  001E64  0E00               	movlw	0
  5467  001E66  8EDB               	bsf	plusw2,7,c
  5468                           
  5469                           ;usb_device.c: 1668: }
  5470                           ;usb_device.c: 1669: }
  5471  001E68  0012               	return	
  5472  001E6A                     l212:
  5473                           
  5474                           ;usb_device.c: 1670: else
  5475                           ;usb_device.c: 1671: {
  5476                           ;usb_device.c: 1672: if(SetupPkt.DataDir == (0x80>>7))
  5477  001E6A  0104               	movlb	4	; () banked
  5478  001E6C  AF30               	btfss	48,7,b	;volatile
  5479  001E6E  D012               	goto	l4230
  5480                           
  5481                           ; BSR set to: 4
  5482                           ;usb_device.c: 1673: {
  5483                           ;usb_device.c: 1674: controlTransferState = 1;
  5484  001E70  0E01               	movlw	1
  5485  001E72  6E54               	movwf	_controlTransferState,c
  5486                           
  5487                           ;usb_device.c: 1688: if(USBDeferINDataStagePackets == 0)
  5488  001E74  504C               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  5489  001E76  A4D8               	btfss	status,2,c
  5490  001E78  D003               	goto	l4222
  5491                           
  5492                           ; BSR set to: 4
  5493                           ;usb_device.c: 1689: {
  5494                           ;usb_device.c: 1690: USBCtrlEPAllowDataStage();
  5495  001E7A  ECAA  F014         	call	_USBCtrlEPAllowDataStage	;wreg free
  5496  001E7E  D000               	goto	l4222
  5497  001E80                     l4222:
  5498                           
  5499                           ;usb_device.c: 1691: }
  5500                           ;usb_device.c: 1713: USBStatusStageEnabledFlag2 = 0;
  5501  001E80  0E00               	movlw	0
  5502  001E82  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5503                           
  5504                           ;usb_device.c: 1714: USBStatusStageEnabledFlag1 = 0;
  5505  001E84  0E00               	movlw	0
  5506  001E86  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5507                           
  5508                           ;usb_device.c: 1715: if(USBDeferStatusStagePacket == 0)
  5509  001E88  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5510  001E8A  A4D8               	btfss	status,2,c
  5511  001E8C  0012               	return	
  5512                           
  5513                           ;usb_device.c: 1716: {
  5514                           ;usb_device.c: 1717: USBCtrlEPAllowStatusStage();
  5515  001E8E  EC16  F012         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5516                           
  5517                           ;usb_device.c: 1718: }
  5518                           ;usb_device.c: 1719: }
  5519  001E92  0012               	return	
  5520  001E94                     l4230:
  5521                           
  5522                           ;usb_device.c: 1720: else
  5523                           ;usb_device.c: 1721: {
  5524                           ;usb_device.c: 1732: controlTransferState = 2;
  5525  001E94  0E02               	movlw	2
  5526  001E96  6E54               	movwf	_controlTransferState,c
  5527                           
  5528                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->CNT = 8;
  5529  001E98  EE20 F001          	lfsr	2,1
  5530  001E9C  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5531  001E9E  26D9               	addwf	fsr2l,f,c
  5532  001EA0  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5533  001EA2  22DA               	addwfc	fsr2h,f,c
  5534  001EA4  0E08               	movlw	8
  5535  001EA6  6EDF               	movwf	indf2,c
  5536                           
  5537                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5538  001EA8  EE20 F002          	lfsr	2,2
  5539  001EAC  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5540  001EAE  26D9               	addwf	fsr2l,f,c
  5541  001EB0  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5542  001EB2  22DA               	addwfc	fsr2h,f,c
  5543  001EB4  0E30               	movlw	48
  5544  001EB6  6EDE               	movwf	postinc2,c
  5545  001EB8  0E04               	movlw	4
  5546  001EBA  6EDD               	movwf	postdec2,c
  5547                           
  5548                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5549  001EBC  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5550  001EC0  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5551  001EC4  0E04               	movlw	4
  5552  001EC6  6EDF               	movwf	indf2,c
  5553                           
  5554                           ;usb_device.c: 1738: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5555  001EC8  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5556  001ECC  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5557  001ED0  0E00               	movlw	0
  5558  001ED2  8EDB               	bsf	plusw2,7,c
  5559                           
  5560                           ;usb_device.c: 1741: USBStatusStageEnabledFlag2 = 0;
  5561  001ED4  0E00               	movlw	0
  5562  001ED6  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5563                           
  5564                           ;usb_device.c: 1742: USBStatusStageEnabledFlag1 = 0;
  5565  001ED8  0E00               	movlw	0
  5566  001EDA  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5567                           
  5568                           ;usb_device.c: 1743: if(USBDeferStatusStagePacket == 0)
  5569  001EDC  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5570  001EDE  A4D8               	btfss	status,2,c
  5571  001EE0  0012               	return	
  5572                           
  5573                           ;usb_device.c: 1744: {
  5574                           ;usb_device.c: 1745: USBCtrlEPAllowStatusStage();
  5575  001EE2  EC16  F012         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5576  001EE6  0012               	return	
  5577  001EE8  0012               	return		;funcret
  5578  001EEA                     __end_of_USBCtrlEPServiceComplete:
  5579                           	opt stack 0
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           prodh	equ	0xFF4
  5585                           prodl	equ	0xFF3
  5586                           intcon	equ	0xFF2
  5587                           postinc0	equ	0xFEE
  5588                           wreg	equ	0xFE8
  5589                           indf1	equ	0xFE7
  5590                           postdec1	equ	0xFE5
  5591                           fsr1h	equ	0xFE2
  5592                           fsr1l	equ	0xFE1
  5593                           indf2	equ	0xFDF
  5594                           postinc2	equ	0xFDE
  5595                           postdec2	equ	0xFDD
  5596                           plusw2	equ	0xFDB
  5597                           fsr2h	equ	0xFDA
  5598                           fsr2l	equ	0xFD9
  5599                           status	equ	0xFD8
  5600                           
  5601 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5602 ;; Defined at:
  5603 ;;		line 1491 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;		None               void
  5610 ;; Registers used:
  5611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5617 ;;      Params:         0       0       0       0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5620 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5621 ;;Total ram usage:        0 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    5
  5624 ;; This function calls:
  5625 ;;		_USBCtrlTrfTxService
  5626 ;; This function is called by:
  5627 ;;		_USBCtrlEPServiceComplete
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text17
  5632  002954                     __ptext17:
  5633                           	opt stack 0
  5634  002954                     _USBCtrlEPAllowDataStage:
  5635                           	opt stack 20
  5636                           
  5637                           ;usb_device.c: 1493: USBDeferINDataStagePackets = 0;
  5638                           
  5639                           ;incstack = 0
  5640  002954  0E00               	movlw	0
  5641  002956  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5642                           
  5643                           ;usb_device.c: 1494: USBDeferOUTDataStagePackets = 0;
  5644  002958  0E00               	movlw	0
  5645  00295A  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5646                           
  5647                           ;usb_device.c: 1496: if(controlTransferState == 2)
  5648  00295C  0E02               	movlw	2
  5649  00295E  1854               	xorwf	_controlTransferState,w,c
  5650  002960  A4D8               	btfss	status,2,c
  5651  002962  D01F               	goto	l4004
  5652                           
  5653                           ;usb_device.c: 1497: {
  5654                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->CNT = 8;
  5655  002964  EE20 F001          	lfsr	2,1
  5656  002968  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5657  00296A  26D9               	addwf	fsr2l,f,c
  5658  00296C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5659  00296E  22DA               	addwfc	fsr2h,f,c
  5660  002970  0E08               	movlw	8
  5661  002972  6EDF               	movwf	indf2,c
  5662                           
  5663                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  5664  002974  EE20 F002          	lfsr	2,2
  5665  002978  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5666  00297A  26D9               	addwf	fsr2l,f,c
  5667  00297C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5668  00297E  22DA               	addwfc	fsr2h,f,c
  5669  002980  0E38               	movlw	56
  5670  002982  6EDE               	movwf	postinc2,c
  5671  002984  0E04               	movlw	4
  5672  002986  6EDD               	movwf	postdec2,c
  5673                           
  5674                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5675  002988  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5676  00298C  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5677  002990  0E48               	movlw	72
  5678  002992  6EDF               	movwf	indf2,c
  5679                           
  5680                           ;usb_device.c: 1502: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5681  002994  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5682  002998  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5683  00299C  0E00               	movlw	0
  5684  00299E  8EDB               	bsf	plusw2,7,c
  5685                           
  5686                           ;usb_device.c: 1503: }
  5687  0029A0  0012               	return	
  5688  0029A2                     l4004:
  5689                           
  5690                           ;usb_device.c: 1504: else
  5691                           ;usb_device.c: 1505: {
  5692                           ;usb_device.c: 1508: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5693  0029A2  505A               	movf	_inPipes+4,w,c
  5694  0029A4  0104               	movlb	4	; () banked
  5695  0029A6  5D36               	subwf	54,w,b	;volatile
  5696  0029A8  505B               	movf	_inPipes+5,w,c
  5697  0029AA  0104               	movlb	4	; () banked
  5698  0029AC  5937               	subwfb	55,w,b	;volatile
  5699  0029AE  B0D8               	btfsc	status,0,c
  5700  0029B0  D005               	goto	l4008
  5701                           
  5702                           ; BSR set to: 4
  5703                           ;usb_device.c: 1509: {
  5704                           ;usb_device.c: 1510: inPipes[0].wCount.Val = SetupPkt.wLength;
  5705  0029B2  C436 F05A          	movff	1078,_inPipes+4	;volatile
  5706  0029B6  C437 F05B          	movff	1079,_inPipes+5	;volatile
  5707  0029BA  D000               	goto	l4008
  5708  0029BC                     l4008:
  5709                           
  5710                           ; BSR set to: 4
  5711                           ;usb_device.c: 1511: }
  5712                           ;usb_device.c: 1512: USBCtrlTrfTxService();
  5713  0029BC  ECCE  F010         	call	_USBCtrlTrfTxService	;wreg free
  5714                           
  5715                           ;usb_device.c: 1517: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  5716  0029C0  EE20 F002          	lfsr	2,2
  5717  0029C4  503E               	movf	_pBDTEntryIn,w,c
  5718  0029C6  26D9               	addwf	fsr2l,f,c
  5719  0029C8  503F               	movf	_pBDTEntryIn+1,w,c
  5720  0029CA  22DA               	addwfc	fsr2h,f,c
  5721  0029CC  0E38               	movlw	56
  5722  0029CE  6EDE               	movwf	postinc2,c
  5723  0029D0  0E04               	movlw	4
  5724  0029D2  6EDD               	movwf	postdec2,c
  5725                           
  5726                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5727  0029D4  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5728  0029D8  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5729  0029DC  0E48               	movlw	72
  5730  0029DE  6EDF               	movwf	indf2,c
  5731                           
  5732                           ;usb_device.c: 1519: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5733  0029E0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5734  0029E4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5735  0029E8  0E00               	movlw	0
  5736  0029EA  8EDB               	bsf	plusw2,7,c
  5737  0029EC  0012               	return	
  5738  0029EE  0012               	return		;funcret
  5739  0029F0                     __end_of_USBCtrlEPAllowDataStage:
  5740                           	opt stack 0
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           prodh	equ	0xFF4
  5746                           prodl	equ	0xFF3
  5747                           intcon	equ	0xFF2
  5748                           postinc0	equ	0xFEE
  5749                           wreg	equ	0xFE8
  5750                           indf1	equ	0xFE7
  5751                           postdec1	equ	0xFE5
  5752                           fsr1h	equ	0xFE2
  5753                           fsr1l	equ	0xFE1
  5754                           indf2	equ	0xFDF
  5755                           postinc2	equ	0xFDE
  5756                           postdec2	equ	0xFDD
  5757                           plusw2	equ	0xFDB
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _USBCheckStdRequest *****************
  5763 ;; Defined at:
  5764 ;;		line 2692 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;		None               void
  5771 ;; Registers used:
  5772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        0 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    9
  5785 ;; This function calls:
  5786 ;;		_USBStdFeatureReqHandler
  5787 ;;		_USBStdGetDscHandler
  5788 ;;		_USBStdGetStatusHandler
  5789 ;;		_USBStdSetCfgHandler
  5790 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5791 ;; This function is called by:
  5792 ;;		_USBCtrlTrfSetupHandler
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text18
  5797  001FD6                     __ptext18:
  5798                           	opt stack 0
  5799  001FD6                     _USBCheckStdRequest:
  5800                           	opt stack 17
  5801                           
  5802                           ;usb_device.c: 2694: if(SetupPkt.RequestType != (0x00>>5)) return;
  5803                           
  5804                           ;incstack = 0
  5805  001FD6  0104               	movlb	4	; () banked
  5806  001FD8  3930               	swapf	48,w,b	;volatile
  5807  001FDA  32E8               	rrcf	wreg,f,c
  5808  001FDC  0B03               	andlw	3
  5809  001FDE  0900               	iorlw	0
  5810  001FE0  A4D8               	btfss	status,2,c
  5811  001FE2  0012               	return	
  5812  001FE4  D047               	goto	l4328
  5813                           
  5814                           ; BSR set to: 4
  5815  001FE6  0012               	return	
  5816                           
  5817                           ; BSR set to: 4
  5818                           ;usb_device.c: 2696: switch(SetupPkt.bRequest)
  5819  001FE8  D045               	goto	l4328
  5820  001FEA                     l339:
  5821                           
  5822                           ; BSR set to: 4
  5823                           ;usb_device.c: 2699: inPipes[0].info.bits.busy = 1;
  5824  001FEA  8E59               	bsf	_inPipes+3,7,c
  5825                           
  5826                           ; BSR set to: 4
  5827                           ;usb_device.c: 2700: USBDeviceState = ADR_PENDING_STATE;
  5828  001FEC  0E08               	movlw	8
  5829  001FEE  0100               	movlb	0	; () banked
  5830  001FF0  6F97               	movwf	_USBDeviceState& (0+255),b
  5831                           
  5832                           ;usb_device.c: 2702: break;
  5833  001FF2  0012               	return	
  5834  001FF4                     l4298:
  5835                           
  5836                           ;usb_device.c: 2704: USBStdGetDscHandler();
  5837  001FF4  EC54  F00D         	call	_USBStdGetDscHandler	;wreg free
  5838                           
  5839                           ;usb_device.c: 2705: break;
  5840  001FF8  0012               	return	
  5841  001FFA                     l4300:
  5842                           
  5843                           ;usb_device.c: 2707: USBStdSetCfgHandler();
  5844  001FFA  EC5D  F010         	call	_USBStdSetCfgHandler	;wreg free
  5845                           
  5846                           ;usb_device.c: 2708: break;
  5847  001FFE  0012               	return	
  5848  002000                     l4302:
  5849                           
  5850                           ;usb_device.c: 2710: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5851  002000  0E5C               	movlw	low _USBActiveConfiguration
  5852  002002  6E56               	movwf	_inPipes,c
  5853  002004  0E00               	movlw	high _USBActiveConfiguration
  5854  002006  6E57               	movwf	_inPipes+1,c
  5855                           
  5856                           ;usb_device.c: 2711: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5857  002008  8059               	bsf	_inPipes+3,0,c
  5858                           
  5859                           ;usb_device.c: 2712: inPipes[0].wCount.v[0] = 1;
  5860  00200A  0E01               	movlw	1
  5861  00200C  6E5A               	movwf	_inPipes+4,c
  5862                           
  5863                           ;usb_device.c: 2713: inPipes[0].info.bits.busy = 1;
  5864  00200E  8E59               	bsf	_inPipes+3,7,c
  5865                           
  5866                           ;usb_device.c: 2714: break;
  5867  002010  0012               	return	
  5868  002012                     l4310:
  5869                           
  5870                           ;usb_device.c: 2716: USBStdGetStatusHandler();
  5871  002012  ECF8  F013         	call	_USBStdGetStatusHandler	;wreg free
  5872                           
  5873                           ;usb_device.c: 2717: break;
  5874  002016  0012               	return	
  5875                           
  5876                           ;usb_device.c: 2718: case 1:
  5877  002018  D000               	goto	l4312
  5878  00201A                     l4312:
  5879                           
  5880                           ;usb_device.c: 2719: case 3:
  5881                           ;usb_device.c: 2720: USBStdFeatureReqHandler();
  5882  00201A  EC2B  F007         	call	_USBStdFeatureReqHandler	;wreg free
  5883                           
  5884                           ;usb_device.c: 2721: break;
  5885  00201E  0012               	return	
  5886  002020                     l4314:
  5887                           
  5888                           ;usb_device.c: 2723: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5889  002020  0104               	movlb	4	; () banked
  5890  002022  5134               	movf	52,w,b	;volatile
  5891  002024  0D01               	mullw	1
  5892  002026  0EB2               	movlw	low _USBAlternateInterface
  5893  002028  24F3               	addwf	prodl,w,c
  5894  00202A  6E56               	movwf	_inPipes,c
  5895  00202C  0E00               	movlw	high _USBAlternateInterface
  5896  00202E  20F4               	addwfc	prodh,w,c
  5897  002030  6E57               	movwf	_inPipes+1,c
  5898                           
  5899                           ; BSR set to: 4
  5900                           ;usb_device.c: 2724: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5901  002032  8059               	bsf	_inPipes+3,0,c
  5902                           
  5903                           ; BSR set to: 4
  5904                           ;usb_device.c: 2725: inPipes[0].wCount.v[0] = 1;
  5905  002034  0E01               	movlw	1
  5906  002036  6E5A               	movwf	_inPipes+4,c
  5907                           
  5908                           ; BSR set to: 4
  5909                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
  5910  002038  8E59               	bsf	_inPipes+3,7,c
  5911                           
  5912                           ;usb_device.c: 2727: break;
  5913  00203A  0012               	return	
  5914  00203C                     l348:
  5915                           
  5916                           ; BSR set to: 4
  5917                           ;usb_device.c: 2729: inPipes[0].info.bits.busy = 1;
  5918  00203C  8E59               	bsf	_inPipes+3,7,c
  5919                           
  5920                           ; BSR set to: 4
  5921                           ;usb_device.c: 2730: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5922  00203E  0104               	movlb	4	; () banked
  5923  002040  5134               	movf	52,w,b	;volatile
  5924  002042  0D01               	mullw	1
  5925  002044  0EB2               	movlw	low _USBAlternateInterface
  5926  002046  24F3               	addwf	prodl,w,c
  5927  002048  6ED9               	movwf	fsr2l,c
  5928  00204A  0E00               	movlw	high _USBAlternateInterface
  5929  00204C  20F4               	addwfc	prodh,w,c
  5930  00204E  6EDA               	movwf	fsr2h,c
  5931  002050  C432 FFDF          	movff	1074,indf2	;volatile
  5932                           
  5933                           ;usb_device.c: 2731: break;
  5934  002054  0012               	return	
  5935  002056                     l4324:
  5936                           
  5937                           ; BSR set to: 4
  5938                           ;usb_device.c: 2733: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5939  002056  0E00               	movlw	0
  5940  002058  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5941  00205A  0E02               	movlw	2
  5942  00205C  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5943  00205E  0E00               	movlw	0
  5944  002060  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5945  002062  0E00               	movlw	0
  5946  002064  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5947  002066  0E00               	movlw	0
  5948  002068  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5949  00206A  0E00               	movlw	0
  5950  00206C  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5951  00206E  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5952                           
  5953                           ;usb_device.c: 2738: }
  5954                           
  5955                           ;usb_device.c: 2737: break;
  5956                           
  5957                           ;usb_device.c: 2736: default:
  5958                           
  5959                           ;usb_device.c: 2735: case 12:
  5960                           
  5961                           ;usb_device.c: 2734: break;
  5962  002072  0012               	return	
  5963  002074                     l4328:
  5964  002074  0104               	movlb	4	; () banked
  5965  002076  5131               	movf	49,w,b	;volatile
  5966                           
  5967                           ; Switch size 1, requested type "space"
  5968                           ; Number of cases is 11, Range of values is 0 to 12
  5969                           ; switch strategies available:
  5970                           ; Name         Instructions Cycles
  5971                           ; simple_byte           34    18 (average)
  5972                           ;	Chosen strategy is simple_byte
  5973  002078  0A00               	xorlw	0	; case 0
  5974  00207A  B4D8               	btfsc	status,2,c
  5975  00207C  D7CA               	goto	l4310
  5976  00207E  0A01               	xorlw	1	; case 1
  5977  002080  B4D8               	btfsc	status,2,c
  5978  002082  D7CB               	goto	l4312
  5979  002084  0A02               	xorlw	2	; case 3
  5980  002086  B4D8               	btfsc	status,2,c
  5981  002088  D7C8               	goto	l4312
  5982  00208A  0A06               	xorlw	6	; case 5
  5983  00208C  B4D8               	btfsc	status,2,c
  5984  00208E  D7AD               	goto	l339
  5985  002090  0A03               	xorlw	3	; case 6
  5986  002092  B4D8               	btfsc	status,2,c
  5987  002094  D7AF               	goto	l4298
  5988  002096  0A01               	xorlw	1	; case 7
  5989  002098  B4D8               	btfsc	status,2,c
  5990  00209A  D7DD               	goto	l4324
  5991  00209C  0A0F               	xorlw	15	; case 8
  5992  00209E  B4D8               	btfsc	status,2,c
  5993  0020A0  D7AF               	goto	l4302
  5994  0020A2  0A01               	xorlw	1	; case 9
  5995  0020A4  B4D8               	btfsc	status,2,c
  5996  0020A6  D7A9               	goto	l4300
  5997  0020A8  0A03               	xorlw	3	; case 10
  5998  0020AA  B4D8               	btfsc	status,2,c
  5999  0020AC  D7B9               	goto	l4314
  6000  0020AE  0A01               	xorlw	1	; case 11
  6001  0020B0  B4D8               	btfsc	status,2,c
  6002  0020B2  D7C4               	goto	l348
  6003  0020B4  0A07               	xorlw	7	; case 12
  6004  0020B6  0012               	return	
  6005                           
  6006                           ; BSR set to: 4
  6007  0020B8  0012               	return		;funcret
  6008  0020BA                     __end_of_USBCheckStdRequest:
  6009                           	opt stack 0
  6010                           tblptru	equ	0xFF8
  6011                           tblptrh	equ	0xFF7
  6012                           tblptrl	equ	0xFF6
  6013                           tablat	equ	0xFF5
  6014                           prodh	equ	0xFF4
  6015                           prodl	equ	0xFF3
  6016                           intcon	equ	0xFF2
  6017                           postinc0	equ	0xFEE
  6018                           wreg	equ	0xFE8
  6019                           indf1	equ	0xFE7
  6020                           postdec1	equ	0xFE5
  6021                           fsr1h	equ	0xFE2
  6022                           fsr1l	equ	0xFE1
  6023                           indf2	equ	0xFDF
  6024                           postinc2	equ	0xFDE
  6025                           postdec2	equ	0xFDD
  6026                           plusw2	equ	0xFDB
  6027                           fsr2h	equ	0xFDA
  6028                           fsr2l	equ	0xFD9
  6029                           status	equ	0xFD8
  6030                           
  6031 ;; *************** function _USBStdSetCfgHandler *****************
  6032 ;; Defined at:
  6033 ;;		line 1971 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  i               1   54[COMRAM] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;		None               void
  6040 ;; Registers used:
  6041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0
  6048 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6050 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6051 ;;Total ram usage:        1 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    8
  6054 ;; This function calls:
  6055 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6056 ;;		_memset
  6057 ;; This function is called by:
  6058 ;;		_USBCheckStdRequest
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text19
  6063  0020BA                     __ptext19:
  6064                           	opt stack 0
  6065  0020BA                     _USBStdSetCfgHandler:
  6066                           	opt stack 17
  6067                           
  6068                           ;usb_device.c: 1973: uint8_t i;
  6069                           ;usb_device.c: 1976: inPipes[0].info.bits.busy = 1;
  6070                           
  6071                           ;incstack = 0
  6072  0020BA  8E59               	bsf	_inPipes+3,7,c
  6073                           
  6074                           ;usb_device.c: 1979: memset((void*)&*U1EP1_R,0x00,(2));;
  6075  0020BC  C0D3  F023         	movff	_U1EP1_R,memset@p1
  6076  0020C0  C0D4  F024         	movff	_U1EP1_R+1,memset@p1+1
  6077  0020C4  0E00               	movlw	0
  6078  0020C6  6E26               	movwf	memset@c+1,c
  6079  0020C8  0E00               	movlw	0
  6080  0020CA  6E25               	movwf	memset@c,c
  6081  0020CC  0E00               	movlw	0
  6082  0020CE  6E28               	movwf	memset@n+1,c
  6083  0020D0  0E02               	movlw	2
  6084  0020D2  6E27               	movwf	memset@n,c
  6085  0020D4  EC3A  F019         	call	_memset	;wreg free
  6086                           
  6087                           ;usb_device.c: 1982: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6088  0020D8  0E00               	movlw	0
  6089  0020DA  6E23               	movwf	memset@p1,c
  6090  0020DC  0E04               	movlw	4
  6091  0020DE  6E24               	movwf	memset@p1+1,c
  6092  0020E0  0E00               	movlw	0
  6093  0020E2  6E26               	movwf	memset@c+1,c
  6094  0020E4  0E00               	movlw	0
  6095  0020E6  6E25               	movwf	memset@c,c
  6096  0020E8  0E00               	movlw	0
  6097  0020EA  6E28               	movwf	memset@n+1,c
  6098  0020EC  0E30               	movlw	48
  6099  0020EE  6E27               	movwf	memset@n,c
  6100  0020F0  EC3A  F019         	call	_memset	;wreg free
  6101                           
  6102                           ;usb_device.c: 1985: UCONbits.PPBRST = 1;
  6103  0020F4  8C60               	bsf	3936,6,c	;volatile
  6104                           
  6105                           ;usb_device.c: 1990: for(i = 0; i < (uint8_t)(2+1u); i++)
  6106  0020F6  0E00               	movlw	0
  6107  0020F8  6E37               	movwf	USBStdSetCfgHandler@i,c
  6108  0020FA                     l4024:
  6109  0020FA  0E02               	movlw	2
  6110  0020FC  6437               	cpfsgt	USBStdSetCfgHandler@i,c
  6111  0020FE  D001               	goto	l4028
  6112  002100  D016               	goto	l4034
  6113  002102                     l4028:
  6114                           
  6115                           ;usb_device.c: 1991: {
  6116                           ;usb_device.c: 1992: ep_data_in[i].Val = 0u;
  6117  002102  5037               	movf	USBStdSetCfgHandler@i,w,c
  6118  002104  0D01               	mullw	1
  6119  002106  0E7C               	movlw	low _ep_data_in
  6120  002108  24F3               	addwf	prodl,w,c
  6121  00210A  6ED9               	movwf	fsr2l,c
  6122  00210C  0E00               	movlw	high _ep_data_in
  6123  00210E  20F4               	addwfc	prodh,w,c
  6124  002110  6EDA               	movwf	fsr2h,c
  6125  002112  0E00               	movlw	0
  6126  002114  6EDF               	movwf	indf2,c
  6127                           
  6128                           ;usb_device.c: 1993: ep_data_out[i].Val = 0u;
  6129  002116  5037               	movf	USBStdSetCfgHandler@i,w,c
  6130  002118  0D01               	mullw	1
  6131  00211A  0E7F               	movlw	low _ep_data_out
  6132  00211C  24F3               	addwf	prodl,w,c
  6133  00211E  6ED9               	movwf	fsr2l,c
  6134  002120  0E00               	movlw	high _ep_data_out
  6135  002122  20F4               	addwfc	prodh,w,c
  6136  002124  6EDA               	movwf	fsr2h,c
  6137  002126  0E00               	movlw	0
  6138  002128  6EDF               	movwf	indf2,c
  6139  00212A  2A37               	incf	USBStdSetCfgHandler@i,f,c
  6140  00212C  D7E6               	goto	l4024
  6141  00212E                     l4034:
  6142                           
  6143                           ;usb_device.c: 1994: }
  6144                           ;usb_device.c: 1997: memset((void*)&USBAlternateInterface,0x00,2);
  6145  00212E  0EB2               	movlw	low _USBAlternateInterface
  6146  002130  6E23               	movwf	memset@p1,c
  6147  002132  0E00               	movlw	high _USBAlternateInterface
  6148  002134  6E24               	movwf	memset@p1+1,c
  6149  002136  0E00               	movlw	0
  6150  002138  6E26               	movwf	memset@c+1,c
  6151  00213A  0E00               	movlw	0
  6152  00213C  6E25               	movwf	memset@c,c
  6153  00213E  0E00               	movlw	0
  6154  002140  6E28               	movwf	memset@n+1,c
  6155  002142  0E02               	movlw	2
  6156  002144  6E27               	movwf	memset@n,c
  6157  002146  EC3A  F019         	call	_memset	;wreg free
  6158                           
  6159                           ;usb_device.c: 2000: UCONbits.PPBRST = 0;
  6160  00214A  9C60               	bcf	3936,6,c	;volatile
  6161                           
  6162                           ;usb_device.c: 2002: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6163  00214C  0E08               	movlw	8
  6164  00214E  6E3E               	movwf	_pBDTEntryIn,c
  6165  002150  0E04               	movlw	4
  6166  002152  6E3F               	movwf	_pBDTEntryIn+1,c
  6167                           
  6168                           ;usb_device.c: 2005: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6169  002154  0E00               	movlw	0
  6170  002156  6E46               	movwf	_pBDTEntryEP0OutCurrent,c
  6171  002158  0E04               	movlw	4
  6172  00215A  6E47               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6173                           
  6174                           ;usb_device.c: 2006: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6175  00215C  C046  F048         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6176  002160  C047  F049         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6177                           
  6178                           ;usb_device.c: 2009: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6179  002164  C432 F05C          	movff	1074,_USBActiveConfiguration	;volatile
  6180                           
  6181                           ;usb_device.c: 2012: if(USBActiveConfiguration == 0)
  6182  002168  505C               	movf	_USBActiveConfiguration,w,c
  6183  00216A  A4D8               	btfss	status,2,c
  6184  00216C  D004               	goto	l4050
  6185                           
  6186                           ;usb_device.c: 2013: {
  6187                           ;usb_device.c: 2015: USBDeviceState = ADDRESS_STATE;
  6188  00216E  0E10               	movlw	16
  6189  002170  0100               	movlb	0	; () banked
  6190  002172  6F97               	movwf	_USBDeviceState& (0+255),b
  6191                           
  6192                           ;usb_device.c: 2016: }
  6193  002174  0012               	return	
  6194  002176                     l4050:
  6195                           
  6196                           ;usb_device.c: 2017: else
  6197                           ;usb_device.c: 2018: {
  6198                           ;usb_device.c: 2020: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6199  002176  0E00               	movlw	0
  6200  002178  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6201  00217A  0E01               	movlw	1
  6202  00217C  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6203  00217E  0E5C               	movlw	low _USBActiveConfiguration
  6204  002180  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6205  002182  0E00               	movlw	high _USBActiveConfiguration
  6206  002184  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  6207  002186  0E00               	movlw	0
  6208  002188  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  6209  00218A  0E01               	movlw	1
  6210  00218C  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  6211  00218E  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6212                           
  6213                           ;usb_device.c: 2025: USBDeviceState = CONFIGURED_STATE;
  6214  002192  0E20               	movlw	32
  6215  002194  0100               	movlb	0	; () banked
  6216  002196  6F97               	movwf	_USBDeviceState& (0+255),b
  6217  002198  0012               	return	
  6218                           
  6219                           ; BSR set to: 0
  6220                           
  6221                           ; BSR set to: 0
  6222  00219A  0012               	return		;funcret
  6223  00219C                     __end_of_USBStdSetCfgHandler:
  6224                           	opt stack 0
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           prodh	equ	0xFF4
  6230                           prodl	equ	0xFF3
  6231                           intcon	equ	0xFF2
  6232                           postinc0	equ	0xFEE
  6233                           wreg	equ	0xFE8
  6234                           indf1	equ	0xFE7
  6235                           postdec1	equ	0xFE5
  6236                           fsr1h	equ	0xFE2
  6237                           fsr1l	equ	0xFE1
  6238                           indf2	equ	0xFDF
  6239                           postinc2	equ	0xFDE
  6240                           postdec2	equ	0xFDD
  6241                           plusw2	equ	0xFDB
  6242                           fsr2h	equ	0xFDA
  6243                           fsr2l	equ	0xFD9
  6244                           status	equ	0xFD8
  6245                           
  6246 ;; *************** function _USBStdGetStatusHandler *****************
  6247 ;; Defined at:
  6248 ;;		line 2132 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  p               2   35[COMRAM] PTR struct __BDT
  6253 ;;		 -> NULL(0), BDT(48), 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;		None               void
  6256 ;; Registers used:
  6257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0
  6264 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6265 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6266 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6267 ;;Total ram usage:        3 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    4
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_USBCheckStdRequest
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text20
  6278  0027F0                     __ptext20:
  6279                           	opt stack 0
  6280  0027F0                     _USBStdGetStatusHandler:
  6281                           	opt stack 21
  6282                           
  6283                           ;usb_device.c: 2134: CtrlTrfData[0] = 0;
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;incstack = 0
  6287  0027F0  0E00               	movlw	0
  6288  0027F2  0104               	movlb	4	; () banked
  6289  0027F4  6F38               	movwf	56,b	;volatile
  6290                           
  6291                           ;usb_device.c: 2135: CtrlTrfData[1] = 0;
  6292  0027F6  0E00               	movlw	0
  6293  0027F8  0104               	movlb	4	; () banked
  6294  0027FA  6F39               	movwf	57,b	;volatile
  6295                           
  6296                           ;usb_device.c: 2137: switch(SetupPkt.Recipient)
  6297  0027FC  D03D               	goto	l4106
  6298  0027FE                     l275:
  6299                           
  6300                           ; BSR set to: 4
  6301                           ;usb_device.c: 2145: if(1 == 1)
  6302  0027FE  8E59               	bsf	_inPipes+3,7,c
  6303                           
  6304                           ; BSR set to: 4
  6305                           ;usb_device.c: 2146: {
  6306                           ;usb_device.c: 2147: CtrlTrfData[0]|=0x01;
  6307  002800  0104               	movlb	4	; () banked
  6308  002802  8138               	bsf	56,0,b	;volatile
  6309  002804  D000               	goto	l4090
  6310  002806                     l4090:
  6311                           
  6312                           ; BSR set to: 4
  6313                           ;usb_device.c: 2148: }
  6314                           ;usb_device.c: 2150: if(RemoteWakeup == 1)
  6315  002806  0100               	movlb	0	; () banked
  6316  002808  0595               	decf	_RemoteWakeup& (0+255),w,b
  6317  00280A  A4D8               	btfss	status,2,c
  6318  00280C  D041               	goto	l278
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;usb_device.c: 2151: {
  6322                           ;usb_device.c: 2152: CtrlTrfData[0]|=0x02;
  6323  00280E  0104               	movlb	4	; () banked
  6324  002810  8338               	bsf	56,1,b	;volatile
  6325                           
  6326                           ; BSR set to: 4
  6327                           ;usb_device.c: 2153: }
  6328                           ;usb_device.c: 2154: break;
  6329  002812  D03E               	goto	l278
  6330  002814                     l279:
  6331                           
  6332                           ; BSR set to: 4
  6333                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6334  002814  8E59               	bsf	_inPipes+3,7,c
  6335                           
  6336                           ;usb_device.c: 2157: break;
  6337  002816  D03C               	goto	l278
  6338  002818                     l280:
  6339                           
  6340                           ; BSR set to: 4
  6341                           ;usb_device.c: 2159: inPipes[0].info.bits.busy = 1;
  6342  002818  8E59               	bsf	_inPipes+3,7,c
  6343                           
  6344                           ;usb_device.c: 2163: {
  6345                           ;usb_device.c: 2164: BDT_ENTRY *p;
  6346                           ;usb_device.c: 2166: if(SetupPkt.EPDir == 0)
  6347  00281A  0104               	movlb	4	; () banked
  6348  00281C  BF34               	btfsc	52,7,b	;volatile
  6349  00281E  D00B               	goto	l4096
  6350                           
  6351                           ; BSR set to: 4
  6352                           ;usb_device.c: 2167: {
  6353                           ;usb_device.c: 2168: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6354  002820  0104               	movlb	4	; () banked
  6355  002822  5134               	movf	52,w,b	;volatile
  6356  002824  0B0F               	andlw	15
  6357  002826  6E23               	movwf	??_USBStdGetStatusHandler& (0+255),c
  6358  002828  5023               	movf	??_USBStdGetStatusHandler,w,c
  6359  00282A  0D02               	mullw	2
  6360  00282C  0E72               	movlw	low _pBDTEntryOut
  6361  00282E  24F3               	addwf	prodl,w,c
  6362  002830  6ED9               	movwf	fsr2l,c
  6363  002832  0E00               	movlw	high _pBDTEntryOut
  6364  002834  D00A               	goto	L3
  6365  002836                     l4096:
  6366                           
  6367                           ; BSR set to: 4
  6368                           ;usb_device.c: 2170: else
  6369                           ;usb_device.c: 2171: {
  6370                           ;usb_device.c: 2172: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6371  002836  0104               	movlb	4	; () banked
  6372  002838  5134               	movf	52,w,b	;volatile
  6373  00283A  0B0F               	andlw	15
  6374  00283C  6E23               	movwf	??_USBStdGetStatusHandler& (0+255),c
  6375  00283E  5023               	movf	??_USBStdGetStatusHandler,w,c
  6376  002840  0D02               	mullw	2
  6377  002842  0E3E               	movlw	low _pBDTEntryIn
  6378  002844  24F3               	addwf	prodl,w,c
  6379  002846  6ED9               	movwf	fsr2l,c
  6380  002848  0E00               	movlw	high _pBDTEntryIn
  6381  00284A                     L3:
  6382  00284A  20F4               	addwfc	prodh,w,c
  6383  00284C  6EDA               	movwf	fsr2h,c
  6384  00284E  CFDE F024          	movff	postinc2,USBStdGetStatusHandler@p
  6385  002852  CFDD F025          	movff	postdec2,USBStdGetStatusHandler@p+1
  6386  002856  D000               	goto	l4098
  6387  002858                     l4098:
  6388                           
  6389                           ; BSR set to: 4
  6390                           ;usb_device.c: 2173: }
  6391                           ;usb_device.c: 2175: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6392  002858  C024  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6393  00285C  C025  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6394  002860  AEDF               	btfss	indf2,7,c
  6395  002862  D016               	goto	l278
  6396                           
  6397                           ; BSR set to: 4
  6398  002864  C024  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6399  002868  C025  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6400  00286C  A4DF               	btfss	indf2,2,c
  6401  00286E  D010               	goto	l278
  6402                           
  6403                           ; BSR set to: 4
  6404                           ;usb_device.c: 2176: CtrlTrfData[0]=0x01;
  6405  002870  0E01               	movlw	1
  6406  002872  0104               	movlb	4	; () banked
  6407  002874  6F38               	movwf	56,b	;volatile
  6408                           
  6409                           ; BSR set to: 4
  6410                           ;usb_device.c: 2178: }
  6411                           ;usb_device.c: 2179: }
  6412                           
  6413                           ; BSR set to: 4
  6414                           ;usb_device.c: 2177: break;
  6415  002876  D00C               	goto	l278
  6416  002878                     l4106:
  6417                           
  6418                           ; BSR set to: 4
  6419  002878  0104               	movlb	4	; () banked
  6420  00287A  5130               	movf	48,w,b	;volatile
  6421  00287C  0B1F               	andlw	31
  6422                           
  6423                           ; Switch size 1, requested type "space"
  6424                           ; Number of cases is 3, Range of values is 0 to 2
  6425                           ; switch strategies available:
  6426                           ; Name         Instructions Cycles
  6427                           ; simple_byte           10     6 (average)
  6428                           ;	Chosen strategy is simple_byte
  6429  00287E  0A00               	xorlw	0	; case 0
  6430  002880  B4D8               	btfsc	status,2,c
  6431  002882  D7BD               	goto	l275
  6432  002884  0A01               	xorlw	1	; case 1
  6433  002886  B4D8               	btfsc	status,2,c
  6434  002888  D7C5               	goto	l279
  6435  00288A  0A03               	xorlw	3	; case 2
  6436  00288C  B4D8               	btfsc	status,2,c
  6437  00288E  D7C4               	goto	l280
  6438  002890                     l278:
  6439                           
  6440                           ;usb_device.c: 2181: if(inPipes[0].info.bits.busy == 1)
  6441  002890  AE59               	btfss	_inPipes+3,7,c
  6442  002892  0012               	return	
  6443                           
  6444                           ;usb_device.c: 2182: {
  6445                           ;usb_device.c: 2183: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6446  002894  0E38               	movlw	56
  6447  002896  6E56               	movwf	_inPipes,c
  6448  002898  0E04               	movlw	4
  6449  00289A  6E57               	movwf	_inPipes+1,c
  6450                           
  6451                           ;usb_device.c: 2184: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6452  00289C  8059               	bsf	_inPipes+3,0,c
  6453                           
  6454                           ;usb_device.c: 2185: inPipes[0].wCount.v[0] = 2;
  6455  00289E  0E02               	movlw	2
  6456  0028A0  6E5A               	movwf	_inPipes+4,c
  6457  0028A2  0012               	return	
  6458  0028A4  0012               	return		;funcret
  6459  0028A6                     __end_of_USBStdGetStatusHandler:
  6460                           	opt stack 0
  6461                           tblptru	equ	0xFF8
  6462                           tblptrh	equ	0xFF7
  6463                           tblptrl	equ	0xFF6
  6464                           tablat	equ	0xFF5
  6465                           prodh	equ	0xFF4
  6466                           prodl	equ	0xFF3
  6467                           intcon	equ	0xFF2
  6468                           postinc0	equ	0xFEE
  6469                           wreg	equ	0xFE8
  6470                           indf1	equ	0xFE7
  6471                           postdec1	equ	0xFE5
  6472                           fsr1h	equ	0xFE2
  6473                           fsr1l	equ	0xFE1
  6474                           indf2	equ	0xFDF
  6475                           postinc2	equ	0xFDE
  6476                           postdec2	equ	0xFDD
  6477                           plusw2	equ	0xFDB
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8
  6481                           
  6482 ;; *************** function _USBStdGetDscHandler *****************
  6483 ;; Defined at:
  6484 ;;		line 2046 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6498 ;;      Params:         0       0       0       0       0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6500 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6501 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6502 ;;Total ram usage:        2 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    4
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_USBCheckStdRequest
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text21
  6513  001AA8                     __ptext21:
  6514                           	opt stack 0
  6515  001AA8                     _USBStdGetDscHandler:
  6516                           	opt stack 21
  6517                           
  6518                           ;usb_device.c: 2048: if(SetupPkt.bmRequestType == 0x80)
  6519                           
  6520                           ;incstack = 0
  6521  001AA8  0E80               	movlw	128
  6522  001AAA  0104               	movlb	4	; () banked
  6523  001AAC  1930               	xorwf	48,w,b	;volatile
  6524  001AAE  A4D8               	btfss	status,2,c
  6525  001AB0  0012               	return	
  6526                           
  6527                           ; BSR set to: 4
  6528                           ;usb_device.c: 2049: {
  6529                           ;usb_device.c: 2050: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6530  001AB2  0EC0               	movlw	192
  6531  001AB4  6E59               	movwf	_inPipes+3,c
  6532                           
  6533                           ;usb_device.c: 2052: switch(SetupPkt.bDescriptorType)
  6534  001AB6  D07C               	goto	l4084
  6535  001AB8                     l4058:
  6536                           
  6537                           ; BSR set to: 4
  6538                           ;usb_device.c: 2058: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6539  001AB8  0E8C               	movlw	low _device_dsc
  6540  001ABA  6E56               	movwf	_inPipes,c
  6541  001ABC  0E09               	movlw	high _device_dsc
  6542  001ABE  6E57               	movwf	_inPipes+1,c
  6543                           
  6544                           ; BSR set to: 4
  6545                           ;usb_device.c: 2060: inPipes[0].wCount.Val = sizeof(device_dsc);
  6546  001AC0  0E00               	movlw	0
  6547  001AC2  6E5B               	movwf	_inPipes+5,c
  6548  001AC4  0E12               	movlw	18
  6549  001AC6  6E5A               	movwf	_inPipes+4,c
  6550                           
  6551                           ;usb_device.c: 2061: break;
  6552  001AC8  0012               	return	
  6553  001ACA                     l4062:
  6554                           
  6555                           ; BSR set to: 4
  6556                           ;usb_device.c: 2066: if(SetupPkt.bDscIndex < 1)
  6557  001ACA  0104               	movlb	4	; () banked
  6558  001ACC  5132               	movf	50,w,b	;volatile
  6559  001ACE  A4D8               	btfss	status,2,c
  6560  001AD0  D03E               	goto	l4070
  6561                           
  6562                           ; BSR set to: 4
  6563                           ;usb_device.c: 2067: {
  6564                           ;usb_device.c: 2071: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6565  001AD2  0104               	movlb	4	; () banked
  6566  001AD4  5132               	movf	50,w,b	;volatile
  6567  001AD6  0D02               	mullw	2
  6568  001AD8  0E09               	movlw	low _USB_CD_Ptr
  6569  001ADA  24F3               	addwf	prodl,w,c
  6570  001ADC  6EF6               	movwf	tblptrl,c
  6571  001ADE  0E09               	movlw	high _USB_CD_Ptr
  6572  001AE0  20F4               	addwfc	prodh,w,c
  6573  001AE2  6EF7               	movwf	tblptrh,c
  6574  001AE4                     	if	0	;There are less than 3 active tblptr bytes
  6575  001AE4                     	endif
  6576  001AE4  0009               	tblrd		*+
  6577  001AE6  CFF5 F056          	movff	tablat,_inPipes
  6578  001AEA  000A               	tblrd		*-
  6579  001AEC  CFF5 F057          	movff	tablat,_inPipes+1
  6580                           
  6581                           ; BSR set to: 4
  6582                           ;usb_device.c: 2077: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6583  001AF0  0E02               	movlw	2
  6584  001AF2  2456               	addwf	_inPipes,w,c
  6585  001AF4  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6586  001AF6  0E00               	movlw	0
  6587  001AF8  2057               	addwfc	_inPipes+1,w,c
  6588  001AFA  6E24               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  6589  001AFC  C023  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6590  001B00  C024  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6591  001B04  6AF8               	clrf	tblptru,c
  6592  001B06  0E07               	movlw	(high __ramtop+-1)
  6593  001B08  64F7               	cpfsgt	tblptrh,c
  6594  001B0A  D003               	bra	u2767
  6595  001B0C  0008               	tblrd		*
  6596  001B0E  50F5               	movf	tablat,w,c
  6597  001B10  D005               	bra	u2760
  6598  001B12                     u2767:
  6599  001B12  CFF6 FFE1          	movff	tblptrl,fsr1l
  6600  001B16  CFF7 FFE2          	movff	tblptrh,fsr1h
  6601  001B1A  50E7               	movf	indf1,w,c
  6602  001B1C                     u2760:
  6603  001B1C  6E5A               	movwf	_inPipes+4,c
  6604                           
  6605                           ;usb_device.c: 2078: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6606  001B1E  0E03               	movlw	3
  6607  001B20  2456               	addwf	_inPipes,w,c
  6608  001B22  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6609  001B24  0E00               	movlw	0
  6610  001B26  2057               	addwfc	_inPipes+1,w,c
  6611  001B28  6E24               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  6612  001B2A  C023  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6613  001B2E  C024  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6614  001B32  6AF8               	clrf	tblptru,c
  6615  001B34  0E07               	movlw	(high __ramtop+-1)
  6616  001B36  64F7               	cpfsgt	tblptrh,c
  6617  001B38  D003               	bra	u2777
  6618  001B3A  0008               	tblrd		*
  6619  001B3C  50F5               	movf	tablat,w,c
  6620  001B3E  D005               	bra	u2770
  6621  001B40                     u2777:
  6622  001B40  CFF6 FFE1          	movff	tblptrl,fsr1l
  6623  001B44  CFF7 FFE2          	movff	tblptrh,fsr1h
  6624  001B48  50E7               	movf	indf1,w,c
  6625  001B4A                     u2770:
  6626  001B4A  6E5B               	movwf	_inPipes+5,c
  6627                           
  6628                           ;usb_device.c: 2079: }
  6629  001B4C  0012               	return	
  6630  001B4E                     l4070:
  6631                           
  6632                           ;usb_device.c: 2080: else
  6633                           ;usb_device.c: 2081: {
  6634                           ;usb_device.c: 2082: inPipes[0].info.Val = 0;
  6635  001B4E  0E00               	movlw	0
  6636  001B50  6E59               	movwf	_inPipes+3,c
  6637                           
  6638                           ;usb_device.c: 2083: }
  6639                           ;usb_device.c: 2084: break;
  6640  001B52  0012               	return	
  6641  001B54                     l4072:
  6642                           
  6643                           ;usb_device.c: 2089: if(SetupPkt.bDscIndex<4)
  6644  001B54  0E04               	movlw	4
  6645  001B56  0104               	movlb	4	; () banked
  6646  001B58  6132               	cpfslt	50,b	;volatile
  6647  001B5A  D024               	goto	l4078
  6648                           
  6649                           ; BSR set to: 4
  6650                           ;usb_device.c: 2090: {
  6651                           ;usb_device.c: 2092: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6652  001B5C  0104               	movlb	4	; () banked
  6653  001B5E  5132               	movf	50,w,b	;volatile
  6654  001B60  0D02               	mullw	2
  6655  001B62  0E01               	movlw	low _USB_SD_Ptr
  6656  001B64  24F3               	addwf	prodl,w,c
  6657  001B66  6EF6               	movwf	tblptrl,c
  6658  001B68  0E09               	movlw	high _USB_SD_Ptr
  6659  001B6A  20F4               	addwfc	prodh,w,c
  6660  001B6C  6EF7               	movwf	tblptrh,c
  6661  001B6E                     	if	0	;There are less than 3 active tblptr bytes
  6662  001B6E                     	endif
  6663  001B6E  0009               	tblrd		*+
  6664  001B70  CFF5 F056          	movff	tablat,_inPipes
  6665  001B74  000A               	tblrd		*-
  6666  001B76  CFF5 F057          	movff	tablat,_inPipes+1
  6667                           
  6668                           ; BSR set to: 4
  6669                           ;usb_device.c: 2094: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6670  001B7A  C056  FFF6         	movff	_inPipes,tblptrl
  6671  001B7E  C057  FFF7         	movff	_inPipes+1,tblptrh
  6672  001B82  6AF8               	clrf	tblptru,c
  6673  001B84  0E07               	movlw	(high __ramtop+-1)
  6674  001B86  64F7               	cpfsgt	tblptrh,c
  6675  001B88  D003               	bra	u2797
  6676  001B8A  0008               	tblrd		*
  6677  001B8C  50F5               	movf	tablat,w,c
  6678  001B8E  D005               	bra	u2790
  6679  001B90                     u2797:
  6680  001B90  CFF6 FFE1          	movff	tblptrl,fsr1l
  6681  001B94  CFF7 FFE2          	movff	tblptrh,fsr1h
  6682  001B98  50E7               	movf	indf1,w,c
  6683  001B9A                     u2790:
  6684  001B9A  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6685  001B9C  5023               	movf	??_USBStdGetDscHandler,w,c
  6686  001B9E  6E5A               	movwf	_inPipes+4,c
  6687  001BA0  6A5B               	clrf	_inPipes+5,c
  6688                           
  6689                           ;usb_device.c: 2095: }
  6690  001BA2  0012               	return	
  6691  001BA4                     l4078:
  6692                           
  6693                           ;usb_device.c: 2105: else
  6694                           ;usb_device.c: 2106: {
  6695                           ;usb_device.c: 2107: inPipes[0].info.Val = 0;
  6696  001BA4  0E00               	movlw	0
  6697  001BA6  6E59               	movwf	_inPipes+3,c
  6698                           
  6699                           ;usb_device.c: 2108: }
  6700                           ;usb_device.c: 2109: break;
  6701  001BA8  0012               	return	
  6702  001BAA                     l4080:
  6703                           
  6704                           ;usb_device.c: 2111: inPipes[0].info.Val = 0;
  6705  001BAA  0E00               	movlw	0
  6706  001BAC  6E59               	movwf	_inPipes+3,c
  6707                           
  6708                           ;usb_device.c: 2113: }
  6709                           
  6710                           ;usb_device.c: 2112: break;
  6711  001BAE  0012               	return	
  6712  001BB0                     l4084:
  6713  001BB0  0104               	movlb	4	; () banked
  6714  001BB2  5133               	movf	51,w,b	;volatile
  6715                           
  6716                           ; Switch size 1, requested type "space"
  6717                           ; Number of cases is 3, Range of values is 1 to 3
  6718                           ; switch strategies available:
  6719                           ; Name         Instructions Cycles
  6720                           ; simple_byte           10     6 (average)
  6721                           ;	Chosen strategy is simple_byte
  6722  001BB4  0A01               	xorlw	1	; case 1
  6723  001BB6  B4D8               	btfsc	status,2,c
  6724  001BB8  D77F               	goto	l4058
  6725  001BBA  0A03               	xorlw	3	; case 2
  6726  001BBC  B4D8               	btfsc	status,2,c
  6727  001BBE  D785               	goto	l4062
  6728  001BC0  0A01               	xorlw	1	; case 3
  6729  001BC2  B4D8               	btfsc	status,2,c
  6730  001BC4  D7C7               	goto	l4072
  6731  001BC6  D7F1               	goto	l4080
  6732                           
  6733                           ; BSR set to: 4
  6734  001BC8  0012               	return	
  6735                           
  6736                           ; BSR set to: 4
  6737  001BCA  0012               	return		;funcret
  6738  001BCC                     __end_of_USBStdGetDscHandler:
  6739                           	opt stack 0
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           intcon	equ	0xFF2
  6747                           postinc0	equ	0xFEE
  6748                           wreg	equ	0xFE8
  6749                           indf1	equ	0xFE7
  6750                           postdec1	equ	0xFE5
  6751                           fsr1h	equ	0xFE2
  6752                           fsr1l	equ	0xFE1
  6753                           indf2	equ	0xFDF
  6754                           postinc2	equ	0xFDE
  6755                           postdec2	equ	0xFDD
  6756                           plusw2	equ	0xFDB
  6757                           fsr2h	equ	0xFDA
  6758                           fsr2l	equ	0xFD9
  6759                           status	equ	0xFD8
  6760                           
  6761 ;; *************** function _USBStdFeatureReqHandler *****************
  6762 ;; Defined at:
  6763 ;;		line 2760 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;		None
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  p               2   58[COMRAM] PTR struct __BDT
  6768 ;;		 -> NULL(0), BDT(48), 
  6769 ;;  pUEP            2   55[COMRAM] PTR unsigned char 
  6770 ;;		 -> UEP0(1), RAM(2047), 
  6771 ;;  current_ep_d    1   57[COMRAM] struct .
  6772 ;; Return value:  Size  Location     Type
  6773 ;;		None               void
  6774 ;; Registers used:
  6775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6784 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:        6 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    8
  6788 ;; This function calls:
  6789 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6790 ;; This function is called by:
  6791 ;;		_USBCheckStdRequest
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text22
  6796  000E56                     __ptext22:
  6797                           	opt stack 0
  6798  000E56                     _USBStdFeatureReqHandler:
  6799                           	opt stack 17
  6800                           
  6801                           ;usb_device.c: 2762: BDT_ENTRY *p;
  6802                           ;usb_device.c: 2763: EP_STATUS current_ep_data;
  6803                           ;usb_device.c: 2767: unsigned char* pUEP;
  6804                           ;usb_device.c: 2805: if((SetupPkt.bFeature == 1)&&
  6805                           ;usb_device.c: 2806: (SetupPkt.Recipient == (0x00)))
  6806                           
  6807                           ;incstack = 0
  6808  000E56  0104               	movlb	4	; () banked
  6809  000E58  0532               	decf	50,w,b	;volatile
  6810  000E5A  A4D8               	btfss	status,2,c
  6811  000E5C  D012               	goto	l354
  6812                           
  6813                           ; BSR set to: 4
  6814  000E5E  0104               	movlb	4	; () banked
  6815  000E60  5130               	movf	48,w,b	;volatile
  6816  000E62  0B1F               	andlw	31
  6817  000E64  0900               	iorlw	0
  6818  000E66  A4D8               	btfss	status,2,c
  6819  000E68  D00C               	goto	l354
  6820                           
  6821                           ; BSR set to: 4
  6822                           ;usb_device.c: 2807: {
  6823                           ;usb_device.c: 2808: inPipes[0].info.bits.busy = 1;
  6824  000E6A  8E59               	bsf	_inPipes+3,7,c
  6825                           
  6826                           ; BSR set to: 4
  6827                           ;usb_device.c: 2809: if(SetupPkt.bRequest == 3)
  6828  000E6C  0E03               	movlw	3
  6829  000E6E  0104               	movlb	4	; () banked
  6830  000E70  1931               	xorwf	49,w,b	;volatile
  6831  000E72  A4D8               	btfss	status,2,c
  6832  000E74  D002               	goto	l4124
  6833                           
  6834                           ; BSR set to: 4
  6835                           ;usb_device.c: 2810: RemoteWakeup = 1;
  6836  000E76  0E01               	movlw	1
  6837  000E78  D001               	goto	L4
  6838  000E7A                     l4124:
  6839                           
  6840                           ;usb_device.c: 2811: else
  6841                           ;usb_device.c: 2812: RemoteWakeup = 0;
  6842  000E7A  0E00               	movlw	0
  6843  000E7C                     L4:
  6844  000E7C  0100               	movlb	0	; () banked
  6845  000E7E  6F95               	movwf	_RemoteWakeup& (0+255),b
  6846  000E80  D000               	goto	l354
  6847  000E82                     l354:
  6848                           
  6849                           ;usb_device.c: 2813: }
  6850                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 0)&&
  6851                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x02))&&
  6852                           ;usb_device.c: 2818: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6853                           ;usb_device.c: 2819: (USBDeviceState == CONFIGURED_STATE))
  6854  000E82  0104               	movlb	4	; () banked
  6855  000E84  5132               	movf	50,w,b	;volatile
  6856  000E86  A4D8               	btfss	status,2,c
  6857  000E88  0012               	return	
  6858                           
  6859                           ; BSR set to: 4
  6860  000E8A  0104               	movlb	4	; () banked
  6861  000E8C  5130               	movf	48,w,b	;volatile
  6862  000E8E  0B1F               	andlw	31
  6863  000E90  0A02               	xorlw	2
  6864  000E92  A4D8               	btfss	status,2,c
  6865  000E94  0012               	return	
  6866                           
  6867                           ; BSR set to: 4
  6868  000E96  0104               	movlb	4	; () banked
  6869  000E98  5134               	movf	52,w,b	;volatile
  6870  000E9A  0B0F               	andlw	15
  6871  000E9C  0900               	iorlw	0
  6872  000E9E  B4D8               	btfsc	status,2,c
  6873  000EA0  0012               	return	
  6874                           
  6875                           ; BSR set to: 4
  6876  000EA2  0104               	movlb	4	; () banked
  6877  000EA4  5134               	movf	52,w,b	;volatile
  6878  000EA6  0B0F               	andlw	15
  6879  000EA8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6880  000EAA  0E03               	movlw	3
  6881  000EAC  6037               	cpfslt	??_USBStdFeatureReqHandler,c
  6882  000EAE  0012               	return	
  6883                           
  6884                           ; BSR set to: 4
  6885  000EB0  0E20               	movlw	32
  6886  000EB2  0100               	movlb	0	; () banked
  6887  000EB4  1997               	xorwf	_USBDeviceState& (0+255),w,b
  6888  000EB6  A4D8               	btfss	status,2,c
  6889  000EB8  0012               	return	
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;usb_device.c: 2820: {
  6893                           ;usb_device.c: 2823: inPipes[0].info.bits.busy = 1;
  6894  000EBA  8E59               	bsf	_inPipes+3,7,c
  6895                           
  6896                           ;usb_device.c: 2826: if(SetupPkt.EPDir == 0)
  6897  000EBC  0104               	movlb	4	; () banked
  6898  000EBE  BF34               	btfsc	52,7,b	;volatile
  6899  000EC0  D01B               	goto	l4138
  6900                           
  6901                           ; BSR set to: 4
  6902                           ;usb_device.c: 2827: {
  6903                           ;usb_device.c: 2828: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6904  000EC2  0104               	movlb	4	; () banked
  6905  000EC4  5134               	movf	52,w,b	;volatile
  6906  000EC6  0B0F               	andlw	15
  6907  000EC8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6908  000ECA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6909  000ECC  0D02               	mullw	2
  6910  000ECE  0E72               	movlw	low _pBDTEntryOut
  6911  000ED0  24F3               	addwf	prodl,w,c
  6912  000ED2  6ED9               	movwf	fsr2l,c
  6913  000ED4  0E00               	movlw	high _pBDTEntryOut
  6914  000ED6  20F4               	addwfc	prodh,w,c
  6915  000ED8  6EDA               	movwf	fsr2h,c
  6916  000EDA  CFDE F03B          	movff	postinc2,USBStdFeatureReqHandler@p
  6917  000EDE  CFDD F03C          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6918                           
  6919                           ;usb_device.c: 2829: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6920  000EE2  0104               	movlb	4	; () banked
  6921  000EE4  5134               	movf	52,w,b	;volatile
  6922  000EE6  0B0F               	andlw	15
  6923  000EE8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6924  000EEA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6925  000EEC  0D01               	mullw	1
  6926  000EEE  0E7F               	movlw	low _ep_data_out
  6927  000EF0  24F3               	addwf	prodl,w,c
  6928  000EF2  6ED9               	movwf	fsr2l,c
  6929  000EF4  0E00               	movlw	high _ep_data_out
  6930  000EF6  D01A               	goto	L5
  6931  000EF8                     l4138:
  6932                           
  6933                           ; BSR set to: 4
  6934                           ;usb_device.c: 2831: else
  6935                           ;usb_device.c: 2832: {
  6936                           ;usb_device.c: 2833: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6937  000EF8  0104               	movlb	4	; () banked
  6938  000EFA  5134               	movf	52,w,b	;volatile
  6939  000EFC  0B0F               	andlw	15
  6940  000EFE  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6941  000F00  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6942  000F02  0D02               	mullw	2
  6943  000F04  0E3E               	movlw	low _pBDTEntryIn
  6944  000F06  24F3               	addwf	prodl,w,c
  6945  000F08  6ED9               	movwf	fsr2l,c
  6946  000F0A  0E00               	movlw	high _pBDTEntryIn
  6947  000F0C  20F4               	addwfc	prodh,w,c
  6948  000F0E  6EDA               	movwf	fsr2h,c
  6949  000F10  CFDE F03B          	movff	postinc2,USBStdFeatureReqHandler@p
  6950  000F14  CFDD F03C          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6951                           
  6952                           ;usb_device.c: 2834: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6953  000F18  0104               	movlb	4	; () banked
  6954  000F1A  5134               	movf	52,w,b	;volatile
  6955  000F1C  0B0F               	andlw	15
  6956  000F1E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6957  000F20  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6958  000F22  0D01               	mullw	1
  6959  000F24  0E7C               	movlw	low _ep_data_in
  6960  000F26  24F3               	addwf	prodl,w,c
  6961  000F28  6ED9               	movwf	fsr2l,c
  6962  000F2A  0E00               	movlw	high _ep_data_in
  6963  000F2C                     L5:
  6964  000F2C  20F4               	addwfc	prodh,w,c
  6965  000F2E  6EDA               	movwf	fsr2h,c
  6966  000F30  50DF               	movf	indf2,w,c
  6967  000F32  6E3A               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  6968  000F34  D000               	goto	l4140
  6969  000F36                     l4140:
  6970                           
  6971                           ; BSR set to: 4
  6972                           ;usb_device.c: 2835: }
  6973                           ;usb_device.c: 2841: if(current_ep_data.bits.ping_pong_state == 0)
  6974  000F36  B03A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  6975  000F38  D002               	goto	l4144
  6976                           
  6977                           ; BSR set to: 4
  6978                           ;usb_device.c: 2842: {
  6979                           ;usb_device.c: 2843: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6980  000F3A  943B               	bcf	USBStdFeatureReqHandler@p,2,c
  6981                           
  6982                           ;usb_device.c: 2844: }
  6983  000F3C  D002               	goto	l4146
  6984  000F3E                     l4144:
  6985                           
  6986                           ; BSR set to: 4
  6987                           ;usb_device.c: 2845: else
  6988                           ;usb_device.c: 2846: {
  6989                           ;usb_device.c: 2847: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6990  000F3E  843B               	bsf	USBStdFeatureReqHandler@p,2,c
  6991  000F40  D000               	goto	l4146
  6992  000F42                     l4146:
  6993                           
  6994                           ; BSR set to: 4
  6995                           ;usb_device.c: 2848: }
  6996                           ;usb_device.c: 2853: if(SetupPkt.EPDir == 0)
  6997  000F42  0104               	movlb	4	; () banked
  6998  000F44  BF34               	btfsc	52,7,b	;volatile
  6999  000F46  D00B               	goto	l4150
  7000                           
  7001                           ; BSR set to: 4
  7002                           ;usb_device.c: 2854: {
  7003                           ;usb_device.c: 2855: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7004  000F48  0104               	movlb	4	; () banked
  7005  000F4A  5134               	movf	52,w,b	;volatile
  7006  000F4C  0B0F               	andlw	15
  7007  000F4E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7008  000F50  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7009  000F52  0D02               	mullw	2
  7010  000F54  0E72               	movlw	low _pBDTEntryOut
  7011  000F56  24F3               	addwf	prodl,w,c
  7012  000F58  6ED9               	movwf	fsr2l,c
  7013  000F5A  0E00               	movlw	high _pBDTEntryOut
  7014  000F5C  D00A               	goto	L6
  7015  000F5E                     l4150:
  7016                           
  7017                           ; BSR set to: 4
  7018                           ;usb_device.c: 2857: else
  7019                           ;usb_device.c: 2858: {
  7020                           ;usb_device.c: 2859: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7021  000F5E  0104               	movlb	4	; () banked
  7022  000F60  5134               	movf	52,w,b	;volatile
  7023  000F62  0B0F               	andlw	15
  7024  000F64  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7025  000F66  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7026  000F68  0D02               	mullw	2
  7027  000F6A  0E3E               	movlw	low _pBDTEntryIn
  7028  000F6C  24F3               	addwf	prodl,w,c
  7029  000F6E  6ED9               	movwf	fsr2l,c
  7030  000F70  0E00               	movlw	high _pBDTEntryIn
  7031  000F72                     L6:
  7032  000F72  20F4               	addwfc	prodh,w,c
  7033  000F74  6EDA               	movwf	fsr2h,c
  7034  000F76  C03B  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7035  000F7A  C03C  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7036  000F7E  D000               	goto	l4152
  7037  000F80                     l4152:
  7038                           
  7039                           ; BSR set to: 4
  7040                           ;usb_device.c: 2860: }
  7041                           ;usb_device.c: 2863: if(SetupPkt.bRequest == 3)
  7042  000F80  0E03               	movlw	3
  7043  000F82  0104               	movlb	4	; () banked
  7044  000F84  1931               	xorwf	49,w,b	;volatile
  7045  000F86  A4D8               	btfss	status,2,c
  7046  000F88  D030               	goto	l4166
  7047                           
  7048                           ; BSR set to: 4
  7049                           ;usb_device.c: 2864: {
  7050                           ;usb_device.c: 2865: if(p->STAT.UOWN == 1)
  7051  000F8A  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7052  000F8E  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7053  000F92  AEDF               	btfss	indf2,7,c
  7054  000F94  D01D               	goto	l4162
  7055                           
  7056                           ; BSR set to: 4
  7057                           ;usb_device.c: 2866: {
  7058                           ;usb_device.c: 2869: if(SetupPkt.EPDir == 0)
  7059  000F96  0104               	movlb	4	; () banked
  7060  000F98  BF34               	btfsc	52,7,b	;volatile
  7061  000F9A  D00B               	goto	l4160
  7062                           
  7063                           ; BSR set to: 4
  7064                           ;usb_device.c: 2870: {
  7065                           ;usb_device.c: 2871: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7066  000F9C  0104               	movlb	4	; () banked
  7067  000F9E  5134               	movf	52,w,b	;volatile
  7068  000FA0  0B0F               	andlw	15
  7069  000FA2  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7070  000FA4  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7071  000FA6  0D01               	mullw	1
  7072  000FA8  0E7F               	movlw	low _ep_data_out
  7073  000FAA  24F3               	addwf	prodl,w,c
  7074  000FAC  6ED9               	movwf	fsr2l,c
  7075  000FAE  0E00               	movlw	high _ep_data_out
  7076  000FB0  D00A               	goto	L7
  7077  000FB2                     l4160:
  7078                           
  7079                           ;usb_device.c: 2873: else
  7080                           ;usb_device.c: 2874: {
  7081                           ;usb_device.c: 2875: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7082  000FB2  0104               	movlb	4	; () banked
  7083  000FB4  5134               	movf	52,w,b	;volatile
  7084  000FB6  0B0F               	andlw	15
  7085  000FB8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7086  000FBA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7087  000FBC  0D01               	mullw	1
  7088  000FBE  0E7C               	movlw	low _ep_data_in
  7089  000FC0  24F3               	addwf	prodl,w,c
  7090  000FC2  6ED9               	movwf	fsr2l,c
  7091  000FC4  0E00               	movlw	high _ep_data_in
  7092  000FC6                     L7:
  7093  000FC6  20F4               	addwfc	prodh,w,c
  7094  000FC8  6EDA               	movwf	fsr2h,c
  7095  000FCA  0100               	movlb	0	; () banked
  7096  000FCC  82DF               	bsf	indf2,1,c
  7097                           
  7098                           ; BSR set to: 0
  7099  000FCE  D000               	goto	l4162
  7100  000FD0                     l4162:
  7101                           
  7102                           ;usb_device.c: 2876: }
  7103                           ;usb_device.c: 2877: }
  7104                           ;usb_device.c: 2880: p->STAT.Val |= 0x04;
  7105  000FD0  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7106  000FD4  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7107  000FD8  0E00               	movlw	0
  7108  000FDA  84DB               	bsf	plusw2,2,c
  7109                           
  7110                           ;usb_device.c: 2881: p->STAT.Val |= 0x80;
  7111  000FDC  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7112  000FE0  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7113  000FE4  0E00               	movlw	0
  7114  000FE6  8EDB               	bsf	plusw2,7,c
  7115                           
  7116                           ;usb_device.c: 2882: }
  7117  000FE8  0012               	return	
  7118  000FEA                     l4166:
  7119                           
  7120                           ;usb_device.c: 2883: else
  7121                           ;usb_device.c: 2884: {
  7122                           ;usb_device.c: 2888: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7123  000FEA  0E04               	movlw	4
  7124  000FEC  1A3B               	xorwf	USBStdFeatureReqHandler@p,f,c
  7125                           
  7126                           ;usb_device.c: 2890: if(p->STAT.UOWN == 1)
  7127  000FEE  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7128  000FF2  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7129  000FF6  AEDF               	btfss	indf2,7,c
  7130  000FF8  D01B               	goto	l4176
  7131                           
  7132                           ;usb_device.c: 2891: {
  7133                           ;usb_device.c: 2894: p->STAT.Val &= (~0x80);
  7134  000FFA  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7135  000FFE  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7136  001002  0E7F               	movlw	127
  7137  001004  16DF               	andwf	indf2,f,c
  7138                           
  7139                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7140  001006  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7141  00100A  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7142  00100E  0E00               	movlw	0
  7143  001010  8CDB               	bsf	plusw2,6,c
  7144                           
  7145                           ;usb_device.c: 2896: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7146  001012  0E00               	movlw	0
  7147  001014  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7148  001016  0E05               	movlw	5
  7149  001018  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7150  00101A  C03B  F031         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7151  00101E  C03C  F032         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7152  001022  0E00               	movlw	0
  7153  001024  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7154  001026  0E02               	movlw	2
  7155  001028  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7156  00102A  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7157                           
  7158                           ;usb_device.c: 2897: }
  7159  00102E  D007               	goto	l4178
  7160  001030                     l4176:
  7161                           
  7162                           ;usb_device.c: 2898: else
  7163                           ;usb_device.c: 2899: {
  7164                           ;usb_device.c: 2901: p->STAT.Val |= 0x40;
  7165  001030  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7166  001034  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7167  001038  0E00               	movlw	0
  7168  00103A  8CDB               	bsf	plusw2,6,c
  7169  00103C  D000               	goto	l4178
  7170  00103E                     l4178:
  7171                           
  7172                           ;usb_device.c: 2902: }
  7173                           ;usb_device.c: 2906: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7174  00103E  0E04               	movlw	4
  7175  001040  1A3B               	xorwf	USBStdFeatureReqHandler@p,f,c
  7176                           
  7177                           ;usb_device.c: 2912: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7178  001042  B23A               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7179  001044  D006               	goto	l373
  7180  001046  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7181  00104A  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7182  00104E  AEDF               	btfss	indf2,7,c
  7183  001050  D032               	goto	l4192
  7184  001052                     l373:
  7185                           
  7186                           ;usb_device.c: 2913: {
  7187                           ;usb_device.c: 2914: if(SetupPkt.EPDir == 0)
  7188  001052  0104               	movlb	4	; () banked
  7189  001054  BF34               	btfsc	52,7,b	;volatile
  7190  001056  D00B               	goto	l4186
  7191                           
  7192                           ; BSR set to: 4
  7193                           ;usb_device.c: 2915: {
  7194                           ;usb_device.c: 2916: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7195  001058  0104               	movlb	4	; () banked
  7196  00105A  5134               	movf	52,w,b	;volatile
  7197  00105C  0B0F               	andlw	15
  7198  00105E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7199  001060  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7200  001062  0D01               	mullw	1
  7201  001064  0E7F               	movlw	low _ep_data_out
  7202  001066  24F3               	addwf	prodl,w,c
  7203  001068  6ED9               	movwf	fsr2l,c
  7204  00106A  0E00               	movlw	high _ep_data_out
  7205  00106C  D00A               	goto	L8
  7206  00106E                     l4186:
  7207                           
  7208                           ;usb_device.c: 2918: else
  7209                           ;usb_device.c: 2919: {
  7210                           ;usb_device.c: 2920: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7211  00106E  0104               	movlb	4	; () banked
  7212  001070  5134               	movf	52,w,b	;volatile
  7213  001072  0B0F               	andlw	15
  7214  001074  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7215  001076  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7216  001078  0D01               	mullw	1
  7217  00107A  0E7C               	movlw	low _ep_data_in
  7218  00107C  24F3               	addwf	prodl,w,c
  7219  00107E  6ED9               	movwf	fsr2l,c
  7220  001080  0E00               	movlw	high _ep_data_in
  7221  001082                     L8:
  7222  001082  20F4               	addwfc	prodh,w,c
  7223  001084  6EDA               	movwf	fsr2h,c
  7224  001086  0100               	movlb	0	; () banked
  7225  001088  92DF               	bcf	indf2,1,c
  7226  00108A  D000               	goto	l4188
  7227  00108C                     l4188:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;usb_device.c: 2921: }
  7231                           ;usb_device.c: 2923: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7232  00108C  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7233  001090  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7234  001094  0E3B               	movlw	59
  7235  001096  16DF               	andwf	indf2,f,c
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;usb_device.c: 2926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7239  001098  0E00               	movlw	0
  7240  00109A  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7241  00109C  0E05               	movlw	5
  7242  00109E  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7243  0010A0  C03B  F031         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7244  0010A4  C03C  F032         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7245  0010A8  0E00               	movlw	0
  7246  0010AA  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7247  0010AC  0E02               	movlw	2
  7248  0010AE  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7249  0010B0  EC32  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7250                           
  7251                           ;usb_device.c: 2927: }
  7252  0010B4  D007               	goto	l4194
  7253  0010B6                     l4192:
  7254                           
  7255                           ;usb_device.c: 2928: else
  7256                           ;usb_device.c: 2929: {
  7257                           ;usb_device.c: 2931: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7258  0010B6  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7259  0010BA  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7260  0010BE  0E3B               	movlw	59
  7261  0010C0  16DF               	andwf	indf2,f,c
  7262  0010C2  D000               	goto	l4194
  7263  0010C4                     l4194:
  7264                           
  7265                           ;usb_device.c: 2932: }
  7266                           ;usb_device.c: 2979: pUEP = (unsigned char*)(&*U1EP0_R+SetupPkt.EPNum);
  7267  0010C4  0104               	movlb	4	; () banked
  7268  0010C6  5134               	movf	52,w,b	;volatile
  7269  0010C8  0B0F               	andlw	15
  7270  0010CA  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7271  0010CC  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7272  0010CE  0D01               	mullw	1
  7273  0010D0  50F3               	movf	prodl,w,c
  7274  0010D2  245D               	addwf	_U1EP0_R,w,c
  7275  0010D4  6E38               	movwf	USBStdFeatureReqHandler@pUEP,c
  7276  0010D6  50F4               	movf	prodh,w,c
  7277  0010D8  205E               	addwfc	_U1EP0_R+1,w,c
  7278  0010DA  6E39               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7279                           
  7280                           ; BSR set to: 4
  7281                           ;usb_device.c: 2983: *pUEP &= ~0x0001;
  7282  0010DC  C038  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7283  0010E0  C039  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7284  0010E4  0EFE               	movlw	254
  7285  0010E6  16DF               	andwf	indf2,f,c
  7286                           
  7287                           ; BSR set to: 4
  7288  0010E8  0012               	return	
  7289                           
  7290                           ; BSR set to: 4
  7291  0010EA  0012               	return		;funcret
  7292  0010EC                     __end_of_USBStdFeatureReqHandler:
  7293                           	opt stack 0
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           prodh	equ	0xFF4
  7299                           prodl	equ	0xFF3
  7300                           intcon	equ	0xFF2
  7301                           postinc0	equ	0xFEE
  7302                           wreg	equ	0xFE8
  7303                           indf1	equ	0xFE7
  7304                           postdec1	equ	0xFE5
  7305                           fsr1h	equ	0xFE2
  7306                           fsr1l	equ	0xFE1
  7307                           indf2	equ	0xFDF
  7308                           postinc2	equ	0xFDE
  7309                           postdec2	equ	0xFDD
  7310                           plusw2	equ	0xFDB
  7311                           fsr2h	equ	0xFDA
  7312                           fsr2l	equ	0xFD9
  7313                           status	equ	0xFD8
  7314                           
  7315 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7316 ;; Defined at:
  7317 ;;		line 271 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  event           2   46[COMRAM] enum E7520
  7320 ;;  pdata           2   48[COMRAM] PTR void 
  7321 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  7322 ;;  size            2   50[COMRAM] unsigned int 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;		None
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  1    wreg      unsigned char 
  7327 ;; Registers used:
  7328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7334 ;;      Params:         6       0       0       0       0       0       0       0       0
  7335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7336 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7337 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7338 ;;Total ram usage:        8 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; Hardware stack levels required when called:    7
  7341 ;; This function calls:
  7342 ;;		_CDCInitEP
  7343 ;;		_USBCheckCDCRequest
  7344 ;; This function is called by:
  7345 ;;		_USBDeviceTasks
  7346 ;;		_USBStdSetCfgHandler
  7347 ;;		_USBSuspend
  7348 ;;		_USBWakeFromSuspend
  7349 ;;		_USBCtrlTrfSetupHandler
  7350 ;;		_USBCheckStdRequest
  7351 ;;		_USBStdFeatureReqHandler
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text23
  7356  002E64                     __ptext23:
  7357                           	opt stack 0
  7358  002E64                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7359                           	opt stack 21
  7360                           
  7361                           ;karate.c: 273: switch( (int) event )
  7362                           
  7363                           ;incstack = 0
  7364  002E64  D007               	goto	l3906
  7365                           
  7366                           ;karate.c: 289: break;
  7367                           
  7368                           ;karate.c: 287: case EVENT_RESUME:
  7369                           
  7370                           ;karate.c: 285: break;
  7371                           
  7372                           ;karate.c: 283: case EVENT_SUSPEND:
  7373                           
  7374                           ;karate.c: 281: break;
  7375                           
  7376                           ;karate.c: 278: case EVENT_SOF:
  7377                           
  7378                           ;karate.c: 276: break;
  7379                           
  7380                           ;karate.c: 274: {
  7381                           ;karate.c: 275: case EVENT_TRANSFER:
  7382  002E66  0012               	return	
  7383  002E68                     l3900:
  7384                           
  7385                           ;karate.c: 294: CDCInitEP();
  7386  002E68  EC99  F016         	call	_CDCInitEP	;wreg free
  7387                           
  7388                           ;karate.c: 298: break;
  7389                           
  7390                           ;karate.c: 297: case EVENT_SET_DESCRIPTOR:
  7391                           
  7392                           ;karate.c: 295: break;
  7393  002E6C  0012               	return	
  7394  002E6E                     l3902:
  7395                           
  7396                           ;karate.c: 303: USBCheckCDCRequest();
  7397  002E6E  EC7A  F012         	call	_USBCheckCDCRequest	;wreg free
  7398                           
  7399                           ;karate.c: 314: }
  7400                           
  7401                           ;karate.c: 313: break;
  7402                           
  7403                           ;karate.c: 312: default:
  7404                           
  7405                           ;karate.c: 310: break;
  7406                           
  7407                           ;karate.c: 309: case EVENT_TRANSFER_TERMINATED:
  7408                           
  7409                           ;karate.c: 307: break;
  7410                           
  7411                           ;karate.c: 306: case EVENT_BUS_ERROR:
  7412                           
  7413                           ;karate.c: 304: break;
  7414  002E72  0012               	return	
  7415  002E74                     l3906:
  7416  002E74  C02F  F035         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7417  002E78  C030  F036         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7418                           
  7419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7420                           ; Switch size 1, requested type "space"
  7421                           ; Number of cases is 2, Range of values is 0 to 127
  7422                           ; switch strategies available:
  7423                           ; Name         Instructions Cycles
  7424                           ; simple_byte            7     4 (average)
  7425                           ;	Chosen strategy is simple_byte
  7426  002E7C  5036               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7427  002E7E  0A00               	xorlw	0	; case 0
  7428  002E80  B4D8               	btfsc	status,2,c
  7429  002E82  D004               	goto	l5732
  7430  002E84  0A7F               	xorlw	127	; case 127
  7431  002E86  A4D8               	btfss	status,2,c
  7432  002E88  0012               	return	
  7433  002E8A  D018               	goto	l5734
  7434  002E8C                     l5732:
  7435                           
  7436                           ; Switch size 1, requested type "space"
  7437                           ; Number of cases is 8, Range of values is 1 to 117
  7438                           ; switch strategies available:
  7439                           ; Name         Instructions Cycles
  7440                           ; simple_byte           25    13 (average)
  7441                           ;	Chosen strategy is simple_byte
  7442  002E8C  5035               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7443  002E8E  0A01               	xorlw	1	; case 1
  7444  002E90  B4D8               	btfsc	status,2,c
  7445  002E92  D7EA               	goto	l3900
  7446  002E94  0A03               	xorlw	3	; case 2
  7447  002E96  B4D8               	btfsc	status,2,c
  7448  002E98  0012               	return	
  7449  002E9A  0A01               	xorlw	1	; case 3
  7450  002E9C  B4D8               	btfsc	status,2,c
  7451  002E9E  D7E7               	goto	l3902
  7452  002EA0  0A06               	xorlw	6	; case 5
  7453  002EA2  B4D8               	btfsc	status,2,c
  7454  002EA4  0012               	return	
  7455  002EA6  0A77               	xorlw	119	; case 114
  7456  002EA8  B4D8               	btfsc	status,2,c
  7457  002EAA  0012               	return	
  7458  002EAC  0A01               	xorlw	1	; case 115
  7459  002EAE  B4D8               	btfsc	status,2,c
  7460  002EB0  0012               	return	
  7461  002EB2  0A07               	xorlw	7	; case 116
  7462  002EB4  B4D8               	btfsc	status,2,c
  7463  002EB6  0012               	return	
  7464  002EB8  0A01               	xorlw	1	; case 117
  7465  002EBA  0012               	return	
  7466  002EBC                     l5734:
  7467                           
  7468                           ; Switch size 1, requested type "space"
  7469                           ; Number of cases is 1, Range of values is 255 to 255
  7470                           ; switch strategies available:
  7471                           ; Name         Instructions Cycles
  7472                           ; simple_byte            4     3 (average)
  7473                           ;	Chosen strategy is simple_byte
  7474  002EBC  5035               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7475  002EBE  0AFF               	xorlw	255	; case 255
  7476  002EC0  0012               	return	
  7477                           
  7478                           ;karate.c: 315: return 1;
  7479                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7480  002EC2  0012               	return		;funcret
  7481  002EC4                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7482                           	opt stack 0
  7483                           tblptru	equ	0xFF8
  7484                           tblptrh	equ	0xFF7
  7485                           tblptrl	equ	0xFF6
  7486                           tablat	equ	0xFF5
  7487                           prodh	equ	0xFF4
  7488                           prodl	equ	0xFF3
  7489                           intcon	equ	0xFF2
  7490                           postinc0	equ	0xFEE
  7491                           wreg	equ	0xFE8
  7492                           indf1	equ	0xFE7
  7493                           postdec1	equ	0xFE5
  7494                           fsr1h	equ	0xFE2
  7495                           fsr1l	equ	0xFE1
  7496                           indf2	equ	0xFDF
  7497                           postinc2	equ	0xFDE
  7498                           postdec2	equ	0xFDD
  7499                           plusw2	equ	0xFDB
  7500                           fsr2h	equ	0xFDA
  7501                           fsr2l	equ	0xFD9
  7502                           status	equ	0xFD8
  7503                           
  7504 ;; *************** function _USBCheckCDCRequest *****************
  7505 ;; Defined at:
  7506 ;;		line 204 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;		None               void
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7520 ;;      Params:         0       0       0       0       0       0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7523 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7524 ;;Total ram usage:        0 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    4
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text24
  7535  0024F4                     __ptext24:
  7536                           	opt stack 0
  7537  0024F4                     _USBCheckCDCRequest:
  7538                           	opt stack 23
  7539                           
  7540                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
  7541                           
  7542                           ;incstack = 0
  7543  0024F4  0104               	movlb	4	; () banked
  7544  0024F6  5130               	movf	48,w,b	;volatile
  7545  0024F8  0B1F               	andlw	31
  7546  0024FA  06E8               	decf	wreg,f,c
  7547  0024FC  A4D8               	btfss	status,2,c
  7548  0024FE  0012               	return	
  7549  002500  D001               	goto	l3842
  7550                           
  7551                           ; BSR set to: 4
  7552  002502  0012               	return	
  7553  002504                     l3842:
  7554                           
  7555                           ; BSR set to: 4
  7556                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
  7557  002504  0104               	movlb	4	; () banked
  7558  002506  3930               	swapf	48,w,b	;volatile
  7559  002508  32E8               	rrcf	wreg,f,c
  7560  00250A  0B03               	andlw	3
  7561  00250C  06E8               	decf	wreg,f,c
  7562  00250E  A4D8               	btfss	status,2,c
  7563  002510  0012               	return	
  7564  002512  D001               	goto	l3846
  7565                           
  7566                           ; BSR set to: 4
  7567  002514  0012               	return	
  7568  002516                     l3846:
  7569                           
  7570                           ; BSR set to: 4
  7571                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
  7572                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
  7573  002516  0104               	movlb	4	; () banked
  7574  002518  5134               	movf	52,w,b	;volatile
  7575  00251A  B4D8               	btfsc	status,2,c
  7576  00251C  D03A               	goto	l3876
  7577                           
  7578                           ; BSR set to: 4
  7579  00251E  0104               	movlb	4	; () banked
  7580  002520  0534               	decf	52,w,b	;volatile
  7581  002522  A4D8               	btfss	status,2,c
  7582  002524  0012               	return	
  7583  002526  D035               	goto	l3876
  7584                           
  7585                           ; BSR set to: 4
  7586  002528  0012               	return	
  7587                           
  7588                           ; BSR set to: 4
  7589                           ;usb_device_cdc.c: 223: switch(SetupPkt.bRequest)
  7590  00252A  D033               	goto	l3876
  7591  00252C                     l3852:
  7592                           
  7593                           ; BSR set to: 4
  7594                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7595  00252C  0EA3               	movlw	low _dummy_encapsulated_cmd_response
  7596  00252E  6E56               	movwf	_inPipes,c
  7597  002530  0E00               	movlw	high _dummy_encapsulated_cmd_response
  7598  002532  6E57               	movwf	_inPipes+1,c
  7599                           
  7600                           ; BSR set to: 4
  7601                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
  7602  002534  0E00               	movlw	0
  7603  002536  6E5B               	movwf	_inPipes+5,c
  7604  002538  0E08               	movlw	8
  7605  00253A  6E5A               	movwf	_inPipes+4,c
  7606                           
  7607                           ; BSR set to: 4
  7608                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7609  00253C  8059               	bsf	_inPipes+3,0,c
  7610                           
  7611                           ; BSR set to: 4
  7612                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  7613  00253E  8E59               	bsf	_inPipes+3,7,c
  7614                           
  7615                           ;usb_device_cdc.c: 232: break;
  7616  002540  0012               	return	
  7617  002542                     l3860:
  7618                           
  7619                           ; BSR set to: 4
  7620                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7621  002542  0EA3               	movlw	low _dummy_encapsulated_cmd_response
  7622  002544  6E56               	movwf	_inPipes,c
  7623  002546  0E00               	movlw	high _dummy_encapsulated_cmd_response
  7624  002548  6E57               	movwf	_inPipes+1,c
  7625                           
  7626                           ; BSR set to: 4
  7627                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
  7628  00254A  8E59               	bsf	_inPipes+3,7,c
  7629                           
  7630                           ;usb_device_cdc.c: 237: break;
  7631  00254C  0012               	return	
  7632  00254E                     l428:
  7633                           
  7634                           ; BSR set to: 4
  7635                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
  7636  00254E  C436 F06E          	movff	1078,_outPipes+4	;volatile
  7637  002552  C437 F06F          	movff	1079,_outPipes+5	;volatile
  7638                           
  7639                           ; BSR set to: 4
  7640                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7641  002556  0EAB               	movlw	low _line_coding
  7642  002558  0100               	movlb	0	; () banked
  7643  00255A  6F6A               	movwf	_outPipes& (0+255),b
  7644  00255C  0E00               	movlw	high _line_coding
  7645  00255E  0100               	movlb	0	; () banked
  7646  002560  6F6B               	movwf	(_outPipes+1)& (0+255),b
  7647                           
  7648                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
  7649  002562  0E00               	movlw	0
  7650  002564  0100               	movlb	0	; () banked
  7651  002566  6F70               	movwf	(_outPipes+6)& (0+255),b
  7652  002568  0E00               	movlw	0
  7653  00256A  0100               	movlb	0	; () banked
  7654  00256C  6F71               	movwf	(_outPipes+7)& (0+255),b
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
  7658  00256E  0100               	movlb	0	; () banked
  7659  002570  8F6D               	bsf	(_outPipes+3)& (0+255),7,b
  7660                           
  7661                           ;usb_device_cdc.c: 246: break;
  7662  002572  0012               	return	
  7663  002574                     l3868:
  7664                           
  7665                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7666  002574  0EAB               	movlw	low _line_coding
  7667  002576  6E56               	movwf	_inPipes,c
  7668  002578  0E00               	movlw	high _line_coding
  7669  00257A  6E57               	movwf	_inPipes+1,c
  7670  00257C  0E00               	movlw	0
  7671  00257E  6E5B               	movwf	_inPipes+5,c
  7672  002580  0E07               	movlw	7
  7673  002582  6E5A               	movwf	_inPipes+4,c
  7674  002584  0EC1               	movlw	193
  7675  002586  6E59               	movwf	_inPipes+3,c
  7676                           
  7677                           ;usb_device_cdc.c: 253: break;
  7678  002588  0012               	return	
  7679  00258A                     l430:
  7680                           
  7681                           ; BSR set to: 4
  7682                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7683  00258A  C432 F09A          	movff	1074,_control_signal_bitmap	;volatile
  7684                           
  7685                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
  7686  00258E  8E59               	bsf	_inPipes+3,7,c
  7687                           
  7688                           ; BSR set to: 4
  7689                           ;usb_device_cdc.c: 315: }
  7690                           
  7691                           ; BSR set to: 4
  7692                           ;usb_device_cdc.c: 314: break;
  7693                           
  7694                           ;usb_device_cdc.c: 313: default:
  7695                           
  7696                           ;usb_device_cdc.c: 289: break;
  7697  002590  0012               	return	
  7698  002592                     l3876:
  7699                           
  7700                           ; BSR set to: 4
  7701  002592  0104               	movlb	4	; () banked
  7702  002594  5131               	movf	49,w,b	;volatile
  7703                           
  7704                           ; Switch size 1, requested type "space"
  7705                           ; Number of cases is 5, Range of values is 0 to 34
  7706                           ; switch strategies available:
  7707                           ; Name         Instructions Cycles
  7708                           ; simple_byte           16     9 (average)
  7709                           ;	Chosen strategy is simple_byte
  7710  002596  0A00               	xorlw	0	; case 0
  7711  002598  B4D8               	btfsc	status,2,c
  7712  00259A  D7C8               	goto	l3852
  7713  00259C  0A01               	xorlw	1	; case 1
  7714  00259E  B4D8               	btfsc	status,2,c
  7715  0025A0  D7D0               	goto	l3860
  7716  0025A2  0A21               	xorlw	33	; case 32
  7717  0025A4  B4D8               	btfsc	status,2,c
  7718  0025A6  D7D3               	goto	l428
  7719  0025A8  0A01               	xorlw	1	; case 33
  7720  0025AA  B4D8               	btfsc	status,2,c
  7721  0025AC  D7E3               	goto	l3868
  7722  0025AE  0A03               	xorlw	3	; case 34
  7723  0025B0  A4D8               	btfss	status,2,c
  7724  0025B2  0012               	return	
  7725  0025B4  D7EA               	goto	l430
  7726                           
  7727                           ; BSR set to: 4
  7728  0025B6  0012               	return		;funcret
  7729  0025B8                     __end_of_USBCheckCDCRequest:
  7730                           	opt stack 0
  7731                           tblptru	equ	0xFF8
  7732                           tblptrh	equ	0xFF7
  7733                           tblptrl	equ	0xFF6
  7734                           tablat	equ	0xFF5
  7735                           prodh	equ	0xFF4
  7736                           prodl	equ	0xFF3
  7737                           intcon	equ	0xFF2
  7738                           postinc0	equ	0xFEE
  7739                           wreg	equ	0xFE8
  7740                           indf1	equ	0xFE7
  7741                           postdec1	equ	0xFE5
  7742                           fsr1h	equ	0xFE2
  7743                           fsr1l	equ	0xFE1
  7744                           indf2	equ	0xFDF
  7745                           postinc2	equ	0xFDE
  7746                           postdec2	equ	0xFDD
  7747                           plusw2	equ	0xFDB
  7748                           fsr2h	equ	0xFDA
  7749                           fsr2l	equ	0xFD9
  7750                           status	equ	0xFD8
  7751                           
  7752 ;; *************** function _CDCInitEP *****************
  7753 ;; Defined at:
  7754 ;;		line 351 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;		None
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;		None               void
  7761 ;; Registers used:
  7762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7768 ;;      Params:         0       0       0       0       0       0       0       0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7771 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7772 ;;Total ram usage:        0 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    6
  7775 ;; This function calls:
  7776 ;;		_USBEnableEndpoint
  7777 ;;		_USBTransferOnePacket
  7778 ;; This function is called by:
  7779 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text25
  7784  002D32                     __ptext25:
  7785                           	opt stack 0
  7786  002D32                     _CDCInitEP:
  7787                           	opt stack 21
  7788                           
  7789                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
  7790                           
  7791                           ;incstack = 0
  7792  002D32  0E00               	movlw	0
  7793  002D34  0100               	movlb	0	; () banked
  7794  002D36  6FAB               	movwf	_line_coding& (0+255),b
  7795  002D38  0E4B               	movlw	75
  7796  002D3A  6FAC               	movwf	(_line_coding+1)& (0+255),b
  7797  002D3C  0E00               	movlw	0
  7798  002D3E  6FAD               	movwf	(_line_coding+2)& (0+255),b
  7799  002D40  0E00               	movlw	0
  7800  002D42  6FAE               	movwf	(_line_coding+3)& (0+255),b
  7801                           
  7802                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
  7803  002D44  0E00               	movlw	0
  7804  002D46  0100               	movlb	0	; () banked
  7805  002D48  6FAF               	movwf	(_line_coding+4)& (0+255),b
  7806                           
  7807                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
  7808  002D4A  0E00               	movlw	0
  7809  002D4C  0100               	movlb	0	; () banked
  7810  002D4E  6FB0               	movwf	(_line_coding+5)& (0+255),b
  7811                           
  7812                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
  7813  002D50  0E08               	movlw	8
  7814  002D52  0100               	movlb	0	; () banked
  7815  002D54  6FB1               	movwf	(_line_coding+6)& (0+255),b
  7816                           
  7817                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
  7818  002D56  0E00               	movlw	0
  7819  002D58  6E51               	movwf	_cdc_rx_len,c
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
  7823  002D5A  0E1A               	movlw	26
  7824  002D5C  6E2B               	movwf	USBEnableEndpoint@options,c
  7825  002D5E  0E01               	movlw	1
  7826  002D60  EC65  F018         	call	_USBEnableEndpoint
  7827                           
  7828                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7829  002D64  0E1E               	movlw	30
  7830  002D66  6E2B               	movwf	USBEnableEndpoint@options,c
  7831  002D68  0E02               	movlw	2
  7832  002D6A  EC65  F018         	call	_USBEnableEndpoint
  7833                           
  7834                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7835  002D6E  0E00               	movlw	0
  7836  002D70  6E23               	movwf	USBTransferOnePacket@dir,c
  7837  002D72  0E40               	movlw	64
  7838  002D74  6E24               	movwf	USBTransferOnePacket@data,c
  7839  002D76  0E05               	movlw	5
  7840  002D78  6E25               	movwf	USBTransferOnePacket@data+1,c
  7841  002D7A  0E40               	movlw	64
  7842  002D7C  6E26               	movwf	USBTransferOnePacket@len,c
  7843  002D7E  0E02               	movlw	2
  7844  002D80  ECDC  F012         	call	_USBTransferOnePacket
  7845  002D84  C023  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  7846  002D88  C024  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  7847                           
  7848                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
  7849  002D8C  0E00               	movlw	0
  7850  002D8E  0100               	movlb	0	; () banked
  7851  002D90  6F88               	movwf	_CDCDataInHandle& (0+255),b
  7852  002D92  0E00               	movlw	0
  7853  002D94  0100               	movlb	0	; () banked
  7854  002D96  6F89               	movwf	(_CDCDataInHandle+1)& (0+255),b
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
  7858  002D98  0E00               	movlw	0
  7859  002D9A  6E52               	movwf	_cdc_trf_state,c
  7860                           
  7861                           ; BSR set to: 0
  7862  002D9C  0012               	return		;funcret
  7863  002D9E                     __end_of_CDCInitEP:
  7864                           	opt stack 0
  7865                           tblptru	equ	0xFF8
  7866                           tblptrh	equ	0xFF7
  7867                           tblptrl	equ	0xFF6
  7868                           tablat	equ	0xFF5
  7869                           prodh	equ	0xFF4
  7870                           prodl	equ	0xFF3
  7871                           intcon	equ	0xFF2
  7872                           postinc0	equ	0xFEE
  7873                           wreg	equ	0xFE8
  7874                           indf1	equ	0xFE7
  7875                           postdec1	equ	0xFE5
  7876                           fsr1h	equ	0xFE2
  7877                           fsr1l	equ	0xFE1
  7878                           indf2	equ	0xFDF
  7879                           postinc2	equ	0xFDE
  7880                           postdec2	equ	0xFDD
  7881                           plusw2	equ	0xFDB
  7882                           fsr2h	equ	0xFDA
  7883                           fsr2l	equ	0xFD9
  7884                           status	equ	0xFD8
  7885                           
  7886 ;; *************** function _USBTransferOnePacket *****************
  7887 ;; Defined at:
  7888 ;;		line 998 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  ep              1    wreg     unsigned char 
  7891 ;;  dir             1   34[COMRAM] unsigned char 
  7892 ;;  data            2   35[COMRAM] PTR unsigned char 
  7893 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7894 ;;  len             1   37[COMRAM] unsigned char 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  ep              1   38[COMRAM] unsigned char 
  7897 ;;  handle          2   39[COMRAM] PTR volatile struct __BD
  7898 ;;		 -> NULL(0), BDT(48), 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  2   34[COMRAM] PTR void 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7908 ;;      Params:         4       0       0       0       0       0       0       0       0
  7909 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7911 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7912 ;;Total ram usage:        7 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    4
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_CDCInitEP
  7919 ;;		_getsUSBUSART
  7920 ;;		_CDCTxService
  7921 ;;		_USBCDCEventHandler
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text26
  7926  0025B8                     __ptext26:
  7927                           	opt stack 0
  7928  0025B8                     _USBTransferOnePacket:
  7929                           	opt stack 22
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;incstack = 0
  7933                           ;USBTransferOnePacket@ep stored from wreg
  7934  0025B8  6E27               	movwf	USBTransferOnePacket@ep,c
  7935                           
  7936                           ;usb_device.c: 1000: volatile BDT_ENTRY* handle;
  7937                           ;usb_device.c: 1003: if(dir != 0)
  7938  0025BA  5023               	movf	USBTransferOnePacket@dir,w,c
  7939  0025BC  B4D8               	btfsc	status,2,c
  7940  0025BE  D007               	goto	l3812
  7941                           
  7942                           ;usb_device.c: 1004: {
  7943                           ;usb_device.c: 1006: handle = pBDTEntryIn[ep];
  7944  0025C0  5027               	movf	USBTransferOnePacket@ep,w,c
  7945  0025C2  0D02               	mullw	2
  7946  0025C4  0E3E               	movlw	low _pBDTEntryIn
  7947  0025C6  24F3               	addwf	prodl,w,c
  7948  0025C8  6ED9               	movwf	fsr2l,c
  7949  0025CA  0E00               	movlw	high _pBDTEntryIn
  7950  0025CC  D006               	goto	L9
  7951  0025CE                     l3812:
  7952                           
  7953                           ;usb_device.c: 1008: else
  7954                           ;usb_device.c: 1009: {
  7955                           ;usb_device.c: 1011: handle = pBDTEntryOut[ep];
  7956  0025CE  5027               	movf	USBTransferOnePacket@ep,w,c
  7957  0025D0  0D02               	mullw	2
  7958  0025D2  0E72               	movlw	low _pBDTEntryOut
  7959  0025D4  24F3               	addwf	prodl,w,c
  7960  0025D6  6ED9               	movwf	fsr2l,c
  7961  0025D8  0E00               	movlw	high _pBDTEntryOut
  7962  0025DA                     L9:
  7963  0025DA  20F4               	addwfc	prodh,w,c
  7964  0025DC  6EDA               	movwf	fsr2h,c
  7965  0025DE  CFDE F028          	movff	postinc2,USBTransferOnePacket@handle
  7966  0025E2  CFDD F029          	movff	postdec2,USBTransferOnePacket@handle+1
  7967  0025E6  D000               	goto	l3814
  7968  0025E8                     l3814:
  7969                           
  7970                           ;usb_device.c: 1012: }
  7971                           ;usb_device.c: 1016: if(handle == 0)
  7972  0025E8  5028               	movf	USBTransferOnePacket@handle,w,c
  7973  0025EA  1029               	iorwf	USBTransferOnePacket@handle+1,w,c
  7974  0025EC  A4D8               	btfss	status,2,c
  7975  0025EE  D005               	goto	l3820
  7976                           
  7977                           ;usb_device.c: 1017: {
  7978                           ;usb_device.c: 1018: return 0;
  7979  0025F0  0E00               	movlw	0
  7980  0025F2  6E23               	movwf	?_USBTransferOnePacket,c
  7981  0025F4  0E00               	movlw	0
  7982  0025F6  6E24               	movwf	?_USBTransferOnePacket+1,c
  7983  0025F8  0012               	return	
  7984  0025FA                     l3820:
  7985                           
  7986                           ;usb_device.c: 1019: }
  7987                           ;usb_device.c: 1032: handle->ADR = ((uint16_t)(data));
  7988  0025FA  EE20 F002          	lfsr	2,2
  7989  0025FE  5028               	movf	USBTransferOnePacket@handle,w,c
  7990  002600  26D9               	addwf	fsr2l,f,c
  7991  002602  5029               	movf	USBTransferOnePacket@handle+1,w,c
  7992  002604  22DA               	addwfc	fsr2h,f,c
  7993  002606  C024  FFDE         	movff	USBTransferOnePacket@data,postinc2
  7994  00260A  C025  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  7995                           
  7996                           ;usb_device.c: 1033: handle->CNT = len;
  7997  00260E  EE20 F001          	lfsr	2,1
  7998  002612  5028               	movf	USBTransferOnePacket@handle,w,c
  7999  002614  26D9               	addwf	fsr2l,f,c
  8000  002616  5029               	movf	USBTransferOnePacket@handle+1,w,c
  8001  002618  22DA               	addwfc	fsr2h,f,c
  8002  00261A  C026  FFDF         	movff	USBTransferOnePacket@len,indf2
  8003                           
  8004                           ;usb_device.c: 1034: handle->STAT.Val &= 0x40;
  8005  00261E  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8006  002622  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8007  002626  0E40               	movlw	64
  8008  002628  16DF               	andwf	indf2,f,c
  8009                           
  8010                           ;usb_device.c: 1035: handle->STAT.Val |= (0x08 & 0x08);
  8011  00262A  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8012  00262E  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8013  002632  0E00               	movlw	0
  8014  002634  86DB               	bsf	plusw2,3,c
  8015                           
  8016                           ;usb_device.c: 1036: handle->STAT.Val |= 0x80;
  8017  002636  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8018  00263A  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8019  00263E  0E00               	movlw	0
  8020  002640  8EDB               	bsf	plusw2,7,c
  8021                           
  8022                           ;usb_device.c: 1039: if(dir != 0)
  8023  002642  5023               	movf	USBTransferOnePacket@dir,w,c
  8024  002644  B4D8               	btfsc	status,2,c
  8025  002646  D007               	goto	l3832
  8026                           
  8027                           ;usb_device.c: 1040: {
  8028                           ;usb_device.c: 1042: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  8029  002648  5027               	movf	USBTransferOnePacket@ep,w,c
  8030  00264A  0D02               	mullw	2
  8031  00264C  0E3E               	movlw	low _pBDTEntryIn
  8032  00264E  24F3               	addwf	prodl,w,c
  8033  002650  6ED9               	movwf	fsr2l,c
  8034  002652  0E00               	movlw	high _pBDTEntryIn
  8035  002654  D006               	goto	L10
  8036  002656                     l3832:
  8037                           
  8038                           ;usb_device.c: 1044: else
  8039                           ;usb_device.c: 1045: {
  8040                           ;usb_device.c: 1047: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8041  002656  5027               	movf	USBTransferOnePacket@ep,w,c
  8042  002658  0D02               	mullw	2
  8043  00265A  0E72               	movlw	low _pBDTEntryOut
  8044  00265C  24F3               	addwf	prodl,w,c
  8045  00265E  6ED9               	movwf	fsr2l,c
  8046  002660  0E00               	movlw	high _pBDTEntryOut
  8047  002662                     L10:
  8048  002662  20F4               	addwfc	prodh,w,c
  8049  002664  6EDA               	movwf	fsr2h,c
  8050  002666  0E04               	movlw	4
  8051  002668  1ADF               	xorwf	indf2,f,c
  8052  00266A  D000               	goto	l3834
  8053  00266C                     l3834:
  8054                           
  8055                           ;usb_device.c: 1048: }
  8056                           ;usb_device.c: 1049: return (void*)handle;
  8057  00266C  C028  F023         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  8058  002670  C029  F024         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  8059  002674  0012               	return	
  8060  002676  0012               	return		;funcret
  8061  002678                     __end_of_USBTransferOnePacket:
  8062                           	opt stack 0
  8063                           tblptru	equ	0xFF8
  8064                           tblptrh	equ	0xFF7
  8065                           tblptrl	equ	0xFF6
  8066                           tablat	equ	0xFF5
  8067                           prodh	equ	0xFF4
  8068                           prodl	equ	0xFF3
  8069                           intcon	equ	0xFF2
  8070                           postinc0	equ	0xFEE
  8071                           wreg	equ	0xFE8
  8072                           indf1	equ	0xFE7
  8073                           postdec1	equ	0xFE5
  8074                           fsr1h	equ	0xFE2
  8075                           fsr1l	equ	0xFE1
  8076                           indf2	equ	0xFDF
  8077                           postinc2	equ	0xFDE
  8078                           postdec2	equ	0xFDD
  8079                           plusw2	equ	0xFDB
  8080                           fsr2h	equ	0xFDA
  8081                           fsr2l	equ	0xFD9
  8082                           status	equ	0xFD8
  8083                           
  8084 ;; *************** function _USBEnableEndpoint *****************
  8085 ;; Defined at:
  8086 ;;		line 881 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  ep              1    wreg     unsigned char 
  8089 ;;  options         1   42[COMRAM] unsigned char 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  ep              1   45[COMRAM] unsigned char 
  8092 ;;  p               2   43[COMRAM] PTR unsigned char 
  8093 ;;		 -> UEP0(1), RAM(2047), 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;		None               void
  8096 ;; Registers used:
  8097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8103 ;;      Params:         1       0       0       0       0       0       0       0       0
  8104 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8106 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8107 ;;Total ram usage:        4 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    5
  8110 ;; This function calls:
  8111 ;;		_USBConfigureEndpoint
  8112 ;; This function is called by:
  8113 ;;		_CDCInitEP
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text27
  8118  0030CA                     __ptext27:
  8119                           	opt stack 0
  8120  0030CA                     _USBEnableEndpoint:
  8121                           	opt stack 21
  8122                           
  8123                           ;incstack = 0
  8124                           ;USBEnableEndpoint@ep stored from wreg
  8125  0030CA  6E2E               	movwf	USBEnableEndpoint@ep,c
  8126                           
  8127                           ;usb_device.c: 883: unsigned char* p;
  8128                           ;usb_device.c: 887: if(options & 0x04)
  8129  0030CC  A42B               	btfss	USBEnableEndpoint@options,2,c
  8130  0030CE  D006               	goto	l3800
  8131                           
  8132                           ;usb_device.c: 888: {
  8133                           ;usb_device.c: 889: USBConfigureEndpoint(ep, 0);
  8134  0030D0  0E00               	movlw	0
  8135  0030D2  6E23               	movwf	USBConfigureEndpoint@direction,c
  8136  0030D4  502E               	movf	USBEnableEndpoint@ep,w,c
  8137  0030D6  ECF8  F014         	call	_USBConfigureEndpoint
  8138  0030DA  D000               	goto	l3800
  8139  0030DC                     l3800:
  8140                           
  8141                           ;usb_device.c: 890: }
  8142                           ;usb_device.c: 891: if(options & 0x02)
  8143  0030DC  A22B               	btfss	USBEnableEndpoint@options,1,c
  8144  0030DE  D006               	goto	l3804
  8145                           
  8146                           ;usb_device.c: 892: {
  8147                           ;usb_device.c: 893: USBConfigureEndpoint(ep, 1);
  8148  0030E0  0E01               	movlw	1
  8149  0030E2  6E23               	movwf	USBConfigureEndpoint@direction,c
  8150  0030E4  502E               	movf	USBEnableEndpoint@ep,w,c
  8151  0030E6  ECF8  F014         	call	_USBConfigureEndpoint
  8152  0030EA  D000               	goto	l3804
  8153  0030EC                     l3804:
  8154                           
  8155                           ;usb_device.c: 894: }
  8156                           ;usb_device.c: 902: p = (unsigned char*)(&*U1EP0_R+ep);
  8157  0030EC  502E               	movf	USBEnableEndpoint@ep,w,c
  8158  0030EE  0D01               	mullw	1
  8159  0030F0  50F3               	movf	prodl,w,c
  8160  0030F2  245D               	addwf	_U1EP0_R,w,c
  8161  0030F4  6E2C               	movwf	USBEnableEndpoint@p,c
  8162  0030F6  50F4               	movf	prodh,w,c
  8163  0030F8  205E               	addwfc	_U1EP0_R+1,w,c
  8164  0030FA  6E2D               	movwf	USBEnableEndpoint@p+1,c
  8165                           
  8166                           ;usb_device.c: 904: *p = options;
  8167  0030FC  C02C  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8168  003100  C02D  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8169  003104  C02B  FFDF         	movff	USBEnableEndpoint@options,indf2
  8170  003108  0012               	return		;funcret
  8171  00310A                     __end_of_USBEnableEndpoint:
  8172                           	opt stack 0
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           postinc0	equ	0xFEE
  8181                           wreg	equ	0xFE8
  8182                           indf1	equ	0xFE7
  8183                           postdec1	equ	0xFE5
  8184                           fsr1h	equ	0xFE2
  8185                           fsr1l	equ	0xFE1
  8186                           indf2	equ	0xFDF
  8187                           postinc2	equ	0xFDE
  8188                           postdec2	equ	0xFDD
  8189                           plusw2	equ	0xFDB
  8190                           fsr2h	equ	0xFDA
  8191                           fsr2l	equ	0xFD9
  8192                           status	equ	0xFD8
  8193                           
  8194 ;; *************** function _USBConfigureEndpoint *****************
  8195 ;; Defined at:
  8196 ;;		line 1546 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  EPNum           1    wreg     unsigned char 
  8199 ;;  direction       1   34[COMRAM] unsigned char 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  EPNum           1   39[COMRAM] unsigned char 
  8202 ;;  handle          2   40[COMRAM] PTR volatile struct __BD
  8203 ;;		 -> BDT(48), 
  8204 ;; Return value:  Size  Location     Type
  8205 ;;		None               void
  8206 ;; Registers used:
  8207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8213 ;;      Params:         1       0       0       0       0       0       0       0       0
  8214 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8215 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8216 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8217 ;;Total ram usage:        8 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; Hardware stack levels required when called:    4
  8220 ;; This function calls:
  8221 ;;		Nothing
  8222 ;; This function is called by:
  8223 ;;		_USBEnableEndpoint
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text28
  8228  0029F0                     __ptext28:
  8229                           	opt stack 0
  8230  0029F0                     _USBConfigureEndpoint:
  8231                           	opt stack 21
  8232                           
  8233                           ;incstack = 0
  8234                           ;USBConfigureEndpoint@EPNum stored from wreg
  8235  0029F0  6E28               	movwf	USBConfigureEndpoint@EPNum,c
  8236                           
  8237                           ;usb_device.c: 1548: volatile BDT_ENTRY* handle;
  8238                           ;usb_device.c: 1552: handle = (volatile BDT_ENTRY*)&BDT[0];
  8239  0029F2  0E00               	movlw	0
  8240  0029F4  6E29               	movwf	USBConfigureEndpoint@handle,c
  8241  0029F6  0E04               	movlw	4
  8242  0029F8  6E2A               	movwf	USBConfigureEndpoint@handle+1,c
  8243                           
  8244                           ;usb_device.c: 1553: handle += (4*EPNum+2*direction+0u);
  8245  0029FA  5023               	movf	USBConfigureEndpoint@direction,w,c
  8246  0029FC  6E24               	movwf	??_USBConfigureEndpoint& (0+255),c
  8247  0029FE  6A25               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8248  002A00  90D8               	bcf	status,0,c
  8249  002A02  3624               	rlcf	??_USBConfigureEndpoint,f,c
  8250  002A04  3625               	rlcf	??_USBConfigureEndpoint+1,f,c
  8251  002A06  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8252  002A08  6E26               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8253  002A0A  6A27               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8254  002A0C  90D8               	bcf	status,0,c
  8255  002A0E  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8256  002A10  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8257  002A12  90D8               	bcf	status,0,c
  8258  002A14  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8259  002A16  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8260  002A18  5024               	movf	??_USBConfigureEndpoint,w,c
  8261  002A1A  2626               	addwf	??_USBConfigureEndpoint+2,f,c
  8262  002A1C  5025               	movf	??_USBConfigureEndpoint+1,w,c
  8263  002A1E  2227               	addwfc	??_USBConfigureEndpoint+3,f,c
  8264  002A20  90D8               	bcf	status,0,c
  8265  002A22  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8266  002A24  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8267  002A26  90D8               	bcf	status,0,c
  8268  002A28  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8269  002A2A  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8270  002A2C  5026               	movf	??_USBConfigureEndpoint+2,w,c
  8271  002A2E  2629               	addwf	USBConfigureEndpoint@handle,f,c
  8272  002A30  5027               	movf	??_USBConfigureEndpoint+3,w,c
  8273  002A32  222A               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8274                           
  8275                           ;usb_device.c: 1555: handle->STAT.UOWN = 0;
  8276  002A34  C029  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8277  002A38  C02A  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8278  002A3C  9EDF               	bcf	indf2,7,c
  8279                           
  8280                           ;usb_device.c: 1560: if(direction == 0)
  8281  002A3E  5023               	movf	USBConfigureEndpoint@direction,w,c
  8282  002A40  A4D8               	btfss	status,2,c
  8283  002A42  D007               	goto	l3790
  8284                           
  8285                           ;usb_device.c: 1561: {
  8286                           ;usb_device.c: 1562: pBDTEntryOut[EPNum] = handle;
  8287  002A44  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8288  002A46  0D02               	mullw	2
  8289  002A48  0E72               	movlw	low _pBDTEntryOut
  8290  002A4A  24F3               	addwf	prodl,w,c
  8291  002A4C  6ED9               	movwf	fsr2l,c
  8292  002A4E  0E00               	movlw	high _pBDTEntryOut
  8293  002A50  D006               	goto	L11
  8294  002A52                     l3790:
  8295                           
  8296                           ;usb_device.c: 1564: else
  8297                           ;usb_device.c: 1565: {
  8298                           ;usb_device.c: 1566: pBDTEntryIn[EPNum] = handle;
  8299  002A52  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8300  002A54  0D02               	mullw	2
  8301  002A56  0E3E               	movlw	low _pBDTEntryIn
  8302  002A58  24F3               	addwf	prodl,w,c
  8303  002A5A  6ED9               	movwf	fsr2l,c
  8304  002A5C  0E00               	movlw	high _pBDTEntryIn
  8305  002A5E                     L11:
  8306  002A5E  20F4               	addwfc	prodh,w,c
  8307  002A60  6EDA               	movwf	fsr2h,c
  8308  002A62  C029  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8309  002A66  C02A  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8310  002A6A  D000               	goto	l3792
  8311  002A6C                     l3792:
  8312                           
  8313                           ;usb_device.c: 1567: }
  8314                           ;usb_device.c: 1570: handle->STAT.DTS = 0;
  8315  002A6C  C029  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8316  002A70  C02A  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8317  002A74  9CDF               	bcf	indf2,6,c
  8318                           
  8319                           ;usb_device.c: 1571: (handle+1)->STAT.DTS = 1;
  8320  002A76  EE20 F004          	lfsr	2,4
  8321  002A7A  5029               	movf	USBConfigureEndpoint@handle,w,c
  8322  002A7C  26D9               	addwf	fsr2l,f,c
  8323  002A7E  502A               	movf	USBConfigureEndpoint@handle+1,w,c
  8324  002A80  22DA               	addwfc	fsr2h,f,c
  8325  002A82  8CDF               	bsf	indf2,6,c
  8326  002A84  0012               	return		;funcret
  8327  002A86                     __end_of_USBConfigureEndpoint:
  8328                           	opt stack 0
  8329                           tblptru	equ	0xFF8
  8330                           tblptrh	equ	0xFF7
  8331                           tblptrl	equ	0xFF6
  8332                           tablat	equ	0xFF5
  8333                           prodh	equ	0xFF4
  8334                           prodl	equ	0xFF3
  8335                           intcon	equ	0xFF2
  8336                           postinc0	equ	0xFEE
  8337                           wreg	equ	0xFE8
  8338                           indf1	equ	0xFE7
  8339                           postdec1	equ	0xFE5
  8340                           fsr1h	equ	0xFE2
  8341                           fsr1l	equ	0xFE1
  8342                           indf2	equ	0xFDF
  8343                           postinc2	equ	0xFDE
  8344                           postdec2	equ	0xFDD
  8345                           plusw2	equ	0xFDB
  8346                           fsr2h	equ	0xFDA
  8347                           fsr2l	equ	0xFD9
  8348                           status	equ	0xFD8
  8349                           
  8350 ;; *************** function _USBCtrlTrfOutHandler *****************
  8351 ;; Defined at:
  8352 ;;		line 2544 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;		None
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;		None
  8357 ;; Return value:  Size  Location     Type
  8358 ;;		None               void
  8359 ;; Registers used:
  8360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8366 ;;      Params:         0       0       0       0       0       0       0       0       0
  8367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8369 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8370 ;;Total ram usage:        0 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:    6
  8373 ;; This function calls:
  8374 ;;		_USBCtrlTrfRxService
  8375 ;; This function is called by:
  8376 ;;		_USBCtrlEPService
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text29
  8381  002E02                     __ptext29:
  8382                           	opt stack 0
  8383  002E02                     _USBCtrlTrfOutHandler:
  8384                           	opt stack 21
  8385                           
  8386                           ;usb_device.c: 2546: if(controlTransferState == 2)
  8387                           
  8388                           ;incstack = 0
  8389  002E02  0E02               	movlw	2
  8390  002E04  1854               	xorwf	_controlTransferState,w,c
  8391  002E06  A4D8               	btfss	status,2,c
  8392  002E08  D003               	goto	l4366
  8393                           
  8394                           ;usb_device.c: 2547: {
  8395                           ;usb_device.c: 2548: USBCtrlTrfRxService();
  8396  002E0A  ECE6  F00D         	call	_USBCtrlTrfRxService	;wreg free
  8397                           
  8398                           ;usb_device.c: 2549: }
  8399  002E0E  0012               	return	
  8400  002E10                     l4366:
  8401                           
  8402                           ;usb_device.c: 2550: else
  8403                           ;usb_device.c: 2551: {
  8404                           ;usb_device.c: 2554: controlTransferState = 0;
  8405  002E10  0E00               	movlw	0
  8406  002E12  6E54               	movwf	_controlTransferState,c
  8407                           
  8408                           ;usb_device.c: 2561: if(BothEP0OutUOWNsSet == 0)
  8409  002E14  0100               	movlb	0	; () banked
  8410  002E16  5194               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
  8411  002E18  A4D8               	btfss	status,2,c
  8412  002E1A  D01F               	goto	l4374
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;usb_device.c: 2562: {
  8416                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->CNT = 8;
  8417  002E1C  EE20 F001          	lfsr	2,1
  8418  002E20  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8419  002E22  26D9               	addwf	fsr2l,f,c
  8420  002E24  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8421  002E26  22DA               	addwfc	fsr2h,f,c
  8422  002E28  0E08               	movlw	8
  8423  002E2A  6EDF               	movwf	indf2,c
  8424                           
  8425                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8426  002E2C  EE20 F002          	lfsr	2,2
  8427  002E30  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8428  002E32  26D9               	addwf	fsr2l,f,c
  8429  002E34  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8430  002E36  22DA               	addwfc	fsr2h,f,c
  8431  002E38  0E30               	movlw	48
  8432  002E3A  6EDE               	movwf	postinc2,c
  8433  002E3C  0E04               	movlw	4
  8434  002E3E  6EDD               	movwf	postdec2,c
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;usb_device.c: 2565: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8438  002E40  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8439  002E44  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8440  002E48  0E0C               	movlw	12
  8441  002E4A  6EDF               	movwf	indf2,c
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;usb_device.c: 2566: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8445  002E4C  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8446  002E50  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8447  002E54  0E00               	movlw	0
  8448  002E56  8EDB               	bsf	plusw2,7,c
  8449                           
  8450                           ;usb_device.c: 2567: }
  8451  002E58  0012               	return	
  8452  002E5A                     l4374:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;usb_device.c: 2568: else
  8456                           ;usb_device.c: 2569: {
  8457                           ;usb_device.c: 2570: BothEP0OutUOWNsSet = 0;
  8458  002E5A  0E00               	movlw	0
  8459  002E5C  0100               	movlb	0	; () banked
  8460  002E5E  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8461                           
  8462                           ; BSR set to: 0
  8463  002E60  0012               	return	
  8464                           
  8465                           ; BSR set to: 0
  8466  002E62  0012               	return		;funcret
  8467  002E64                     __end_of_USBCtrlTrfOutHandler:
  8468                           	opt stack 0
  8469                           tblptru	equ	0xFF8
  8470                           tblptrh	equ	0xFF7
  8471                           tblptrl	equ	0xFF6
  8472                           tablat	equ	0xFF5
  8473                           prodh	equ	0xFF4
  8474                           prodl	equ	0xFF3
  8475                           intcon	equ	0xFF2
  8476                           postinc0	equ	0xFEE
  8477                           wreg	equ	0xFE8
  8478                           indf1	equ	0xFE7
  8479                           postdec1	equ	0xFE5
  8480                           fsr1h	equ	0xFE2
  8481                           fsr1l	equ	0xFE1
  8482                           indf2	equ	0xFDF
  8483                           postinc2	equ	0xFDE
  8484                           postdec2	equ	0xFDD
  8485                           plusw2	equ	0xFDB
  8486                           fsr2h	equ	0xFDA
  8487                           fsr2l	equ	0xFD9
  8488                           status	equ	0xFD8
  8489                           
  8490 ;; *************** function _USBCtrlTrfRxService *****************
  8491 ;; Defined at:
  8492 ;;		line 1855 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;		None
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  byteToRead      1   35[COMRAM] unsigned char 
  8497 ;;  i               1   34[COMRAM] unsigned char 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;		None               void
  8500 ;; Registers used:
  8501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8507 ;;      Params:         0       0       0       0       0       0       0       0       0
  8508 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8510 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8511 ;;Total ram usage:        2 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    5
  8514 ;; This function calls:
  8515 ;;		_USBCtrlEPAllowStatusStage
  8516 ;; This function is called by:
  8517 ;;		_USBCtrlTrfOutHandler
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text30
  8522  001BCC                     __ptext30:
  8523                           	opt stack 0
  8524  001BCC                     _USBCtrlTrfRxService:
  8525                           	opt stack 21
  8526                           
  8527                           ;usb_device.c: 1857: uint8_t byteToRead;
  8528                           ;usb_device.c: 1858: uint8_t i;
  8529                           ;usb_device.c: 1862: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8530                           
  8531                           ;incstack = 0
  8532  001BCC  EE20 F001          	lfsr	2,1
  8533  001BD0  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8534  001BD2  26D9               	addwf	fsr2l,f,c
  8535  001BD4  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8536  001BD6  22DA               	addwfc	fsr2h,f,c
  8537  001BD8  50DF               	movf	indf2,w,c
  8538  001BDA  6E24               	movwf	USBCtrlTrfRxService@byteToRead,c
  8539                           
  8540                           ;usb_device.c: 1868: if(byteToRead > outPipes[0].wCount.Val)
  8541  001BDC  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8542  001BDE  0100               	movlb	0	; () banked
  8543  001BE0  5D6E               	subwf	(_outPipes+4)& (0+255),w,b
  8544  001BE2  0E00               	movlw	0
  8545  001BE4  596F               	subwfb	(_outPipes+5)& (0+255),w,b
  8546  001BE6  B0D8               	btfsc	status,0,c
  8547  001BE8  D003               	goto	l4254
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;usb_device.c: 1869: {
  8551                           ;usb_device.c: 1870: byteToRead = outPipes[0].wCount.Val;
  8552  001BEA  C06E  F024         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
  8553  001BEE  D000               	goto	l4254
  8554  001BF0                     l4254:
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;usb_device.c: 1871: }
  8558                           ;usb_device.c: 1873: outPipes[0].wCount.Val -= byteToRead;
  8559  001BF0  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8560  001BF2  0100               	movlb	0	; () banked
  8561  001BF4  5F6E               	subwf	(_outPipes+4)& (0+255),f,b
  8562  001BF6  0E00               	movlw	0
  8563  001BF8  5B6F               	subwfb	(_outPipes+5)& (0+255),f,b
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;usb_device.c: 1877: for(i=0;i<byteToRead;i++)
  8567  001BFA  0E00               	movlw	0
  8568  001BFC  6E23               	movwf	USBCtrlTrfRxService@i,c
  8569  001BFE  D013               	goto	l4264
  8570  001C00                     l4258:
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;usb_device.c: 1878: {
  8574                           ;usb_device.c: 1879: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8575  001C00  5023               	movf	USBCtrlTrfRxService@i,w,c
  8576  001C02  0D01               	mullw	1
  8577  001C04  0E38               	movlw	56
  8578  001C06  24F3               	addwf	prodl,w,c
  8579  001C08  6ED9               	movwf	fsr2l,c
  8580  001C0A  0E04               	movlw	4
  8581  001C0C  20F4               	addwfc	prodh,w,c
  8582  001C0E  6EDA               	movwf	fsr2h,c
  8583  001C10  C06A  FFE1         	movff	_outPipes,fsr1l
  8584  001C14  C06B  FFE2         	movff	_outPipes+1,fsr1h
  8585  001C18  CFDF FFE7          	movff	indf2,indf1
  8586                           
  8587                           ; BSR set to: 0
  8588  001C1C  0100               	movlb	0	; () banked
  8589  001C1E  4B6A               	infsnz	_outPipes& (0+255),f,b
  8590  001C20  2B6B               	incf	(_outPipes+1)& (0+255),f,b
  8591                           
  8592                           ; BSR set to: 0
  8593  001C22  2A23               	incf	USBCtrlTrfRxService@i,f,c
  8594  001C24  D000               	goto	l4264
  8595  001C26                     l4264:
  8596                           
  8597                           ; BSR set to: 0
  8598  001C26  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8599  001C28  5C23               	subwf	USBCtrlTrfRxService@i,w,c
  8600  001C2A  A0D8               	btfss	status,0,c
  8601  001C2C  D7E9               	goto	l4258
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;usb_device.c: 1880: }
  8605                           ;usb_device.c: 1884: if(outPipes[0].wCount.Val > 0)
  8606                           
  8607                           ; BSR set to: 0
  8608  001C2E  0100               	movlb	0	; () banked
  8609  001C30  516E               	movf	(_outPipes+4)& (0+255),w,b
  8610  001C32  0100               	movlb	0	; () banked
  8611  001C34  116F               	iorwf	(_outPipes+5)& (0+255),w,b
  8612  001C36  B4D8               	btfsc	status,2,c
  8613  001C38  D032               	goto	l4280
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;usb_device.c: 1885: {
  8617                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->CNT = 8;
  8618  001C3A  EE20 F001          	lfsr	2,1
  8619  001C3E  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8620  001C40  26D9               	addwf	fsr2l,f,c
  8621  001C42  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8622  001C44  22DA               	addwfc	fsr2h,f,c
  8623  001C46  0E08               	movlw	8
  8624  001C48  6EDF               	movwf	indf2,c
  8625                           
  8626                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  8627  001C4A  EE20 F002          	lfsr	2,2
  8628  001C4E  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8629  001C50  26D9               	addwf	fsr2l,f,c
  8630  001C52  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8631  001C54  22DA               	addwfc	fsr2h,f,c
  8632  001C56  0E38               	movlw	56
  8633  001C58  6EDE               	movwf	postinc2,c
  8634  001C5A  0E04               	movlw	4
  8635  001C5C  6EDD               	movwf	postdec2,c
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;usb_device.c: 1888: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8639  001C5E  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8640  001C62  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8641  001C66  BCDF               	btfsc	indf2,6,c
  8642  001C68  D00D               	goto	l4276
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;usb_device.c: 1889: {
  8646                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8647  001C6A  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8648  001C6E  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8649  001C72  0E48               	movlw	72
  8650  001C74  6EDF               	movwf	indf2,c
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;usb_device.c: 1891: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8654  001C76  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8655  001C7A  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8656  001C7E  0E00               	movlw	0
  8657  001C80  8EDB               	bsf	plusw2,7,c
  8658                           
  8659                           ;usb_device.c: 1892: }
  8660  001C82  0012               	return	
  8661  001C84                     l4276:
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;usb_device.c: 1893: else
  8665                           ;usb_device.c: 1894: {
  8666                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8667  001C84  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8668  001C88  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8669  001C8C  0E08               	movlw	8
  8670  001C8E  6EDF               	movwf	indf2,c
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;usb_device.c: 1896: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8674  001C90  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8675  001C94  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8676  001C98  0E00               	movlw	0
  8677  001C9A  8EDB               	bsf	plusw2,7,c
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;usb_device.c: 1897: }
  8681                           ;usb_device.c: 1898: }
  8682  001C9C  0012               	return	
  8683  001C9E                     l4280:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;usb_device.c: 1899: else
  8687                           ;usb_device.c: 1900: {
  8688                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->CNT = 8;
  8689  001C9E  EE20 F001          	lfsr	2,1
  8690  001CA2  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8691  001CA4  26D9               	addwf	fsr2l,f,c
  8692  001CA6  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8693  001CA8  22DA               	addwfc	fsr2h,f,c
  8694  001CAA  0E08               	movlw	8
  8695  001CAC  6EDF               	movwf	indf2,c
  8696                           
  8697                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8698  001CAE  EE20 F002          	lfsr	2,2
  8699  001CB2  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8700  001CB4  26D9               	addwf	fsr2l,f,c
  8701  001CB6  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8702  001CB8  22DA               	addwfc	fsr2h,f,c
  8703  001CBA  0E30               	movlw	48
  8704  001CBC  6EDE               	movwf	postinc2,c
  8705  001CBE  0E04               	movlw	4
  8706  001CC0  6EDD               	movwf	postdec2,c
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8710  001CC2  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8711  001CC6  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8712  001CCA  0E04               	movlw	4
  8713  001CCC  6EDF               	movwf	indf2,c
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8717  001CCE  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8718  001CD2  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8719  001CD6  0E00               	movlw	0
  8720  001CD8  8EDB               	bsf	plusw2,7,c
  8721  001CDA  D000               	goto	l248
  8722  001CDC                     l248:
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;usb_device.c: 1929: }
  8726                           ;usb_device.c: 1930: outPipes[0].info.bits.busy = 0;
  8727  001CDC  0100               	movlb	0	; () banked
  8728  001CDE  9F6D               	bcf	(_outPipes+3)& (0+255),7,b
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;usb_device.c: 1944: if(USBDeferStatusStagePacket == 0)
  8732  001CE0  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  8733  001CE2  A4D8               	btfss	status,2,c
  8734  001CE4  0012               	return	
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;usb_device.c: 1945: {
  8738                           ;usb_device.c: 1946: USBCtrlEPAllowStatusStage();
  8739  001CE6  EC16  F012         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8740  001CEA  0012               	return	
  8741  001CEC  0012               	return		;funcret
  8742  001CEE                     __end_of_USBCtrlTrfRxService:
  8743                           	opt stack 0
  8744                           tblptru	equ	0xFF8
  8745                           tblptrh	equ	0xFF7
  8746                           tblptrl	equ	0xFF6
  8747                           tablat	equ	0xFF5
  8748                           prodh	equ	0xFF4
  8749                           prodl	equ	0xFF3
  8750                           intcon	equ	0xFF2
  8751                           postinc0	equ	0xFEE
  8752                           wreg	equ	0xFE8
  8753                           indf1	equ	0xFE7
  8754                           postdec1	equ	0xFE5
  8755                           fsr1h	equ	0xFE2
  8756                           fsr1l	equ	0xFE1
  8757                           indf2	equ	0xFDF
  8758                           postinc2	equ	0xFDE
  8759                           postdec2	equ	0xFDD
  8760                           plusw2	equ	0xFDB
  8761                           fsr2h	equ	0xFDA
  8762                           fsr2l	equ	0xFD9
  8763                           status	equ	0xFD8
  8764                           
  8765 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8766 ;; Defined at:
  8767 ;;		line 1419 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;		None
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;		None               void
  8774 ;; Registers used:
  8775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8784 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8785 ;;Total ram usage:        0 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    4
  8788 ;; This function calls:
  8789 ;;		Nothing
  8790 ;; This function is called by:
  8791 ;;		_USBDeviceTasks
  8792 ;;		_USBCtrlEPServiceComplete
  8793 ;;		_USBCtrlTrfRxService
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text31
  8798  00242C                     __ptext31:
  8799                           	opt stack 0
  8800  00242C                     _USBCtrlEPAllowStatusStage:
  8801                           	opt stack 21
  8802                           
  8803                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag1 == 0)
  8804                           
  8805                           ;incstack = 0
  8806  00242C  504F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  8807  00242E  A4D8               	btfss	status,2,c
  8808  002430  0012               	return	
  8809                           
  8810                           ;usb_device.c: 1427: {
  8811                           ;usb_device.c: 1428: USBStatusStageEnabledFlag1 = 1;
  8812  002432  0E01               	movlw	1
  8813  002434  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8814                           
  8815                           ;usb_device.c: 1429: if(USBStatusStageEnabledFlag2 == 0)
  8816  002436  5050               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  8817  002438  A4D8               	btfss	status,2,c
  8818  00243A  0012               	return	
  8819                           
  8820                           ;usb_device.c: 1430: {
  8821                           ;usb_device.c: 1431: USBStatusStageEnabledFlag2 = 1;
  8822  00243C  0E01               	movlw	1
  8823  00243E  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8824                           
  8825                           ;usb_device.c: 1435: if(controlTransferState == 2)
  8826  002440  0E02               	movlw	2
  8827  002442  1854               	xorwf	_controlTransferState,w,c
  8828  002444  A4D8               	btfss	status,2,c
  8829  002446  D015               	goto	l3974
  8830                           
  8831                           ;usb_device.c: 1436: {
  8832                           ;usb_device.c: 1437: pBDTEntryIn[0]->CNT = 0;
  8833  002448  EE20 F001          	lfsr	2,1
  8834  00244C  503E               	movf	_pBDTEntryIn,w,c
  8835  00244E  26D9               	addwf	fsr2l,f,c
  8836  002450  503F               	movf	_pBDTEntryIn+1,w,c
  8837  002452  22DA               	addwfc	fsr2h,f,c
  8838  002454  0E00               	movlw	0
  8839  002456  6EDF               	movwf	indf2,c
  8840                           
  8841                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8842  002458  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8843  00245C  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8844  002460  0E48               	movlw	72
  8845  002462  6EDF               	movwf	indf2,c
  8846                           
  8847                           ;usb_device.c: 1439: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8848  002464  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8849  002468  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8850  00246C  0E00               	movlw	0
  8851  00246E  8EDB               	bsf	plusw2,7,c
  8852                           
  8853                           ;usb_device.c: 1440: }
  8854  002470  0012               	return	
  8855  002472                     l3974:
  8856                           
  8857                           ;usb_device.c: 1441: else if(controlTransferState == 1)
  8858  002472  0454               	decf	_controlTransferState,w,c
  8859  002474  A4D8               	btfss	status,2,c
  8860  002476  0012               	return	
  8861                           
  8862                           ;usb_device.c: 1442: {
  8863                           ;usb_device.c: 1443: BothEP0OutUOWNsSet = 0;
  8864  002478  0E00               	movlw	0
  8865  00247A  0100               	movlb	0	; () banked
  8866  00247C  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->CNT = 8;
  8870  00247E  EE20 F001          	lfsr	2,1
  8871  002482  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8872  002484  26D9               	addwf	fsr2l,f,c
  8873  002486  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8874  002488  22DA               	addwfc	fsr2h,f,c
  8875  00248A  0E08               	movlw	8
  8876  00248C  6EDF               	movwf	indf2,c
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  8880  00248E  EE20 F002          	lfsr	2,2
  8881  002492  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8882  002494  26D9               	addwf	fsr2l,f,c
  8883  002496  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8884  002498  22DA               	addwfc	fsr2h,f,c
  8885  00249A  0E30               	movlw	48
  8886  00249C  6EDE               	movwf	postinc2,c
  8887  00249E  0E04               	movlw	4
  8888  0024A0  6EDD               	movwf	postdec2,c
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8892  0024A2  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8893  0024A6  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8894  0024AA  0E04               	movlw	4
  8895  0024AC  6EDF               	movwf	indf2,c
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;usb_device.c: 1451: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8899  0024AE  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8900  0024B2  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8901  0024B6  0E00               	movlw	0
  8902  0024B8  8EDB               	bsf	plusw2,7,c
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;usb_device.c: 1452: BothEP0OutUOWNsSet = 1;
  8906  0024BA  0E01               	movlw	1
  8907  0024BC  0100               	movlb	0	; () banked
  8908  0024BE  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->CNT = 8;
  8912  0024C0  EE20 F001          	lfsr	2,1
  8913  0024C4  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8914  0024C6  26D9               	addwf	fsr2l,f,c
  8915  0024C8  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8916  0024CA  22DA               	addwfc	fsr2h,f,c
  8917  0024CC  0E08               	movlw	8
  8918  0024CE  6EDF               	movwf	indf2,c
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8922  0024D0  EE20 F002          	lfsr	2,2
  8923  0024D4  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8924  0024D6  26D9               	addwf	fsr2l,f,c
  8925  0024D8  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8926  0024DA  22DA               	addwfc	fsr2h,f,c
  8927  0024DC  0E30               	movlw	48
  8928  0024DE  6EDE               	movwf	postinc2,c
  8929  0024E0  0E04               	movlw	4
  8930  0024E2  6EDD               	movwf	postdec2,c
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;usb_device.c: 1458: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8934  0024E4  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8935  0024E8  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8936  0024EC  0E80               	movlw	128
  8937  0024EE  6EDF               	movwf	indf2,c
  8938                           
  8939                           ; BSR set to: 0
  8940                           
  8941                           ; BSR set to: 0
  8942                           
  8943                           ; BSR set to: 0
  8944  0024F0  0012               	return	
  8945                           
  8946                           ; BSR set to: 0
  8947  0024F2  0012               	return		;funcret
  8948  0024F4                     __end_of_USBCtrlEPAllowStatusStage:
  8949                           	opt stack 0
  8950                           tblptru	equ	0xFF8
  8951                           tblptrh	equ	0xFF7
  8952                           tblptrl	equ	0xFF6
  8953                           tablat	equ	0xFF5
  8954                           prodh	equ	0xFF4
  8955                           prodl	equ	0xFF3
  8956                           intcon	equ	0xFF2
  8957                           postinc0	equ	0xFEE
  8958                           wreg	equ	0xFE8
  8959                           indf1	equ	0xFE7
  8960                           postdec1	equ	0xFE5
  8961                           fsr1h	equ	0xFE2
  8962                           fsr1l	equ	0xFE1
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           plusw2	equ	0xFDB
  8967                           fsr2h	equ	0xFDA
  8968                           fsr2l	equ	0xFD9
  8969                           status	equ	0xFD8
  8970                           
  8971 ;; *************** function _USBCtrlTrfInHandler *****************
  8972 ;; Defined at:
  8973 ;;		line 2598 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;		None
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;  lastDTS         1   35[COMRAM] unsigned char 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;		None               void
  8980 ;; Registers used:
  8981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8987 ;;      Params:         0       0       0       0       0       0       0       0       0
  8988 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8990 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8991 ;;Total ram usage:        1 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    5
  8994 ;; This function calls:
  8995 ;;		_USBCtrlTrfTxService
  8996 ;; This function is called by:
  8997 ;;		_USBCtrlEPService
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text32
  9002  002356                     __ptext32:
  9003                           	opt stack 0
  9004  002356                     _USBCtrlTrfInHandler:
  9005                           	opt stack 22
  9006                           
  9007                           ;usb_device.c: 2600: uint8_t lastDTS;
  9008                           ;usb_device.c: 2602: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9009                           
  9010                           ;incstack = 0
  9011  002356  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9012  00235A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9013  00235E  0E00               	movlw	0
  9014  002360  BCDF               	btfsc	indf2,6,c
  9015  002362  0E01               	movlw	1
  9016  002364  6E24               	movwf	USBCtrlTrfInHandler@lastDTS,c
  9017                           
  9018                           ;usb_device.c: 2605: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9019  002366  0E04               	movlw	4
  9020  002368  1A3E               	xorwf	_pBDTEntryIn,f,c
  9021                           
  9022                           ;usb_device.c: 2610: if(USBDeviceState == ADR_PENDING_STATE)
  9023  00236A  0E08               	movlw	8
  9024  00236C  0100               	movlb	0	; () banked
  9025  00236E  1997               	xorwf	_USBDeviceState& (0+255),w,b
  9026  002370  A4D8               	btfss	status,2,c
  9027  002372  D015               	goto	l4390
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;usb_device.c: 2611: {
  9031                           ;usb_device.c: 2612: *U1ADDR_R = (SetupPkt.bDevADR & 0x7F);
  9032  002374  0104               	movlb	4	; () banked
  9033  002376  5132               	movf	50,w,b	;volatile
  9034  002378  0B7F               	andlw	127
  9035  00237A  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
  9036  00237E  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
  9037  002382  6EDF               	movwf	indf2,c
  9038                           
  9039                           ; BSR set to: 4
  9040                           ;usb_device.c: 2613: if(*U1ADDR_R != 0u)
  9041  002384  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
  9042  002388  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
  9043  00238C  50DF               	movf	indf2,w,c
  9044  00238E  B4D8               	btfsc	status,2,c
  9045  002390  D002               	goto	l4388
  9046                           
  9047                           ; BSR set to: 4
  9048                           ;usb_device.c: 2614: {
  9049                           ;usb_device.c: 2615: USBDeviceState=ADDRESS_STATE;
  9050  002392  0E10               	movlw	16
  9051  002394  D001               	goto	L12
  9052  002396                     l4388:
  9053                           
  9054                           ;usb_device.c: 2617: else
  9055                           ;usb_device.c: 2618: {
  9056                           ;usb_device.c: 2619: USBDeviceState=DEFAULT_STATE;
  9057  002396  0E04               	movlw	4
  9058  002398                     L12:
  9059  002398  0100               	movlb	0	; () banked
  9060  00239A  6F97               	movwf	_USBDeviceState& (0+255),b
  9061                           
  9062                           ; BSR set to: 0
  9063  00239C  D000               	goto	l4390
  9064  00239E                     l4390:
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;usb_device.c: 2620: }
  9068                           ;usb_device.c: 2621: }
  9069                           ;usb_device.c: 2624: if(controlTransferState == 1)
  9070  00239E  0454               	decf	_controlTransferState,w,c
  9071  0023A0  A4D8               	btfss	status,2,c
  9072  0023A2  D03A               	goto	l325
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;usb_device.c: 2625: {
  9076                           ;usb_device.c: 2626: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
  9077  0023A4  EE20 F002          	lfsr	2,2
  9078  0023A8  503E               	movf	_pBDTEntryIn,w,c
  9079  0023AA  26D9               	addwf	fsr2l,f,c
  9080  0023AC  503F               	movf	_pBDTEntryIn+1,w,c
  9081  0023AE  22DA               	addwfc	fsr2h,f,c
  9082  0023B0  0E38               	movlw	56
  9083  0023B2  6EDE               	movwf	postinc2,c
  9084  0023B4  0E04               	movlw	4
  9085  0023B6  6EDD               	movwf	postdec2,c
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;usb_device.c: 2627: USBCtrlTrfTxService();
  9089  0023B8  ECCE  F010         	call	_USBCtrlTrfTxService	;wreg free
  9090                           
  9091                           ;usb_device.c: 2633: if(shortPacketStatus == 2)
  9092  0023BC  0E02               	movlw	2
  9093  0023BE  1855               	xorwf	_shortPacketStatus,w,c
  9094  0023C0  A4D8               	btfss	status,2,c
  9095  0023C2  D00D               	goto	l4402
  9096                           
  9097                           ;usb_device.c: 2634: {
  9098                           ;usb_device.c: 2637: pBDTEntryIn[0]->STAT.Val = 0x04;
  9099  0023C4  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9100  0023C8  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9101  0023CC  0E04               	movlw	4
  9102  0023CE  6EDF               	movwf	indf2,c
  9103                           
  9104                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9105  0023D0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9106  0023D4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9107  0023D8  0E00               	movlw	0
  9108  0023DA  8EDB               	bsf	plusw2,7,c
  9109                           
  9110                           ;usb_device.c: 2639: }
  9111  0023DC  0012               	return	
  9112  0023DE                     l4402:
  9113                           
  9114                           ;usb_device.c: 2640: else
  9115                           ;usb_device.c: 2641: {
  9116                           ;usb_device.c: 2642: if(lastDTS == 0)
  9117  0023DE  5024               	movf	USBCtrlTrfInHandler@lastDTS,w,c
  9118  0023E0  A4D8               	btfss	status,2,c
  9119  0023E2  D00D               	goto	l4408
  9120                           
  9121                           ;usb_device.c: 2643: {
  9122                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9123  0023E4  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9124  0023E8  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9125  0023EC  0E48               	movlw	72
  9126  0023EE  6EDF               	movwf	indf2,c
  9127                           
  9128                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9129  0023F0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9130  0023F4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9131  0023F8  0E00               	movlw	0
  9132  0023FA  8EDB               	bsf	plusw2,7,c
  9133                           
  9134                           ;usb_device.c: 2646: }
  9135  0023FC  0012               	return	
  9136  0023FE                     l4408:
  9137                           
  9138                           ;usb_device.c: 2647: else
  9139                           ;usb_device.c: 2648: {
  9140                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9141  0023FE  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9142  002402  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9143  002406  0E08               	movlw	8
  9144  002408  6EDF               	movwf	indf2,c
  9145                           
  9146                           ;usb_device.c: 2650: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9147  00240A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9148  00240E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9149  002412  0E00               	movlw	0
  9150  002414  8EDB               	bsf	plusw2,7,c
  9151                           
  9152                           ;usb_device.c: 2651: }
  9153                           ;usb_device.c: 2652: }
  9154                           ;usb_device.c: 2653: }
  9155  002416  0012               	return	
  9156  002418                     l325:
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;usb_device.c: 2654: else
  9160                           ;usb_device.c: 2655: {
  9161                           ;usb_device.c: 2659: if(outPipes[0].info.bits.busy == 1)
  9162  002418  0100               	movlb	0	; () banked
  9163  00241A  AF6D               	btfss	(_outPipes+3)& (0+255),7,b
  9164  00241C  D003               	goto	l4414
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;usb_device.c: 2664: }
  9168                           ;usb_device.c: 2665: outPipes[0].info.bits.busy = 0;
  9169                           
  9170                           ; BSR set to: 0
  9171  00241E  0100               	movlb	0	; () banked
  9172  002420  9F6D               	bcf	(_outPipes+3)& (0+255),7,b
  9173  002422  D000               	goto	l4414
  9174  002424                     l4414:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;usb_device.c: 2666: }
  9178                           ;usb_device.c: 2668: controlTransferState = 0;
  9179  002424  0E00               	movlw	0
  9180  002426  6E54               	movwf	_controlTransferState,c
  9181  002428  0012               	return	
  9182                           
  9183                           ; BSR set to: 0
  9184  00242A  0012               	return		;funcret
  9185  00242C                     __end_of_USBCtrlTrfInHandler:
  9186                           	opt stack 0
  9187                           tblptru	equ	0xFF8
  9188                           tblptrh	equ	0xFF7
  9189                           tblptrl	equ	0xFF6
  9190                           tablat	equ	0xFF5
  9191                           prodh	equ	0xFF4
  9192                           prodl	equ	0xFF3
  9193                           intcon	equ	0xFF2
  9194                           postinc0	equ	0xFEE
  9195                           wreg	equ	0xFE8
  9196                           indf1	equ	0xFE7
  9197                           postdec1	equ	0xFE5
  9198                           fsr1h	equ	0xFE2
  9199                           fsr1l	equ	0xFE1
  9200                           indf2	equ	0xFDF
  9201                           postinc2	equ	0xFDE
  9202                           postdec2	equ	0xFDD
  9203                           plusw2	equ	0xFDB
  9204                           fsr2h	equ	0xFDA
  9205                           fsr2l	equ	0xFD9
  9206                           status	equ	0xFD8
  9207                           
  9208 ;; *************** function _USBCtrlTrfTxService *****************
  9209 ;; Defined at:
  9210 ;;		line 1774 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  byteToSend      1   34[COMRAM] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;		None               void
  9217 ;; Registers used:
  9218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0
  9225 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9227 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9228 ;;Total ram usage:        1 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    4
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_USBCtrlEPAllowDataStage
  9235 ;;		_USBCtrlTrfInHandler
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           	psect	text33
  9240  00219C                     __ptext33:
  9241                           	opt stack 0
  9242  00219C                     _USBCtrlTrfTxService:
  9243                           	opt stack 20
  9244                           
  9245                           ;usb_device.c: 1776: uint8_t byteToSend;
  9246                           ;usb_device.c: 1780: byteToSend = 8;
  9247                           
  9248                           ;incstack = 0
  9249  00219C  0E08               	movlw	8
  9250  00219E  6E23               	movwf	USBCtrlTrfTxService@byteToSend,c
  9251                           
  9252                           ;usb_device.c: 1781: if(inPipes[0].wCount.Val < (uint8_t)8)
  9253  0021A0  505B               	movf	_inPipes+5,w,c
  9254  0021A2  E111               	bnz	l3930
  9255  0021A4  0E08               	movlw	8
  9256  0021A6  5C5A               	subwf	_inPipes+4,w,c
  9257  0021A8  B0D8               	btfsc	status,0,c
  9258  0021AA  D00D               	goto	l3930
  9259                           
  9260                           ;usb_device.c: 1782: {
  9261                           ;usb_device.c: 1783: byteToSend = inPipes[0].wCount.Val;
  9262  0021AC  C05A  F023         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
  9263                           
  9264                           ;usb_device.c: 1790: if(shortPacketStatus == 0)
  9265  0021B0  5055               	movf	_shortPacketStatus,w,c
  9266  0021B2  A4D8               	btfss	status,2,c
  9267  0021B4  D002               	goto	l3926
  9268                           
  9269                           ;usb_device.c: 1791: {
  9270                           ;usb_device.c: 1792: shortPacketStatus = 1;
  9271  0021B6  0E01               	movlw	1
  9272  0021B8  D004               	goto	L13
  9273  0021BA                     l3926:
  9274                           
  9275                           ;usb_device.c: 1794: else if(shortPacketStatus == 1)
  9276  0021BA  0455               	decf	_shortPacketStatus,w,c
  9277  0021BC  A4D8               	btfss	status,2,c
  9278  0021BE  D003               	goto	l3930
  9279                           
  9280                           ;usb_device.c: 1795: {
  9281                           ;usb_device.c: 1796: shortPacketStatus = 2;
  9282  0021C0  0E02               	movlw	2
  9283  0021C2                     L13:
  9284  0021C2  6E55               	movwf	_shortPacketStatus,c
  9285  0021C4  D000               	goto	l3930
  9286  0021C6                     l3930:
  9287                           
  9288                           ;usb_device.c: 1797: }
  9289                           ;usb_device.c: 1798: }
  9290                           ;usb_device.c: 1802: inPipes[0].wCount.Val -= byteToSend;
  9291  0021C6  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9292  0021C8  5E5A               	subwf	_inPipes+4,f,c
  9293  0021CA  0E00               	movlw	0
  9294  0021CC  5A5B               	subwfb	_inPipes+5,f,c
  9295                           
  9296                           ;usb_device.c: 1807: pBDTEntryIn[0]->CNT = byteToSend;
  9297  0021CE  EE20 F001          	lfsr	2,1
  9298  0021D2  503E               	movf	_pBDTEntryIn,w,c
  9299  0021D4  26D9               	addwf	fsr2l,f,c
  9300  0021D6  503F               	movf	_pBDTEntryIn+1,w,c
  9301  0021D8  22DA               	addwfc	fsr2h,f,c
  9302  0021DA  C023  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
  9303                           
  9304                           ;usb_device.c: 1811: pDst = ( uint8_t*)CtrlTrfData;
  9305  0021DE  0E38               	movlw	56
  9306  0021E0  0100               	movlb	0	; () banked
  9307  0021E2  6F8C               	movwf	_pDst& (0+255),b
  9308  0021E4  0E04               	movlw	4
  9309  0021E6  0100               	movlb	0	; () banked
  9310  0021E8  6F8D               	movwf	(_pDst+1)& (0+255),b
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;usb_device.c: 1812: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9314  0021EA  A059               	btfss	_inPipes+3,0,c
  9315  0021EC  D01E               	goto	l3948
  9316  0021EE  D03F               	goto	l3958
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;usb_device.c: 1813: {
  9320                           ;usb_device.c: 1814: while(byteToSend)
  9321  0021F0  D01C               	goto	l3948
  9322  0021F2                     l3940:
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;usb_device.c: 1815: {
  9326                           ;usb_device.c: 1816: *pDst++ = *inPipes[0].pSrc.bRom++;
  9327  0021F2  C056  FFF6         	movff	_inPipes,tblptrl
  9328  0021F6  C057  FFF7         	movff	_inPipes+1,tblptrh
  9329  0021FA  6AF8               	clrf	tblptru,c
  9330  0021FC  C08C  FFD9         	movff	_pDst,fsr2l
  9331  002200  C08D  FFDA         	movff	_pDst+1,fsr2h
  9332  002204  0E07               	movlw	(high __ramtop+-1)
  9333  002206  64F7               	cpfsgt	tblptrh,c
  9334  002208  D003               	bra	u2617
  9335  00220A  0008               	tblrd		*
  9336  00220C  50F5               	movf	tablat,w,c
  9337  00220E  D005               	bra	u2610
  9338  002210                     u2617:
  9339  002210  CFF6 FFE1          	movff	tblptrl,fsr1l
  9340  002214  CFF7 FFE2          	movff	tblptrh,fsr1h
  9341  002218  50E7               	movf	indf1,w,c
  9342  00221A                     u2610:
  9343  00221A  6EDF               	movwf	indf2,c
  9344  00221C  4A56               	infsnz	_inPipes,f,c
  9345  00221E  2A57               	incf	_inPipes+1,f,c
  9346  002220  0100               	movlb	0	; () banked
  9347  002222  4B8C               	infsnz	_pDst& (0+255),f,b
  9348  002224  2B8D               	incf	(_pDst+1)& (0+255),f,b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;usb_device.c: 1817: byteToSend--;
  9352  002226  0623               	decf	USBCtrlTrfTxService@byteToSend,f,c
  9353  002228  D000               	goto	l3948
  9354  00222A                     l3948:
  9355                           
  9356                           ; BSR set to: 0
  9357  00222A  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9358  00222C  B4D8               	btfsc	status,2,c
  9359  00222E  0012               	return	
  9360  002230  D7E0               	goto	l3940
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;usb_device.c: 1818: }
  9364                           ;usb_device.c: 1819: }
  9365  002232  0012               	return	
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;usb_device.c: 1820: else
  9369                           ;usb_device.c: 1821: {
  9370                           ;usb_device.c: 1822: while(byteToSend)
  9371  002234  D01C               	goto	l3958
  9372  002236                     l3950:
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;usb_device.c: 1823: {
  9376                           ;usb_device.c: 1824: *pDst++ = *inPipes[0].pSrc.bRam++;
  9377  002236  C056  FFF6         	movff	_inPipes,tblptrl
  9378  00223A  C057  FFF7         	movff	_inPipes+1,tblptrh
  9379  00223E  6AF8               	clrf	tblptru,c
  9380  002240  C08C  FFD9         	movff	_pDst,fsr2l
  9381  002244  C08D  FFDA         	movff	_pDst+1,fsr2h
  9382  002248  0E07               	movlw	(high __ramtop+-1)
  9383  00224A  64F7               	cpfsgt	tblptrh,c
  9384  00224C  D003               	bra	u2637
  9385  00224E  0008               	tblrd		*
  9386  002250  50F5               	movf	tablat,w,c
  9387  002252  D005               	bra	u2630
  9388  002254                     u2637:
  9389  002254  CFF6 FFE1          	movff	tblptrl,fsr1l
  9390  002258  CFF7 FFE2          	movff	tblptrh,fsr1h
  9391  00225C  50E7               	movf	indf1,w,c
  9392  00225E                     u2630:
  9393  00225E  6EDF               	movwf	indf2,c
  9394  002260  4A56               	infsnz	_inPipes,f,c
  9395  002262  2A57               	incf	_inPipes+1,f,c
  9396  002264  0100               	movlb	0	; () banked
  9397  002266  4B8C               	infsnz	_pDst& (0+255),f,b
  9398  002268  2B8D               	incf	(_pDst+1)& (0+255),f,b
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;usb_device.c: 1825: byteToSend--;
  9402  00226A  0623               	decf	USBCtrlTrfTxService@byteToSend,f,c
  9403  00226C  D000               	goto	l3958
  9404  00226E                     l3958:
  9405                           
  9406                           ; BSR set to: 0
  9407  00226E  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9408  002270  B4D8               	btfsc	status,2,c
  9409  002272  0012               	return	
  9410  002274  D7E0               	goto	l3950
  9411                           
  9412                           ; BSR set to: 0
  9413  002276  0012               	return	
  9414                           
  9415                           ; BSR set to: 0
  9416                           
  9417                           ; BSR set to: 0
  9418  002278  0012               	return		;funcret
  9419  00227A                     __end_of_USBCtrlTrfTxService:
  9420                           	opt stack 0
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           prodh	equ	0xFF4
  9426                           prodl	equ	0xFF3
  9427                           intcon	equ	0xFF2
  9428                           postinc0	equ	0xFEE
  9429                           wreg	equ	0xFE8
  9430                           indf1	equ	0xFE7
  9431                           postdec1	equ	0xFE5
  9432                           fsr1h	equ	0xFE2
  9433                           fsr1l	equ	0xFE1
  9434                           indf2	equ	0xFDF
  9435                           postinc2	equ	0xFDE
  9436                           postdec2	equ	0xFDD
  9437                           plusw2	equ	0xFDB
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function _USBClearUSBInterrupt *****************
  9443 ;; Defined at:
  9444 ;;		line 23 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;		None               void
  9451 ;; Registers used:
  9452 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    4
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_USBDeviceTasks
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text34
  9473  0031B4                     __ptext34:
  9474                           	opt stack 0
  9475  0031B4                     _USBClearUSBInterrupt:
  9476                           	opt stack 24
  9477                           
  9478                           ;usb_hal_fixes.c: 24: if (pic18_devid == 0x02E0) {
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;incstack = 0
  9482  0031B4  0EE0               	movlw	224
  9483  0031B6  0100               	movlb	0	; () banked
  9484  0031B8  19F1               	xorwf	_pic18_devid& (0+255),w,b
  9485  0031BA  E10C               	bnz	l4510
  9486  0031BC  0E02               	movlw	2
  9487  0031BE  0100               	movlb	0	; () banked
  9488  0031C0  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
  9489  0031C2  A4D8               	btfss	status,2,c
  9490  0031C4  D007               	goto	l4510
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;usb_hal_fixes.c: 25: *PIR3_R &= 0b11111011;
  9494  0031C6  C0C5  FFD9         	movff	_PIR3_R,fsr2l
  9495  0031CA  C0C6  FFDA         	movff	_PIR3_R+1,fsr2h
  9496  0031CE  0EFB               	movlw	251
  9497  0031D0  16DF               	andwf	indf2,f,c
  9498                           
  9499                           ;usb_hal_fixes.c: 26: } else {
  9500  0031D2  0012               	return	
  9501  0031D4                     l4510:
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;usb_hal_fixes.c: 27: *PIR2_R &= 0b11011111;
  9505  0031D4  C0C3  FFD9         	movff	_PIR2_R,fsr2l
  9506  0031D8  C0C4  FFDA         	movff	_PIR2_R+1,fsr2h
  9507  0031DC  0EDF               	movlw	223
  9508  0031DE  16DF               	andwf	indf2,f,c
  9509  0031E0  0012               	return	
  9510                           
  9511                           ; BSR set to: 0
  9512                           
  9513                           ; BSR set to: 0
  9514  0031E2  0012               	return		;funcret
  9515  0031E4                     __end_of_USBClearUSBInterrupt:
  9516                           	opt stack 0
  9517                           tblptru	equ	0xFF8
  9518                           tblptrh	equ	0xFF7
  9519                           tblptrl	equ	0xFF6
  9520                           tablat	equ	0xFF5
  9521                           prodh	equ	0xFF4
  9522                           prodl	equ	0xFF3
  9523                           intcon	equ	0xFF2
  9524                           postinc0	equ	0xFEE
  9525                           wreg	equ	0xFE8
  9526                           indf1	equ	0xFE7
  9527                           postdec1	equ	0xFE5
  9528                           fsr1h	equ	0xFE2
  9529                           fsr1l	equ	0xFE1
  9530                           indf2	equ	0xFDF
  9531                           postinc2	equ	0xFDE
  9532                           postdec2	equ	0xFDD
  9533                           plusw2	equ	0xFDB
  9534                           fsr2h	equ	0xFDA
  9535                           fsr2l	equ	0xFD9
  9536                           status	equ	0xFD8
  9537                           
  9538 ;; *************** function _Read_b_eep *****************
  9539 ;; Defined at:
  9540 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\read_B.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  badd            2   34[COMRAM] unsigned int 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;		None
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  1    wreg      unsigned char 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9554 ;;      Params:         2       0       0       0       0       0       0       0       0
  9555 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9557 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9558 ;;Total ram usage:        2 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:    4
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_ProcessCDC
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           	psect	text35
  9569  0033F8                     __ptext35:
  9570                           	opt stack 0
  9571  0033F8                     _Read_b_eep:
  9572                           	opt stack 24
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;incstack = 0
  9576  0033F8  C023  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  9577  0033FC  9CA6               	bcf	4006,6,c	;volatile
  9578  0033FE  9EA6               	bcf	4006,7,c	;volatile
  9579  003400  80A6               	bsf	4006,0,c	;volatile
  9580  003402  F000               	nop	
  9581  003404  F000               	nop	
  9582  003406  50A8               	movf	4008,w,c	;volatile
  9583  003408  0012               	return	
  9584  00340A  0012               	return		;funcret
  9585  00340C                     __end_of_Read_b_eep:
  9586                           	opt stack 0
  9587                           tblptru	equ	0xFF8
  9588                           tblptrh	equ	0xFF7
  9589                           tblptrl	equ	0xFF6
  9590                           tablat	equ	0xFF5
  9591                           prodh	equ	0xFF4
  9592                           prodl	equ	0xFF3
  9593                           intcon	equ	0xFF2
  9594                           postinc0	equ	0xFEE
  9595                           wreg	equ	0xFE8
  9596                           indf1	equ	0xFE7
  9597                           postdec1	equ	0xFE5
  9598                           fsr1h	equ	0xFE2
  9599                           fsr1l	equ	0xFE1
  9600                           indf2	equ	0xFDF
  9601                           postinc2	equ	0xFDE
  9602                           postdec2	equ	0xFDD
  9603                           plusw2	equ	0xFDB
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function _ReadADC *****************
  9609 ;; Defined at:
  9610 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;		None
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;		None
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  2   34[COMRAM] int 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9624 ;;      Params:         2       0       0       0       0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9626 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9627 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9628 ;;Total ram usage:        4 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    4
  9631 ;; This function calls:
  9632 ;;		Nothing
  9633 ;; This function is called by:
  9634 ;;		_ProcessCDC
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text36
  9639  003454                     __ptext36:
  9640                           	opt stack 0
  9641  003454                     _ReadADC:
  9642                           	opt stack 24
  9643                           
  9644                           ;incstack = 0
  9645  003454  50C4               	movf	4036,w,c	;volatile
  9646  003456  6E25               	movwf	??_ReadADC& (0+255),c
  9647  003458  50C3               	movf	4035,w,c	;volatile
  9648  00345A  6E23               	movwf	?_ReadADC,c
  9649  00345C  C025  F024         	movff	??_ReadADC,?_ReadADC+1
  9650  003460  0012               	return	
  9651  003462  0012               	return		;funcret
  9652  003464                     __end_of_ReadADC:
  9653                           	opt stack 0
  9654                           tblptru	equ	0xFF8
  9655                           tblptrh	equ	0xFF7
  9656                           tblptrl	equ	0xFF6
  9657                           tablat	equ	0xFF5
  9658                           prodh	equ	0xFF4
  9659                           prodl	equ	0xFF3
  9660                           intcon	equ	0xFF2
  9661                           postinc0	equ	0xFEE
  9662                           wreg	equ	0xFE8
  9663                           indf1	equ	0xFE7
  9664                           postdec1	equ	0xFE5
  9665                           fsr1h	equ	0xFE2
  9666                           fsr1l	equ	0xFE1
  9667                           indf2	equ	0xFDF
  9668                           postinc2	equ	0xFDE
  9669                           postdec2	equ	0xFDD
  9670                           plusw2	equ	0xFDB
  9671                           fsr2h	equ	0xFDA
  9672                           fsr2l	equ	0xFD9
  9673                           status	equ	0xFD8
  9674                           
  9675 ;; *************** function _ConvertADC *****************
  9676 ;; Defined at:
  9677 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;		None
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;		None
  9682 ;; Return value:  Size  Location     Type
  9683 ;;		None               void
  9684 ;; Registers used:
  9685 ;;		None
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9691 ;;      Params:         0       0       0       0       0       0       0       0       0
  9692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9694 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9695 ;;Total ram usage:        0 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:    4
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_ProcessCDC
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           	psect	text37
  9706  00347A                     __ptext37:
  9707                           	opt stack 0
  9708  00347A                     _ConvertADC:
  9709                           	opt stack 24
  9710                           
  9711                           ;incstack = 0
  9712  00347A  82C2               	bsf	4034,1,c	;volatile
  9713  00347C  0012               	return		;funcret
  9714  00347E                     __end_of_ConvertADC:
  9715                           	opt stack 0
  9716                           tblptru	equ	0xFF8
  9717                           tblptrh	equ	0xFF7
  9718                           tblptrl	equ	0xFF6
  9719                           tablat	equ	0xFF5
  9720                           prodh	equ	0xFF4
  9721                           prodl	equ	0xFF3
  9722                           intcon	equ	0xFF2
  9723                           postinc0	equ	0xFEE
  9724                           wreg	equ	0xFE8
  9725                           indf1	equ	0xFE7
  9726                           postdec1	equ	0xFE5
  9727                           fsr1h	equ	0xFE2
  9728                           fsr1l	equ	0xFE1
  9729                           indf2	equ	0xFDF
  9730                           postinc2	equ	0xFDE
  9731                           postdec2	equ	0xFDD
  9732                           plusw2	equ	0xFDB
  9733                           fsr2h	equ	0xFDA
  9734                           fsr2l	equ	0xFD9
  9735                           status	equ	0xFD8
  9736                           
  9737 ;; *************** function _Busy_eep *****************
  9738 ;; Defined at:
  9739 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\busy_eep.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;		None
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;		None               void
  9746 ;; Registers used:
  9747 ;;		None
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9753 ;;      Params:         0       0       0       0       0       0       0       0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9756 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9757 ;;Total ram usage:        0 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    4
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_ProcessCDC
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text38
  9768  003472                     __ptext38:
  9769                           	opt stack 0
  9770  003472                     _Busy_eep:
  9771                           	opt stack 24
  9772                           
  9773                           ;incstack = 0
  9774  003472  D000               	goto	l1082
  9775  003474                     l1082:
  9776  003474  B2A6               	btfsc	4006,1,c	;volatile
  9777  003476  D7FE               	goto	l1082
  9778  003478  0012               	return		;funcret
  9779  00347A                     __end_of_Busy_eep:
  9780                           	opt stack 0
  9781                           tblptru	equ	0xFF8
  9782                           tblptrh	equ	0xFF7
  9783                           tblptrl	equ	0xFF6
  9784                           tablat	equ	0xFF5
  9785                           prodh	equ	0xFF4
  9786                           prodl	equ	0xFF3
  9787                           intcon	equ	0xFF2
  9788                           postinc0	equ	0xFEE
  9789                           wreg	equ	0xFE8
  9790                           indf1	equ	0xFE7
  9791                           postdec1	equ	0xFE5
  9792                           fsr1h	equ	0xFE2
  9793                           fsr1l	equ	0xFE1
  9794                           indf2	equ	0xFDF
  9795                           postinc2	equ	0xFDE
  9796                           postdec2	equ	0xFDD
  9797                           plusw2	equ	0xFDB
  9798                           fsr2h	equ	0xFDA
  9799                           fsr2l	equ	0xFD9
  9800                           status	equ	0xFD8
  9801                           
  9802 ;; *************** function _BusyADC *****************
  9803 ;; Defined at:
  9804 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      unsigned char 
  9811 ;; Registers used:
  9812 ;;		wreg
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    4
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_ProcessCDC
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text39
  9833  003464                     __ptext39:
  9834                           	opt stack 0
  9835  003464                     _BusyADC:
  9836                           	opt stack 24
  9837                           
  9838                           ;incstack = 0
  9839  003464  A2C2               	btfss	4034,1,c	;volatile
  9840  003466  D002               	goto	u4220
  9841  003468  0E01               	movlw	1
  9842  00346A  0012               	return	
  9843  00346C                     u4220:
  9844  00346C  0E00               	movlw	0
  9845  00346E  0012               	return	
  9846  003470  0012               	return		;funcret
  9847  003472                     __end_of_BusyADC:
  9848                           	opt stack 0
  9849                           tblptru	equ	0xFF8
  9850                           tblptrh	equ	0xFF7
  9851                           tblptrl	equ	0xFF6
  9852                           tablat	equ	0xFF5
  9853                           prodh	equ	0xFF4
  9854                           prodl	equ	0xFF3
  9855                           intcon	equ	0xFF2
  9856                           postinc0	equ	0xFEE
  9857                           wreg	equ	0xFE8
  9858                           indf1	equ	0xFE7
  9859                           postdec1	equ	0xFE5
  9860                           fsr1h	equ	0xFE2
  9861                           fsr1l	equ	0xFE1
  9862                           indf2	equ	0xFDF
  9863                           postinc2	equ	0xFDE
  9864                           postdec2	equ	0xFDD
  9865                           plusw2	equ	0xFDB
  9866                           fsr2h	equ	0xFDA
  9867                           fsr2l	equ	0xFD9
  9868                           status	equ	0xFD8
  9869                           
  9870 ;; *************** function _BlinkUSBStatus *****************
  9871 ;; Defined at:
  9872 ;;		line 259 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;		None               void
  9879 ;; Registers used:
  9880 ;;		wreg, status,2, status,0
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9888 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9889 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9890 ;;Total ram usage:        1 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    4
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_ProcessIO
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text40
  9901  00307E                     __ptext40:
  9902                           	opt stack 0
  9903  00307E                     _BlinkUSBStatus:
  9904                           	opt stack 25
  9905                           
  9906                           ;karate.c: 261: if(led_count-- == 0) {
  9907                           
  9908                           ;incstack = 0
  9909  00307E  0100               	movlb	0	; () banked
  9910  003080  078A               	decf	_led_count& (0+255),f,b
  9911  003082  A0D8               	btfss	status,0,c
  9912  003084  078B               	decf	(_led_count+1)& (0+255),f,b
  9913  003086  0100               	movlb	0	; () banked
  9914  003088  298A               	incf	_led_count& (0+255),w,b
  9915  00308A  E11E               	bnz	l734
  9916  00308C  0100               	movlb	0	; () banked
  9917  00308E  298B               	incf	(_led_count+1)& (0+255),w,b
  9918  003090  A4D8               	btfss	status,2,c
  9919  003092  0012               	return	
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;karate.c: 262: led_count = 10000U;
  9923  003094  0E27               	movlw	39
  9924  003096  0100               	movlb	0	; () banked
  9925  003098  6F8B               	movwf	(_led_count+1)& (0+255),b
  9926  00309A  0E10               	movlw	16
  9927  00309C  6F8A               	movwf	_led_count& (0+255),b
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;karate.c: 263: if ((USBDeviceState == CONFIGURED_STATE) & (UCONbits.SUSPND != 1)) {
  9931  00309E  B260               	btfsc	3936,1,c	;volatile
  9932  0030A0  D002               	goto	u4330
  9933  0030A2  0E01               	movlw	1
  9934  0030A4  D001               	goto	u4332
  9935  0030A6                     u4330:
  9936  0030A6  0E00               	movlw	0
  9937  0030A8                     u4332:
  9938  0030A8  6E23               	movwf	??_BlinkUSBStatus& (0+255),c
  9939  0030AA  0E20               	movlw	32
  9940  0030AC  0100               	movlb	0	; () banked
  9941  0030AE  1997               	xorwf	_USBDeviceState& (0+255),w,b
  9942  0030B0  A4D8               	btfss	status,2,c
  9943  0030B2  D002               	goto	u4340
  9944  0030B4  0E01               	movlw	1
  9945  0030B6  D001               	goto	u4342
  9946  0030B8                     u4340:
  9947  0030B8  0E00               	movlw	0
  9948  0030BA                     u4342:
  9949  0030BA  1423               	andwf	??_BlinkUSBStatus,w,c
  9950  0030BC  A0E8               	btfss	wreg,0,c
  9951  0030BE  D002               	goto	l732
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;karate.c: 264: LATCbits.LATC1 = !LATCbits.LATC1;;
  9955  0030C0  728B               	btg	3979,1,c	;volatile
  9956                           
  9957                           ;karate.c: 265: } else {
  9958  0030C2  0012               	return	
  9959  0030C4                     l732:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;karate.c: 266: LATCbits.LATC1 = 0;;
  9963  0030C4  928B               	bcf	3979,1,c	;volatile
  9964                           
  9965                           ; BSR set to: 0
  9966  0030C6  0012               	return	
  9967  0030C8                     l734:
  9968                           
  9969                           ; BSR set to: 0
  9970  0030C8  0012               	return		;funcret
  9971  0030CA                     __end_of_BlinkUSBStatus:
  9972                           	opt stack 0
  9973                           tblptru	equ	0xFF8
  9974                           tblptrh	equ	0xFF7
  9975                           tblptrl	equ	0xFF6
  9976                           tablat	equ	0xFF5
  9977                           prodh	equ	0xFF4
  9978                           prodl	equ	0xFF3
  9979                           intcon	equ	0xFF2
  9980                           postinc0	equ	0xFEE
  9981                           wreg	equ	0xFE8
  9982                           indf1	equ	0xFE7
  9983                           postdec1	equ	0xFE5
  9984                           fsr1h	equ	0xFE2
  9985                           fsr1l	equ	0xFE1
  9986                           indf2	equ	0xFDF
  9987                           postinc2	equ	0xFDE
  9988                           postdec2	equ	0xFDD
  9989                           plusw2	equ	0xFDB
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function _InitializeSystem *****************
  9995 ;; Defined at:
  9996 ;;		line 88 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;		None               void
 10003 ;; Registers used:
 10004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10013 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10014 ;;Total ram usage:        0 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    7
 10017 ;; This function calls:
 10018 ;;		_OpenSPI1
 10019 ;;		_USBDeviceInit
 10020 ;;		_USBRegisterFix
 10021 ;;		_readDeviceID
 10022 ;;		_tlc5947_count_channels
 10023 ;;		_tlc5947_pwm_readback
 10024 ;; This function is called by:
 10025 ;;		_main
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text41
 10030  00196A                     __ptext41:
 10031                           	opt stack 0
 10032  00196A                     _InitializeSystem:
 10033                           	opt stack 23
 10034                           
 10035                           ;karate.c: 90: DDRE &= 0x00; DDRD &= 0x00; DDRC &= 0xFF; DDRB &= 0x3F; DDRA &= 0xC3;;
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;incstack = 0
 10039  00196A  0E00               	movlw	0
 10040  00196C  6E96               	movwf	3990,c	;volatile
 10041  00196E  0E00               	movlw	0
 10042  001970  6E95               	movwf	3989,c	;volatile
 10043  001972  5094               	movf	3988,w,c	;volatile
 10044  001974  0E3F               	movlw	63
 10045  001976  1693               	andwf	3987,f,c	;volatile
 10046  001978  0EC3               	movlw	195
 10047  00197A  1692               	andwf	3986,f,c	;volatile
 10048                           
 10049                           ;karate.c: 91: LATC &= 0xF9; TRISC &= 0xF9;;
 10050  00197C  0EF9               	movlw	249
 10051  00197E  168B               	andwf	3979,f,c	;volatile
 10052  001980  0EF9               	movlw	249
 10053  001982  1694               	andwf	3988,f,c	;volatile
 10054                           
 10055                           ;karate.c: 93: readDeviceID();
 10056  001984  ECCF  F016         	call	_readDeviceID	;wreg free
 10057                           
 10058                           ;karate.c: 96: if (pic18_devid == 0x02E0) {
 10059  001988  0EE0               	movlw	224
 10060  00198A  0100               	movlb	0	; () banked
 10061  00198C  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10062  00198E  E130               	bnz	l5460
 10063  001990  0E02               	movlw	2
 10064  001992  0100               	movlb	0	; () banked
 10065  001994  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 10066  001996  A4D8               	btfss	status,2,c
 10067  001998  D02B               	goto	l5460
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;karate.c: 97: OSCTUNE = 0x80;
 10071  00199A  0E80               	movlw	128
 10072  00199C  6E9B               	movwf	3995,c	;volatile
 10073                           
 10074                           ;karate.c: 98: OSCCON = 0x70;
 10075  00199E  0E70               	movlw	112
 10076  0019A0  6ED3               	movwf	4051,c	;volatile
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;karate.c: 99: *OSCCON2_R = 0x10;
 10080  0019A2  C0BD  FFD9         	movff	_OSCCON2_R,fsr2l
 10081  0019A6  C0BE  FFDA         	movff	_OSCCON2_R+1,fsr2h
 10082  0019AA  0E10               	movlw	16
 10083  0019AC  6EDF               	movwf	indf2,c
 10084                           
 10085                           ; BSR set to: 0
 10086                           
 10087                           ;karate.c: 100: while((*OSCCON2_R & 0x80) != 0x80);
 10088  0019AE  D000               	goto	l5456
 10089  0019B0                     l5456:
 10090                           
 10091                           ; BSR set to: 0
 10092  0019B0  C0BD  FFD9         	movff	_OSCCON2_R,fsr2l
 10093  0019B4  C0BE  FFDA         	movff	_OSCCON2_R+1,fsr2h
 10094  0019B8  0100               	movlb	0	; () banked
 10095  0019BA  AEDF               	btfss	indf2,7,c
 10096  0019BC  D7F9               	goto	l5456
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;karate.c: 101: *ACTCON_R = 0x90;
 10100                           
 10101                           ; BSR set to: 0
 10102  0019BE  C0B5  FFD9         	movff	_ACTCON_R,fsr2l
 10103  0019C2  C0B6  FFDA         	movff	_ACTCON_R+1,fsr2h
 10104  0019C6  0E90               	movlw	144
 10105  0019C8  6EDF               	movwf	indf2,c
 10106                           
 10107                           ;karate.c: 102: *ANSELC_R = 0;
 10108  0019CA  C0B9  FFD9         	movff	_ANSELC_R,fsr2l
 10109  0019CE  C0BA  FFDA         	movff	_ANSELC_R+1,fsr2h
 10110  0019D2  0E00               	movlw	0
 10111  0019D4  6EDF               	movwf	indf2,c
 10112                           
 10113                           ;karate.c: 103: *ANSELA_R = 0;
 10114  0019D6  C0B7  FFD9         	movff	_ANSELA_R,fsr2l
 10115  0019DA  C0B8  FFDA         	movff	_ANSELA_R+1,fsr2h
 10116  0019DE  0E00               	movlw	0
 10117  0019E0  6EDF               	movwf	indf2,c
 10118                           
 10119                           ;karate.c: 104: *IOCB_R = 0x10;
 10120  0019E2  C0BB  FFD9         	movff	_IOCB_R,fsr2l
 10121  0019E6  C0BC  FFDA         	movff	_IOCB_R+1,fsr2h
 10122  0019EA  0E10               	movlw	16
 10123  0019EC  6EDF               	movwf	indf2,c
 10124                           
 10125                           ;karate.c: 105: } else {
 10126  0019EE  D003               	goto	l5462
 10127  0019F0                     l5460:
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;karate.c: 106: ADCON1 = 0x0F;
 10131  0019F0  0E0F               	movlw	15
 10132  0019F2  6EC1               	movwf	4033,c	;volatile
 10133  0019F4  D000               	goto	l5462
 10134  0019F6                     l5462:
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;karate.c: 107: }
 10138                           ;karate.c: 109: DDRAbits.RA1 = 1;
 10139  0019F6  8292               	bsf	3986,1,c	;volatile
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;karate.c: 110: DDRBbits.RB2 = 1;
 10143  0019F8  8493               	bsf	3987,2,c	;volatile
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;karate.c: 111: DDRBbits.RB4 = 1;
 10147  0019FA  8893               	bsf	3987,4,c	;volatile
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;karate.c: 112: TRISCbits.TRISC6 = 1;
 10151  0019FC  8C94               	bsf	3988,6,c	;volatile
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;karate.c: 115: if (pic18_devid == 0x02E0) {
 10155  0019FE  0EE0               	movlw	224
 10156  001A00  0100               	movlb	0	; () banked
 10157  001A02  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10158  001A04  E10D               	bnz	l5474
 10159  001A06  0E02               	movlw	2
 10160  001A08  0100               	movlb	0	; () banked
 10161  001A0A  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 10162  001A0C  A4D8               	btfss	status,2,c
 10163  001A0E  D008               	goto	l5474
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;karate.c: 116: OpenSPI1(0b00000010, 0b00000000, 0b00000000);
 10167  001A10  0E00               	movlw	0
 10168  001A12  6E23               	movwf	OpenSPI1@bus_mode,c
 10169  001A14  0E00               	movlw	0
 10170  001A16  6E24               	movwf	OpenSPI1@smp_phase,c
 10171  001A18  0E02               	movlw	2
 10172  001A1A  ECEB  F017         	call	_OpenSPI1
 10173                           
 10174                           ;karate.c: 117: } else {
 10175  001A1E  D005               	goto	l5476
 10176  001A20                     l5474:
 10177                           
 10178                           ;karate.c: 118: SSPSTAT = 0x40;
 10179  001A20  0E40               	movlw	64
 10180  001A22  6EC7               	movwf	4039,c	;volatile
 10181                           
 10182                           ;karate.c: 119: SSPCON1 = 0x22;
 10183  001A24  0E22               	movlw	34
 10184  001A26  6EC6               	movwf	4038,c	;volatile
 10185  001A28  D000               	goto	l5476
 10186  001A2A                     l5476:
 10187                           
 10188                           ;karate.c: 120: }
 10189                           ;karate.c: 121: TRISBbits.TRISB1 = 0;
 10190  001A2A  9293               	bcf	3987,1,c	;volatile
 10191                           
 10192                           ;karate.c: 122: TRISBbits.TRISB0 = 1;
 10193  001A2C  8093               	bsf	3987,0,c	;volatile
 10194                           
 10195                           ;karate.c: 123: TRISCbits.TRISC7 = 0;
 10196  001A2E  9E94               	bcf	3988,7,c	;volatile
 10197                           
 10198                           ;karate.c: 124: TRISBbits.TRISB3=0; TRISCbits.TRISC0=0; TRISBbits.TRISB5=0; LATBbits.LAT
      +                          B3=0; LATCbits.LATC0=1; LATBbits.LATB5=0;;
 10199  001A30  9693               	bcf	3987,3,c	;volatile
 10200  001A32  9094               	bcf	3988,0,c	;volatile
 10201  001A34  9A93               	bcf	3987,5,c	;volatile
 10202  001A36  968A               	bcf	3978,3,c	;volatile
 10203  001A38  808B               	bsf	3979,0,c	;volatile
 10204  001A3A  9A8A               	bcf	3978,5,c	;volatile
 10205                           
 10206                           ;karate.c: 126: tlc5947_count_channels();
 10207  001A3C  EC5E  F016         	call	_tlc5947_count_channels	;wreg free
 10208                           
 10209                           ;karate.c: 129: if (pic18_devid != 0x0090) {
 10210  001A40  0E90               	movlw	144
 10211  001A42  0100               	movlb	0	; () banked
 10212  001A44  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10213  001A46  0100               	movlb	0	; () banked
 10214  001A48  11F2               	iorwf	(_pic18_devid+1)& (0+255),w,b
 10215  001A4A  B4D8               	btfsc	status,2,c
 10216  001A4C  D009               	goto	l5502
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;karate.c: 130: T3CON = 0x77;
 10220  001A4E  0E77               	movlw	119
 10221  001A50  6EB1               	movwf	4017,c	;volatile
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;karate.c: 131: *T3GCON_R = 0x73;
 10225  001A52  C0C7  FFD9         	movff	_T3GCON_R,fsr2l
 10226  001A56  C0C8  FFDA         	movff	_T3GCON_R+1,fsr2h
 10227  001A5A  0E73               	movlw	115
 10228  001A5C  6EDF               	movwf	indf2,c
 10229                           
 10230                           ;karate.c: 132: } else {
 10231  001A5E  D003               	goto	l5504
 10232  001A60                     l5502:
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;karate.c: 133: T3CON = 0xD1;
 10236  001A60  0ED1               	movlw	209
 10237  001A62  6EB1               	movwf	4017,c	;volatile
 10238  001A64  D000               	goto	l5504
 10239  001A66                     l5504:
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;karate.c: 134: }
 10243                           ;karate.c: 135: IPR2bits.TMR3IP = 1;
 10244  001A66  82A2               	bsf	4002,1,c	;volatile
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;karate.c: 136: tlc5947_pwm_readback();
 10248  001A68  EC53  F014         	call	_tlc5947_pwm_readback	;wreg free
 10249                           
 10250                           ;karate.c: 137: PIE2 = 0x02;
 10251  001A6C  0E02               	movlw	2
 10252  001A6E  6EA0               	movwf	4000,c	;volatile
 10253                           
 10254                           ;karate.c: 139: tmr3h_cal = (uint8_t)((tlc_pwm_readback_value >> 8 & 0xFF)^0xFF);
 10255  001A70  504B               	movf	_tlc_pwm_readback_value+1,w,c
 10256  001A72  0AFF               	xorlw	255
 10257  001A74  0100               	movlb	0	; () banked
 10258  001A76  6FA1               	movwf	_tmr3h_cal& (0+255),b
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;karate.c: 140: tmr3l_cal = (uint8_t)((tlc_pwm_readback_value & 0xFF)^0xFF);
 10262  001A78  504A               	movf	_tlc_pwm_readback_value,w,c
 10263  001A7A  0AFF               	xorlw	255
 10264  001A7C  0100               	movlb	0	; () banked
 10265  001A7E  6FA2               	movwf	_tmr3l_cal& (0+255),b
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;karate.c: 144: ADCON0 = 0x01;
 10269  001A80  0E01               	movlw	1
 10270  001A82  6EC2               	movwf	4034,c	;volatile
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;karate.c: 145: ADCON1 = 0x0E;
 10274  001A84  0E0E               	movlw	14
 10275  001A86  6EC1               	movwf	4033,c	;volatile
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;karate.c: 146: ADCON2 = 0xBE;
 10279  001A88  0EBE               	movlw	190
 10280  001A8A  6EC0               	movwf	4032,c	;volatile
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;karate.c: 149: INTCONbits.INT0IE = 0;
 10284  001A8C  98F2               	bcf	intcon,4,c	;volatile
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;karate.c: 152: T2CON = 0xFF;
 10288  001A8E  68BA               	setf	4026,c	;volatile
 10289                           
 10290                           ; BSR set to: 0
 10291                           ;karate.c: 153: PR2 = 234;
 10292  001A90  0EEA               	movlw	234
 10293  001A92  6EBB               	movwf	4027,c	;volatile
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;karate.c: 154: PIE1bits.TMR2IE = 0;
 10297  001A94  929D               	bcf	3997,1,c	;volatile
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;karate.c: 155: IPR1bits.TMR2IP = 0;
 10301  001A96  929F               	bcf	3999,1,c	;volatile
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;karate.c: 157: USBRegisterFix();
 10305  001A98  EC77  F00E         	call	_USBRegisterFix	;wreg free
 10306                           
 10307                           ;karate.c: 158: USBDeviceInit();
 10308  001A9C  EC52  F00B         	call	_USBDeviceInit	;wreg free
 10309                           
 10310                           ;karate.c: 161: RCONbits.IPEN = 1;
 10311  001AA0  8ED0               	bsf	4048,7,c	;volatile
 10312                           
 10313                           ;karate.c: 162: INTCONbits.GIEL = 1;
 10314  001AA2  8CF2               	bsf	intcon,6,c	;volatile
 10315                           
 10316                           ;karate.c: 163: INTCONbits.GIEH = 1;
 10317  001AA4  8EF2               	bsf	intcon,7,c	;volatile
 10318  001AA6  0012               	return		;funcret
 10319  001AA8                     __end_of_InitializeSystem:
 10320                           	opt stack 0
 10321                           tblptru	equ	0xFF8
 10322                           tblptrh	equ	0xFF7
 10323                           tblptrl	equ	0xFF6
 10324                           tablat	equ	0xFF5
 10325                           prodh	equ	0xFF4
 10326                           prodl	equ	0xFF3
 10327                           intcon	equ	0xFF2
 10328                           postinc0	equ	0xFEE
 10329                           wreg	equ	0xFE8
 10330                           indf1	equ	0xFE7
 10331                           postdec1	equ	0xFE5
 10332                           fsr1h	equ	0xFE2
 10333                           fsr1l	equ	0xFE1
 10334                           indf2	equ	0xFDF
 10335                           postinc2	equ	0xFDE
 10336                           postdec2	equ	0xFDD
 10337                           plusw2	equ	0xFDB
 10338                           fsr2h	equ	0xFDA
 10339                           fsr2l	equ	0xFD9
 10340                           status	equ	0xFD8
 10341                           
 10342 ;; *************** function _tlc5947_pwm_readback *****************
 10343 ;; Defined at:
 10344 ;;		line 124 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;		None
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  i               1   52[COMRAM] unsigned char 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;		None               void
 10351 ;; Registers used:
 10352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10358 ;;      Params:         0       0       0       0       0       0       0       0       0
 10359 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10360 ;;      Temps:          6       0       0       0       0       0       0       0       0
 10361 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10362 ;;Total ram usage:        7 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    6
 10365 ;; This function calls:
 10366 ;;		_Delay10TCYx
 10367 ;;		___lwdiv
 10368 ;;		_tlc5947_latch
 10369 ;;		_tlc5947_setChannel
 10370 ;;		_tlc5947_update
 10371 ;; This function is called by:
 10372 ;;		_InitializeSystem
 10373 ;;		_ProcessCDC
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text42
 10378  0028A6                     __ptext42:
 10379                           	opt stack 0
 10380  0028A6                     _tlc5947_pwm_readback:
 10381                           	opt stack 22
 10382                           
 10383                           ;tlc5947.c: 131: uint8_t i;
 10384                           ;tlc5947.c: 134: tlc_request = -1;
 10385                           
 10386                           ;incstack = 0
 10387  0028A6  0100               	movlb	0	; () banked
 10388  0028A8  69A0               	setf	_tlc_request& (0+255),b
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;tlc5947.c: 137: tlc5947_setChannel(23, 190);
 10392  0028AA  0EBE               	movlw	190
 10393  0028AC  6E26               	movwf	tlc5947_setChannel@val,c
 10394  0028AE  0E17               	movlw	23
 10395  0028B0  EC87  F00A         	call	_tlc5947_setChannel
 10396                           
 10397                           ;tlc5947.c: 138: tlc5947_update();
 10398  0028B4  ECF2  F018         	call	_tlc5947_update	;wreg free
 10399                           
 10400                           ;tlc5947.c: 139: tlc5947_latch();
 10401  0028B8  EC67  F019         	call	_tlc5947_latch	;wreg free
 10402                           
 10403                           ;tlc5947.c: 141: INTCONbits.IOCIF = 0;
 10404  0028BC  90F2               	bcf	intcon,0,c	;volatile
 10405                           
 10406                           ;tlc5947.c: 143: i = 0;
 10407  0028BE  0E00               	movlw	0
 10408  0028C0  6E35               	movwf	tlc5947_pwm_readback@i,c
 10409  0028C2  D000               	goto	l5010
 10410  0028C4                     l5010:
 10411                           
 10412                           ;tlc5947.c: 145: if (INTCONbits.IOCIF) {
 10413  0028C4  A0F2               	btfss	intcon,0,c	;volatile
 10414  0028C6  D7FE               	goto	l5010
 10415                           
 10416                           ;tlc5947.c: 146: Delay10TCYx(2);
 10417  0028C8  0E02               	movlw	2
 10418  0028CA  EC06  F01A         	call	_Delay10TCYx
 10419                           
 10420                           ;tlc5947.c: 147: if (PORTBbits.RB4 == 0) {
 10421  0028CE  B881               	btfsc	3969,4,c	;volatile
 10422  0028D0  D010               	goto	l5026
 10423                           
 10424                           ;tlc5947.c: 148: if (i == 0) {
 10425  0028D2  5035               	movf	tlc5947_pwm_readback@i,w,c
 10426  0028D4  A4D8               	btfss	status,2,c
 10427  0028D6  D005               	goto	l5020
 10428                           
 10429                           ;tlc5947.c: 149: TMR3H = 0x00;
 10430  0028D8  0E00               	movlw	0
 10431  0028DA  6EB3               	movwf	4019,c	;volatile
 10432                           
 10433                           ;tlc5947.c: 150: TMR3L = 0x00;
 10434  0028DC  0E00               	movlw	0
 10435  0028DE  6EB2               	movwf	4018,c	;volatile
 10436  0028E0  D000               	goto	l5020
 10437  0028E2                     l5020:
 10438                           
 10439                           ;tlc5947.c: 151: }
 10440                           ;tlc5947.c: 152: if (i == 8) {
 10441  0028E2  0E08               	movlw	8
 10442  0028E4  1835               	xorwf	tlc5947_pwm_readback@i,w,c
 10443  0028E6  B4D8               	btfsc	status,2,c
 10444  0028E8  D006               	goto	l824
 10445  0028EA  D001               	goto	l5024
 10446                           
 10447                           ;tlc5947.c: 153: break;
 10448  0028EC  D004               	goto	l824
 10449  0028EE                     l5024:
 10450                           
 10451                           ;tlc5947.c: 154: }
 10452                           ;tlc5947.c: 155: i++;
 10453  0028EE  2A35               	incf	tlc5947_pwm_readback@i,f,c
 10454  0028F0  D000               	goto	l5026
 10455  0028F2                     l5026:
 10456                           
 10457                           ;tlc5947.c: 156: }
 10458                           ;tlc5947.c: 157: INTCONbits.IOCIF = 0;
 10459  0028F2  90F2               	bcf	intcon,0,c	;volatile
 10460  0028F4  D7E7               	goto	l5010
 10461  0028F6                     l824:
 10462                           
 10463                           ;tlc5947.c: 158: }
 10464                           ;tlc5947.c: 159: }
 10465                           ;tlc5947.c: 161: tlc_pwm_readback_value = TMR3L;
 10466  0028F6  CFB2 F04A          	movff	4018,_tlc_pwm_readback_value	;volatile
 10467  0028FA  6A4B               	clrf	_tlc_pwm_readback_value+1,c
 10468                           
 10469                           ;tlc5947.c: 162: tlc_pwm_readback_value += 256 * TMR3H;
 10470  0028FC  50B3               	movf	4019,w,c	;volatile
 10471  0028FE  264B               	addwf	_tlc_pwm_readback_value+1,f,c
 10472                           
 10473                           ;tlc5947.c: 164: pwr_delay = (tlc_pwm_readback_value - (2 * 40)) / 2 / 100;
 10474  002900  0EB0               	movlw	176
 10475  002902  6E2F               	movwf	??_tlc5947_pwm_readback& (0+255),c
 10476  002904  0EFF               	movlw	255
 10477  002906  6E30               	movwf	(??_tlc5947_pwm_readback+1)& (0+255),c
 10478  002908  C04A  F031         	movff	_tlc_pwm_readback_value,??_tlc5947_pwm_readback+2
 10479  00290C  C04B  F032         	movff	_tlc_pwm_readback_value+1,??_tlc5947_pwm_readback+3
 10480  002910  502F               	movf	??_tlc5947_pwm_readback,w,c
 10481  002912  2631               	addwf	??_tlc5947_pwm_readback+2,f,c
 10482  002914  5030               	movf	??_tlc5947_pwm_readback+1,w,c
 10483  002916  2232               	addwfc	??_tlc5947_pwm_readback+3,f,c
 10484  002918  90D8               	bcf	status,0,c
 10485  00291A  3032               	rrcf	??_tlc5947_pwm_readback+3,w,c
 10486  00291C  6E33               	movwf	(??_tlc5947_pwm_readback+4)& (0+255),c
 10487  00291E  3031               	rrcf	??_tlc5947_pwm_readback+2,w,c
 10488  002920  6E23               	movwf	___lwdiv@dividend,c
 10489  002922  C033  F024         	movff	??_tlc5947_pwm_readback+4,___lwdiv@dividend+1
 10490  002926  0E00               	movlw	0
 10491  002928  6E26               	movwf	___lwdiv@divisor+1,c
 10492  00292A  0E64               	movlw	100
 10493  00292C  6E25               	movwf	___lwdiv@divisor,c
 10494  00292E  EC91  F017         	call	___lwdiv	;wreg free
 10495  002932  C023  F08E         	movff	?___lwdiv,_pwr_delay
 10496  002936  C024  F08F         	movff	?___lwdiv+1,_pwr_delay+1
 10497                           
 10498                           ;tlc5947.c: 167: tlc5947_setChannel(23, 0);
 10499  00293A  0E00               	movlw	0
 10500  00293C  6E26               	movwf	tlc5947_setChannel@val,c
 10501  00293E  0E17               	movlw	23
 10502  002940  EC87  F00A         	call	_tlc5947_setChannel
 10503                           
 10504                           ;tlc5947.c: 168: tlc5947_update();
 10505  002944  ECF2  F018         	call	_tlc5947_update	;wreg free
 10506                           
 10507                           ;tlc5947.c: 169: tlc5947_latch();
 10508  002948  EC67  F019         	call	_tlc5947_latch	;wreg free
 10509                           
 10510                           ;tlc5947.c: 172: tlc_request = 0;
 10511  00294C  0E00               	movlw	0
 10512  00294E  0100               	movlb	0	; () banked
 10513  002950  6FA0               	movwf	_tlc_request& (0+255),b
 10514                           
 10515                           ; BSR set to: 0
 10516  002952  0012               	return		;funcret
 10517  002954                     __end_of_tlc5947_pwm_readback:
 10518                           	opt stack 0
 10519                           tblptru	equ	0xFF8
 10520                           tblptrh	equ	0xFF7
 10521                           tblptrl	equ	0xFF6
 10522                           tablat	equ	0xFF5
 10523                           prodh	equ	0xFF4
 10524                           prodl	equ	0xFF3
 10525                           intcon	equ	0xFF2
 10526                           postinc0	equ	0xFEE
 10527                           wreg	equ	0xFE8
 10528                           indf1	equ	0xFE7
 10529                           postdec1	equ	0xFE5
 10530                           fsr1h	equ	0xFE2
 10531                           fsr1l	equ	0xFE1
 10532                           indf2	equ	0xFDF
 10533                           postinc2	equ	0xFDE
 10534                           postdec2	equ	0xFDD
 10535                           plusw2	equ	0xFDB
 10536                           fsr2h	equ	0xFDA
 10537                           fsr2l	equ	0xFD9
 10538                           status	equ	0xFD8
 10539                           
 10540 ;; *************** function _tlc5947_setChannel *****************
 10541 ;; Defined at:
 10542 ;;		line 43 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  ch              1    wreg     unsigned char 
 10545 ;;  val             1   37[COMRAM] unsigned char 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  ch              1   41[COMRAM] unsigned char 
 10548 ;;  col             2   42[COMRAM] unsigned int 
 10549 ;;  mpos            1   45[COMRAM] unsigned char 
 10550 ;;  pos             1   44[COMRAM] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;		None               void
 10553 ;; Registers used:
 10554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10560 ;;      Params:         1       0       0       0       0       0       0       0       0
 10561 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10562 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10563 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10564 ;;Total ram usage:        9 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    5
 10567 ;; This function calls:
 10568 ;;		_gamma_lookup
 10569 ;; This function is called by:
 10570 ;;		_ProcessIO
 10571 ;;		_tlc5947_pwm_readback
 10572 ;;		_ProcessCDC
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           	psect	text43
 10577  00150E                     __ptext43:
 10578                           	opt stack 0
 10579  00150E                     _tlc5947_setChannel:
 10580                           	opt stack 24
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;incstack = 0
 10584                           ;tlc5947_setChannel@ch stored from wreg
 10585  00150E  6E2A               	movwf	tlc5947_setChannel@ch,c
 10586                           
 10587                           ;tlc5947.c: 45: uint8_t pos = 0;
 10588  001510  0E00               	movlw	0
 10589  001512  6E2D               	movwf	tlc5947_setChannel@pos,c
 10590                           
 10591                           ;tlc5947.c: 46: uint8_t mpos = 0;
 10592  001514  0E00               	movlw	0
 10593  001516  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10594                           
 10595                           ;tlc5947.c: 47: uint16_t col = 0;
 10596  001518  0E00               	movlw	0
 10597  00151A  6E2C               	movwf	tlc5947_setChannel@col+1,c
 10598  00151C  0E00               	movlw	0
 10599  00151E  6E2B               	movwf	tlc5947_setChannel@col,c
 10600                           
 10601                           ;tlc5947.c: 50: if (ch >= tlc_nchannels) return;
 10602  001520  0100               	movlb	0	; () banked
 10603  001522  51DD               	movf	_tlc_nchannels& (0+255),w,b
 10604  001524  5C2A               	subwf	tlc5947_setChannel@ch,w,c
 10605  001526  B0D8               	btfsc	status,0,c
 10606  001528  0012               	return	
 10607  00152A  D001               	goto	l4694
 10608                           
 10609                           ; BSR set to: 0
 10610  00152C  0012               	return	
 10611  00152E                     l4694:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;tlc5947.c: 52: col = ~gamma_lookup(val);
 10615  00152E  5026               	movf	tlc5947_setChannel@val,w,c
 10616  001530  ECD8  F019         	call	_gamma_lookup
 10617  001534  1C23               	comf	?_gamma_lookup,w,c
 10618  001536  6E2B               	movwf	tlc5947_setChannel@col,c
 10619  001538  1C24               	comf	?_gamma_lookup+1,w,c
 10620  00153A  6E2C               	movwf	tlc5947_setChannel@col+1,c
 10621                           
 10622                           ;tlc5947.c: 55: if (tlc_nchannels == 48) {
 10623  00153C  0E30               	movlw	48
 10624  00153E  0100               	movlb	0	; () banked
 10625  001540  19DD               	xorwf	_tlc_nchannels& (0+255),w,b
 10626  001542  A4D8               	btfss	status,2,c
 10627  001544  D009               	goto	l4704
 10628                           
 10629                           ; BSR set to: 0
 10630                           ;tlc5947.c: 56: if (ch < 24) {
 10631  001546  0E18               	movlw	24
 10632  001548  602A               	cpfslt	tlc5947_setChannel@ch,c
 10633  00154A  D003               	goto	l4702
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;tlc5947.c: 57: ch+=24;
 10637  00154C  0E18               	movlw	24
 10638  00154E  262A               	addwf	tlc5947_setChannel@ch,f,c
 10639                           
 10640                           ;tlc5947.c: 58: } else {
 10641  001550  D003               	goto	l4704
 10642  001552                     l4702:
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;tlc5947.c: 59: ch-=24;
 10646  001552  0E18               	movlw	24
 10647  001554  5E2A               	subwf	tlc5947_setChannel@ch,f,c
 10648                           
 10649                           ; BSR set to: 0
 10650  001556  D000               	goto	l4704
 10651  001558                     l4704:
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;tlc5947.c: 60: }
 10655                           ;tlc5947.c: 61: }
 10656                           ;tlc5947.c: 63: pos = ch * 3;
 10657  001558  502A               	movf	tlc5947_setChannel@ch,w,c
 10658  00155A  0D03               	mullw	3
 10659  00155C  CFF3 F02D          	movff	prodl,tlc5947_setChannel@pos
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;tlc5947.c: 66: mpos = pos >> 1;
 10663  001560  90D8               	bcf	status,0,c
 10664  001562  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10665  001564  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;tlc5947.c: 67: if (pos & 0x01) {
 10669  001566  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10670  001568  D013               	goto	l4712
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;tlc5947.c: 68: tlc_memory[mpos] &= 0xF0;
 10674  00156A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10675  00156C  0D01               	mullw	1
 10676  00156E  0E80               	movlw	low _tlc_memory
 10677  001570  24F3               	addwf	prodl,w,c
 10678  001572  6ED9               	movwf	fsr2l,c
 10679  001574  0E01               	movlw	high _tlc_memory
 10680  001576  20F4               	addwfc	prodh,w,c
 10681  001578  6EDA               	movwf	fsr2h,c
 10682  00157A  0EF0               	movlw	240
 10683  00157C  16DF               	andwf	indf2,f,c
 10684                           
 10685                           ;tlc5947.c: 69: tlc_memory[mpos] |= ((col & 0xF00) >> 8);
 10686  00157E  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10687  001582  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10688  001586  C028  F027         	movff	??_tlc5947_setChannel+1,??_tlc5947_setChannel
 10689  00158A  6A28               	clrf	??_tlc5947_setChannel+1,c
 10690  00158C  0E0F               	movlw	15
 10691  00158E  D016               	goto	L14
 10692  001590                     l4712:
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;tlc5947.c: 71: tlc_memory[mpos] &= 0x0F;
 10696  001590  502E               	movf	tlc5947_setChannel@mpos,w,c
 10697  001592  0D01               	mullw	1
 10698  001594  0E80               	movlw	low _tlc_memory
 10699  001596  24F3               	addwf	prodl,w,c
 10700  001598  6ED9               	movwf	fsr2l,c
 10701  00159A  0E01               	movlw	high _tlc_memory
 10702  00159C  20F4               	addwfc	prodh,w,c
 10703  00159E  6EDA               	movwf	fsr2h,c
 10704  0015A0  0E0F               	movlw	15
 10705  0015A2  16DF               	andwf	indf2,f,c
 10706                           
 10707                           ;tlc5947.c: 72: tlc_memory[mpos] |= ((col & 0xF00) >> 4);
 10708  0015A4  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10709  0015A8  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10710  0015AC  0E04               	movlw	4
 10711  0015AE  6E29               	movwf	(??_tlc5947_setChannel+2)& (0+255),c
 10712  0015B0                     u3615:
 10713  0015B0  90D8               	bcf	status,0,c
 10714  0015B2  3228               	rrcf	??_tlc5947_setChannel+1,f,c
 10715  0015B4  3227               	rrcf	??_tlc5947_setChannel,f,c
 10716  0015B6  2E29               	decfsz	(??_tlc5947_setChannel+2)& (0+255),f,c
 10717  0015B8  D7FB               	goto	u3615
 10718  0015BA  0EF0               	movlw	240
 10719  0015BC                     L14:
 10720  0015BC  1627               	andwf	??_tlc5947_setChannel,f,c
 10721  0015BE  502E               	movf	tlc5947_setChannel@mpos,w,c
 10722  0015C0  0D01               	mullw	1
 10723  0015C2  0E80               	movlw	low _tlc_memory
 10724  0015C4  24F3               	addwf	prodl,w,c
 10725  0015C6  6ED9               	movwf	fsr2l,c
 10726  0015C8  0E01               	movlw	high _tlc_memory
 10727  0015CA  20F4               	addwfc	prodh,w,c
 10728  0015CC  6EDA               	movwf	fsr2h,c
 10729  0015CE  5027               	movf	??_tlc5947_setChannel,w,c
 10730  0015D0  12DF               	iorwf	indf2,f,c
 10731  0015D2  D000               	goto	l4714
 10732  0015D4                     l4714:
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;tlc5947.c: 73: }
 10736                           ;tlc5947.c: 75: pos++;
 10737  0015D4  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;tlc5947.c: 76: mpos = pos >> 1;
 10741  0015D6  90D8               	bcf	status,0,c
 10742  0015D8  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10743  0015DA  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;tlc5947.c: 77: if (pos & 0x01) {
 10747  0015DC  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10748  0015DE  D017               	goto	l4722
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;tlc5947.c: 78: tlc_memory[mpos] &= 0xF0;
 10752  0015E0  502E               	movf	tlc5947_setChannel@mpos,w,c
 10753  0015E2  0D01               	mullw	1
 10754  0015E4  0E80               	movlw	low _tlc_memory
 10755  0015E6  24F3               	addwf	prodl,w,c
 10756  0015E8  6ED9               	movwf	fsr2l,c
 10757  0015EA  0E01               	movlw	high _tlc_memory
 10758  0015EC  20F4               	addwfc	prodh,w,c
 10759  0015EE  6EDA               	movwf	fsr2h,c
 10760  0015F0  0EF0               	movlw	240
 10761  0015F2  16DF               	andwf	indf2,f,c
 10762                           
 10763                           ;tlc5947.c: 79: tlc_memory[mpos] |= ((col & 0x0F0) >> 4);
 10764  0015F4  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10765  0015F8  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10766  0015FC  0E04               	movlw	4
 10767  0015FE  6E29               	movwf	(??_tlc5947_setChannel+2)& (0+255),c
 10768  001600                     u3635:
 10769  001600  90D8               	bcf	status,0,c
 10770  001602  3228               	rrcf	??_tlc5947_setChannel+1,f,c
 10771  001604  3227               	rrcf	??_tlc5947_setChannel,f,c
 10772  001606  2E29               	decfsz	(??_tlc5947_setChannel+2)& (0+255),f,c
 10773  001608  D7FB               	goto	u3635
 10774  00160A  0E0F               	movlw	15
 10775  00160C  D00D               	goto	L15
 10776  00160E                     l4722:
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;tlc5947.c: 81: tlc_memory[mpos] &= 0x0F;
 10780  00160E  502E               	movf	tlc5947_setChannel@mpos,w,c
 10781  001610  0D01               	mullw	1
 10782  001612  0E80               	movlw	low _tlc_memory
 10783  001614  24F3               	addwf	prodl,w,c
 10784  001616  6ED9               	movwf	fsr2l,c
 10785  001618  0E01               	movlw	high _tlc_memory
 10786  00161A  20F4               	addwfc	prodh,w,c
 10787  00161C  6EDA               	movwf	fsr2h,c
 10788  00161E  0E0F               	movlw	15
 10789  001620  16DF               	andwf	indf2,f,c
 10790                           
 10791                           ;tlc5947.c: 82: tlc_memory[mpos] |= (col & 0x0F0);
 10792  001622  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10793  001626  0EF0               	movlw	240
 10794  001628                     L15:
 10795  001628  1627               	andwf	??_tlc5947_setChannel,f,c
 10796  00162A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10797  00162C  0D01               	mullw	1
 10798  00162E  0E80               	movlw	low _tlc_memory
 10799  001630  24F3               	addwf	prodl,w,c
 10800  001632  6ED9               	movwf	fsr2l,c
 10801  001634  0E01               	movlw	high _tlc_memory
 10802  001636  20F4               	addwfc	prodh,w,c
 10803  001638  6EDA               	movwf	fsr2h,c
 10804  00163A  5027               	movf	??_tlc5947_setChannel,w,c
 10805  00163C  12DF               	iorwf	indf2,f,c
 10806  00163E  D000               	goto	l4724
 10807  001640                     l4724:
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;tlc5947.c: 83: }
 10811                           ;tlc5947.c: 85: pos++;
 10812  001640  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;tlc5947.c: 86: mpos = pos >> 1;
 10816  001642  90D8               	bcf	status,0,c
 10817  001644  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10818  001646  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;tlc5947.c: 87: if (pos & 0x01) {
 10822  001648  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10823  00164A  D00E               	goto	l4732
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;tlc5947.c: 88: tlc_memory[mpos] &= 0xF0;
 10827  00164C  502E               	movf	tlc5947_setChannel@mpos,w,c
 10828  00164E  0D01               	mullw	1
 10829  001650  0E80               	movlw	low _tlc_memory
 10830  001652  24F3               	addwf	prodl,w,c
 10831  001654  6ED9               	movwf	fsr2l,c
 10832  001656  0E01               	movlw	high _tlc_memory
 10833  001658  20F4               	addwfc	prodh,w,c
 10834  00165A  6EDA               	movwf	fsr2h,c
 10835  00165C  0EF0               	movlw	240
 10836  00165E  16DF               	andwf	indf2,f,c
 10837                           
 10838                           ;tlc5947.c: 89: tlc_memory[mpos] |= (col & 0x00F);
 10839  001660  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10840  001664  0E0F               	movlw	15
 10841  001666  D010               	goto	L16
 10842  001668                     l4732:
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;tlc5947.c: 91: tlc_memory[mpos] &= 0x0F;
 10846  001668  502E               	movf	tlc5947_setChannel@mpos,w,c
 10847  00166A  0D01               	mullw	1
 10848  00166C  0E80               	movlw	low _tlc_memory
 10849  00166E  24F3               	addwf	prodl,w,c
 10850  001670  6ED9               	movwf	fsr2l,c
 10851  001672  0E01               	movlw	high _tlc_memory
 10852  001674  20F4               	addwfc	prodh,w,c
 10853  001676  6EDA               	movwf	fsr2h,c
 10854  001678  0E0F               	movlw	15
 10855  00167A  16DF               	andwf	indf2,f,c
 10856                           
 10857                           ;tlc5947.c: 92: tlc_memory[mpos] |= ((col & 0x00F) << 4);
 10858  00167C  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10859  001680  0E0F               	movlw	15
 10860  001682  1627               	andwf	??_tlc5947_setChannel,f,c
 10861  001684  3A27               	swapf	??_tlc5947_setChannel,f,c
 10862  001686  0EF0               	movlw	240
 10863  001688                     L16:
 10864  001688  1627               	andwf	??_tlc5947_setChannel,f,c
 10865  00168A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10866  00168C  0D01               	mullw	1
 10867  00168E  0E80               	movlw	low _tlc_memory
 10868  001690  24F3               	addwf	prodl,w,c
 10869  001692  6ED9               	movwf	fsr2l,c
 10870  001694  0E01               	movlw	high _tlc_memory
 10871  001696  20F4               	addwfc	prodh,w,c
 10872  001698  6EDA               	movwf	fsr2h,c
 10873  00169A  5027               	movf	??_tlc5947_setChannel,w,c
 10874  00169C  12DF               	iorwf	indf2,f,c
 10875  00169E  D000               	goto	l4734
 10876  0016A0                     l4734:
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;tlc5947.c: 93: }
 10880                           ;tlc5947.c: 94: pos++;
 10881  0016A0  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10882                           
 10883                           ; BSR set to: 0
 10884  0016A2  0012               	return		;funcret
 10885  0016A4                     __end_of_tlc5947_setChannel:
 10886                           	opt stack 0
 10887                           tblptru	equ	0xFF8
 10888                           tblptrh	equ	0xFF7
 10889                           tblptrl	equ	0xFF6
 10890                           tablat	equ	0xFF5
 10891                           prodh	equ	0xFF4
 10892                           prodl	equ	0xFF3
 10893                           intcon	equ	0xFF2
 10894                           postinc0	equ	0xFEE
 10895                           wreg	equ	0xFE8
 10896                           indf1	equ	0xFE7
 10897                           postdec1	equ	0xFE5
 10898                           fsr1h	equ	0xFE2
 10899                           fsr1l	equ	0xFE1
 10900                           indf2	equ	0xFDF
 10901                           postinc2	equ	0xFDE
 10902                           postdec2	equ	0xFDD
 10903                           plusw2	equ	0xFDB
 10904                           fsr2h	equ	0xFDA
 10905                           fsr2l	equ	0xFD9
 10906                           status	equ	0xFD8
 10907                           
 10908 ;; *************** function _gamma_lookup *****************
 10909 ;; Defined at:
 10910 ;;		line 23 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/gamma.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  c               1    wreg     unsigned char 
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;  c               1   36[COMRAM] unsigned char 
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  2   34[COMRAM] unsigned int 
 10917 ;; Registers used:
 10918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10924 ;;      Params:         2       0       0       0       0       0       0       0       0
 10925 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10926 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10927 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10928 ;;Total ram usage:        3 bytes
 10929 ;; Hardware stack levels used:    1
 10930 ;; Hardware stack levels required when called:    4
 10931 ;; This function calls:
 10932 ;;		Nothing
 10933 ;; This function is called by:
 10934 ;;		_tlc5947_setChannel
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text44
 10939  0033B0                     __ptext44:
 10940                           	opt stack 0
 10941  0033B0                     _gamma_lookup:
 10942                           	opt stack 24
 10943                           
 10944                           ; BSR set to: 0
 10945                           ;incstack = 0
 10946                           ;gamma_lookup@c stored from wreg
 10947  0033B0  6E25               	movwf	gamma_lookup@c,c
 10948                           
 10949                           ;gamma.c: 25: return gamma_table[c];
 10950  0033B2  5025               	movf	gamma_lookup@c,w,c
 10951  0033B4  0D02               	mullw	2
 10952  0033B6  0E80               	movlw	low _gamma_table
 10953  0033B8  24F3               	addwf	prodl,w,c
 10954  0033BA  6ED9               	movwf	fsr2l,c
 10955  0033BC  0E05               	movlw	high _gamma_table
 10956  0033BE  20F4               	addwfc	prodh,w,c
 10957  0033C0  6EDA               	movwf	fsr2h,c
 10958  0033C2  CFDE F023          	movff	postinc2,?_gamma_lookup
 10959  0033C6  CFDD F024          	movff	postdec2,?_gamma_lookup+1
 10960  0033CA  0012               	return	
 10961  0033CC  0012               	return		;funcret
 10962  0033CE                     __end_of_gamma_lookup:
 10963                           	opt stack 0
 10964                           tblptru	equ	0xFF8
 10965                           tblptrh	equ	0xFF7
 10966                           tblptrl	equ	0xFF6
 10967                           tablat	equ	0xFF5
 10968                           prodh	equ	0xFF4
 10969                           prodl	equ	0xFF3
 10970                           intcon	equ	0xFF2
 10971                           postinc0	equ	0xFEE
 10972                           wreg	equ	0xFE8
 10973                           indf1	equ	0xFE7
 10974                           postdec1	equ	0xFE5
 10975                           fsr1h	equ	0xFE2
 10976                           fsr1l	equ	0xFE1
 10977                           indf2	equ	0xFDF
 10978                           postinc2	equ	0xFDE
 10979                           postdec2	equ	0xFDD
 10980                           plusw2	equ	0xFDB
 10981                           fsr2h	equ	0xFDA
 10982                           fsr2l	equ	0xFD9
 10983                           status	equ	0xFD8
 10984                           
 10985 ;; *************** function _tlc5947_latch *****************
 10986 ;; Defined at:
 10987 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;		None               void
 10994 ;; Registers used:
 10995 ;;		wreg, status,2, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:    5
 11008 ;; This function calls:
 11009 ;;		_Delay100TCYx
 11010 ;;		_Delay10TCYx
 11011 ;; This function is called by:
 11012 ;;		_tlc5947_pwm_readback
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text45
 11017  0032CE                     __ptext45:
 11018                           	opt stack 0
 11019  0032CE                     _tlc5947_latch:
 11020                           	opt stack 22
 11021                           
 11022                           ;tlc5947.c: 187: LATBbits.LATB5 = 1;;
 11023                           
 11024                           ;incstack = 0
 11025  0032CE  8A8A               	bsf	3978,5,c	;volatile
 11026                           
 11027                           ;tlc5947.c: 188: Delay100TCYx (pwr_delay);
 11028  0032D0  0100               	movlb	0	; () banked
 11029  0032D2  518E               	movf	_pwr_delay& (0+255),w,b
 11030  0032D4  EC0F  F01A         	call	_Delay100TCYx
 11031                           
 11032                           ;tlc5947.c: 190: LATCbits.LATC0 = 1;;
 11033  0032D8  808B               	bsf	3979,0,c	;volatile
 11034                           
 11035                           ;tlc5947.c: 191: LATBbits.LATB3 = 1;;
 11036  0032DA  868A               	bsf	3978,3,c	;volatile
 11037                           
 11038                           ;tlc5947.c: 192: Delay10TCYx(40);
 11039  0032DC  0E28               	movlw	40
 11040  0032DE  EC06  F01A         	call	_Delay10TCYx
 11041                           
 11042                           ;tlc5947.c: 193: LATBbits.LATB3 = 0;;
 11043  0032E2  968A               	bcf	3978,3,c	;volatile
 11044                           
 11045                           ;tlc5947.c: 194: Delay10TCYx(40);
 11046  0032E4  0E28               	movlw	40
 11047  0032E6  EC06  F01A         	call	_Delay10TCYx
 11048                           
 11049                           ;tlc5947.c: 195: LATCbits.LATC0 = 0;;
 11050  0032EA  908B               	bcf	3979,0,c	;volatile
 11051                           
 11052                           ;tlc5947.c: 197: Delay100TCYx(pwr_delay);
 11053  0032EC  0100               	movlb	0	; () banked
 11054  0032EE  518E               	movf	_pwr_delay& (0+255),w,b
 11055  0032F0  EC0F  F01A         	call	_Delay100TCYx
 11056                           
 11057                           ;tlc5947.c: 198: LATBbits.LATB5 = 0;;
 11058  0032F4  9A8A               	bcf	3978,5,c	;volatile
 11059  0032F6  0012               	return		;funcret
 11060  0032F8                     __end_of_tlc5947_latch:
 11061                           	opt stack 0
 11062                           tblptru	equ	0xFF8
 11063                           tblptrh	equ	0xFF7
 11064                           tblptrl	equ	0xFF6
 11065                           tablat	equ	0xFF5
 11066                           prodh	equ	0xFF4
 11067                           prodl	equ	0xFF3
 11068                           intcon	equ	0xFF2
 11069                           postinc0	equ	0xFEE
 11070                           wreg	equ	0xFE8
 11071                           indf1	equ	0xFE7
 11072                           postdec1	equ	0xFE5
 11073                           fsr1h	equ	0xFE2
 11074                           fsr1l	equ	0xFE1
 11075                           indf2	equ	0xFDF
 11076                           postinc2	equ	0xFDE
 11077                           postdec2	equ	0xFDD
 11078                           plusw2	equ	0xFDB
 11079                           fsr2h	equ	0xFDA
 11080                           fsr2l	equ	0xFD9
 11081                           status	equ	0xFD8
 11082                           
 11083 ;; *************** function _Delay10TCYx *****************
 11084 ;; Defined at:
 11085 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10tcyx.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  unit            1    wreg     unsigned char 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  unit            1   34[COMRAM] unsigned char 
 11090 ;; Return value:  Size  Location     Type
 11091 ;;		None               void
 11092 ;; Registers used:
 11093 ;;		wreg
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 0/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11099 ;;      Params:         0       0       0       0       0       0       0       0       0
 11100 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11101 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11102 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11103 ;;Total ram usage:        1 bytes
 11104 ;; Hardware stack levels used:    1
 11105 ;; Hardware stack levels required when called:    4
 11106 ;; This function calls:
 11107 ;;		Nothing
 11108 ;; This function is called by:
 11109 ;;		_tlc5947_pwm_readback
 11110 ;;		_tlc5947_latch
 11111 ;;		_ProcessCDC
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           	psect	text46
 11116  00340C                     __ptext46:
 11117                           	opt stack 0
 11118  00340C                     _Delay10TCYx:
 11119                           	opt stack 22
 11120                           
 11121                           ;incstack = 0
 11122                           ;Delay10TCYx@unit stored from wreg
 11123  00340C  6E23               	movwf	Delay10TCYx@unit,c
 11124  00340E  0E03               	movlw	3
 11125  003410                     u4887:
 11126  003410  2EE8               	decfsz	wreg,f,c
 11127  003412  D7FE               	goto	u4887
 11128  003414  F000               	nop	
 11129  003416  2E23               	decfsz	Delay10TCYx@unit,f,c
 11130  003418  D7FA               	goto	l4430
 11131  00341A  0012               	return	
 11132  00341C  0012               	return		;funcret
 11133  00341E                     __end_of_Delay10TCYx:
 11134                           	opt stack 0
 11135                           tblptru	equ	0xFF8
 11136                           tblptrh	equ	0xFF7
 11137                           tblptrl	equ	0xFF6
 11138                           tablat	equ	0xFF5
 11139                           prodh	equ	0xFF4
 11140                           prodl	equ	0xFF3
 11141                           intcon	equ	0xFF2
 11142                           postinc0	equ	0xFEE
 11143                           wreg	equ	0xFE8
 11144                           indf1	equ	0xFE7
 11145                           postdec1	equ	0xFE5
 11146                           fsr1h	equ	0xFE2
 11147                           fsr1l	equ	0xFE1
 11148                           indf2	equ	0xFDF
 11149                           postinc2	equ	0xFDE
 11150                           postdec2	equ	0xFDD
 11151                           plusw2	equ	0xFDB
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _Delay100TCYx *****************
 11157 ;; Defined at:
 11158 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  unit            1    wreg     unsigned char 
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  unit            1   34[COMRAM] unsigned char 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;		None               void
 11165 ;; Registers used:
 11166 ;;		wreg
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0
 11173 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11175 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11176 ;;Total ram usage:        1 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    4
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_tlc5947_latch
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text47
 11187  00341E                     __ptext47:
 11188                           	opt stack 0
 11189  00341E                     _Delay100TCYx:
 11190                           	opt stack 22
 11191                           
 11192                           ;incstack = 0
 11193                           ;Delay100TCYx@unit stored from wreg
 11194  00341E  6E23               	movwf	Delay100TCYx@unit,c
 11195  003420  0E21               	movlw	33
 11196  003422                     u4897:
 11197  003422  2EE8               	decfsz	wreg,f,c
 11198  003424  D7FE               	goto	u4897
 11199  003426  F000               	nop	
 11200  003428  2E23               	decfsz	Delay100TCYx@unit,f,c
 11201  00342A  D7FA               	goto	l4434
 11202  00342C  0012               	return	
 11203  00342E  0012               	return		;funcret
 11204  003430                     __end_of_Delay100TCYx:
 11205                           	opt stack 0
 11206                           tblptru	equ	0xFF8
 11207                           tblptrh	equ	0xFF7
 11208                           tblptrl	equ	0xFF6
 11209                           tablat	equ	0xFF5
 11210                           prodh	equ	0xFF4
 11211                           prodl	equ	0xFF3
 11212                           intcon	equ	0xFF2
 11213                           postinc0	equ	0xFEE
 11214                           wreg	equ	0xFE8
 11215                           indf1	equ	0xFE7
 11216                           postdec1	equ	0xFE5
 11217                           fsr1h	equ	0xFE2
 11218                           fsr1l	equ	0xFE1
 11219                           indf2	equ	0xFDF
 11220                           postinc2	equ	0xFDE
 11221                           postdec2	equ	0xFDD
 11222                           plusw2	equ	0xFDB
 11223                           fsr2h	equ	0xFDA
 11224                           fsr2l	equ	0xFD9
 11225                           status	equ	0xFD8
 11226                           
 11227 ;; *************** function ___lwdiv *****************
 11228 ;; Defined at:
 11229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  dividend        2   34[COMRAM] unsigned int 
 11232 ;;  divisor         2   36[COMRAM] unsigned int 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  quotient        2   38[COMRAM] unsigned int 
 11235 ;;  counter         1   40[COMRAM] unsigned char 
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  2   34[COMRAM] unsigned int 
 11238 ;; Registers used:
 11239 ;;		wreg, status,2, status,0
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11245 ;;      Params:         4       0       0       0       0       0       0       0       0
 11246 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11248 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11249 ;;Total ram usage:        7 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; Hardware stack levels required when called:    4
 11252 ;; This function calls:
 11253 ;;		Nothing
 11254 ;; This function is called by:
 11255 ;;		_tlc5947_pwm_readback
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259                           	psect	text48
 11260  002F22                     __ptext48:
 11261                           	opt stack 0
 11262  002F22                     ___lwdiv:
 11263                           	opt stack 23
 11264                           
 11265                           ;incstack = 0
 11266  002F22  0E00               	movlw	0
 11267  002F24  6E28               	movwf	___lwdiv@quotient+1,c
 11268  002F26  0E00               	movlw	0
 11269  002F28  6E27               	movwf	___lwdiv@quotient,c
 11270  002F2A  5025               	movf	___lwdiv@divisor,w,c
 11271  002F2C  1026               	iorwf	___lwdiv@divisor+1,w,c
 11272  002F2E  B4D8               	btfsc	status,2,c
 11273  002F30  D021               	goto	l1699
 11274  002F32  0E01               	movlw	1
 11275  002F34  6E29               	movwf	___lwdiv@counter,c
 11276  002F36  D005               	goto	l4796
 11277  002F38                     l4794:
 11278  002F38  90D8               	bcf	status,0,c
 11279  002F3A  3625               	rlcf	___lwdiv@divisor,f,c
 11280  002F3C  3626               	rlcf	___lwdiv@divisor+1,f,c
 11281  002F3E  2A29               	incf	___lwdiv@counter,f,c
 11282  002F40  D000               	goto	l4796
 11283  002F42                     l4796:
 11284  002F42  BE26               	btfsc	___lwdiv@divisor+1,7,c
 11285  002F44  D002               	goto	l4798
 11286  002F46  D7F8               	goto	l4794
 11287  002F48  D000               	goto	l4798
 11288  002F4A                     l4798:
 11289  002F4A  90D8               	bcf	status,0,c
 11290  002F4C  3627               	rlcf	___lwdiv@quotient,f,c
 11291  002F4E  3628               	rlcf	___lwdiv@quotient+1,f,c
 11292  002F50  5025               	movf	___lwdiv@divisor,w,c
 11293  002F52  5C23               	subwf	___lwdiv@dividend,w,c
 11294  002F54  5026               	movf	___lwdiv@divisor+1,w,c
 11295  002F56  5824               	subwfb	___lwdiv@dividend+1,w,c
 11296  002F58  A0D8               	btfss	status,0,c
 11297  002F5A  D006               	goto	l4806
 11298  002F5C  5025               	movf	___lwdiv@divisor,w,c
 11299  002F5E  5E23               	subwf	___lwdiv@dividend,f,c
 11300  002F60  5026               	movf	___lwdiv@divisor+1,w,c
 11301  002F62  5A24               	subwfb	___lwdiv@dividend+1,f,c
 11302  002F64  8027               	bsf	___lwdiv@quotient,0,c
 11303  002F66  D000               	goto	l4806
 11304  002F68                     l4806:
 11305  002F68  90D8               	bcf	status,0,c
 11306  002F6A  3226               	rrcf	___lwdiv@divisor+1,f,c
 11307  002F6C  3225               	rrcf	___lwdiv@divisor,f,c
 11308  002F6E  2E29               	decfsz	___lwdiv@counter,f,c
 11309  002F70  D7EC               	goto	l4798
 11310  002F72  D000               	goto	l1699
 11311  002F74                     l1699:
 11312  002F74  C027  F023         	movff	___lwdiv@quotient,?___lwdiv
 11313  002F78  C028  F024         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11314  002F7C  0012               	return		;funcret
 11315  002F7E                     __end_of___lwdiv:
 11316                           	opt stack 0
 11317                           tblptru	equ	0xFF8
 11318                           tblptrh	equ	0xFF7
 11319                           tblptrl	equ	0xFF6
 11320                           tablat	equ	0xFF5
 11321                           prodh	equ	0xFF4
 11322                           prodl	equ	0xFF3
 11323                           intcon	equ	0xFF2
 11324                           postinc0	equ	0xFEE
 11325                           wreg	equ	0xFE8
 11326                           indf1	equ	0xFE7
 11327                           postdec1	equ	0xFE5
 11328                           fsr1h	equ	0xFE2
 11329                           fsr1l	equ	0xFE1
 11330                           indf2	equ	0xFDF
 11331                           postinc2	equ	0xFDE
 11332                           postdec2	equ	0xFDD
 11333                           plusw2	equ	0xFDB
 11334                           fsr2h	equ	0xFDA
 11335                           fsr2l	equ	0xFD9
 11336                           status	equ	0xFD8
 11337                           
 11338 ;; *************** function _tlc5947_count_channels *****************
 11339 ;; Defined at:
 11340 ;;		line 97 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;		None
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;  pos             1   44[COMRAM] unsigned char 
 11345 ;;  data            1   43[COMRAM] unsigned char 
 11346 ;;  old_data        1   42[COMRAM] unsigned char 
 11347 ;; Return value:  Size  Location     Type
 11348 ;;		None               void
 11349 ;; Registers used:
 11350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11356 ;;      Params:         0       0       0       0       0       0       0       0       0
 11357 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11358 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11359 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11360 ;;Total ram usage:        3 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; Hardware stack levels required when called:    6
 11363 ;; This function calls:
 11364 ;;		_ReadSPI1
 11365 ;;		_WriteSPI1
 11366 ;;		___awdiv
 11367 ;;		_tlc5947_update
 11368 ;; This function is called by:
 11369 ;;		_InitializeSystem
 11370 ;;		_ProcessCDC
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text49
 11375  002CBC                     __ptext49:
 11376                           	opt stack 0
 11377  002CBC                     _tlc5947_count_channels:
 11378                           	opt stack 22
 11379                           
 11380                           ;tlc5947.c: 99: uint8_t pos, data, old_data;
 11381                           ;tlc5947.c: 101: tlc_request = -1;
 11382                           
 11383                           ;incstack = 0
 11384  002CBC  0100               	movlb	0	; () banked
 11385  002CBE  69A0               	setf	_tlc_request& (0+255),b
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;tlc5947.c: 104: tlc_nbytes = 72;
 11389  002CC0  0E48               	movlw	72
 11390  002CC2  6E5F               	movwf	_tlc_nbytes,c
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;tlc5947.c: 107: WriteSPI1(tcl5947_testbyte0);
 11394  002CC4  0100               	movlb	0	; () banked
 11395  002CC6  51DB               	movf	_tcl5947_testbyte0& (0+255),w,b
 11396  002CC8  ECA6  F019         	call	_WriteSPI1
 11397                           
 11398                           ;tlc5947.c: 108: WriteSPI1(tcl5947_testbyte1);
 11399  002CCC  0100               	movlb	0	; () banked
 11400  002CCE  51DC               	movf	_tcl5947_testbyte1& (0+255),w,b
 11401  002CD0  ECA6  F019         	call	_WriteSPI1
 11402                           
 11403                           ;tlc5947.c: 111: for (pos = 1; pos <= 72; pos++) {
 11404  002CD4  0E01               	movlw	1
 11405  002CD6  6E2D               	movwf	tlc5947_count_channels@pos,c
 11406  002CD8                     l4978:
 11407  002CD8  0E48               	movlw	72
 11408  002CDA  642D               	cpfsgt	tlc5947_count_channels@pos,c
 11409  002CDC  D001               	goto	l4982
 11410  002CDE  D014               	goto	l4994
 11411  002CE0                     l4982:
 11412                           
 11413                           ;tlc5947.c: 112: data = ReadSPI1();
 11414  002CE0  ECE7  F019         	call	_ReadSPI1	;wreg free
 11415  002CE4  6E2C               	movwf	tlc5947_count_channels@data,c
 11416                           
 11417                           ;tlc5947.c: 113: if ((data == tcl5947_testbyte1) && (old_data == tcl5947_testbyte0)) {
 11418  002CE6  0100               	movlb	0	; () banked
 11419  002CE8  51DC               	movf	_tcl5947_testbyte1& (0+255),w,b
 11420  002CEA  182C               	xorwf	tlc5947_count_channels@data,w,c
 11421  002CEC  A4D8               	btfss	status,2,c
 11422  002CEE  D008               	goto	l815
 11423                           
 11424                           ; BSR set to: 0
 11425  002CF0  0100               	movlb	0	; () banked
 11426  002CF2  51DB               	movf	_tcl5947_testbyte0& (0+255),w,b
 11427  002CF4  182B               	xorwf	tlc5947_count_channels@old_data,w,c
 11428  002CF6  A4D8               	btfss	status,2,c
 11429  002CF8  D003               	goto	l815
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;tlc5947.c: 114: tlc_nbytes = pos;
 11433  002CFA  C02D  F05F         	movff	tlc5947_count_channels@pos,_tlc_nbytes
 11434                           
 11435                           ;tlc5947.c: 115: break;
 11436  002CFE  D004               	goto	l4994
 11437  002D00                     l815:
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;tlc5947.c: 116: }
 11441                           ;tlc5947.c: 117: old_data = data;
 11442  002D00  C02C  F02B         	movff	tlc5947_count_channels@data,tlc5947_count_channels@old_data
 11443                           
 11444                           ; BSR set to: 0
 11445  002D04  2A2D               	incf	tlc5947_count_channels@pos,f,c
 11446  002D06  D7E8               	goto	l4978
 11447  002D08                     l4994:
 11448                           
 11449                           ;tlc5947.c: 118: }
 11450                           ;tlc5947.c: 119: tlc5947_update();
 11451  002D08  ECF2  F018         	call	_tlc5947_update	;wreg free
 11452                           
 11453                           ;tlc5947.c: 120: tlc_nchannels = tlc_nbytes * 2 / 3;
 11454  002D0C  505F               	movf	_tlc_nbytes,w,c
 11455  002D0E  0D02               	mullw	2
 11456  002D10  CFF3 F023          	movff	prodl,___awdiv@dividend
 11457  002D14  CFF4 F024          	movff	prodh,___awdiv@dividend+1
 11458  002D18  0E00               	movlw	0
 11459  002D1A  6E26               	movwf	___awdiv@divisor+1,c
 11460  002D1C  0E03               	movlw	3
 11461  002D1E  6E25               	movwf	___awdiv@divisor,c
 11462  002D20  EC43  F015         	call	___awdiv	;wreg free
 11463  002D24  5023               	movf	?___awdiv,w,c
 11464  002D26  0100               	movlb	0	; () banked
 11465  002D28  6FDD               	movwf	_tlc_nchannels& (0+255),b
 11466                           
 11467                           ; BSR set to: 0
 11468                           ;tlc5947.c: 121: tlc_request = 0;
 11469  002D2A  0E00               	movlw	0
 11470  002D2C  0100               	movlb	0	; () banked
 11471  002D2E  6FA0               	movwf	_tlc_request& (0+255),b
 11472                           
 11473                           ; BSR set to: 0
 11474  002D30  0012               	return		;funcret
 11475  002D32                     __end_of_tlc5947_count_channels:
 11476                           	opt stack 0
 11477                           tblptru	equ	0xFF8
 11478                           tblptrh	equ	0xFF7
 11479                           tblptrl	equ	0xFF6
 11480                           tablat	equ	0xFF5
 11481                           prodh	equ	0xFF4
 11482                           prodl	equ	0xFF3
 11483                           intcon	equ	0xFF2
 11484                           postinc0	equ	0xFEE
 11485                           wreg	equ	0xFE8
 11486                           indf1	equ	0xFE7
 11487                           postdec1	equ	0xFE5
 11488                           fsr1h	equ	0xFE2
 11489                           fsr1l	equ	0xFE1
 11490                           indf2	equ	0xFDF
 11491                           postinc2	equ	0xFDE
 11492                           postdec2	equ	0xFDD
 11493                           plusw2	equ	0xFDB
 11494                           fsr2h	equ	0xFDA
 11495                           fsr2l	equ	0xFD9
 11496                           status	equ	0xFD8
 11497                           
 11498 ;; *************** function _tlc5947_update *****************
 11499 ;; Defined at:
 11500 ;;		line 175 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;		None
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  x               1   36[COMRAM] unsigned char 
 11505 ;; Return value:  Size  Location     Type
 11506 ;;		None               void
 11507 ;; Registers used:
 11508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/0
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11514 ;;      Params:         0       0       0       0       0       0       0       0       0
 11515 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11516 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11517 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11518 ;;Total ram usage:        1 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:    5
 11521 ;; This function calls:
 11522 ;;		_WriteSPI1
 11523 ;; This function is called by:
 11524 ;;		_tlc5947_count_channels
 11525 ;;		_tlc5947_pwm_readback
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           	psect	text50
 11530  0031E4                     __ptext50:
 11531                           	opt stack 0
 11532  0031E4                     _tlc5947_update:
 11533                           	opt stack 22
 11534                           
 11535                           ;tlc5947.c: 177: uint8_t x;
 11536                           ;tlc5947.c: 179: for (x = 0; x < tlc_nbytes; x++) {
 11537                           
 11538                           ; BSR set to: 0
 11539                           ;incstack = 0
 11540  0031E4  0E00               	movlw	0
 11541  0031E6  6E25               	movwf	tlc5947_update@x,c
 11542  0031E8  D00D               	goto	l4684
 11543  0031EA                     l4680:
 11544                           
 11545                           ;tlc5947.c: 180: WriteSPI1(tlc_memory[x]);
 11546  0031EA  5025               	movf	tlc5947_update@x,w,c
 11547  0031EC  0D01               	mullw	1
 11548  0031EE  0E80               	movlw	low _tlc_memory
 11549  0031F0  24F3               	addwf	prodl,w,c
 11550  0031F2  6ED9               	movwf	fsr2l,c
 11551  0031F4  0E01               	movlw	high _tlc_memory
 11552  0031F6  20F4               	addwfc	prodh,w,c
 11553  0031F8  6EDA               	movwf	fsr2h,c
 11554  0031FA  50DF               	movf	indf2,w,c
 11555  0031FC  ECA6  F019         	call	_WriteSPI1
 11556  003200  2A25               	incf	tlc5947_update@x,f,c
 11557  003202  D000               	goto	l4684
 11558  003204                     l4684:
 11559  003204  505F               	movf	_tlc_nbytes,w,c
 11560  003206  5C25               	subwf	tlc5947_update@x,w,c
 11561  003208  A0D8               	btfss	status,0,c
 11562  00320A  D7EF               	goto	l4680
 11563                           
 11564                           ;tlc5947.c: 181: }
 11565                           ;tlc5947.c: 182: tlc_request = 0;
 11566  00320C  0E00               	movlw	0
 11567  00320E  0100               	movlb	0	; () banked
 11568  003210  6FA0               	movwf	_tlc_request& (0+255),b
 11569                           
 11570                           ; BSR set to: 0
 11571  003212  0012               	return		;funcret
 11572  003214                     __end_of_tlc5947_update:
 11573                           	opt stack 0
 11574                           tblptru	equ	0xFF8
 11575                           tblptrh	equ	0xFF7
 11576                           tblptrl	equ	0xFF6
 11577                           tablat	equ	0xFF5
 11578                           prodh	equ	0xFF4
 11579                           prodl	equ	0xFF3
 11580                           intcon	equ	0xFF2
 11581                           postinc0	equ	0xFEE
 11582                           wreg	equ	0xFE8
 11583                           indf1	equ	0xFE7
 11584                           postdec1	equ	0xFE5
 11585                           fsr1h	equ	0xFE2
 11586                           fsr1l	equ	0xFE1
 11587                           indf2	equ	0xFDF
 11588                           postinc2	equ	0xFDE
 11589                           postdec2	equ	0xFDD
 11590                           plusw2	equ	0xFDB
 11591                           fsr2h	equ	0xFDA
 11592                           fsr2l	equ	0xFD9
 11593                           status	equ	0xFD8
 11594                           
 11595 ;; *************** function _WriteSPI1 *****************
 11596 ;; Defined at:
 11597 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1writ.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;  data_out        1    wreg     unsigned char 
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;  data_out        1   35[COMRAM] unsigned char 
 11602 ;;  TempVar         1   34[COMRAM] unsigned char 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  1    wreg      char 
 11605 ;; Registers used:
 11606 ;;		wreg
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11612 ;;      Params:         0       0       0       0       0       0       0       0       0
 11613 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11615 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11616 ;;Total ram usage:        2 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; Hardware stack levels required when called:    4
 11619 ;; This function calls:
 11620 ;;		Nothing
 11621 ;; This function is called by:
 11622 ;;		_tlc5947_count_channels
 11623 ;;		_tlc5947_update
 11624 ;; This function uses a non-reentrant model
 11625 ;;
 11626                           
 11627                           	psect	text51
 11628  00334C                     __ptext51:
 11629                           	opt stack 0
 11630  00334C                     _WriteSPI1:
 11631                           	opt stack 22
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;incstack = 0
 11635                           ;WriteSPI1@data_out stored from wreg
 11636  00334C  6E24               	movwf	WriteSPI1@data_out,c
 11637  00334E  CFC9 F023          	movff	4041,WriteSPI1@TempVar	;volatile
 11638  003352  969E               	bcf	3998,3,c	;volatile
 11639  003354  9EC6               	bcf	4038,7,c	;volatile
 11640  003356  C024  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
 11641  00335A  BEC6               	btfsc	4038,7,c	;volatile
 11642  00335C  0012               	return	
 11643  00335E  D002               	goto	l1162
 11644                           
 11645                           ;	Return value of _WriteSPI1 is never used
 11646  003360  0012               	return	
 11647  003362  D000               	goto	l1162
 11648  003364                     l1162:
 11649  003364  B69E               	btfsc	3998,3,c	;volatile
 11650  003366  0012               	return	
 11651  003368  D7FD               	goto	l1162
 11652  00336A  0012               	return	
 11653                           
 11654                           ;	Return value of _WriteSPI1 is never used
 11655  00336C  0012               	return		;funcret
 11656  00336E                     __end_of_WriteSPI1:
 11657                           	opt stack 0
 11658                           tblptru	equ	0xFF8
 11659                           tblptrh	equ	0xFF7
 11660                           tblptrl	equ	0xFF6
 11661                           tablat	equ	0xFF5
 11662                           prodh	equ	0xFF4
 11663                           prodl	equ	0xFF3
 11664                           intcon	equ	0xFF2
 11665                           postinc0	equ	0xFEE
 11666                           wreg	equ	0xFE8
 11667                           indf1	equ	0xFE7
 11668                           postdec1	equ	0xFE5
 11669                           fsr1h	equ	0xFE2
 11670                           fsr1l	equ	0xFE1
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           postdec2	equ	0xFDD
 11674                           plusw2	equ	0xFDB
 11675                           fsr2h	equ	0xFDA
 11676                           fsr2l	equ	0xFD9
 11677                           status	equ	0xFD8
 11678                           
 11679 ;; *************** function ___awdiv *****************
 11680 ;; Defined at:
 11681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  dividend        2   34[COMRAM] int 
 11684 ;;  divisor         2   36[COMRAM] int 
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;  quotient        2   40[COMRAM] int 
 11687 ;;  sign            1   39[COMRAM] unsigned char 
 11688 ;;  counter         1   38[COMRAM] unsigned char 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  2   34[COMRAM] int 
 11691 ;; Registers used:
 11692 ;;		wreg, status,2, status,0
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11698 ;;      Params:         4       0       0       0       0       0       0       0       0
 11699 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11701 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11702 ;;Total ram usage:        8 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:    4
 11705 ;; This function calls:
 11706 ;;		Nothing
 11707 ;; This function is called by:
 11708 ;;		_tlc5947_count_channels
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	text52
 11713  002A86                     __ptext52:
 11714                           	opt stack 0
 11715  002A86                     ___awdiv:
 11716                           	opt stack 23
 11717                           
 11718                           ;incstack = 0
 11719  002A86  0E00               	movlw	0
 11720  002A88  6E28               	movwf	___awdiv@sign,c
 11721  002A8A  AE26               	btfss	___awdiv@divisor+1,7,c
 11722  002A8C  D007               	goto	l4752
 11723  002A8E  6C25               	negf	___awdiv@divisor,c
 11724  002A90  1E26               	comf	___awdiv@divisor+1,f,c
 11725  002A92  B0D8               	btfsc	status,0,c
 11726  002A94  2A26               	incf	___awdiv@divisor+1,f,c
 11727  002A96  0E01               	movlw	1
 11728  002A98  6E28               	movwf	___awdiv@sign,c
 11729  002A9A  D000               	goto	l4752
 11730  002A9C                     l4752:
 11731  002A9C  AE24               	btfss	___awdiv@dividend+1,7,c
 11732  002A9E  D007               	goto	l4758
 11733  002AA0  6C23               	negf	___awdiv@dividend,c
 11734  002AA2  1E24               	comf	___awdiv@dividend+1,f,c
 11735  002AA4  B0D8               	btfsc	status,0,c
 11736  002AA6  2A24               	incf	___awdiv@dividend+1,f,c
 11737  002AA8  0E01               	movlw	1
 11738  002AAA  1A28               	xorwf	___awdiv@sign,f,c
 11739  002AAC  D000               	goto	l4758
 11740  002AAE                     l4758:
 11741  002AAE  0E00               	movlw	0
 11742  002AB0  6E2A               	movwf	___awdiv@quotient+1,c
 11743  002AB2  0E00               	movlw	0
 11744  002AB4  6E29               	movwf	___awdiv@quotient,c
 11745  002AB6  5025               	movf	___awdiv@divisor,w,c
 11746  002AB8  1026               	iorwf	___awdiv@divisor+1,w,c
 11747  002ABA  B4D8               	btfsc	status,2,c
 11748  002ABC  D021               	goto	l4780
 11749  002ABE  0E01               	movlw	1
 11750  002AC0  6E27               	movwf	___awdiv@counter,c
 11751  002AC2  D005               	goto	l4766
 11752  002AC4                     l4764:
 11753  002AC4  90D8               	bcf	status,0,c
 11754  002AC6  3625               	rlcf	___awdiv@divisor,f,c
 11755  002AC8  3626               	rlcf	___awdiv@divisor+1,f,c
 11756  002ACA  2A27               	incf	___awdiv@counter,f,c
 11757  002ACC  D000               	goto	l4766
 11758  002ACE                     l4766:
 11759  002ACE  BE26               	btfsc	___awdiv@divisor+1,7,c
 11760  002AD0  D002               	goto	l4768
 11761  002AD2  D7F8               	goto	l4764
 11762  002AD4  D000               	goto	l4768
 11763  002AD6                     l4768:
 11764  002AD6  90D8               	bcf	status,0,c
 11765  002AD8  3629               	rlcf	___awdiv@quotient,f,c
 11766  002ADA  362A               	rlcf	___awdiv@quotient+1,f,c
 11767  002ADC  5025               	movf	___awdiv@divisor,w,c
 11768  002ADE  5C23               	subwf	___awdiv@dividend,w,c
 11769  002AE0  5026               	movf	___awdiv@divisor+1,w,c
 11770  002AE2  5824               	subwfb	___awdiv@dividend+1,w,c
 11771  002AE4  A0D8               	btfss	status,0,c
 11772  002AE6  D006               	goto	l4776
 11773  002AE8  5025               	movf	___awdiv@divisor,w,c
 11774  002AEA  5E23               	subwf	___awdiv@dividend,f,c
 11775  002AEC  5026               	movf	___awdiv@divisor+1,w,c
 11776  002AEE  5A24               	subwfb	___awdiv@dividend+1,f,c
 11777  002AF0  8029               	bsf	___awdiv@quotient,0,c
 11778  002AF2  D000               	goto	l4776
 11779  002AF4                     l4776:
 11780  002AF4  90D8               	bcf	status,0,c
 11781  002AF6  3226               	rrcf	___awdiv@divisor+1,f,c
 11782  002AF8  3225               	rrcf	___awdiv@divisor,f,c
 11783  002AFA  2E27               	decfsz	___awdiv@counter,f,c
 11784  002AFC  D7EC               	goto	l4768
 11785  002AFE  D000               	goto	l4780
 11786  002B00                     l4780:
 11787  002B00  5028               	movf	___awdiv@sign,w,c
 11788  002B02  B4D8               	btfsc	status,2,c
 11789  002B04  D005               	goto	l4784
 11790  002B06  6C29               	negf	___awdiv@quotient,c
 11791  002B08  1E2A               	comf	___awdiv@quotient+1,f,c
 11792  002B0A  B0D8               	btfsc	status,0,c
 11793  002B0C  2A2A               	incf	___awdiv@quotient+1,f,c
 11794  002B0E  D000               	goto	l4784
 11795  002B10                     l4784:
 11796  002B10  C029  F023         	movff	___awdiv@quotient,?___awdiv
 11797  002B14  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
 11798  002B18  0012               	return	
 11799  002B1A  0012               	return		;funcret
 11800  002B1C                     __end_of___awdiv:
 11801                           	opt stack 0
 11802                           tblptru	equ	0xFF8
 11803                           tblptrh	equ	0xFF7
 11804                           tblptrl	equ	0xFF6
 11805                           tablat	equ	0xFF5
 11806                           prodh	equ	0xFF4
 11807                           prodl	equ	0xFF3
 11808                           intcon	equ	0xFF2
 11809                           postinc0	equ	0xFEE
 11810                           wreg	equ	0xFE8
 11811                           indf1	equ	0xFE7
 11812                           postdec1	equ	0xFE5
 11813                           fsr1h	equ	0xFE2
 11814                           fsr1l	equ	0xFE1
 11815                           indf2	equ	0xFDF
 11816                           postinc2	equ	0xFDE
 11817                           postdec2	equ	0xFDD
 11818                           plusw2	equ	0xFDB
 11819                           fsr2h	equ	0xFDA
 11820                           fsr2l	equ	0xFD9
 11821                           status	equ	0xFD8
 11822                           
 11823 ;; *************** function _ReadSPI1 *****************
 11824 ;; Defined at:
 11825 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1read.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;		None
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;  TempVar         1   34[COMRAM] unsigned char 
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      unsigned char 
 11832 ;; Registers used:
 11833 ;;		wreg, status,2
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11839 ;;      Params:         0       0       0       0       0       0       0       0       0
 11840 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11841 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11842 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11843 ;;Total ram usage:        1 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    4
 11846 ;; This function calls:
 11847 ;;		Nothing
 11848 ;; This function is called by:
 11849 ;;		_tlc5947_count_channels
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           	psect	text53
 11854  0033CE                     __ptext53:
 11855                           	opt stack 0
 11856  0033CE                     _ReadSPI1:
 11857                           	opt stack 23
 11858                           
 11859                           ;incstack = 0
 11860  0033CE  CFC9 F023          	movff	4041,ReadSPI1@TempVar	;volatile
 11861  0033D2  969E               	bcf	3998,3,c	;volatile
 11862  0033D4  0E00               	movlw	0
 11863  0033D6  6EC9               	movwf	4041,c	;volatile
 11864  0033D8  D000               	goto	l1145
 11865  0033DA                     l1145:
 11866  0033DA  A69E               	btfss	3998,3,c	;volatile
 11867  0033DC  D7FE               	goto	l1145
 11868  0033DE  50C9               	movf	4041,w,c	;volatile
 11869  0033E0  0012               	return	
 11870  0033E2  0012               	return		;funcret
 11871  0033E4                     __end_of_ReadSPI1:
 11872                           	opt stack 0
 11873                           tblptru	equ	0xFF8
 11874                           tblptrh	equ	0xFF7
 11875                           tblptrl	equ	0xFF6
 11876                           tablat	equ	0xFF5
 11877                           prodh	equ	0xFF4
 11878                           prodl	equ	0xFF3
 11879                           intcon	equ	0xFF2
 11880                           postinc0	equ	0xFEE
 11881                           wreg	equ	0xFE8
 11882                           indf1	equ	0xFE7
 11883                           postdec1	equ	0xFE5
 11884                           fsr1h	equ	0xFE2
 11885                           fsr1l	equ	0xFE1
 11886                           indf2	equ	0xFDF
 11887                           postinc2	equ	0xFDE
 11888                           postdec2	equ	0xFDD
 11889                           plusw2	equ	0xFDB
 11890                           fsr2h	equ	0xFDA
 11891                           fsr2l	equ	0xFD9
 11892                           status	equ	0xFD8
 11893                           
 11894 ;; *************** function _readDeviceID *****************
 11895 ;; Defined at:
 11896 ;;		line 166 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;		None
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;  devID2          1   37[COMRAM] unsigned char 
 11901 ;;  devID1          1   36[COMRAM] unsigned char 
 11902 ;; Return value:  Size  Location     Type
 11903 ;;		None               void
 11904 ;; Registers used:
 11905 ;;		wreg, status,2, status,0
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11911 ;;      Params:         0       0       0       0       0       0       0       0       0
 11912 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11913 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11914 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11915 ;;Total ram usage:        5 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; Hardware stack levels required when called:    4
 11918 ;; This function calls:
 11919 ;;		Nothing
 11920 ;; This function is called by:
 11921 ;;		_InitializeSystem
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           	psect	text54
 11926  002D9E                     __ptext54:
 11927                           	opt stack 0
 11928  002D9E                     _readDeviceID:
 11929                           	opt stack 25
 11930                           
 11931                           ;karate.c: 168: uint8_t devID1, devID2;
 11932                           ;karate.c: 170: TBLPTRU = 0x3F;
 11933                           
 11934                           ;incstack = 0
 11935  002D9E  0E3F               	movlw	63
 11936  002DA0  6EF8               	movwf	tblptru,c	;volatile
 11937                           
 11938                           ;karate.c: 171: TBLPTRH = 0xFF;
 11939  002DA2  68F7               	setf	tblptrh,c	;volatile
 11940                           
 11941                           ;karate.c: 172: TBLPTRL = 0xFE;
 11942  002DA4  0EFE               	movlw	254
 11943  002DA6  6EF6               	movwf	tblptrl,c	;volatile
 11944  002DA8  0008               	tblrd		*	;# 
 11945                           
 11946                           ;karate.c: 174: devID1 = TABLAT;
 11947  002DAA  CFF5 F025          	movff	tablat,readDeviceID@devID1	;volatile
 11948                           
 11949                           ;karate.c: 176: TBLPTRL = 0xFF;
 11950  002DAE  68F6               	setf	tblptrl,c	;volatile
 11951  002DB0  0008               	tblrd		*	;# 
 11952                           
 11953                           ;karate.c: 178: devID2 = TABLAT;
 11954  002DB2  CFF5 F026          	movff	tablat,readDeviceID@devID2	;volatile
 11955                           
 11956                           ;karate.c: 180: pic18_devid = ((uint16_t)devID2 << 3);
 11957  002DB6  5026               	movf	readDeviceID@devID2,w,c
 11958  002DB8  6E23               	movwf	??_readDeviceID& (0+255),c
 11959  002DBA  6A24               	clrf	(??_readDeviceID+1)& (0+255),c
 11960  002DBC  90D8               	bcf	status,0,c
 11961  002DBE  3623               	rlcf	??_readDeviceID,f,c
 11962  002DC0  3624               	rlcf	??_readDeviceID+1,f,c
 11963  002DC2  90D8               	bcf	status,0,c
 11964  002DC4  3623               	rlcf	??_readDeviceID,f,c
 11965  002DC6  3624               	rlcf	??_readDeviceID+1,f,c
 11966  002DC8  90D8               	bcf	status,0,c
 11967  002DCA  3623               	rlcf	??_readDeviceID,f,c
 11968  002DCC  3624               	rlcf	??_readDeviceID+1,f,c
 11969  002DCE  C023  F0F1         	movff	??_readDeviceID,_pic18_devid
 11970  002DD2  C024  F0F2         	movff	??_readDeviceID+1,_pic18_devid+1
 11971                           
 11972                           ;karate.c: 181: pic18_devid += ((devID1 && 0xE0) >> 5);
 11973  002DD6  0E00               	movlw	0
 11974  002DD8  6E27               	movwf	_readDeviceID$2794,c
 11975  002DDA  5025               	movf	readDeviceID@devID1,w,c
 11976  002DDC  B4D8               	btfsc	status,2,c
 11977  002DDE  D003               	goto	l5146
 11978  002DE0  0E01               	movlw	1
 11979  002DE2  6E27               	movwf	_readDeviceID$2794,c
 11980  002DE4  D000               	goto	l5146
 11981  002DE6                     l5146:
 11982  002DE6  C027  F023         	movff	_readDeviceID$2794,??_readDeviceID
 11983  002DEA  0E05               	movlw	5
 11984  002DEC  6E24               	movwf	(??_readDeviceID+1)& (0+255),c
 11985  002DEE                     u4275:
 11986  002DEE  90D8               	bcf	status,0,c
 11987  002DF0  3223               	rrcf	??_readDeviceID,f,c
 11988  002DF2  2E24               	decfsz	(??_readDeviceID+1)& (0+255),f,c
 11989  002DF4  D7FC               	goto	u4275
 11990  002DF6  5023               	movf	??_readDeviceID,w,c
 11991  002DF8  0100               	movlb	0	; () banked
 11992  002DFA  27F1               	addwf	_pic18_devid& (0+255),f,b
 11993  002DFC  0E00               	movlw	0
 11994  002DFE  23F2               	addwfc	(_pic18_devid+1)& (0+255),f,b
 11995                           
 11996                           ; BSR set to: 0
 11997  002E00  0012               	return		;funcret
 11998  002E02                     __end_of_readDeviceID:
 11999                           	opt stack 0
 12000                           tblptru	equ	0xFF8
 12001                           tblptrh	equ	0xFF7
 12002                           tblptrl	equ	0xFF6
 12003                           tablat	equ	0xFF5
 12004                           prodh	equ	0xFF4
 12005                           prodl	equ	0xFF3
 12006                           intcon	equ	0xFF2
 12007                           postinc0	equ	0xFEE
 12008                           wreg	equ	0xFE8
 12009                           indf1	equ	0xFE7
 12010                           postdec1	equ	0xFE5
 12011                           fsr1h	equ	0xFE2
 12012                           fsr1l	equ	0xFE1
 12013                           indf2	equ	0xFDF
 12014                           postinc2	equ	0xFDE
 12015                           postdec2	equ	0xFDD
 12016                           plusw2	equ	0xFDB
 12017                           fsr2h	equ	0xFDA
 12018                           fsr2l	equ	0xFD9
 12019                           status	equ	0xFD8
 12020                           
 12021 ;; *************** function _USBRegisterFix *****************
 12022 ;; Defined at:
 12023 ;;		line 38 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;		None
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;		None
 12028 ;; Return value:  Size  Location     Type
 12029 ;;		None               void
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12037 ;;      Params:         0       0       0       0       0       0       0       0       0
 12038 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12040 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12041 ;;Total ram usage:        0 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    4
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_InitializeSystem
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text55
 12052  001CEE                     __ptext55:
 12053                           	opt stack 0
 12054  001CEE                     _USBRegisterFix:
 12055                           	opt stack 25
 12056                           
 12057                           ;usb_hal_fixes.c: 39: if (pic18_devid == 0x02E0) {
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;incstack = 0
 12061  001CEE  0EE0               	movlw	224
 12062  001CF0  0100               	movlb	0	; () banked
 12063  001CF2  19F1               	xorwf	_pic18_devid& (0+255),w,b
 12064  001CF4  E140               	bnz	l5170
 12065  001CF6  0E02               	movlw	2
 12066  001CF8  0100               	movlb	0	; () banked
 12067  001CFA  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 12068  001CFC  A4D8               	btfss	status,2,c
 12069  001CFE  D03B               	goto	l5170
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;usb_hal_fixes.c: 41: U1ADDR_R = (unsigned char*)0xF63;
 12073  001D00  0E63               	movlw	99
 12074  001D02  0100               	movlb	0	; () banked
 12075  001D04  6FC9               	movwf	_U1ADDR_R& (0+255),b
 12076  001D06  0E0F               	movlw	15
 12077  001D08  0100               	movlb	0	; () banked
 12078  001D0A  6FCA               	movwf	(_U1ADDR_R+1)& (0+255),b
 12079                           
 12080                           ;usb_hal_fixes.c: 42: U1IE_R = (unsigned char*)0xF64;
 12081  001D0C  0E64               	movlw	100
 12082  001D0E  0100               	movlb	0	; () banked
 12083  001D10  6FD5               	movwf	_U1IE_R& (0+255),b
 12084  001D12  0E0F               	movlw	15
 12085  001D14  0100               	movlb	0	; () banked
 12086  001D16  6FD6               	movwf	(_U1IE_R+1)& (0+255),b
 12087                           
 12088                           ;usb_hal_fixes.c: 43: U1IR_R = (unsigned char*)0xF65;
 12089  001D18  0E65               	movlw	101
 12090  001D1A  0100               	movlb	0	; () banked
 12091  001D1C  6FD7               	movwf	_U1IR_R& (0+255),b
 12092  001D1E  0E0F               	movlw	15
 12093  001D20  0100               	movlb	0	; () banked
 12094  001D22  6FD8               	movwf	(_U1IR_R+1)& (0+255),b
 12095                           
 12096                           ;usb_hal_fixes.c: 44: U1EIR_R = (unsigned char*)0xF67;
 12097  001D24  0E67               	movlw	103
 12098  001D26  0100               	movlb	0	; () banked
 12099  001D28  6FD1               	movwf	_U1EIR_R& (0+255),b
 12100  001D2A  0E0F               	movlw	15
 12101  001D2C  0100               	movlb	0	; () banked
 12102  001D2E  6FD2               	movwf	(_U1EIR_R+1)& (0+255),b
 12103                           
 12104                           ;usb_hal_fixes.c: 45: U1EIE_R = (unsigned char*)0xF66;
 12105  001D30  0E66               	movlw	102
 12106  001D32  0100               	movlb	0	; () banked
 12107  001D34  6FCF               	movwf	_U1EIE_R& (0+255),b
 12108  001D36  0E0F               	movlw	15
 12109  001D38  0100               	movlb	0	; () banked
 12110  001D3A  6FD0               	movwf	(_U1EIE_R+1)& (0+255),b
 12111                           
 12112                           ;usb_hal_fixes.c: 46: U1CON_R = (unsigned char*)0xF60;
 12113  001D3C  0E60               	movlw	96
 12114  001D3E  0100               	movlb	0	; () banked
 12115  001D40  6FCD               	movwf	_U1CON_R& (0+255),b
 12116  001D42  0E0F               	movlw	15
 12117  001D44  0100               	movlb	0	; () banked
 12118  001D46  6FCE               	movwf	(_U1CON_R+1)& (0+255),b
 12119                           
 12120                           ;usb_hal_fixes.c: 47: U1EP0_R = (unsigned char*)0xF6A;
 12121  001D48  0E6A               	movlw	106
 12122  001D4A  6E5D               	movwf	_U1EP0_R,c
 12123  001D4C  0E0F               	movlw	15
 12124  001D4E  6E5E               	movwf	_U1EP0_R+1,c
 12125                           
 12126                           ;usb_hal_fixes.c: 48: U1EP1_R = (unsigned char*)0xF6B;
 12127  001D50  0E6B               	movlw	107
 12128  001D52  0100               	movlb	0	; () banked
 12129  001D54  6FD3               	movwf	_U1EP1_R& (0+255),b
 12130  001D56  0E0F               	movlw	15
 12131  001D58  0100               	movlb	0	; () banked
 12132  001D5A  6FD4               	movwf	(_U1EP1_R+1)& (0+255),b
 12133                           
 12134                           ;usb_hal_fixes.c: 49: U1CNFG1_R = (unsigned char*)0xF62;
 12135  001D5C  0E62               	movlw	98
 12136  001D5E  0100               	movlb	0	; () banked
 12137  001D60  6FCB               	movwf	_U1CNFG1_R& (0+255),b
 12138  001D62  0E0F               	movlw	15
 12139  001D64  0100               	movlb	0	; () banked
 12140  001D66  6FCC               	movwf	(_U1CNFG1_R+1)& (0+255),b
 12141                           
 12142                           ;usb_hal_fixes.c: 50: U1STAT_R = (unsigned char*)0xF61;
 12143  001D68  0E61               	movlw	97
 12144  001D6A  0100               	movlb	0	; () banked
 12145  001D6C  6FD9               	movwf	_U1STAT_R& (0+255),b
 12146  001D6E  0E0F               	movlw	15
 12147  001D70  0100               	movlb	0	; () banked
 12148  001D72  6FDA               	movwf	(_U1STAT_R+1)& (0+255),b
 12149                           
 12150                           ;usb_hal_fixes.c: 51: } else {
 12151  001D74  0012               	return	
 12152  001D76                     l5170:
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;usb_hal_fixes.c: 53: U1ADDR_R = (unsigned char*)0xF6E;
 12156  001D76  0E6E               	movlw	110
 12157  001D78  0100               	movlb	0	; () banked
 12158  001D7A  6FC9               	movwf	_U1ADDR_R& (0+255),b
 12159  001D7C  0E0F               	movlw	15
 12160  001D7E  0100               	movlb	0	; () banked
 12161  001D80  6FCA               	movwf	(_U1ADDR_R+1)& (0+255),b
 12162                           
 12163                           ;usb_hal_fixes.c: 54: U1IE_R = (unsigned char*)0xF69;
 12164  001D82  0E69               	movlw	105
 12165  001D84  0100               	movlb	0	; () banked
 12166  001D86  6FD5               	movwf	_U1IE_R& (0+255),b
 12167  001D88  0E0F               	movlw	15
 12168  001D8A  0100               	movlb	0	; () banked
 12169  001D8C  6FD6               	movwf	(_U1IE_R+1)& (0+255),b
 12170                           
 12171                           ;usb_hal_fixes.c: 55: U1IR_R = (unsigned char*)0xF68;
 12172  001D8E  0E68               	movlw	104
 12173  001D90  0100               	movlb	0	; () banked
 12174  001D92  6FD7               	movwf	_U1IR_R& (0+255),b
 12175  001D94  0E0F               	movlw	15
 12176  001D96  0100               	movlb	0	; () banked
 12177  001D98  6FD8               	movwf	(_U1IR_R+1)& (0+255),b
 12178                           
 12179                           ;usb_hal_fixes.c: 56: U1EIR_R = (unsigned char*)0xF6A;
 12180  001D9A  0E6A               	movlw	106
 12181  001D9C  0100               	movlb	0	; () banked
 12182  001D9E  6FD1               	movwf	_U1EIR_R& (0+255),b
 12183  001DA0  0E0F               	movlw	15
 12184  001DA2  0100               	movlb	0	; () banked
 12185  001DA4  6FD2               	movwf	(_U1EIR_R+1)& (0+255),b
 12186                           
 12187                           ;usb_hal_fixes.c: 57: U1EIE_R = (unsigned char*)0xF6B;
 12188  001DA6  0E6B               	movlw	107
 12189  001DA8  0100               	movlb	0	; () banked
 12190  001DAA  6FCF               	movwf	_U1EIE_R& (0+255),b
 12191  001DAC  0E0F               	movlw	15
 12192  001DAE  0100               	movlb	0	; () banked
 12193  001DB0  6FD0               	movwf	(_U1EIE_R+1)& (0+255),b
 12194                           
 12195                           ;usb_hal_fixes.c: 58: U1CON_R = (unsigned char*)0xF6D;
 12196  001DB2  0E6D               	movlw	109
 12197  001DB4  0100               	movlb	0	; () banked
 12198  001DB6  6FCD               	movwf	_U1CON_R& (0+255),b
 12199  001DB8  0E0F               	movlw	15
 12200  001DBA  0100               	movlb	0	; () banked
 12201  001DBC  6FCE               	movwf	(_U1CON_R+1)& (0+255),b
 12202                           
 12203                           ;usb_hal_fixes.c: 59: U1EP0_R = (unsigned char*)0xF70;
 12204  001DBE  0E70               	movlw	112
 12205  001DC0  6E5D               	movwf	_U1EP0_R,c
 12206  001DC2  0E0F               	movlw	15
 12207  001DC4  6E5E               	movwf	_U1EP0_R+1,c
 12208                           
 12209                           ;usb_hal_fixes.c: 60: U1EP1_R = (unsigned char*)0xF71;
 12210  001DC6  0E71               	movlw	113
 12211  001DC8  0100               	movlb	0	; () banked
 12212  001DCA  6FD3               	movwf	_U1EP1_R& (0+255),b
 12213  001DCC  0E0F               	movlw	15
 12214  001DCE  0100               	movlb	0	; () banked
 12215  001DD0  6FD4               	movwf	(_U1EP1_R+1)& (0+255),b
 12216                           
 12217                           ;usb_hal_fixes.c: 61: U1CNFG1_R = (unsigned char*)0xF6F;
 12218  001DD2  0E6F               	movlw	111
 12219  001DD4  0100               	movlb	0	; () banked
 12220  001DD6  6FCB               	movwf	_U1CNFG1_R& (0+255),b
 12221  001DD8  0E0F               	movlw	15
 12222  001DDA  0100               	movlb	0	; () banked
 12223  001DDC  6FCC               	movwf	(_U1CNFG1_R+1)& (0+255),b
 12224                           
 12225                           ;usb_hal_fixes.c: 62: U1STAT_R = (unsigned char*)0xF6C;
 12226  001DDE  0E6C               	movlw	108
 12227  001DE0  0100               	movlb	0	; () banked
 12228  001DE2  6FD9               	movwf	_U1STAT_R& (0+255),b
 12229  001DE4  0E0F               	movlw	15
 12230  001DE6  0100               	movlb	0	; () banked
 12231  001DE8  6FDA               	movwf	(_U1STAT_R+1)& (0+255),b
 12232  001DEA  0012               	return	
 12233                           
 12234                           ; BSR set to: 0
 12235                           
 12236                           ; BSR set to: 0
 12237  001DEC  0012               	return		;funcret
 12238  001DEE                     __end_of_USBRegisterFix:
 12239                           	opt stack 0
 12240                           tblptru	equ	0xFF8
 12241                           tblptrh	equ	0xFF7
 12242                           tblptrl	equ	0xFF6
 12243                           tablat	equ	0xFF5
 12244                           prodh	equ	0xFF4
 12245                           prodl	equ	0xFF3
 12246                           intcon	equ	0xFF2
 12247                           postinc0	equ	0xFEE
 12248                           wreg	equ	0xFE8
 12249                           indf1	equ	0xFE7
 12250                           postdec1	equ	0xFE5
 12251                           fsr1h	equ	0xFE2
 12252                           fsr1l	equ	0xFE1
 12253                           indf2	equ	0xFDF
 12254                           postinc2	equ	0xFDE
 12255                           postdec2	equ	0xFDD
 12256                           plusw2	equ	0xFDB
 12257                           fsr2h	equ	0xFDA
 12258                           fsr2l	equ	0xFD9
 12259                           status	equ	0xFD8
 12260                           
 12261 ;; *************** function _USBDeviceInit *****************
 12262 ;; Defined at:
 12263 ;;		line 298 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;		None
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;  i               1   42[COMRAM] unsigned char 
 12268 ;; Return value:  Size  Location     Type
 12269 ;;		None               void
 12270 ;; Registers used:
 12271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0
 12278 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12280 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12281 ;;Total ram usage:        1 bytes
 12282 ;; Hardware stack levels used:    1
 12283 ;; Hardware stack levels required when called:    5
 12284 ;; This function calls:
 12285 ;;		_USBDisableInterrupts
 12286 ;;		_memset
 12287 ;; This function is called by:
 12288 ;;		_USBDeviceTasks
 12289 ;;		_InitializeSystem
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text56
 12294  0016A4                     __ptext56:
 12295                           	opt stack 0
 12296  0016A4                     _USBDeviceInit:
 12297                           	opt stack 23
 12298                           
 12299                           ;usb_device.c: 300: uint8_t i;
 12300                           ;usb_device.c: 302: USBDisableInterrupts();
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;incstack = 0
 12304  0016A4  EC0A  F019         	call	_USBDisableInterrupts	;wreg free
 12305                           
 12306                           ;usb_device.c: 305: {*U1EIR_R = 0;};
 12307  0016A8  C0D1  FFD9         	movff	_U1EIR_R,fsr2l
 12308  0016AC  C0D2  FFDA         	movff	_U1EIR_R+1,fsr2h
 12309  0016B0  0E00               	movlw	0
 12310  0016B2  6EDF               	movwf	indf2,c
 12311                           
 12312                           ;usb_device.c: 308: {*U1IR_R = 0;};
 12313  0016B4  C0D7  FFD9         	movff	_U1IR_R,fsr2l
 12314  0016B8  C0D8  FFDA         	movff	_U1IR_R+1,fsr2h
 12315  0016BC  0E00               	movlw	0
 12316  0016BE  6EDF               	movwf	indf2,c
 12317                           
 12318                           ;usb_device.c: 311: *U1EP0_R = 0;
 12319  0016C0  C05D  FFD9         	movff	_U1EP0_R,fsr2l
 12320  0016C4  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
 12321  0016C8  0E00               	movlw	0
 12322  0016CA  6EDF               	movwf	indf2,c
 12323                           
 12324                           ;usb_device.c: 313: memset((void*)&*U1EP1_R,0x00,(2));;
 12325  0016CC  C0D3  F023         	movff	_U1EP1_R,memset@p1
 12326  0016D0  C0D4  F024         	movff	_U1EP1_R+1,memset@p1+1
 12327  0016D4  0E00               	movlw	0
 12328  0016D6  6E26               	movwf	memset@c+1,c
 12329  0016D8  0E00               	movlw	0
 12330  0016DA  6E25               	movwf	memset@c,c
 12331  0016DC  0E00               	movlw	0
 12332  0016DE  6E28               	movwf	memset@n+1,c
 12333  0016E0  0E02               	movlw	2
 12334  0016E2  6E27               	movwf	memset@n,c
 12335  0016E4  EC3A  F019         	call	_memset	;wreg free
 12336                           
 12337                           ;usb_device.c: 315: { *U1CNFG1_R = 0x10 | 0x00 | 0x04 | 0x02; *U1EIE_R = 0x9F; UIE = 0x3
      +                          9 | 0x40 | 0x02; };
 12338  0016E8  C0CB  FFD9         	movff	_U1CNFG1_R,fsr2l
 12339  0016EC  C0CC  FFDA         	movff	_U1CNFG1_R+1,fsr2h
 12340  0016F0  0E16               	movlw	22
 12341  0016F2  6EDF               	movwf	indf2,c
 12342  0016F4  C0CF  FFD9         	movff	_U1EIE_R,fsr2l
 12343  0016F8  C0D0  FFDA         	movff	_U1EIE_R+1,fsr2h
 12344  0016FC  0E9F               	movlw	159
 12345  0016FE  6EDF               	movwf	indf2,c
 12346  001700  0E7B               	movlw	123
 12347  001702  6E64               	movwf	3940,c	;volatile
 12348                           
 12349                           ;usb_device.c: 318: ;
 12350                           ;usb_device.c: 321: ;
 12351                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12352  001704  0E00               	movlw	0
 12353  001706  6E2B               	movwf	USBDeviceInit@i,c
 12354  001708  D00E               	goto	l4460
 12355  00170A  D010               	goto	l132
 12356  00170C                     l4456:
 12357                           
 12358                           ;usb_device.c: 325: {
 12359                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 12360  00170C  502B               	movf	USBDeviceInit@i,w,c
 12361  00170E  0D04               	mullw	4
 12362  001710  0E00               	movlw	0
 12363  001712  24F3               	addwf	prodl,w,c
 12364  001714  6ED9               	movwf	fsr2l,c
 12365  001716  0E04               	movlw	4
 12366  001718  20F4               	addwfc	prodh,w,c
 12367  00171A  6EDA               	movwf	fsr2h,c
 12368  00171C  6ADE               	clrf	postinc2,c
 12369  00171E  6ADE               	clrf	postinc2,c
 12370  001720  6ADE               	clrf	postinc2,c
 12371  001722  6ADD               	clrf	postdec2,c
 12372  001724  2A2B               	incf	USBDeviceInit@i,f,c
 12373  001726                     l4460:
 12374  001726  0E0B               	movlw	11
 12375  001728  642B               	cpfsgt	USBDeviceInit@i,c
 12376  00172A  D7F0               	goto	l4456
 12377  00172C                     l132:
 12378                           
 12379                           ;usb_device.c: 327: }
 12380                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 12381  00172C  8C60               	bsf	3936,6,c	;volatile
 12382                           
 12383                           ;usb_device.c: 333: *U1ADDR_R = 0x00;
 12384  00172E  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
 12385  001732  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
 12386  001736  0E00               	movlw	0
 12387  001738  6EDF               	movwf	indf2,c
 12388                           
 12389                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 12390  00173A  9860               	bcf	3936,4,c	;volatile
 12391                           
 12392                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 12393  00173C  9C60               	bcf	3936,6,c	;volatile
 12394                           
 12395                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 12396  00173E  D00C               	goto	l4476
 12397  001740                     l4468:
 12398                           
 12399                           ;usb_device.c: 343: {
 12400                           ;usb_device.c: 344: (UIR &= 0xF7);
 12401  001740  9665               	bcf	3941,3,c	;volatile
 12402                           
 12403                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 12404  001742  0E00               	movlw	0
 12405  001744  6E59               	movwf	_inPipes+3,c
 12406                           
 12407                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 12408  001746  0E00               	movlw	0
 12409  001748  0100               	movlb	0	; () banked
 12410  00174A  6F6D               	movwf	(_outPipes+3)& (0+255),b
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 12414  00174C  0E00               	movlw	0
 12415  00174E  0100               	movlb	0	; () banked
 12416  001750  6F6F               	movwf	(_outPipes+5)& (0+255),b
 12417  001752  0E00               	movlw	0
 12418  001754  6F6E               	movwf	(_outPipes+4)& (0+255),b
 12419  001756  D000               	goto	l4476
 12420  001758                     l4476:
 12421  001758  B665               	btfsc	3941,3,c	;volatile
 12422  00175A  D7F2               	goto	l4468
 12423                           
 12424                           ;usb_device.c: 349: }
 12425                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 12426  00175C  0E01               	movlw	1
 12427  00175E  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12428                           
 12429                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 12430  001760  0E01               	movlw	1
 12431  001762  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12432                           
 12433                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 12434  001764  0E00               	movlw	0
 12435  001766  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12436                           
 12437                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 12438  001768  0E00               	movlw	0
 12439  00176A  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12440                           
 12441                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 12442  00176C  0E00               	movlw	0
 12443  00176E  0100               	movlb	0	; () banked
 12444  001770  6F96               	movwf	_USBBusIsSuspended& (0+255),b
 12445                           
 12446                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 12447  001772  0E00               	movlw	0
 12448  001774  6E2B               	movwf	USBDeviceInit@i,c
 12449  001776                     l4480:
 12450                           
 12451                           ; BSR set to: 0
 12452  001776  0E02               	movlw	2
 12453  001778  642B               	cpfsgt	USBDeviceInit@i,c
 12454  00177A  D001               	goto	l4484
 12455                           
 12456                           ; BSR set to: 0
 12457  00177C  D02E               	goto	l4490
 12458  00177E                     l4484:
 12459                           
 12460                           ;usb_device.c: 363: {
 12461                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 12462  00177E  502B               	movf	USBDeviceInit@i,w,c
 12463  001780  0D02               	mullw	2
 12464  001782  0E3E               	movlw	low _pBDTEntryIn
 12465  001784  24F3               	addwf	prodl,w,c
 12466  001786  6ED9               	movwf	fsr2l,c
 12467  001788  0E00               	movlw	high _pBDTEntryIn
 12468  00178A  20F4               	addwfc	prodh,w,c
 12469  00178C  6EDA               	movwf	fsr2h,c
 12470  00178E  0E00               	movlw	0
 12471  001790  6EDE               	movwf	postinc2,c
 12472  001792  0E00               	movlw	0
 12473  001794  6EDD               	movwf	postdec2,c
 12474                           
 12475                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 12476  001796  502B               	movf	USBDeviceInit@i,w,c
 12477  001798  0D02               	mullw	2
 12478  00179A  0E72               	movlw	low _pBDTEntryOut
 12479  00179C  24F3               	addwf	prodl,w,c
 12480  00179E  6ED9               	movwf	fsr2l,c
 12481  0017A0  0E00               	movlw	high _pBDTEntryOut
 12482  0017A2  20F4               	addwfc	prodh,w,c
 12483  0017A4  6EDA               	movwf	fsr2h,c
 12484  0017A6  0E00               	movlw	0
 12485  0017A8  6EDE               	movwf	postinc2,c
 12486  0017AA  0E00               	movlw	0
 12487  0017AC  6EDD               	movwf	postdec2,c
 12488                           
 12489                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 12490  0017AE  502B               	movf	USBDeviceInit@i,w,c
 12491  0017B0  0D01               	mullw	1
 12492  0017B2  0E7C               	movlw	low _ep_data_in
 12493  0017B4  24F3               	addwf	prodl,w,c
 12494  0017B6  6ED9               	movwf	fsr2l,c
 12495  0017B8  0E00               	movlw	high _ep_data_in
 12496  0017BA  20F4               	addwfc	prodh,w,c
 12497  0017BC  6EDA               	movwf	fsr2h,c
 12498  0017BE  0E00               	movlw	0
 12499  0017C0  6EDF               	movwf	indf2,c
 12500                           
 12501                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 12502  0017C2  502B               	movf	USBDeviceInit@i,w,c
 12503  0017C4  0D01               	mullw	1
 12504  0017C6  0E7F               	movlw	low _ep_data_out
 12505  0017C8  24F3               	addwf	prodl,w,c
 12506  0017CA  6ED9               	movwf	fsr2l,c
 12507  0017CC  0E00               	movlw	high _ep_data_out
 12508  0017CE  20F4               	addwfc	prodh,w,c
 12509  0017D0  6EDA               	movwf	fsr2h,c
 12510  0017D2  0E00               	movlw	0
 12511  0017D4  6EDF               	movwf	indf2,c
 12512  0017D6  2A2B               	incf	USBDeviceInit@i,f,c
 12513  0017D8  D7CE               	goto	l4480
 12514  0017DA                     l4490:
 12515                           
 12516                           ;usb_device.c: 368: }
 12517                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12518  0017DA  0E08               	movlw	8
 12519  0017DC  6E3E               	movwf	_pBDTEntryIn,c
 12520  0017DE  0E04               	movlw	4
 12521  0017E0  6E3F               	movwf	_pBDTEntryIn+1,c
 12522                           
 12523                           ;usb_device.c: 373: *U1EP0_R = 0x06|0x10;
 12524  0017E2  C05D  FFD9         	movff	_U1EP0_R,fsr2l
 12525  0017E6  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
 12526  0017EA  0E16               	movlw	22
 12527  0017EC  6EDF               	movwf	indf2,c
 12528                           
 12529                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12530  0017EE  0E04               	movlw	4
 12531  0017F0  0104               	movlb	4	; () banked
 12532  0017F2  6F03               	movwf	3,b	;volatile
 12533  0017F4  0E30               	movlw	48
 12534  0017F6  6F02               	movwf	2,b	;volatile
 12535                           
 12536                           ; BSR set to: 4
 12537                           ;usb_device.c: 376: BDT[0].CNT = 8;
 12538  0017F8  0E08               	movlw	8
 12539  0017FA  0104               	movlb	4	; () banked
 12540  0017FC  6F01               	movwf	1,b	;volatile
 12541                           
 12542                           ; BSR set to: 4
 12543                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 12544  0017FE  0E04               	movlw	4
 12545  001800  0104               	movlb	4	; () banked
 12546  001802  6F00               	movwf	0,b	;volatile
 12547                           
 12548                           ; BSR set to: 4
 12549                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 12550  001804  0104               	movlb	4	; () banked
 12551  001806  8F00               	bsf	0,7,b	;volatile
 12552                           
 12553                           ; BSR set to: 4
 12554                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 12555  001808  0E00               	movlw	0
 12556  00180A  6E5C               	movwf	_USBActiveConfiguration,c
 12557                           
 12558                           ; BSR set to: 4
 12559                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 12560  00180C  0E00               	movlw	0
 12561  00180E  0100               	movlb	0	; () banked
 12562  001810  6F97               	movwf	_USBDeviceState& (0+255),b
 12563                           
 12564                           ; BSR set to: 0
 12565  001812  0012               	return		;funcret
 12566  001814                     __end_of_USBDeviceInit:
 12567                           	opt stack 0
 12568                           tblptru	equ	0xFF8
 12569                           tblptrh	equ	0xFF7
 12570                           tblptrl	equ	0xFF6
 12571                           tablat	equ	0xFF5
 12572                           prodh	equ	0xFF4
 12573                           prodl	equ	0xFF3
 12574                           intcon	equ	0xFF2
 12575                           postinc0	equ	0xFEE
 12576                           wreg	equ	0xFE8
 12577                           indf1	equ	0xFE7
 12578                           postdec1	equ	0xFE5
 12579                           fsr1h	equ	0xFE2
 12580                           fsr1l	equ	0xFE1
 12581                           indf2	equ	0xFDF
 12582                           postinc2	equ	0xFDE
 12583                           postdec2	equ	0xFDD
 12584                           plusw2	equ	0xFDB
 12585                           fsr2h	equ	0xFDA
 12586                           fsr2l	equ	0xFD9
 12587                           status	equ	0xFD8
 12588                           
 12589 ;; *************** function _memset *****************
 12590 ;; Defined at:
 12591 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 12592 ;; Parameters:    Size  Location     Type
 12593 ;;  p1              2   34[COMRAM] PTR void 
 12594 ;;		 -> UEP1(1), RAM(2047), USBAlternateInterface(2), BDT(48), 
 12595 ;;  c               2   36[COMRAM] int 
 12596 ;;  n               2   38[COMRAM] unsigned int 
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;  p               2   40[COMRAM] PTR unsigned char 
 12599 ;;		 -> UEP1(1), RAM(2047), USBAlternateInterface(2), BDT(48), 
 12600 ;; Return value:  Size  Location     Type
 12601 ;;                  2   34[COMRAM] PTR void 
 12602 ;; Registers used:
 12603 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12604 ;; Tracked objects:
 12605 ;;		On entry : 0/0
 12606 ;;		On exit  : 0/0
 12607 ;;		Unchanged: 0/0
 12608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12609 ;;      Params:         6       0       0       0       0       0       0       0       0
 12610 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12612 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12613 ;;Total ram usage:        8 bytes
 12614 ;; Hardware stack levels used:    1
 12615 ;; Hardware stack levels required when called:    4
 12616 ;; This function calls:
 12617 ;;		Nothing
 12618 ;; This function is called by:
 12619 ;;		_USBDeviceInit
 12620 ;;		_USBStdSetCfgHandler
 12621 ;; This function uses a non-reentrant model
 12622 ;;
 12623                           
 12624                           	psect	text57
 12625  003274                     __ptext57:
 12626                           	opt stack 0
 12627  003274                     _memset:
 12628                           	opt stack 23
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;incstack = 0
 12632  003274  C023  F029         	movff	memset@p1,memset@p
 12633  003278  C024  F02A         	movff	memset@p1+1,memset@p+1
 12634  00327C  D009               	goto	l3896
 12635  00327E                     l3892:
 12636  00327E  C029  FFD9         	movff	memset@p,fsr2l
 12637  003282  C02A  FFDA         	movff	memset@p+1,fsr2h
 12638  003286  C025  FFDF         	movff	memset@c,indf2
 12639  00328A  4A29               	infsnz	memset@p,f,c
 12640  00328C  2A2A               	incf	memset@p+1,f,c
 12641  00328E  D000               	goto	l3896
 12642  003290                     l3896:
 12643  003290  0627               	decf	memset@n,f,c
 12644  003292  A0D8               	btfss	status,0,c
 12645  003294  0628               	decf	memset@n+1,f,c
 12646  003296  2827               	incf	memset@n,w,c
 12647  003298  E1F2               	bnz	l3892
 12648  00329A  2828               	incf	memset@n+1,w,c
 12649  00329C  A4D8               	btfss	status,2,c
 12650  00329E  D7EF               	goto	l3892
 12651                           
 12652                           ;	Return value of _memset is never used
 12653  0032A0  0012               	return		;funcret
 12654  0032A2                     __end_of_memset:
 12655                           	opt stack 0
 12656                           tblptru	equ	0xFF8
 12657                           tblptrh	equ	0xFF7
 12658                           tblptrl	equ	0xFF6
 12659                           tablat	equ	0xFF5
 12660                           prodh	equ	0xFF4
 12661                           prodl	equ	0xFF3
 12662                           intcon	equ	0xFF2
 12663                           postinc0	equ	0xFEE
 12664                           wreg	equ	0xFE8
 12665                           indf1	equ	0xFE7
 12666                           postdec1	equ	0xFE5
 12667                           fsr1h	equ	0xFE2
 12668                           fsr1l	equ	0xFE1
 12669                           indf2	equ	0xFDF
 12670                           postinc2	equ	0xFDE
 12671                           postdec2	equ	0xFDD
 12672                           plusw2	equ	0xFDB
 12673                           fsr2h	equ	0xFDA
 12674                           fsr2l	equ	0xFD9
 12675                           status	equ	0xFD8
 12676                           
 12677 ;; *************** function _USBDisableInterrupts *****************
 12678 ;; Defined at:
 12679 ;;		line 31 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
 12680 ;; Parameters:    Size  Location     Type
 12681 ;;		None
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;		None
 12684 ;; Return value:  Size  Location     Type
 12685 ;;		None               void
 12686 ;; Registers used:
 12687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12688 ;; Tracked objects:
 12689 ;;		On entry : 0/0
 12690 ;;		On exit  : 0/0
 12691 ;;		Unchanged: 0/0
 12692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12693 ;;      Params:         0       0       0       0       0       0       0       0       0
 12694 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12696 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12697 ;;Total ram usage:        0 bytes
 12698 ;; Hardware stack levels used:    1
 12699 ;; Hardware stack levels required when called:    4
 12700 ;; This function calls:
 12701 ;;		Nothing
 12702 ;; This function is called by:
 12703 ;;		_USBDeviceInit
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           	psect	text58
 12708  003214                     __ptext58:
 12709                           	opt stack 0
 12710  003214                     _USBDisableInterrupts:
 12711                           	opt stack 23
 12712                           
 12713                           ;usb_hal_fixes.c: 32: if (pic18_devid == 0x02E0) {
 12714                           
 12715                           ;incstack = 0
 12716  003214  0EE0               	movlw	224
 12717  003216  0100               	movlb	0	; () banked
 12718  003218  19F1               	xorwf	_pic18_devid& (0+255),w,b
 12719  00321A  E10C               	bnz	l4334
 12720  00321C  0E02               	movlw	2
 12721  00321E  0100               	movlb	0	; () banked
 12722  003220  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 12723  003222  A4D8               	btfss	status,2,c
 12724  003224  D007               	goto	l4334
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;usb_hal_fixes.c: 33: *PIE3_R &= 0b11111011;
 12728  003226  C0C1  FFD9         	movff	_PIE3_R,fsr2l
 12729  00322A  C0C2  FFDA         	movff	_PIE3_R+1,fsr2h
 12730  00322E  0EFB               	movlw	251
 12731  003230  16DF               	andwf	indf2,f,c
 12732                           
 12733                           ;usb_hal_fixes.c: 34: } else {
 12734  003232  0012               	return	
 12735  003234                     l4334:
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;usb_hal_fixes.c: 35: *PIR2_R &= 0b11011111;
 12739  003234  C0C3  FFD9         	movff	_PIR2_R,fsr2l
 12740  003238  C0C4  FFDA         	movff	_PIR2_R+1,fsr2h
 12741  00323C  0EDF               	movlw	223
 12742  00323E  16DF               	andwf	indf2,f,c
 12743  003240  0012               	return	
 12744                           
 12745                           ; BSR set to: 0
 12746                           
 12747                           ; BSR set to: 0
 12748  003242  0012               	return		;funcret
 12749  003244                     __end_of_USBDisableInterrupts:
 12750                           	opt stack 0
 12751                           tblptru	equ	0xFF8
 12752                           tblptrh	equ	0xFF7
 12753                           tblptrl	equ	0xFF6
 12754                           tablat	equ	0xFF5
 12755                           prodh	equ	0xFF4
 12756                           prodl	equ	0xFF3
 12757                           intcon	equ	0xFF2
 12758                           postinc0	equ	0xFEE
 12759                           wreg	equ	0xFE8
 12760                           indf1	equ	0xFE7
 12761                           postdec1	equ	0xFE5
 12762                           fsr1h	equ	0xFE2
 12763                           fsr1l	equ	0xFE1
 12764                           indf2	equ	0xFDF
 12765                           postinc2	equ	0xFDE
 12766                           postdec2	equ	0xFDD
 12767                           plusw2	equ	0xFDB
 12768                           fsr2h	equ	0xFDA
 12769                           fsr2l	equ	0xFD9
 12770                           status	equ	0xFD8
 12771                           
 12772 ;; *************** function _OpenSPI1 *****************
 12773 ;; Defined at:
 12774 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1open.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;  sync_mode       1    wreg     unsigned char 
 12777 ;;  bus_mode        1   34[COMRAM] unsigned char 
 12778 ;;  smp_phase       1   35[COMRAM] unsigned char 
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;  sync_mode       1   36[COMRAM] unsigned char 
 12781 ;; Return value:  Size  Location     Type
 12782 ;;		None               void
 12783 ;; Registers used:
 12784 ;;		wreg, status,2, status,0
 12785 ;; Tracked objects:
 12786 ;;		On entry : 0/0
 12787 ;;		On exit  : 0/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12790 ;;      Params:         2       0       0       0       0       0       0       0       0
 12791 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12793 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12794 ;;Total ram usage:        3 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:    4
 12797 ;; This function calls:
 12798 ;;		Nothing
 12799 ;; This function is called by:
 12800 ;;		_InitializeSystem
 12801 ;; This function uses a non-reentrant model
 12802 ;;
 12803                           
 12804                           	psect	text59
 12805  002FD6                     __ptext59:
 12806                           	opt stack 0
 12807  002FD6                     _OpenSPI1:
 12808                           	opt stack 25
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;incstack = 0
 12812                           ;OpenSPI1@sync_mode stored from wreg
 12813  002FD6  6E25               	movwf	OpenSPI1@sync_mode,c
 12814  002FD8  0E3F               	movlw	63
 12815  002FDA  16C7               	andwf	4039,f,c	;volatile
 12816  002FDC  0E00               	movlw	0
 12817  002FDE  6EC6               	movwf	4038,c	;volatile
 12818  002FE0  5025               	movf	OpenSPI1@sync_mode,w,c
 12819  002FE2  12C6               	iorwf	4038,f,c	;volatile
 12820  002FE4  5024               	movf	OpenSPI1@smp_phase,w,c
 12821  002FE6  12C7               	iorwf	4039,f,c	;volatile
 12822  002FE8  D005               	goto	l5158
 12823  002FEA                     l1128:
 12824  002FEA  8CC7               	bsf	4039,6,c	;volatile
 12825  002FEC  D013               	goto	l5162
 12826  002FEE                     l1130:
 12827  002FEE  8CC7               	bsf	4039,6,c	;volatile
 12828  002FF0                     l1131:
 12829  002FF0  88C6               	bsf	4038,4,c	;volatile
 12830  002FF2  D010               	goto	l5162
 12831  002FF4                     l5158:
 12832  002FF4  5023               	movf	OpenSPI1@bus_mode,w,c
 12833                           
 12834                           ; Switch size 1, requested type "space"
 12835                           ; Number of cases is 3, Range of values is 0 to 3
 12836                           ; switch strategies available:
 12837                           ; Name         Instructions Cycles
 12838                           ; simple_byte           10     6 (average)
 12839                           ;	Chosen strategy is simple_byte
 12840  002FF6  0A00               	xorlw	0	; case 0
 12841  002FF8  B4D8               	btfsc	status,2,c
 12842  002FFA  D7F7               	goto	l1128
 12843  002FFC  0A02               	xorlw	2	; case 2
 12844  002FFE  B4D8               	btfsc	status,2,c
 12845  003000  D7F6               	goto	l1130
 12846  003002  0A01               	xorlw	1	; case 3
 12847  003004  B4D8               	btfsc	status,2,c
 12848  003006  D7F4               	goto	l1131
 12849  003008  D005               	goto	l5162
 12850  00300A                     l1134:
 12851  00300A  8A92               	bsf	3986,5,c	;volatile
 12852  00300C                     l1136:
 12853  00300C  8493               	bsf	3987,2,c	;volatile
 12854  00300E  D00A               	goto	l1135
 12855  003010                     l1137:
 12856  003010  9493               	bcf	3987,2,c	;volatile
 12857  003012  D008               	goto	l1135
 12858  003014                     l5162:
 12859  003014  5025               	movf	OpenSPI1@sync_mode,w,c
 12860                           
 12861                           ; Switch size 1, requested type "space"
 12862                           ; Number of cases is 2, Range of values is 4 to 5
 12863                           ; switch strategies available:
 12864                           ; Name         Instructions Cycles
 12865                           ; simple_byte            7     4 (average)
 12866                           ;	Chosen strategy is simple_byte
 12867  003016  0A04               	xorlw	4	; case 4
 12868  003018  B4D8               	btfsc	status,2,c
 12869  00301A  D7F7               	goto	l1134
 12870  00301C  0A01               	xorlw	1	; case 5
 12871  00301E  B4D8               	btfsc	status,2,c
 12872  003020  D7F5               	goto	l1136
 12873  003022  D7F6               	goto	l1137
 12874  003024                     l1135:
 12875  003024  8093               	bsf	3987,0,c	;volatile
 12876  003026  9693               	bcf	3987,3,c	;volatile
 12877  003028  8AC6               	bsf	4038,5,c	;volatile
 12878  00302A  0012               	return		;funcret
 12879  00302C                     __end_of_OpenSPI1:
 12880                           	opt stack 0
 12881                           tblptru	equ	0xFF8
 12882                           tblptrh	equ	0xFF7
 12883                           tblptrl	equ	0xFF6
 12884                           tablat	equ	0xFF5
 12885                           prodh	equ	0xFF4
 12886                           prodl	equ	0xFF3
 12887                           intcon	equ	0xFF2
 12888                           postinc0	equ	0xFEE
 12889                           wreg	equ	0xFE8
 12890                           indf1	equ	0xFE7
 12891                           postdec1	equ	0xFE5
 12892                           fsr1h	equ	0xFE2
 12893                           fsr1l	equ	0xFE1
 12894                           indf2	equ	0xFDF
 12895                           postinc2	equ	0xFDE
 12896                           postdec2	equ	0xFDD
 12897                           plusw2	equ	0xFDB
 12898                           fsr2h	equ	0xFDA
 12899                           fsr2l	equ	0xFD9
 12900                           status	equ	0xFD8
 12901                           
 12902 ;; *************** function _LowPriorityISRCode *****************
 12903 ;; Defined at:
 12904 ;;		line 66 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;		None
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;		None
 12909 ;; Return value:  Size  Location     Type
 12910 ;;		None               void
 12911 ;; Registers used:
 12912 ;;		None
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12918 ;;      Params:         0       0       0       0       0       0       0       0       0
 12919 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12920 ;;      Temps:         17       0       0       0       0       0       0       0       0
 12921 ;;      Totals:        17       0       0       0       0       0       0       0       0
 12922 ;;Total ram usage:       17 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:    3
 12925 ;; This function calls:
 12926 ;;		Nothing
 12927 ;; This function is called by:
 12928 ;;		Interrupt level 1
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           	psect	intcodelo
 12933  000818                     __pintcodelo:
 12934                           	opt stack 0
 12935  000818                     _LowPriorityISRCode:
 12936                           	opt stack 16
 12937                           
 12938                           ;incstack = 0
 12939  000818  CFD8 F001          	movff	status,??_LowPriorityISRCode
 12940  00081C  CFE8 F002          	movff	wreg,??_LowPriorityISRCode+1
 12941  000820  CFE0 F003          	movff	bsr,??_LowPriorityISRCode+2
 12942  000824  CFFA F004          	movff	pclath,??_LowPriorityISRCode+3
 12943  000828  CFFB F005          	movff	pclatu,??_LowPriorityISRCode+4
 12944  00082C  CFE9 F006          	movff	fsr0l,??_LowPriorityISRCode+5
 12945  000830  CFEA F007          	movff	fsr0h,??_LowPriorityISRCode+6
 12946  000834  CFE1 F008          	movff	fsr1l,??_LowPriorityISRCode+7
 12947  000838  CFE2 F009          	movff	fsr1h,??_LowPriorityISRCode+8
 12948  00083C  CFD9 F00A          	movff	fsr2l,??_LowPriorityISRCode+9
 12949  000840  CFDA F00B          	movff	fsr2h,??_LowPriorityISRCode+10
 12950  000844  CFF3 F00C          	movff	prodl,??_LowPriorityISRCode+11
 12951  000848  CFF4 F00D          	movff	prodh,??_LowPriorityISRCode+12
 12952  00084C  CFF6 F00E          	movff	tblptrl,??_LowPriorityISRCode+13
 12953  000850  CFF7 F00F          	movff	tblptrh,??_LowPriorityISRCode+14
 12954  000854  CFF8 F010          	movff	tblptru,??_LowPriorityISRCode+15
 12955  000858  CFF5 F011          	movff	tablat,??_LowPriorityISRCode+16
 12956                           
 12957                           ;karate.c: 68: if (PIR1bits.TMR2IF) {
 12958  00085C  A29E               	btfss	3998,1,c	;volatile
 12959  00085E  D002               	goto	i1l686
 12960                           
 12961                           ;karate.c: 70: PIR1bits.TMR2IF = 0;
 12962  000860  929E               	bcf	3998,1,c	;volatile
 12963  000862  D000               	goto	i1l686
 12964  000864                     i1l686:
 12965  000864  C011  FFF5         	movff	??_LowPriorityISRCode+16,tablat
 12966  000868  C010  FFF8         	movff	??_LowPriorityISRCode+15,tblptru
 12967  00086C  C00F  FFF7         	movff	??_LowPriorityISRCode+14,tblptrh
 12968  000870  C00E  FFF6         	movff	??_LowPriorityISRCode+13,tblptrl
 12969  000874  C00D  FFF4         	movff	??_LowPriorityISRCode+12,prodh
 12970  000878  C00C  FFF3         	movff	??_LowPriorityISRCode+11,prodl
 12971  00087C  C00B  FFDA         	movff	??_LowPriorityISRCode+10,fsr2h
 12972  000880  C00A  FFD9         	movff	??_LowPriorityISRCode+9,fsr2l
 12973  000884  C009  FFE2         	movff	??_LowPriorityISRCode+8,fsr1h
 12974  000888  C008  FFE1         	movff	??_LowPriorityISRCode+7,fsr1l
 12975  00088C  C007  FFEA         	movff	??_LowPriorityISRCode+6,fsr0h
 12976  000890  C006  FFE9         	movff	??_LowPriorityISRCode+5,fsr0l
 12977  000894  C005  FFFB         	movff	??_LowPriorityISRCode+4,pclatu
 12978  000898  C004  FFFA         	movff	??_LowPriorityISRCode+3,pclath
 12979  00089C  C003  FFE0         	movff	??_LowPriorityISRCode+2,bsr
 12980  0008A0  C002  FFE8         	movff	??_LowPriorityISRCode+1,wreg
 12981  0008A4  C001  FFD8         	movff	??_LowPriorityISRCode,status
 12982  0008A8  0010               	retfie	
 12983  0008AA                     __end_of_LowPriorityISRCode:
 12984                           	opt stack 0
 12985                           pclatu	equ	0xFFB
 12986                           pclath	equ	0xFFA
 12987                           tblptru	equ	0xFF8
 12988                           tblptrh	equ	0xFF7
 12989                           tblptrl	equ	0xFF6
 12990                           tablat	equ	0xFF5
 12991                           prodh	equ	0xFF4
 12992                           prodl	equ	0xFF3
 12993                           intcon	equ	0xFF2
 12994                           postinc0	equ	0xFEE
 12995                           fsr0h	equ	0xFEA
 12996                           fsr0l	equ	0xFE9
 12997                           wreg	equ	0xFE8
 12998                           indf1	equ	0xFE7
 12999                           postdec1	equ	0xFE5
 13000                           fsr1h	equ	0xFE2
 13001                           fsr1l	equ	0xFE1
 13002                           bsr	equ	0xFE0
 13003                           indf2	equ	0xFDF
 13004                           postinc2	equ	0xFDE
 13005                           postdec2	equ	0xFDD
 13006                           plusw2	equ	0xFDB
 13007                           fsr2h	equ	0xFDA
 13008                           fsr2l	equ	0xFD9
 13009                           status	equ	0xFD8
 13010                           
 13011 ;; *************** function _HighPriorityISRCode *****************
 13012 ;; Defined at:
 13013 ;;		line 45 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;		None               void
 13020 ;; Registers used:
 13021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13029 ;;      Temps:         14       0       0       0       0       0       0       0       0
 13030 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13031 ;;Total ram usage:       14 bytes
 13032 ;; Hardware stack levels used:    1
 13033 ;; Hardware stack levels required when called:    2
 13034 ;; This function calls:
 13035 ;;		i2_tlc5947_latch
 13036 ;;		i2_tlc5947_update
 13037 ;; This function is called by:
 13038 ;;		Interrupt level 2
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           	psect	intcode
 13043  000808                     __pintcode:
 13044                           	opt stack 0
 13045  000808                     _HighPriorityISRCode:
 13046                           	opt stack 16
 13047                           
 13048                           ;incstack = 0
 13049  000808  CFFA F015          	movff	pclath,??_HighPriorityISRCode
 13050  00080C  CFFB F016          	movff	pclatu,??_HighPriorityISRCode+1
 13051  000810  CFE9 F017          	movff	fsr0l,??_HighPriorityISRCode+2
 13052  000814  EF8E  F015         	goto	int_func
 13053                           pclatu	equ	0xFFB
 13054                           pclath	equ	0xFFA
 13055                           tblptru	equ	0xFF8
 13056                           tblptrh	equ	0xFF7
 13057                           tblptrl	equ	0xFF6
 13058                           tablat	equ	0xFF5
 13059                           prodh	equ	0xFF4
 13060                           prodl	equ	0xFF3
 13061                           intcon	equ	0xFF2
 13062                           postinc0	equ	0xFEE
 13063                           fsr0h	equ	0xFEA
 13064                           fsr0l	equ	0xFE9
 13065                           wreg	equ	0xFE8
 13066                           indf1	equ	0xFE7
 13067                           postdec1	equ	0xFE5
 13068                           fsr1h	equ	0xFE2
 13069                           fsr1l	equ	0xFE1
 13070                           bsr	equ	0xFE0
 13071                           indf2	equ	0xFDF
 13072                           postinc2	equ	0xFDE
 13073                           postdec2	equ	0xFDD
 13074                           plusw2	equ	0xFDB
 13075                           fsr2h	equ	0xFDA
 13076                           fsr2l	equ	0xFD9
 13077                           status	equ	0xFD8
 13078                           
 13079                           	psect	intcode_body
 13080  002B1C                     __pintcode_body:
 13081                           	opt stack 16
 13082  002B1C                     int_func:
 13083                           	opt stack 16
 13084  002B1C  CFEA F018          	movff	fsr0h,??_HighPriorityISRCode+3
 13085  002B20  CFE1 F019          	movff	fsr1l,??_HighPriorityISRCode+4
 13086  002B24  CFE2 F01A          	movff	fsr1h,??_HighPriorityISRCode+5
 13087  002B28  CFD9 F01B          	movff	fsr2l,??_HighPriorityISRCode+6
 13088  002B2C  CFDA F01C          	movff	fsr2h,??_HighPriorityISRCode+7
 13089  002B30  CFF3 F01D          	movff	prodl,??_HighPriorityISRCode+8
 13090  002B34  CFF4 F01E          	movff	prodh,??_HighPriorityISRCode+9
 13091  002B38  CFF6 F01F          	movff	tblptrl,??_HighPriorityISRCode+10
 13092  002B3C  CFF7 F020          	movff	tblptrh,??_HighPriorityISRCode+11
 13093  002B40  CFF8 F021          	movff	tblptru,??_HighPriorityISRCode+12
 13094  002B44  CFF5 F022          	movff	tablat,??_HighPriorityISRCode+13
 13095                           
 13096                           ;karate.c: 47: if (PIR2bits.TMR3IF) {
 13097  002B48  A2A1               	btfss	4001,1,c	;volatile
 13098  002B4A  D012               	goto	i2l682
 13099                           
 13100                           ;karate.c: 49: TMR3H = tmr3h_cal;
 13101  002B4C  C0A1  FFB3         	movff	_tmr3h_cal,4019	;volatile
 13102                           
 13103                           ;karate.c: 50: TMR3L = tmr3l_cal;
 13104  002B50  C0A2  FFB2         	movff	_tmr3l_cal,4018	;volatile
 13105                           
 13106                           ;karate.c: 53: if (tlc_request >= 0) {
 13107  002B54  0100               	movlb	0	; () banked
 13108  002B56  BFA0               	btfsc	_tlc_request& (0+255),7,b
 13109  002B58  D009               	goto	i2l5682
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;karate.c: 54: tlc5947_latch();
 13113  002B5A  EC7C  F019         	call	i2_tlc5947_latch	;wreg free
 13114                           
 13115                           ;karate.c: 57: if (tlc_request == 1) {
 13116  002B5E  0100               	movlb	0	; () banked
 13117  002B60  05A0               	decf	_tlc_request& (0+255),w,b
 13118  002B62  A4D8               	btfss	status,2,c
 13119  002B64  D003               	goto	i2l5682
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;karate.c: 58: tlc5947_update();
 13123  002B66  EC22  F019         	call	i2_tlc5947_update	;wreg free
 13124  002B6A  D000               	goto	i2l5682
 13125  002B6C                     i2l5682:
 13126                           
 13127                           ;karate.c: 59: }
 13128                           ;karate.c: 60: }
 13129                           ;karate.c: 62: PIR2bits.TMR3IF = 0;
 13130  002B6C  92A1               	bcf	4001,1,c	;volatile
 13131  002B6E  D000               	goto	i2l682
 13132  002B70                     i2l682:
 13133  002B70  C022  FFF5         	movff	??_HighPriorityISRCode+13,tablat
 13134  002B74  C021  FFF8         	movff	??_HighPriorityISRCode+12,tblptru
 13135  002B78  C020  FFF7         	movff	??_HighPriorityISRCode+11,tblptrh
 13136  002B7C  C01F  FFF6         	movff	??_HighPriorityISRCode+10,tblptrl
 13137  002B80  C01E  FFF4         	movff	??_HighPriorityISRCode+9,prodh
 13138  002B84  C01D  FFF3         	movff	??_HighPriorityISRCode+8,prodl
 13139  002B88  C01C  FFDA         	movff	??_HighPriorityISRCode+7,fsr2h
 13140  002B8C  C01B  FFD9         	movff	??_HighPriorityISRCode+6,fsr2l
 13141  002B90  C01A  FFE2         	movff	??_HighPriorityISRCode+5,fsr1h
 13142  002B94  C019  FFE1         	movff	??_HighPriorityISRCode+4,fsr1l
 13143  002B98  C018  FFEA         	movff	??_HighPriorityISRCode+3,fsr0h
 13144  002B9C  C017  FFE9         	movff	??_HighPriorityISRCode+2,fsr0l
 13145  002BA0  C016  FFFB         	movff	??_HighPriorityISRCode+1,pclatu
 13146  002BA4  C015  FFFA         	movff	??_HighPriorityISRCode,pclath
 13147  002BA8  0011               	retfie		f
 13148  002BAA                     __end_of_HighPriorityISRCode:
 13149                           	opt stack 0
 13150                           pclatu	equ	0xFFB
 13151                           pclath	equ	0xFFA
 13152                           tblptru	equ	0xFF8
 13153                           tblptrh	equ	0xFF7
 13154                           tblptrl	equ	0xFF6
 13155                           tablat	equ	0xFF5
 13156                           prodh	equ	0xFF4
 13157                           prodl	equ	0xFF3
 13158                           intcon	equ	0xFF2
 13159                           postinc0	equ	0xFEE
 13160                           fsr0h	equ	0xFEA
 13161                           fsr0l	equ	0xFE9
 13162                           wreg	equ	0xFE8
 13163                           indf1	equ	0xFE7
 13164                           postdec1	equ	0xFE5
 13165                           fsr1h	equ	0xFE2
 13166                           fsr1l	equ	0xFE1
 13167                           bsr	equ	0xFE0
 13168                           indf2	equ	0xFDF
 13169                           postinc2	equ	0xFDE
 13170                           postdec2	equ	0xFDD
 13171                           plusw2	equ	0xFDB
 13172                           fsr2h	equ	0xFDA
 13173                           fsr2l	equ	0xFD9
 13174                           status	equ	0xFD8
 13175                           
 13176 ;; *************** function i2_tlc5947_update *****************
 13177 ;; Defined at:
 13178 ;;		line 175 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  tlc5947_upda    1   19[COMRAM] unsigned char 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;		None               void
 13185 ;; Registers used:
 13186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0
 13193 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13195 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13196 ;;Total ram usage:        1 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    1
 13199 ;; This function calls:
 13200 ;;		i2_WriteSPI1
 13201 ;; This function is called by:
 13202 ;;		_HighPriorityISRCode
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text62
 13207  003244                     __ptext62:
 13208                           	opt stack 0
 13209  003244                     i2_tlc5947_update:
 13210                           	opt stack 16
 13211                           
 13212                           ;tlc5947.c: 177: uint8_t x;
 13213                           ;tlc5947.c: 179: for (x = 0; x < tlc_nbytes; x++) {
 13214                           
 13215                           ;incstack = 0
 13216  003244  0E00               	movlw	0
 13217  003246  6E14               	movwf	i2tlc5947_update@x,c
 13218  003248  D00D               	goto	i2l5582
 13219  00324A                     i2l5578:
 13220                           
 13221                           ;tlc5947.c: 180: WriteSPI1(tlc_memory[x]);
 13222  00324A  5014               	movf	i2tlc5947_update@x,w,c
 13223  00324C  0D01               	mullw	1
 13224  00324E  0E80               	movlw	low _tlc_memory
 13225  003250  24F3               	addwf	prodl,w,c
 13226  003252  6ED9               	movwf	fsr2l,c
 13227  003254  0E01               	movlw	high _tlc_memory
 13228  003256  20F4               	addwfc	prodh,w,c
 13229  003258  6EDA               	movwf	fsr2h,c
 13230  00325A  50DF               	movf	indf2,w,c
 13231  00325C  ECB7  F019         	call	i2_WriteSPI1
 13232  003260  2A14               	incf	i2tlc5947_update@x,f,c
 13233  003262  D000               	goto	i2l5582
 13234  003264                     i2l5582:
 13235  003264  505F               	movf	_tlc_nbytes,w,c
 13236  003266  5C14               	subwf	i2tlc5947_update@x,w,c
 13237  003268  A0D8               	btfss	status,0,c
 13238  00326A  D7EF               	goto	i2l5578
 13239                           
 13240                           ;tlc5947.c: 181: }
 13241                           ;tlc5947.c: 182: tlc_request = 0;
 13242  00326C  0E00               	movlw	0
 13243  00326E  0100               	movlb	0	; () banked
 13244  003270  6FA0               	movwf	_tlc_request& (0+255),b
 13245                           
 13246                           ; BSR set to: 0
 13247  003272  0012               	return		;funcret
 13248  003274                     __end_ofi2_tlc5947_update:
 13249                           	opt stack 0
 13250                           pclatu	equ	0xFFB
 13251                           pclath	equ	0xFFA
 13252                           tblptru	equ	0xFF8
 13253                           tblptrh	equ	0xFF7
 13254                           tblptrl	equ	0xFF6
 13255                           tablat	equ	0xFF5
 13256                           prodh	equ	0xFF4
 13257                           prodl	equ	0xFF3
 13258                           intcon	equ	0xFF2
 13259                           postinc0	equ	0xFEE
 13260                           fsr0h	equ	0xFEA
 13261                           fsr0l	equ	0xFE9
 13262                           wreg	equ	0xFE8
 13263                           indf1	equ	0xFE7
 13264                           postdec1	equ	0xFE5
 13265                           fsr1h	equ	0xFE2
 13266                           fsr1l	equ	0xFE1
 13267                           bsr	equ	0xFE0
 13268                           indf2	equ	0xFDF
 13269                           postinc2	equ	0xFDE
 13270                           postdec2	equ	0xFDD
 13271                           plusw2	equ	0xFDB
 13272                           fsr2h	equ	0xFDA
 13273                           fsr2l	equ	0xFD9
 13274                           status	equ	0xFD8
 13275                           
 13276 ;; *************** function i2_WriteSPI1 *****************
 13277 ;; Defined at:
 13278 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1writ.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;  data_out        1    wreg     unsigned char 
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;  data_out        1   18[COMRAM] unsigned char 
 13283 ;;  WriteSPI1       1   17[COMRAM] unsigned char 
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      char 
 13286 ;; Registers used:
 13287 ;;		wreg
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0
 13294 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13296 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13297 ;;Total ram usage:        2 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; This function calls:
 13300 ;;		Nothing
 13301 ;; This function is called by:
 13302 ;;		i2_tlc5947_update
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text63
 13307  00336E                     __ptext63:
 13308                           	opt stack 0
 13309  00336E                     i2_WriteSPI1:
 13310                           	opt stack 16
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;incstack = 0
 13314                           ;i2WriteSPI1@data_out stored from wreg
 13315  00336E  6E13               	movwf	i2WriteSPI1@data_out,c
 13316  003370  CFC9 F012          	movff	4041,i2WriteSPI1@TempVar	;volatile
 13317  003374  969E               	bcf	3998,3,c	;volatile
 13318  003376  9EC6               	bcf	4038,7,c	;volatile
 13319  003378  C013  FFC9         	movff	i2WriteSPI1@data_out,4041	;volatile
 13320  00337C  BEC6               	btfsc	4038,7,c	;volatile
 13321  00337E  0012               	return	
 13322  003380  D002               	goto	i2l1162
 13323                           
 13324                           ;	Return value of i2_WriteSPI1 is never used
 13325  003382  0012               	return	
 13326  003384  D000               	goto	i2l1162
 13327  003386                     i2l1162:
 13328  003386  B69E               	btfsc	3998,3,c	;volatile
 13329  003388  0012               	return	
 13330  00338A  D7FD               	goto	i2l1162
 13331  00338C  0012               	return	
 13332                           
 13333                           ;	Return value of i2_WriteSPI1 is never used
 13334  00338E  0012               	return		;funcret
 13335  003390                     __end_ofi2_WriteSPI1:
 13336                           	opt stack 0
 13337                           pclatu	equ	0xFFB
 13338                           pclath	equ	0xFFA
 13339                           tblptru	equ	0xFF8
 13340                           tblptrh	equ	0xFF7
 13341                           tblptrl	equ	0xFF6
 13342                           tablat	equ	0xFF5
 13343                           prodh	equ	0xFF4
 13344                           prodl	equ	0xFF3
 13345                           intcon	equ	0xFF2
 13346                           postinc0	equ	0xFEE
 13347                           fsr0h	equ	0xFEA
 13348                           fsr0l	equ	0xFE9
 13349                           wreg	equ	0xFE8
 13350                           indf1	equ	0xFE7
 13351                           postdec1	equ	0xFE5
 13352                           fsr1h	equ	0xFE2
 13353                           fsr1l	equ	0xFE1
 13354                           bsr	equ	0xFE0
 13355                           indf2	equ	0xFDF
 13356                           postinc2	equ	0xFDE
 13357                           postdec2	equ	0xFDD
 13358                           plusw2	equ	0xFDB
 13359                           fsr2h	equ	0xFDA
 13360                           fsr2l	equ	0xFD9
 13361                           status	equ	0xFD8
 13362                           
 13363 ;; *************** function i2_tlc5947_latch *****************
 13364 ;; Defined at:
 13365 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;		None
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;		None
 13370 ;; Return value:  Size  Location     Type
 13371 ;;		None               void
 13372 ;; Registers used:
 13373 ;;		wreg, status,2, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13379 ;;      Params:         0       0       0       0       0       0       0       0       0
 13380 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13381 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13382 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13383 ;;Total ram usage:        0 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:    1
 13386 ;; This function calls:
 13387 ;;		i2_Delay100TCYx
 13388 ;;		i2_Delay10TCYx
 13389 ;; This function is called by:
 13390 ;;		_HighPriorityISRCode
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           	psect	text64
 13395  0032F8                     __ptext64:
 13396                           	opt stack 0
 13397  0032F8                     i2_tlc5947_latch:
 13398                           	opt stack 16
 13399                           
 13400                           ;tlc5947.c: 187: LATBbits.LATB5 = 1;;
 13401                           
 13402                           ;incstack = 0
 13403  0032F8  8A8A               	bsf	3978,5,c	;volatile
 13404                           
 13405                           ;tlc5947.c: 188: Delay100TCYx (pwr_delay);
 13406  0032FA  0100               	movlb	0	; () banked
 13407  0032FC  518E               	movf	_pwr_delay& (0+255),w,b
 13408  0032FE  EC21  F01A         	call	i2_Delay100TCYx
 13409                           
 13410                           ;tlc5947.c: 190: LATCbits.LATC0 = 1;;
 13411  003302  808B               	bsf	3979,0,c	;volatile
 13412                           
 13413                           ;tlc5947.c: 191: LATBbits.LATB3 = 1;;
 13414  003304  868A               	bsf	3978,3,c	;volatile
 13415                           
 13416                           ;tlc5947.c: 192: Delay10TCYx(40);
 13417  003306  0E28               	movlw	40
 13418  003308  EC18  F01A         	call	i2_Delay10TCYx
 13419                           
 13420                           ;tlc5947.c: 193: LATBbits.LATB3 = 0;;
 13421  00330C  968A               	bcf	3978,3,c	;volatile
 13422                           
 13423                           ;tlc5947.c: 194: Delay10TCYx(40);
 13424  00330E  0E28               	movlw	40
 13425  003310  EC18  F01A         	call	i2_Delay10TCYx
 13426                           
 13427                           ;tlc5947.c: 195: LATCbits.LATC0 = 0;;
 13428  003314  908B               	bcf	3979,0,c	;volatile
 13429                           
 13430                           ;tlc5947.c: 197: Delay100TCYx(pwr_delay);
 13431  003316  0100               	movlb	0	; () banked
 13432  003318  518E               	movf	_pwr_delay& (0+255),w,b
 13433  00331A  EC21  F01A         	call	i2_Delay100TCYx
 13434                           
 13435                           ;tlc5947.c: 198: LATBbits.LATB5 = 0;;
 13436  00331E  9A8A               	bcf	3978,5,c	;volatile
 13437  003320  0012               	return		;funcret
 13438  003322                     __end_ofi2_tlc5947_latch:
 13439                           	opt stack 0
 13440                           pclatu	equ	0xFFB
 13441                           pclath	equ	0xFFA
 13442                           tblptru	equ	0xFF8
 13443                           tblptrh	equ	0xFF7
 13444                           tblptrl	equ	0xFF6
 13445                           tablat	equ	0xFF5
 13446                           prodh	equ	0xFF4
 13447                           prodl	equ	0xFF3
 13448                           intcon	equ	0xFF2
 13449                           postinc0	equ	0xFEE
 13450                           fsr0h	equ	0xFEA
 13451                           fsr0l	equ	0xFE9
 13452                           wreg	equ	0xFE8
 13453                           indf1	equ	0xFE7
 13454                           postdec1	equ	0xFE5
 13455                           fsr1h	equ	0xFE2
 13456                           fsr1l	equ	0xFE1
 13457                           bsr	equ	0xFE0
 13458                           indf2	equ	0xFDF
 13459                           postinc2	equ	0xFDE
 13460                           postdec2	equ	0xFDD
 13461                           plusw2	equ	0xFDB
 13462                           fsr2h	equ	0xFDA
 13463                           fsr2l	equ	0xFD9
 13464                           status	equ	0xFD8
 13465                           
 13466 ;; *************** function i2_Delay10TCYx *****************
 13467 ;; Defined at:
 13468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10tcyx.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;  unit            1    wreg     unsigned char 
 13471 ;; Auto vars:     Size  Location     Type
 13472 ;;  unit            1   17[COMRAM] unsigned char 
 13473 ;; Return value:  Size  Location     Type
 13474 ;;		None               void
 13475 ;; Registers used:
 13476 ;;		wreg
 13477 ;; Tracked objects:
 13478 ;;		On entry : 0/0
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13482 ;;      Params:         0       0       0       0       0       0       0       0       0
 13483 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13484 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13485 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13486 ;;Total ram usage:        1 bytes
 13487 ;; Hardware stack levels used:    1
 13488 ;; This function calls:
 13489 ;;		Nothing
 13490 ;; This function is called by:
 13491 ;;		i2_tlc5947_latch
 13492 ;; This function uses a non-reentrant model
 13493 ;;
 13494                           
 13495                           	psect	text65
 13496  003430                     __ptext65:
 13497                           	opt stack 0
 13498  003430                     i2_Delay10TCYx:
 13499                           	opt stack 16
 13500                           
 13501                           ;incstack = 0
 13502                           ;i2Delay10TCYx@unit stored from wreg
 13503  003430  6E12               	movwf	i2Delay10TCYx@unit,c
 13504  003432  0E03               	movlw	3
 13505  003434                     i2u490_47:
 13506  003434  2EE8               	decfsz	wreg,f,c
 13507  003436  D7FE               	goto	i2u490_47
 13508  003438  F000               	nop	
 13509  00343A  2E12               	decfsz	i2Delay10TCYx@unit,f,c
 13510  00343C  D7FA               	goto	i2l5432
 13511  00343E  0012               	return	
 13512  003440  0012               	return		;funcret
 13513  003442                     __end_ofi2_Delay10TCYx:
 13514                           	opt stack 0
 13515                           pclatu	equ	0xFFB
 13516                           pclath	equ	0xFFA
 13517                           tblptru	equ	0xFF8
 13518                           tblptrh	equ	0xFF7
 13519                           tblptrl	equ	0xFF6
 13520                           tablat	equ	0xFF5
 13521                           prodh	equ	0xFF4
 13522                           prodl	equ	0xFF3
 13523                           intcon	equ	0xFF2
 13524                           postinc0	equ	0xFEE
 13525                           fsr0h	equ	0xFEA
 13526                           fsr0l	equ	0xFE9
 13527                           wreg	equ	0xFE8
 13528                           indf1	equ	0xFE7
 13529                           postdec1	equ	0xFE5
 13530                           fsr1h	equ	0xFE2
 13531                           fsr1l	equ	0xFE1
 13532                           bsr	equ	0xFE0
 13533                           indf2	equ	0xFDF
 13534                           postinc2	equ	0xFDE
 13535                           postdec2	equ	0xFDD
 13536                           plusw2	equ	0xFDB
 13537                           fsr2h	equ	0xFDA
 13538                           fsr2l	equ	0xFD9
 13539                           status	equ	0xFD8
 13540                           
 13541 ;; *************** function i2_Delay100TCYx *****************
 13542 ;; Defined at:
 13543 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;  unit            1    wreg     unsigned char 
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;  unit            1   17[COMRAM] unsigned char 
 13548 ;; Return value:  Size  Location     Type
 13549 ;;		None               void
 13550 ;; Registers used:
 13551 ;;		wreg
 13552 ;; Tracked objects:
 13553 ;;		On entry : 0/0
 13554 ;;		On exit  : 0/0
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13557 ;;      Params:         0       0       0       0       0       0       0       0       0
 13558 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13560 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13561 ;;Total ram usage:        1 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; This function calls:
 13564 ;;		Nothing
 13565 ;; This function is called by:
 13566 ;;		i2_tlc5947_latch
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text66
 13571  003442                     __ptext66:
 13572                           	opt stack 0
 13573  003442                     i2_Delay100TCYx:
 13574                           	opt stack 16
 13575                           
 13576                           ;incstack = 0
 13577                           ;i2Delay100TCYx@unit stored from wreg
 13578  003442  6E12               	movwf	i2Delay100TCYx@unit,c
 13579  003444  0E21               	movlw	33
 13580  003446                     i2u491_47:
 13581  003446  2EE8               	decfsz	wreg,f,c
 13582  003448  D7FE               	goto	i2u491_47
 13583  00344A  F000               	nop	
 13584  00344C  2E12               	decfsz	i2Delay100TCYx@unit,f,c
 13585  00344E  D7FA               	goto	i2l5428
 13586  003450  0012               	return	
 13587  003452  0012               	return		;funcret
 13588  003454                     __end_ofi2_Delay100TCYx:
 13589                           	opt stack 0
 13590                           pclatu	equ	0xFFB
 13591                           pclath	equ	0xFFA
 13592                           tblptru	equ	0xFF8
 13593                           tblptrh	equ	0xFF7
 13594                           tblptrl	equ	0xFF6
 13595                           tablat	equ	0xFF5
 13596                           prodh	equ	0xFF4
 13597                           prodl	equ	0xFF3
 13598                           intcon	equ	0xFF2
 13599                           postinc0	equ	0xFEE
 13600                           fsr0h	equ	0xFEA
 13601                           fsr0l	equ	0xFE9
 13602                           wreg	equ	0xFE8
 13603                           indf1	equ	0xFE7
 13604                           postdec1	equ	0xFE5
 13605                           fsr1h	equ	0xFE2
 13606                           fsr1l	equ	0xFE1
 13607                           bsr	equ	0xFE0
 13608                           indf2	equ	0xFDF
 13609                           postinc2	equ	0xFDE
 13610                           postdec2	equ	0xFDD
 13611                           plusw2	equ	0xFDB
 13612                           fsr2h	equ	0xFDA
 13613                           fsr2l	equ	0xFD9
 13614                           status	equ	0xFD8
 13615                           pclatu	equ	0xFFB
 13616                           pclath	equ	0xFFA
 13617                           tblptru	equ	0xFF8
 13618                           tblptrh	equ	0xFF7
 13619                           tblptrl	equ	0xFF6
 13620                           tablat	equ	0xFF5
 13621                           prodh	equ	0xFF4
 13622                           prodl	equ	0xFF3
 13623                           intcon	equ	0xFF2
 13624                           postinc0	equ	0xFEE
 13625                           fsr0h	equ	0xFEA
 13626                           fsr0l	equ	0xFE9
 13627                           wreg	equ	0xFE8
 13628                           indf1	equ	0xFE7
 13629                           postdec1	equ	0xFE5
 13630                           fsr1h	equ	0xFE2
 13631                           fsr1l	equ	0xFE1
 13632                           bsr	equ	0xFE0
 13633                           indf2	equ	0xFDF
 13634                           postinc2	equ	0xFDE
 13635                           postdec2	equ	0xFDD
 13636                           plusw2	equ	0xFDB
 13637                           fsr2h	equ	0xFDA
 13638                           fsr2l	equ	0xFD9
 13639                           status	equ	0xFD8
 13640                           
 13641                           	psect	rparam
 13642  0000                     pclatu	equ	0xFFB
 13643                           pclath	equ	0xFFA
 13644                           tblptru	equ	0xFF8
 13645                           tblptrh	equ	0xFF7
 13646                           tblptrl	equ	0xFF6
 13647                           tablat	equ	0xFF5
 13648                           prodh	equ	0xFF4
 13649                           prodl	equ	0xFF3
 13650                           intcon	equ	0xFF2
 13651                           postinc0	equ	0xFEE
 13652                           fsr0h	equ	0xFEA
 13653                           fsr0l	equ	0xFE9
 13654                           wreg	equ	0xFE8
 13655                           indf1	equ	0xFE7
 13656                           postdec1	equ	0xFE5
 13657                           fsr1h	equ	0xFE2
 13658                           fsr1l	equ	0xFE1
 13659                           bsr	equ	0xFE0
 13660                           indf2	equ	0xFDF
 13661                           postinc2	equ	0xFDE
 13662                           postdec2	equ	0xFDD
 13663                           plusw2	equ	0xFDB
 13664                           fsr2h	equ	0xFDA
 13665                           fsr2l	equ	0xFD9
 13666                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    171
    Data        649
    BSS         372
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      95
    BANK0           160     19     147
    BANK1           256      0     221
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 2047
		 -> UEP1(SFR_1[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP1(SFR_1[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    PIR3_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIE3_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIR2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIE2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    IOCB_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ANSELA_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ANSELC_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ACTCON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    OSCCON2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    T3GCON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> CDCBufferOut(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> CDCBufferIn(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1284_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1284_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1284_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1284_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR_1[1]), RAM(DATA[2047]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 38
		 -> sd003(CODE[10]), sd002(CODE[24]), sd001(CODE[38]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR_1[1]), RAM(DATA[2047]), 

    U1STAT_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> USTAT(SFR_1[1]), RAM(DATA[2047]), 

    U1IE_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), UIE(SFR_1[1]), 

    U1CON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UCON(SFR_1[1]), RAM(DATA[2047]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    U1ADDR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UADDR(SFR_1[1]), RAM(DATA[2047]), 

    U1EIE_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEIE(SFR_1[1]), RAM(DATA[2047]), 

    U1CNFG1_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UCFG(SFR_1[1]), RAM(DATA[2047]), 

    sp__memset	PTR void  size(2) Largest target is 2047
		 -> UEP1(SFR_1[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    U1EP1_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEP1(SFR_1[1]), RAM(DATA[2047]), 

    U1EP0_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR_1[1]), RAM(DATA[2047]), 

    U1IR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), UIR(SFR_1[1]), 

    U1EIR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEIR(SFR_1[1]), RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    _getsUSBUSART->_USBTransferOnePacket
    _comm_send_rply->_CDCTxService
    _comm_send_dat->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _InitializeSystem->_tlc5947_pwm_readback
    _tlc5947_pwm_readback->_tlc5947_setChannel
    _tlc5947_setChannel->_gamma_lookup
    _tlc5947_latch->_Delay100TCYx
    _tlc5947_latch->_Delay10TCYx
    _tlc5947_count_channels->___awdiv
    _tlc5947_update->_WriteSPI1
    _USBDeviceInit->_memset

Critical Paths under _HighPriorityISRCode in COMRAM

    _HighPriorityISRCode->i2_tlc5947_update
    i2_tlc5947_update->i2_WriteSPI1
    i2_tlc5947_latch->i2_Delay100TCYx
    i2_tlc5947_latch->i2_Delay10TCYx

Critical Paths under _LowPriorityISRCode in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ProcessIO
    _ProcessIO->_ProcessCDC
    _ProcessCDC->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _HighPriorityISRCode in BANK0

    None.

Critical Paths under _LowPriorityISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriorityISRCode in BANK1

    None.

Critical Paths under _LowPriorityISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriorityISRCode in BANK2

    None.

Critical Paths under _LowPriorityISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriorityISRCode in BANK3

    None.

Critical Paths under _LowPriorityISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriorityISRCode in BANK4

    None.

Critical Paths under _LowPriorityISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriorityISRCode in BANK5

    None.

Critical Paths under _LowPriorityISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriorityISRCode in BANK6

    None.

Critical Paths under _LowPriorityISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriorityISRCode in BANK7

    None.

Critical Paths under _LowPriorityISRCode in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   97590
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            1     1      0   93297
                                             18 BANK0      1     1      0
                     _BlinkUSBStatus
                       _CDCTxService
                         _ProcessCDC
                    _SwitchIsPressed
                     _USBDeviceTasks
                 _tlc5947_setChannel
 ---------------------------------------------------------------------------------
 (2) _SwitchIsPressed                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ProcessCDC                                          15    15      0   50888
                                              3 BANK0     15    15      0
                            _BusyADC
                           _Busy_eep
                         _ConvertADC
                        _Delay10TCYx
                            _ReadADC
                         _Read_b_eep
                     _USBDeviceTasks
                        _Write_b_eep
                      _comm_send_dat
                     _comm_send_rply
                       _getsUSBUSART
             _tlc5947_count_channels
               _tlc5947_pwm_readback
                 _tlc5947_setChannel
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1936
                                             41 COMRAM     6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _comm_send_rply                                       1     1      0    2250
                                             46 COMRAM     1     1      0
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _comm_send_dat                                        2     2      0    2386
                                             46 COMRAM     2     2      0
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     400
                                             34 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         5     5      0    1828
                                             41 COMRAM     5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Write_b_eep                                          4     1      3     246
                                             34 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       1     1      0   39128
                                              2 BANK0      1     1      0
               _USBClearUSBInterrupt
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   22440
                                             60 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               0     0      0   22143
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   0     0      0   16959
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  1     1      0    6346
                                             54 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               3     3      0      46
                                             34 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  2     2      0       0
                                             34 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              6     6      0    5475
                                             54 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5092
                                             46 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            0     0      0    2400
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                 7     3      4    1667
                                             34 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    4     3      1     733
                                             42 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 8     7      1     400
                                             34 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  2     2      0     114
                                             34 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  1     1      0     115
                                             35 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  1     1      0      92
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBClearUSBInterrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Read_b_eep                                           2     0      2     111
                                             34 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             34 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BlinkUSBStatus                                       1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0    4293
                           _OpenSPI1
                      _USBDeviceInit
                     _USBRegisterFix
                       _readDeviceID
             _tlc5947_count_channels
               _tlc5947_pwm_readback
 ---------------------------------------------------------------------------------
 (3) _tlc5947_pwm_readback                                 7     7      0    1884
                                             46 COMRAM     7     7      0
                        _Delay10TCYx
                            ___lwdiv
                      _tlc5947_latch
                 _tlc5947_setChannel
                     _tlc5947_update
 ---------------------------------------------------------------------------------
 (2) _tlc5947_setChannel                                   9     8      1    1363
                                             37 COMRAM     9     8      1
                       _gamma_lookup
 ---------------------------------------------------------------------------------
 (3) _gamma_lookup                                         3     1      2      22
                                             34 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _tlc5947_latch                                        0     0      0      44
                       _Delay100TCYx
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay10TCYx                                          1     1      0      22
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Delay100TCYx                                         1     1      0      22
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     340
                                             34 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tlc5947_count_channels                               3     3      0     707
                                             42 COMRAM     3     3      0
                           _ReadSPI1
                          _WriteSPI1
                            ___awdiv
                     _tlc5947_update
 ---------------------------------------------------------------------------------
 (4) _tlc5947_update                                       1     1      0      69
                                             36 COMRAM     1     1      0
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (5) _WriteSPI1                                            2     2      0      23
                                             34 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     478
                                             34 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _ReadSPI1                                             1     1      0       1
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _readDeviceID                                         5     5      0      70
                                             34 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBRegisterFix                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1366
                                             42 COMRAM     1     1      0
               _USBDisableInterrupts
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1164
                                             34 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _USBDisableInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI1                                             3     1      2     266
                                             34 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _LowPriorityISRCode                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HighPriorityISRCode                                14    14      0     113
                                             20 COMRAM    14    14      0
                    i2_tlc5947_latch
                   i2_tlc5947_update
 ---------------------------------------------------------------------------------
 (14) i2_tlc5947_update                                    1     1      0      69
                                             19 COMRAM     1     1      0
                        i2_WriteSPI1
 ---------------------------------------------------------------------------------
 (15) i2_WriteSPI1                                         2     2      0      23
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_tlc5947_latch                                     0     0      0      44
                     i2_Delay100TCYx
                      i2_Delay10TCYx
 ---------------------------------------------------------------------------------
 (15) i2_Delay10TCYx                                       1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_Delay100TCYx                                      1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _OpenSPI1
     _USBDeviceInit
       _USBDisableInterrupts
       _memset
     _USBRegisterFix
     _readDeviceID
     _tlc5947_count_channels
       _ReadSPI1
       _WriteSPI1
       ___awdiv
       _tlc5947_update
         _WriteSPI1
     _tlc5947_pwm_readback
       _Delay10TCYx
       ___lwdiv
       _tlc5947_latch
         _Delay100TCYx
         _Delay10TCYx
       _tlc5947_setChannel
         _gamma_lookup
       _tlc5947_update
         _WriteSPI1
   _ProcessIO
     _BlinkUSBStatus
     _CDCTxService
       _USBTransferOnePacket
     _ProcessCDC
       _BusyADC
       _Busy_eep
       _ConvertADC
       _Delay10TCYx
       _ReadADC
       _Read_b_eep
       _USBDeviceTasks
         _USBClearUSBInterrupt
         _USBCtrlEPAllowStatusStage
         _USBCtrlEPService
           _USBCtrlTrfInHandler
             _USBCtrlTrfTxService
           _USBCtrlTrfOutHandler
             _USBCtrlTrfRxService
               _USBCtrlEPAllowStatusStage
           _USBCtrlTrfSetupHandler
             _USBCheckStdRequest
               _USBStdFeatureReqHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBStdGetDscHandler
               _USBStdGetStatusHandler
               _USBStdSetCfgHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
                 _memset
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBCtrlEPServiceComplete
               _USBCtrlEPAllowDataStage
                 _USBCtrlTrfTxService
               _USBCtrlEPAllowStatusStage
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
         _USBDeviceInit
           _USBDisableInterrupts
           _memset
         _USBStallHandler
         _USBSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBWakeFromSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _Write_b_eep
       _comm_send_dat
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _comm_send_rply
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _getsUSBUSART
         _USBTransferOnePacket
       _tlc5947_count_channels
         _ReadSPI1
         _WriteSPI1
         ___awdiv
         _tlc5947_update
           _WriteSPI1
       _tlc5947_pwm_readback
         _Delay10TCYx
         ___lwdiv
         _tlc5947_latch
           _Delay100TCYx
           _Delay10TCYx
         _tlc5947_setChannel
           _gamma_lookup
         _tlc5947_update
           _WriteSPI1
       _tlc5947_setChannel
         _gamma_lookup
     _SwitchIsPressed
     _USBDeviceTasks
       _USBClearUSBInterrupt
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
         _USBDisableInterrupts
         _memset
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _tlc5947_setChannel
       _gamma_lookup

 _LowPriorityISRCode (ROOT)

 _HighPriorityISRCode (ROOT)
   i2_tlc5947_latch
     i2_Delay100TCYx
     i2_Delay10TCYx
   i2_tlc5947_update
     i2_WriteSPI1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0     200      23       50.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      DD       7       86.3%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      93       5       91.9%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      5F       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     24F      14        0.0%
DATA                 0      0     44F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Mar 18 18:40:23 2015

                         ReadSPI1@TempVar 0023             __size_of_USBDisableInterrupts 0030  
                            _update_count 0092                                _USB_SD_Ptr 0901  
                __size_of_SwitchIsPressed 002C                            _BlinkUSBStatus 307E  
                            ___awdiv@sign 0028                                        bsr 000FE0  
                           _USBDeviceInit 16A4                             _tlc5947_latch 32CE  
                      __size_of_CDCInitEP 006C                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                            ?_comm_send_dat 0001  
    USER_USB_CALLBACK_EVENT_HANDLER@event 002F      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0031  
                                     l132 172C                                       l212 1E6A  
                                     l150 11BE                                       l161 1280  
                                     l325 2418                                       l430 258A  
             __end_of_USBStdGetDscHandler 1BCC                                       l159 126C  
                                     l248 1CDC                                       l280 2818  
                                     l354 0E82                                       l275 27FE  
                                     l339 1FEA                                       l428 254E  
                                     l348 203C                                       l373 1052  
                                     l278 2890                                       l279 2814  
                                     l721 1F20                                       l482 1860  
                                     l732 30C4                                       l734 30C8  
                                     l718 1F00                                       l815 2D00  
                                     l487 18A8                                       l824 28F6  
                                     l912 2BB6                                       _BDT 000400  
                                     l988 0DBC                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _UIE 000F64                                       _UIR 000F65  
                              _USBSuspend 3180                      __size_of_Write_b_eep 003A  
                    USBStdSetCfgHandler@i 0037                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 10EC  
                          _USBDeviceState 0097                               i2_WriteSPI1 336E  
                 __size_of_USBRegisterFix 0100                     ??_USBCtrlTrfRxService 0023  
                          _tlc5947_update 31E4                            ??_getsUSBUSART 002D  
                USBEnableEndpoint@options 002B                              __CFG_LVP$OFF 000000  
                __size_ofi2_tlc5947_latch 002A                           ?_comm_send_rply 0001  
                                    l1130 2FEE                                      l1131 2FF0  
                                    l1109 316E                                      l1134 300A  
                                    l1135 3024                                      l1136 300C  
                                    l1128 2FEA                                      l1137 3010  
                                    l1145 33DA                                      l1162 3364  
                                    l1082 3474                                      l4004 29A2  
                                    l4024 20FA                                      l4008 29BC  
                                    l5010 28C4                                      l4106 2878  
                                    l4050 2176                                      l4034 212E  
                                    l4210 1E14                                      l5020 28E2  
                                    l4140 0F36                                      l4124 0E7A  
                                    l4028 2102                                      l4300 1FFA  
              USBConfigureEndpoint@handle 0029                                      l4150 0F5E  
                                    l4070 1B4E                                      l4062 1ACA  
                                    l4310 2012                                      l4302 2000  
                                    l4222 1E80                                      l4230 1E94  
                                    l4206 1E0A                                      l5024 28EE  
                                    l4160 0FB2                                      l4152 0F80  
                                    l4144 0F3E                                      l4080 1BAA  
                                    l4072 1B54                                      l4312 201A  
                                    l5200 09DA                                      l5026 28F2  
                                    l4402 23DE                                      l4162 0FD0  
                                    l4146 0F42                                      l4138 0EF8  
                                    l4058 1AB8                                      l4090 2806  
                                    l4314 2020                                      l5050 3056  
                                    l4084 1BB0                                      l4324 2056  
                                    l4334 3234                                      l4430 340E  
                                    l4510 31D4                                      l4414 2424  
                                    l4254 1BF0                                      l4166 0FEA  
                                    l4078 1BA4                                      l5070 2BD6  
                                    l5230 0AA4                                      l5214 0A54  
                                    l4408 23FE                                      l4280 1C9E  
                                    l4264 1C26                                      l3800 30DC  
                                    l4192 10B6                                      l4176 1030  
                                    l4096 2836                                      l4328 2074  
                                    l4520 313C                                      l4600 1848  
                                    l5080 2C0C                                      l5056 3074  
                                    l5048 3050                                      l5304 0C1E  
                                    l5240 0ACE                                      l5162 3014  
                                    l5170 1D76                                      l5146 2DE6  
                                    l4434 3420                                      l4258 1C00  
                                    l4194 10C4                                      l4186 106E  
                                    l4178 103E                                      l4098 2858  
                                    l4522 3140                                      l4610 186A  
                                    l5074 2BF6                                      l5402 0DC2  
                                    l5330 0C76                                      l5306 0C26  
                                    l5250 0AF8                                      l5242 0AD8  
                                    l5226 0A94                                      l5410 0DDA  
                                    l5218 0A72                                      l1699 2F74  
                                    l4460 1726                                      l4276 1C84  
                                    l3804 30EC                                      l3820 25FA  
                                    l3812 25CE                                      l3900 2E68  
                                    l4188 108C                                      l4604 1854  
                                    l5076 2BFA                                      l5404 0DCA  
                                    l5316 0C46                                      l5412 0E3C  
                                    l5158 2FF4                                      l4702 1552  
                                    l5502 1A60                                      l4390 239E  
                                    l4374 2E5A                                      l4366 2E10  
                                    l3814 25E8                                      l3902 2E6E  
                                    l4630 18D2                                      l4622 18AE  
                                    l5086 2C2A                                      l5078 2C06  
                                    l5406 0DD2                                      l5318 0C4E  
                                    l5270 0B74                                      l5246 0AEE  
                                    l5414 0E44                                      l5182 32C8  
                                    l4480 1776                                      l4456 170C  
                                    l4712 1590                                      l4704 1558  
                                    l5504 1A66                                      l3832 2656  
                                    l4544 2FC4                                      l4640 1902  
                                    l4616 1896                                      l5336 0C9C  
                                    l5328 0C6E                                      l5264 0B52  
                                    l5416 0E4C                                      l4490 17DA  
                                    l4722 160E                                      l4714 15D4  
                                    l3930 21C6                                      l3834 266C  
                                    l3842 2504                                      l3906 2E74  
                                    l4298 1FF4                                      l4562 22D4  
                                    l4546 2FD2                                      l4650 1930  
                                    l5346 0CC6                                      l5338 0CA4  
                                    l5274 0BAA                                      l5282 0BCA  
                                    l5266 0B5A                                      l5258 0B3E  
                                    l4484 177E                                      l4468 1740  
                                    l4476 1758                                      l4732 1668  
                                    l4724 1640                                      l5460 19F0  
                                    l3940 21F2                                      l4388 2396  
                                    l3860 2542                                      l3852 252C  
                                    l4580 2342                                      l4820 1114  
                                    l5380 0D54                                      l5372 0D32  
                                    l5364 0D12                                      l5356 0CF2  
                                    l5348 0CCE                                      l5284 0BD2  
                                    l4806 2F68                                      l4734 16A0  
                                    l5462 19F6                                      l3950 2236  
                                    l3926 21BA                                      l3790 2A52  
                                    l3846 2516                                      l4574 2322  
                                    l4566 22DC                                      l4830 1162  
                                    l4638 18F6                                      l5382 0D5C  
                                    l5374 0D3A                                      l5366 0D1A  
                                    l5358 0CFA                                      l5294 0BFC  
                                    l4752 2A9C                                      l4680 31EA  
                                    l5456 19B0                                      l3792 2A6C  
                                    l4656 1942                                      l4648 1926  
                                    l5296 0C04                                      l5560 1FA2  
                                    l5474 1A20                                      l4578 233C  
                                    l4930 12D0                                      l4914 1276  
                                    l4906 125E                                      l4826 1152  
                                    l4834 1178                                      l4658 1948  
                                    l3892 327E                                      l4764 2AC4  
                                    l4780 2B00                                      l4684 3204  
                                    l5476 1A2A                                      l3948 222A  
                                    l3868 2574                                      l3876 2592  
                                    l5732 2E8C                                      l4940 1308  
                                    l5572 1FCC                                      l5556 1F2E  
                                    l5548 1F04                                      l4766 2ACE  
                                    l4758 2AAE                                      l4694 152E  
                                    l3958 226E                                      l3974 2472  
                                    l5734 2EBC                                      l4934 12E0  
                                    l4854 11B4                                      l4846 11A6  
                                    l4598 183E                                      l4950 2766  
                                    l3896 3290                                      l4784 2B10  
                                    l4776 2AF4                                      l4768 2AD6  
                                    l4936 1300                                      l4928 12B8  
                                    l5568 1FBC                                      l4794 2F38  
                                    l4882 1206                                      l4962 27C2  
                                    l5690 33EE                                      l4796 2F42  
                                    l4892 1224                                      l4876 11E0  
                                    l4868 11D2                                      l4956 2794  
                                    l4948 275C                                      l4982 2CE0  
                                    l4798 2F4A                                      l4958 279A  
                                    l4966 27EA                                      l5686 33EA  
                                    l4888 1216                                      l4994 2D08  
                                    l4978 2CD8                                      l4898 1230  
                                    _DDRA 000F92                                      _DDRB 000F93  
                                    _DDRC 000F94                                      _DDRD 000F95  
                                    _DDRE 000F96                                      _LATC 000F8B  
                                    u4030 2752                                      u2610 221A  
                                    u4220 346C                                      u2630 225E  
                                    u4038 2754                                      u3440 1834  
                                    _PIE2 000FA0                                      u2617 2210  
                                    u4401 0A3E                                      u4330 30A6  
                                    u4340 30B8                                      u4332 30A8  
                                    u2637 2254                                      u4342 30BA  
                                    u3615 15B0                                      u4255 317A  
                                    u2760 1B1C                                      u4256 317C  
                                    u3448 1836                                      u2770 1B4A  
                                    u4290 32AA                                      u4275 2DEE  
                                    u3635 1600                                      u2790 1B9A  
                                    u2767 1B12                                      u4296 32AC  
                                    u2777 1B40                                      u2797 1B90  
                   ??_USBCtrlTrfTxService 0023                                      u4887 3410  
                                    _UCFG 000F62                                      u4897 3422  
                                    _UEP0 000F6A                                      _UEP1 000F6B  
                                    _UEIE 000F66                                      _UEIR 000F67  
                                    _UCON 000F60                           _CDCDataInHandle 0088  
  USBStdFeatureReqHandler@current_ep_data 003A                                      _pDst 008C  
                                    _main 33E4                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 0078                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 08AA                             __CFG_IESO$OFF 000000  
                           __CFG_ICPRT$ON 000000                     ?_USBClearUSBInterrupt 0001  
              __end_of_USBCheckStdRequest 20BA                    ??_USBCtrlTrfOutHandler 0025  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000010  
                         __end_of_BusyADC 3472                 ??_USBStdFeatureReqHandler 0037  
                  __end_of_BlinkUSBStatus 30CA                           __end_of_ReadADC 3464  
                             _Delay10TCYx 340C                  ??_USBStdGetStatusHandler 0023  
                          ?_USBDeviceInit 0001                            ?_tlc5947_latch 0001  
                                   ?_main 0001                             _USB_In_Buffer 0200  
                         __end_of___awdiv 2B1C                                     _EEADR 000FA9  
                   __size_of_Delay100TCYx 0012         __size_of_USBCtrlEPServiceComplete 00FC  
                         ___awdiv@divisor 0025                    __end_of_USBDeviceTasks 130E  
                                   _T2CON 000FBA                                     _T3CON 000FB1  
               ?_USBCtrlEPServiceComplete 0001                           __end_of___lwdiv 2F7E  
                                   i1l686 0864                                     i2l682 2B70  
                                   _UADDR 000F63                           ___awdiv@counter 0027  
                       i2Delay10TCYx@unit 0012                            __pidataBIGRAMl 130E  
                                   _TMR3H 000FB3                                     _TMR3L 000FB2  
                                   _TRISC 000F94                                     _USTAT 000F61  
                  __end_of_tlc5947_update 3214                             __CFG_WRT0$OFF 000000  
      __size_of_USBCtrlEPAllowStatusStage 00C8                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000           __end_of_USBCtrlEPAllowDataStage 29F0  
                                   _sd000 09A8                                     _sd001 094E  
                                   _sd002 0974                                     _sd003 099E  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            Read_b_eep@badd 0023  
                          __CFG_EBTRB$OFF 000000                    Write_b_eep@GIE_BIT_VAL 0026  
                __end_ofi2_tlc5947_update 3274                                _ConvertADC 347A  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 2D9E                                     status 000FD8  
                          __CFG_T3CMX$RB5 000000                           putUSBUSART@data 0023  
                    __end_of_gamma_lookup 33CE              __size_of_USBStdSetCfgHandler 00E2  
                         __initialization 2678                           ?_BlinkUSBStatus 0001  
                            _Delay100TCYx 341E                              __end_of_main 33F8  
                   _control_signal_bitmap 009A                          __end_of_ReadSPI1 33E4  
                              _Read_b_eep 33F8                            _pattern_number 009E  
                           ?_readDeviceID 0001                          __end_of_Busy_eep 347A  
                         ??_comm_send_dat 002F                   __size_ofi2_Delay100TCYx 0012  
               __size_of_USBCtrlEPService 00DC               __size_of_LowPriorityISRCode 0092  
                        __end_of_OpenSPI1 302C                                    ??_main 003E  
               __size_of_InitializeSystem 013E                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                         ??_SwitchIsPressed 0023  
                             ?_USBSuspend 0001                              _CDCBufferOut 0140  
                         ?_tlc5947_update 0001                            __CFG_SDOMX$RC7 000000  
                         __CFG_CCP2MX$RC1 000000                              _cdc_mem_type 0099  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 0044  
                       _getsUSBUSART$1647 002E                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _EEDATA 000FA8  
                                  _EECON2 000FA7                          ___awdiv@dividend 0023  
                         getsUSBUSART@len 002C                                    _U1IE_R 00D5  
                                  _IOCB_R 00BB                     __size_of_CDCTxService 0156  
                                  _U1IR_R 00D7                                    i2l1162 3386  
                          __CFG_WDTEN$OFF 000000                                    i2l5432 3432  
                                  _PIE2_R 00BF                                    i2l5428 3444  
                                  _PIE3_R 00C1                                    i2l5582 3264  
                                  i2l5578 324A                                    i2l5682 2B6C  
                                  _TABLAT 000FF5                                    _PIR2_R 00C3  
                                  _PIR3_R 00C5                                    _OSCCON 000FD3  
                           CDCTxService@i 002D                                 ??_BusyADC 0023  
                               ??_ReadADC 0025                         ??i2_tlc5947_latch 0013  
                  ??_USBClearUSBInterrupt 0023                         _shortPacketStatus 0055  
                          __CFG_XINST$OFF 000000                          OpenSPI1@bus_mode 0023  
                         USBDeviceTasks@i 00E0               USBStdFeatureReqHandler@pUEP 0038  
                USBTransferOnePacket@data 0024                USBCtrlTrfInHandler@lastDTS 0024  
                         ??_USBDeviceInit 002B                           ??_tlc5947_latch 0024  
                            ?_putUSBUSART 0023                            ??_readDeviceID 0023  
                               ??___awdiv 0027                            __CFG_STVREN$ON 000000  
                   __end_ofi2_Delay10TCYx 3442                      __end_of_getsUSBUSART 27F0  
                               ??___lwdiv 0027                         _USBEnableEndpoint 30CA  
         __size_of_USBStdGetStatusHandler 00B6                                    _memset 3274  
                                  clear_0 267E                                    clear_1 268A  
                                  clear_2 2696                                    clear_3 26A2  
                        ___awdiv@quotient 0029                                _ProcessCDC 09AE  
                              ProcessIO@x 00F0                        ?_USBEnableEndpoint 002B  
           __size_of_USBTransferOnePacket 00C0                              __pdataCOMRAM 005D  
                      __size_of_ProcessIO 00EC                              _CDCTxService 1814  
                            _txmiss_count 0090                              __mediumconst 0000  
                         tlc5947_update@x 0025                            _USBRegisterFix 1CEE  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 002C  
                 ?_tlc5947_count_channels 0001                               _CtrlTrfData 000438  
                             ?_ConvertADC 0001                      _controlTransferState 0054  
                    __CFG_LS48MHZ$SYS48X8 000000                __end_of_tlc5947_setChannel 16A4  
                              __accesstop 0060                   __end_of__initialization 272A  
                      __size_of_WriteSPI1 0022                           __CFG_PBADEN$OFF 000000  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0058  
                     __size_of_USBSuspend 0034              __size_of_HighPriorityISRCode 23A2  
            __end_of_tlc5947_pwm_readback 2954                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 310A                          __CFG_nPWRTEN$OFF 000000  
                           __end_of_sd000 09AC                             __end_of_sd001 0974  
                           __end_of_sd002 098C                             __end_of_sd003 09A8  
                            __pidataBANK0 3322                              __pidataBANK1 2EC4  
        __size_of_USBCtrlEPAllowDataStage 009C                               ?_Read_b_eep 0023  
           __size_of_USBConfigureEndpoint 0096               __end_of_USBCtrlTrfInHandler 242C  
                         __CFG_PCLKEN$OFF 000000                   ProcessCDC@boot_request0 00EB  
                 ProcessCDC@boot_request1 00EC                    __end_of_USBRegisterFix 1DEE  
                          __CFG_nLPBOR$ON 000000                          ??_comm_send_rply 002F  
                       _CDCTxService$1695 002B                                _cdc_notice 0060  
          __end_of_tlc5947_count_channels 2D32                                _cdc_rx_len 0051  
                              _cdc_tx_len 0053              __end_of_USBDisableInterrupts 3244  
                            ?i2_WriteSPI1 0001                  ??_USBCtrlTrfSetupHandler 003D  
                          _USB_Out_Buffer 0240                    _USBStdGetStatusHandler 27F0  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                          WriteSPI1@TempVar 0023  
                               ?_ReadSPI1 0001                     __size_of_gamma_lookup 001E  
                               ?_Busy_eep 0001                                 ?_OpenSPI1 0023  
             __size_of_USBWakeFromSuspend 003C                               _pBDTEntryIn 003E  
                       __end_of_ProcessIO 1FD6          __end_of_USBCtrlEPServiceComplete 1EEA  
             __size_of_USBCheckCDCRequest 00C4                         __CFG_PLLSEL$PLL3X 000000  
                    USBCtrlTrfRxService@i 0023                              ?_Delay10TCYx 0001  
                          i2_Delay100TCYx 3442                                   ?_memset 0023  
                              _device_dsc 098C                       __size_of_ConvertADC 0004  
                             ?_ProcessCDC 0001                          _USBCtrlEPService 227A  
                           ??_Write_b_eep 0026                                _ep_data_in 007C  
                       __end_of_WriteSPI1 336E                          _InitializeSystem 196A  
                                 _U1EP0_R 005D                                   _U1EP1_R 00D3  
                                 _U1EIE_R 00CF               __end_of_USBCtrlTrfRxService 1CEE  
                                 _U1EIR_R 00D1                                   _U1CON_R 00CD  
                      _USBCheckStdRequest 1FD6                         _configDescriptor1 090B  
                         ?_USBRegisterFix 0001                       i2WriteSPI1@data_out 0013  
                  _tlc_pwm_readback_value 004A               __end_of_USBCtrlTrfTxService 227A  
                     _USBStdSetCfgHandler 20BA                            comm_send_dat@i 002F  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                            _gamma_lookup 33B0                                   _TBLPTRU 000FF8  
                                 _OSCTUNE 000F9B                                   _SSP1BUF 000FC9  
                                 _SSPCON1 000FC6                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 0124                                   _UIEbits 000F64  
                                 _SSPSTAT 000FC7                      __end_of_readDeviceID 2E02  
                                 _UIRbits 000F65                         ?i2_tlc5947_update 0001  
                     __size_of_Read_b_eep 0014                                ??_ReadSPI1 0023  
                           _cdc_trf_state 0052                                ??_Busy_eep 0023  
                      ??i2_tlc5947_update 0014                                   _BusyADC 3464  
                        ??_BlinkUSBStatus 0023                                   _ReadADC 3454  
                              ??_OpenSPI1 0025                                   _pCDCDst 0082  
                                 _pCDCSrc 0085                     __size_of_getsUSBUSART 00BC  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 2D32                                   __Lparam 0000  
                         _SwitchIsPressed 32A2                __size_of_USBEnableEndpoint 0040  
                  __end_ofi2_Delay100TCYx 3454                         _green_led_counter 009C  
                    ??_USBCheckStdRequest 003D             __size_of_USBCtrlTrfOutHandler 0062  
                                 ___awdiv 2A86                          ??_USBDeviceTasks 003E  
                                 ___lwdiv 2F22                         ??_USBStallHandler 0023  
                            __psmallconst 0900                      __size_of_putUSBUSART 0020  
                                 __pcinit 2678                        getsUSBUSART@buffer 002A  
                        ??_tlc5947_update 0025                           __size_of_memset 002E  
                         Delay10TCYx@unit 0023                 __end_of_configDescriptor1 094E  
                                 __ramtop 0800                                 _U1CNFG1_R 00CB  
                                 __ptext0 33E4                                   __ptext1 1EEA  
                                 __ptext2 32A2                                   __ptext3 09AE  
                                 __ptext4 2734                                   __ptext5 302C  
                                 __ptext6 2BAA                                   __ptext7 3390  
                                 __ptext8 1814                                   __ptext9 3146  
                                 _inPipes 0056               _USBDeferOUTDataStagePackets 004D  
                            ??_USBSuspend 0037                                   _old_sw2 009D  
                         i2_tlc5947_latch 32F8                       __end_of_Write_b_eep 3180  
                          ProcessCDC@csum 00E5                        __end_of_USB_CD_Ptr 090B  
                    _tlc5947_pwm_readback 28A6           __size_of_USBCtrlTrfSetupHandler 0088  
                          __pintcode_body 2B1C                      end_of_initialization 272A  
                            _getsUSBUSART 2734                        __end_of_USB_SD_Ptr 0909  
                           __pdataBIGRAMl 0580                       _pBDTEntryEP0OutNext 0048  
                                 memset@c 0025                                   memset@n 0027  
                                 memset@p 0029                             __Lmediumconst 0000  
                                 int_func 2B1C                         OpenSPI1@smp_phase 0024  
                     __size_of_ProcessCDC 04A8           _dummy_encapsulated_cmd_response 00A3  
                ?_USBStdFeatureReqHandler 0001                     ??_USBStdSetCfgHandler 0037  
                               _OSCCON2_R 00BD                                ?_CDCInitEP 0001  
                        comm_send_dat@len 0030                        __end_of_USBSuspend 31B4  
                 _USBCtrlEPAllowDataStage 2954                      _USBDisableInterrupts 3214  
                              _tlc_memory 0180                                   postdec1 000FE5  
                                 postdec2 000FDD                                _tlc_nbytes 005F  
                         ?i2_Delay100TCYx 0001                                   postinc0 000FEE  
                                 postinc2 000FDE                __end_of_LowPriorityISRCode 08AA  
                       OpenSPI1@sync_mode 0025                  _USBCtrlEPServiceComplete 1DEE  
              _USBStatusStageEnabledFlag1 004F                _USBStatusStageEnabledFlag2 0050  
                      USBEnableEndpoint@p 002C                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                     __end_of_comm_send_dat 2C34  
                               _PORTCbits 000F82                          comm_send_rply@cc 002F  
          tlc5947_count_channels@old_data 002B                       _HighPriorityISRCode 0808  
                               _TRISAbits 000F92                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                        _BothEP0OutUOWNsSet 0094  
                   ?_tlc5947_pwm_readback 0001                 USBConfigureEndpoint@EPNum 0028  
                            ??_ConvertADC 0023                ?_USBCtrlEPAllowStatusStage 0001  
                    __size_ofi2_WriteSPI1 0022       USER_USB_CALLBACK_EVENT_HANDLER@size 0033  
                               _USTATcopy 00B4                   __end_of_SwitchIsPressed 32CE  
            __end_of_USBTransferOnePacket 2678                      ?_HighPriorityISRCode 0001  
                       putUSBUSART@length 0025             __size_of_USBClearUSBInterrupt 0030  
                   ?_USBDisableInterrupts 0001                          Delay100TCYx@unit 0023  
                  _USBCtrlTrfSetupHandler 2C34                        _tlc5947_setChannel 150E  
                            ??_Read_b_eep 0025                     __end_of_USBDeviceInit 1814  
                   __end_of_tlc5947_latch 32F8                         _readDeviceID$2794 0027  
                    __size_of_Delay10TCYx 0012                             __pidataCOMRAM 347E  
                 __end_ofi2_tlc5947_latch 3322                        __end_of_ConvertADC 347E  
                             _Write_b_eep 3146                 tlc5947_count_channels@pos 002D  
                          __end_of_memset 32A2                       ?_tlc5947_setChannel 0026  
                       _USBBusIsSuspended 0096                     __size_of_readDeviceID 0064  
                     start_initialization 2678                   ?_USBStdGetStatusHandler 0001  
           USBCtrlTrfRxService@byteToRead 0024                    tlc5947_setChannel@mpos 002E  
                             _cdc_data_rx 000540                               _cdc_data_tx 000500  
            __end_of_USBConfigureEndpoint 2A86           __end_of_USBStdFeatureReqHandler 10EC  
                  __size_ofi2_Delay10TCYx 0012         __end_of_USBCtrlEPAllowStatusStage 24F4  
                             _CDCBufferIn 0100                  __end_of_USBCtrlEPService 2356  
                      __end_of_Read_b_eep 340C                      ??_tlc5947_setChannel 0027  
                __end_of_InitializeSystem 1AA8                         __size_of_ReadSPI1 0016  
               ??_USBCtrlEPAllowDataStage 0024                         __size_of_Busy_eep 0008  
                   ??_HighPriorityISRCode 0015                               ??_CDCInitEP 002F  
                          USBDeviceInit@i 002B                    _pBDTEntryEP0OutCurrent 0046  
                       __size_of_OpenSPI1 0056                   USBTransferOnePacket@dir 0023  
                 USBTransferOnePacket@len 0026                       _USBStdGetDscHandler 1AA8  
                               _ProcessIO 1EEA                          ??_USBRegisterFix 0023  
                             __pdataBANK0 00B5                               __pdataBANK1 0180  
                            _readDeviceID 2D9E                                  ??_memset 0029  
                            ??_ProcessCDC 00E1                    _USBActiveConfiguration 005C  
          __end_of_USBStdGetStatusHandler 28A6                               __pbssCOMRAM 003E  
                  ??_tlc5947_pwm_readback 002F                             __pcstackBANK0 00DE  
            __size_of_USBCtrlTrfInHandler 00D6                                 _WriteSPI1 334C  
                    ?_USBStdGetDscHandler 0001                __end_of_USBWakeFromSuspend 3146  
                        ?_SwitchIsPressed 0001                           _USBStallHandler 2F7E  
                            _pBDTEntryOut 0072                                  ?_BusyADC 0001  
                                ?_ReadADC 0023                __end_of_USBCheckCDCRequest 25B8  
                      __end_of_ProcessCDC 0E56                                 __pnvBANK0 00F1  
                       WriteSPI1@data_out 0024                    ??_USBDisableInterrupts 0023  
                      i2WriteSPI1@TempVar 0012                          ___lwdiv@dividend 0023  
                           ?_Delay100TCYx 0001                                 __pintcode 0808  
                               _pic18_rev 009F                                  ?___awdiv 0023  
                              ?_ProcessIO 0001                 __size_ofi2_tlc5947_update 0030  
                                ?___lwdiv 0023                             i2_Delay10TCYx 3430  
                             __pintcodelo 0818                               _gamma_table 0580  
                        ?i2_tlc5947_latch 0001                                 _led_count 008A  
                             _pic18_devid 00F1                      _USBTransferOnePacket 25B8  
                             __smallconst 0900                tlc5947_count_channels@data 002C  
                                _ACTCON_R 00B5                                ?_WriteSPI1 0001  
            __end_of_USBCtrlTrfOutHandler 2E64                     ??_USBStdGetDscHandler 0023  
                             _ep_data_out 007F                                  _ANSELA_R 00B7  
                                _ANSELC_R 00B9                          ___lwdiv@quotient 0027  
                                _DDRAbits 000F92                                  _DDRBbits 000F93  
                                _U1ADDR_R 00C9              __size_of_USBCtrlTrfRxService 0122  
           USBConfigureEndpoint@direction 0023                                  _T3GCON_R 00C7  
            __size_of_USBCtrlTrfTxService 00DE                             ProcessCDC@cmd 00EA  
                           ProcessCDC@len 00EF                   __size_of_comm_send_rply 0052  
                                _U1STAT_R 00D9                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                ??_USBCtrlEPServiceComplete 0024  
                        ??i2_Delay100TCYx 0012                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                               _tmr3h_cal 00A1                                 _tmr3l_cal 00A2  
                          ??_Delay100TCYx 0023                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u490_47 3434  
                                i2u491_47 3446                 USBCtrlEPService@setup_cnt 003D  
                           gamma_lookup@c 0025                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0026                          __CFG_WDTPS$32768 000000  
              _USBDeferINDataStagePackets 004C                                  _SSP1CON1 000FC6  
             __size_of_USBCheckStdRequest 00E4                            ?i2_Delay10TCYx 0001  
                                _SSP1STAT 000FC7                                  _UCONbits 000F60  
                    _USBConfigureEndpoint 29F0                  ??_tlc5947_count_channels 002B  
                           _tlc_nchannels 00DD          __size_of_USBStdFeatureReqHandler 0296  
                              _ADCON0bits 000FC2                     ?_USBTransferOnePacket 0023  
                               _pwr_delay 008E                           Write_b_eep@badd 0023  
                         Write_b_eep@bdat 0025                             ?_CDCTxService 0001  
                            _RemoteWakeup 0095                         __CFG_CFGPLLEN$OFF 000000  
                      _LowPriorityISRCode 0818                   __end_of_USBStallHandler 2FD6  
                               copy_data0 26BC                                 copy_data1 26E0  
                               copy_data2 2700               ??_USBCtrlEPAllowStatusStage 0023  
             __end_of_USBStdSetCfgHandler 219C                                  _ReadSPI1 33CE  
                   tlc5947_setChannel@col 002B                     tlc5947_setChannel@val 0026  
                   tlc5947_setChannel@pos 002D                       ?_LowPriorityISRCode 0001  
                                _Busy_eep 3472                        __end_of_device_dsc 099E  
                              _EECON1bits 000FA6                                  _OpenSPI1 2FD6  
                        __size_of_BusyADC 000E                   ?_USBCtrlTrfSetupHandler 0001  
                        __size_of_ReadADC 0010                   USBStdGetStatusHandler@p 0024  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0027                        __CFG_BOREN$SBORDIS 000000  
                                _SetupPkt 000430                               ??_ProcessIO 003E  
                   ?_USBConfigureEndpoint 0023                          __size_of___awdiv 0096  
                 __size_of_BlinkUSBStatus 004C                          __size_of___lwdiv 005C  
                    ??_LowPriorityISRCode 0001                              ?_Write_b_eep 0023  
                     __end_of_putUSBUSART 33B0                               _line_coding 00AB  
                          ??_CDCTxService 002A              __end_of_USBClearUSBInterrupt 31E4  
                           ??i2_WriteSPI1 0012                   __size_of_USBDeviceTasks 0222  
                             ??_WriteSPI1 0023                           ___lwdiv@divisor 0025  
                         ___lwdiv@counter 0029                                  __ptext10 10EC  
                                __ptext11 310A                                  __ptext20 27F0  
                                __ptext12 3180                                  __ptext21 1AA8  
                                __ptext13 2F7E                                  __ptext30 1BCC  
                                __ptext22 0E56                                  __ptext14 227A  
                                __ptext31 242C                                  __ptext23 2E64  
                                __ptext15 2C34                                  __ptext40 307E  
                                __ptext32 2356                                  __ptext24 24F4  
                                __ptext16 1DEE                                  __ptext41 196A  
                                __ptext33 219C                                  __ptext25 2D32  
                                __ptext17 2954                                  __ptext50 31E4  
                                __ptext42 28A6                                  __ptext34 31B4  
                                __ptext26 25B8                                  __ptext18 1FD6  
                                __ptext51 334C                                  __ptext43 150E  
                                __ptext35 33F8                                  __ptext27 30CA  
                                __ptext19 20BA                                  __ptext52 2A86  
                                __ptext44 33B0                                  __ptext36 3454  
                                __ptext28 29F0                                  __ptext53 33CE  
                                __ptext45 32CE                                  __ptext37 347A  
                                __ptext29 2E02                                  __ptext62 3244  
                                __ptext54 2D9E                                  __ptext46 340C  
                                __ptext38 3472                                  __ptext63 336E  
                                __ptext55 1CEE                                  __ptext47 341E  
                                __ptext39 3464                                  __ptext64 32F8  
                                __ptext56 16A4                                  __ptext48 2F22  
                                __ptext65 3430                                  __ptext57 3274  
                                __ptext49 2CBC                                  __ptext66 3442  
                                __ptext58 3214                                  __ptext59 2FD6  
                            _SSP1CON1bits 000FC6                   __size_of_tlc5947_update 0030  
          __end_of_USBCtrlTrfSetupHandler 2CBC                             __size_of_main 0014  
                       ?_USBCtrlEPService 0001                    __size_of_comm_send_dat 008A  
                       ?_InitializeSystem 0001                              ProcessCDC@_c 00E6  
                            ProcessCDC@_x 00EE                              ProcessCDC@_y 00E8  
                      ??_USBCtrlEPService 00DE                         _tcl5947_testbyte0 00DB  
                       _tcl5947_testbyte1 00DC                       _USBCtrlTrfInHandler 2356  
                      ??_InitializeSystem 0036                           ??i2_Delay10TCYx 0012  
                           ??_Delay10TCYx 0023                                  _outPipes 006A  
                    _USBCtrlTrfOutHandler 2E02                          i2_tlc5947_update 3244  
               _USBCtrlEPAllowStatusStage 242C                              _SSP1STATbits 000FC7  
                  ??_USBTransferOnePacket 0027           __size_of_tlc5947_count_channels 0076  
                      i2Delay100TCYx@unit 0012                      tlc5947_setChannel@ch 002A  
               _USBDeferStatusStagePacket 004E                  CDCTxService@byte_to_send 002E  
                              _INTCONbits 000FF2                     tlc5947_pwm_readback@i 0035  
                    ?_USBCtrlTrfInHandler 0001                             ?_gamma_lookup 0023  
           USBCtrlTrfTxService@byteToSend 0023                      __end_of_Delay100TCYx 3430  
                                memset@p1 0023                        readDeviceID@devID1 0025  
                      readDeviceID@devID2 0026                          ?_USBStallHandler 0001  
                       i2tlc5947_update@x 0014                  USBStdFeatureReqHandler@p 003B  
                                intlevel1 0000                                  intlevel2 0000  
             __end_of_HighPriorityISRCode 2BAA                    __size_of_USBDeviceInit 0170  
                          _comm_send_rply 302C                    __size_of_tlc5947_latch 002A  
                     __end_ofi2_WriteSPI1 3390   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 2EC4  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0060         ??_USER_USB_CALLBACK_EVENT_HANDLER 0035  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 002F           _USER_USB_CALLBACK_EVENT_HANDLER 2E64  
             __size_of_tlc5947_setChannel 0196                    ??_USBConfigureEndpoint 0024  
                   ?_USBCtrlTrfOutHandler 0001                               _putUSBUSART 3390  
                    __CFG_CPUDIV$NOCLKDIV 000000                       _USBCtrlTrfRxService 1BCC  
                      _USBWakeFromSuspend 310A                   _USBStdFeatureReqHandler 0E56  
                             _tlc_request 00A0                        _USBCheckCDCRequest 24F4  
                     _USBCtrlTrfTxService 219C                       __end_of_Delay10TCYx 341E  
                           _comm_send_dat 2BAA                       ?_USBWakeFromSuspend 0001  
                          ??_gamma_lookup 0025                     ??_USBCtrlTrfInHandler 0024  
                   _USBAlternateInterface 00B2                              _test_pattern 01C8  
                      ProcessCDC@checksum 00E7                       ?_USBCheckCDCRequest 0001  
                     USBEnableEndpoint@ep 002E                           _endpoint_number 009B  
           __size_of_tlc5947_pwm_readback 00AE                      ?_USBCtrlTrfRxService 0001  
                  __end_of_comm_send_rply 307E                             ?_getsUSBUSART 002A  
                      __CFG_FOSC$INTOSCIO 000000                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001                    _tlc5947_count_channels 2CBC  
            _USBStatusStageTimeoutCounter 0098                      ??_USBWakeFromSuspend 0037  
              USBTransferOnePacket@handle 0028                      __end_of_CDCTxService 196A  
                    ??_USBCheckCDCRequest 0023                                _USB_CD_Ptr 0909  
                      ProcessCDC@numBytes 00ED                      _USBClearUSBInterrupt 31B4  
