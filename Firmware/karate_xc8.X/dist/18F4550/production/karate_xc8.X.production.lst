

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jun 25 21:01:00 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1
     7                           	psect	idataBIGRAMl,global,class=CODE,delta=1
     8                           	psect	idataBANK0,global,class=CODE,delta=1
     9                           	psect	idataBANK1,global,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
    11                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBIGRAMl,global,class=BIGRAM,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    93                           	dabs	1,0x400,48,_BDT
    94                           	dabs	1,0x500,64,_cdc_data_tx
    95                           	dabs	1,0x438,8,_CtrlTrfData
    96                           	dabs	1,0x430,8,_SetupPkt
    97                           	dabs	1,0x540,64,_cdc_data_rx
    98  0000                     
    99                           	psect	eeprom_data
   100  F00000  34 00 00 00 00 00 00 00 	db	52,0,0,0,0,0,0,0	;# 
   101  0000                     
   102                           	psect	idataCOMRAM
   103  003442                     __pidataCOMRAM:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _U1EP0_R
   107  003442  70                 	db	112
   108  003443  0F                 	db	15
   109                           
   110                           ;initializer for _tlc_nbytes
   111  003444  48                 	db	72
   112                           
   113                           	psect	idataBIGRAMl
   114  00130E                     __pidataBIGRAMl:
   115                           	opt stack 0
   116                           
   117                           ;initializer for _gamma_table
   118  00130E  0000               	dw	0
   119  001310  0000               	dw	0
   120  001312  0000               	dw	0
   121  001314  0000               	dw	0
   122  001316  0000               	dw	0
   123  001318  0000               	dw	0
   124  00131A  0000               	dw	0
   125  00131C  0001               	dw	1
   126  00131E  0001               	dw	1
   127  001320  0001               	dw	1
   128  001322  0001               	dw	1
   129  001324  0002               	dw	2
   130  001326  0002               	dw	2
   131  001328  0002               	dw	2
   132  00132A  0003               	dw	3
   133  00132C  0003               	dw	3
   134  00132E  0004               	dw	4
   135  001330  0005               	dw	5
   136  001332  0005               	dw	5
   137  001334  0006               	dw	6
   138  001336  0007               	dw	7
   139  001338  0008               	dw	8
   140  00133A  0009               	dw	9
   141  00133C  000A               	dw	10
   142  00133E  000B               	dw	11
   143  001340  000C               	dw	12
   144  001342  000E               	dw	14
   145  001344  000F               	dw	15
   146  001346  0010               	dw	16
   147  001348  0012               	dw	18
   148  00134A  0013               	dw	19
   149  00134C  0015               	dw	21
   150  00134E  0017               	dw	23
   151  001350  0019               	dw	25
   152  001352  001B               	dw	27
   153  001354  001D               	dw	29
   154  001356  001F               	dw	31
   155  001358  0021               	dw	33
   156  00135A  0023               	dw	35
   157  00135C  0025               	dw	37
   158  00135E  0028               	dw	40
   159  001360  002A               	dw	42
   160  001362  002D               	dw	45
   161  001364  0030               	dw	48
   162  001366  0033               	dw	51
   163  001368  0036               	dw	54
   164  00136A  0039               	dw	57
   165  00136C  003C               	dw	60
   166  00136E  003F               	dw	63
   167  001370  0042               	dw	66
   168  001372  0046               	dw	70
   169  001374  0049               	dw	73
   170  001376  004D               	dw	77
   171  001378  0051               	dw	81
   172  00137A  0055               	dw	85
   173  00137C  0058               	dw	88
   174  00137E  005D               	dw	93
   175  001380  0061               	dw	97
   176  001382  0065               	dw	101
   177  001384  0069               	dw	105
   178  001386  006E               	dw	110
   179  001388  0073               	dw	115
   180  00138A  0077               	dw	119
   181  00138C  007C               	dw	124
   182  00138E  0081               	dw	129
   183  001390  0086               	dw	134
   184  001392  008C               	dw	140
   185  001394  0091               	dw	145
   186  001396  0096               	dw	150
   187  001398  009C               	dw	156
   188  00139A  00A2               	dw	162
   189  00139C  00A8               	dw	168
   190  00139E  00AD               	dw	173
   191  0013A0  00B4               	dw	180
   192  0013A2  00BA               	dw	186
   193  0013A4  00C0               	dw	192
   194  0013A6  00C7               	dw	199
   195  0013A8  00CD               	dw	205
   196  0013AA  00D4               	dw	212
   197  0013AC  00DB               	dw	219
   198  0013AE  00E2               	dw	226
   199  0013B0  00E9               	dw	233
   200  0013B2  00F0               	dw	240
   201  0013B4  00F8               	dw	248
   202  0013B6  00FF               	dw	255
   203  0013B8  0107               	dw	263
   204  0013BA  010E               	dw	270
   205  0013BC  0116               	dw	278
   206  0013BE  011E               	dw	286
   207  0013C0  0127               	dw	295
   208  0013C2  012F               	dw	303
   209  0013C4  0138               	dw	312
   210  0013C6  0140               	dw	320
   211  0013C8  0149               	dw	329
   212  0013CA  0152               	dw	338
   213  0013CC  015B               	dw	347
   214  0013CE  0164               	dw	356
   215  0013D0  016D               	dw	365
   216  0013D2  0177               	dw	375
   217  0013D4  0181               	dw	385
   218  0013D6  018A               	dw	394
   219  0013D8  0194               	dw	404
   220  0013DA  019E               	dw	414
   221  0013DC  01A9               	dw	425
   222  0013DE  01B3               	dw	435
   223  0013E0  01BE               	dw	446
   224  0013E2  01C8               	dw	456
   225  0013E4  01D3               	dw	467
   226  0013E6  01DE               	dw	478
   227  0013E8  01E9               	dw	489
   228  0013EA  01F4               	dw	500
   229  0013EC  0200               	dw	512
   230  0013EE  020C               	dw	524
   231  0013F0  0217               	dw	535
   232  0013F2  0223               	dw	547
   233  0013F4  022F               	dw	559
   234  0013F6  023C               	dw	572
   235  0013F8  0248               	dw	584
   236  0013FA  0254               	dw	596
   237  0013FC  0261               	dw	609
   238  0013FE  026E               	dw	622
   239  001400  027B               	dw	635
   240  001402  0288               	dw	648
   241  001404  0296               	dw	662
   242  001406  02A3               	dw	675
   243  001408  02B1               	dw	689
   244  00140A  02BF               	dw	703
   245  00140C  02CD               	dw	717
   246  00140E  02DB               	dw	731
   247  001410  02E9               	dw	745
   248  001412  02F8               	dw	760
   249  001414  0307               	dw	775
   250  001416  0315               	dw	789
   251  001418  0325               	dw	805
   252  00141A  0334               	dw	820
   253  00141C  0343               	dw	835
   254  00141E  0353               	dw	851
   255  001420  0362               	dw	866
   256  001422  0372               	dw	882
   257  001424  0382               	dw	898
   258  001426  0393               	dw	915
   259  001428  03A3               	dw	931
   260  00142A  03B4               	dw	948
   261  00142C  03C4               	dw	964
   262  00142E  03D5               	dw	981
   263  001430  03E6               	dw	998
   264  001432  03F8               	dw	1016
   265  001434  0409               	dw	1033
   266  001436  041B               	dw	1051
   267  001438  042D               	dw	1069
   268  00143A  043F               	dw	1087
   269  00143C  0451               	dw	1105
   270  00143E  0463               	dw	1123
   271  001440  0476               	dw	1142
   272  001442  0489               	dw	1161
   273  001444  049C               	dw	1180
   274  001446  04AF               	dw	1199
   275  001448  04C2               	dw	1218
   276  00144A  04D6               	dw	1238
   277  00144C  04E9               	dw	1257
   278  00144E  04FD               	dw	1277
   279  001450  0511               	dw	1297
   280  001452  0525               	dw	1317
   281  001454  053A               	dw	1338
   282  001456  054E               	dw	1358
   283  001458  0563               	dw	1379
   284  00145A  0578               	dw	1400
   285  00145C  058D               	dw	1421
   286  00145E  05A3               	dw	1443
   287  001460  05B8               	dw	1464
   288  001462  05CE               	dw	1486
   289  001464  05E4               	dw	1508
   290  001466  05FA               	dw	1530
   291  001468  0610               	dw	1552
   292  00146A  0627               	dw	1575
   293  00146C  063E               	dw	1598
   294  00146E  0655               	dw	1621
   295  001470  066C               	dw	1644
   296  001472  0683               	dw	1667
   297  001474  069B               	dw	1691
   298  001476  06B2               	dw	1714
   299  001478  06CA               	dw	1738
   300  00147A  06E2               	dw	1762
   301  00147C  06FB               	dw	1787
   302  00147E  0713               	dw	1811
   303  001480  072C               	dw	1836
   304  001482  0745               	dw	1861
   305  001484  075E               	dw	1886
   306  001486  0777               	dw	1911
   307  001488  0791               	dw	1937
   308  00148A  07AA               	dw	1962
   309  00148C  07C4               	dw	1988
   310  00148E  07DE               	dw	2014
   311  001490  07F9               	dw	2041
   312  001492  0813               	dw	2067
   313  001494  082E               	dw	2094
   314  001496  0849               	dw	2121
   315  001498  0864               	dw	2148
   316  00149A  0880               	dw	2176
   317  00149C  089B               	dw	2203
   318  00149E  08B7               	dw	2231
   319  0014A0  08D3               	dw	2259
   320  0014A2  08EF               	dw	2287
   321  0014A4  090B               	dw	2315
   322  0014A6  0928               	dw	2344
   323  0014A8  0945               	dw	2373
   324  0014AA  0962               	dw	2402
   325  0014AC  097F               	dw	2431
   326  0014AE  099D               	dw	2461
   327  0014B0  09BA               	dw	2490
   328  0014B2  09D8               	dw	2520
   329  0014B4  09F6               	dw	2550
   330  0014B6  0A15               	dw	2581
   331  0014B8  0A33               	dw	2611
   332  0014BA  0A52               	dw	2642
   333  0014BC  0A71               	dw	2673
   334  0014BE  0A90               	dw	2704
   335  0014C0  0AB0               	dw	2736
   336  0014C2  0ACF               	dw	2767
   337  0014C4  0AEF               	dw	2799
   338  0014C6  0B0F               	dw	2831
   339  0014C8  0B2F               	dw	2863
   340  0014CA  0B50               	dw	2896
   341  0014CC  0B71               	dw	2929
   342  0014CE  0B92               	dw	2962
   343  0014D0  0BB3               	dw	2995
   344  0014D2  0BD4               	dw	3028
   345  0014D4  0BF6               	dw	3062
   346  0014D6  0C18               	dw	3096
   347  0014D8  0C3A               	dw	3130
   348  0014DA  0C5C               	dw	3164
   349  0014DC  0C7E               	dw	3198
   350  0014DE  0CA1               	dw	3233
   351  0014E0  0CC4               	dw	3268
   352  0014E2  0CE7               	dw	3303
   353  0014E4  0D0B               	dw	3339
   354  0014E6  0D2E               	dw	3374
   355  0014E8  0D52               	dw	3410
   356  0014EA  0D76               	dw	3446
   357  0014EC  0D9B               	dw	3483
   358  0014EE  0DBF               	dw	3519
   359  0014F0  0DE4               	dw	3556
   360  0014F2  0E09               	dw	3593
   361  0014F4  0E2E               	dw	3630
   362  0014F6  0E54               	dw	3668
   363  0014F8  0E79               	dw	3705
   364  0014FA  0E9F               	dw	3743
   365  0014FC  0EC5               	dw	3781
   366  0014FE  0EEC               	dw	3820
   367  001500  0F12               	dw	3858
   368  001502  0F39               	dw	3897
   369  001504  0F60               	dw	3936
   370  001506  0F88               	dw	3976
   371  001508  0FAF               	dw	4015
   372  00150A  0FD7               	dw	4055
   373  00150C  0FFF               	dw	4095
   374                           
   375                           	psect	idataBANK0
   376  0032E6                     __pidataBANK0:
   377                           	opt stack 0
   378                           
   379                           ;initializer for _ACTCON_R
   380  0032E6  B5                 	db	181
   381  0032E7  0F                 	db	15
   382                           
   383                           ;initializer for _ANSELA_R
   384  0032E8  5B                 	db	91
   385  0032E9  0F                 	db	15
   386                           
   387                           ;initializer for _ANSELC_R
   388  0032EA  5D                 	db	93
   389  0032EB  0F                 	db	15
   390                           
   391                           ;initializer for _IOCB_R
   392  0032EC  86                 	db	134
   393  0032ED  0F                 	db	15
   394                           
   395                           ;initializer for _OSCCON2_R
   396  0032EE  D2                 	db	210
   397  0032EF  0F                 	db	15
   398                           
   399                           ;initializer for _PIE2_R
   400  0032F0  A0                 	db	160
   401  0032F1  0F                 	db	15
   402                           
   403                           ;initializer for _PIE3_R
   404  0032F2  A3                 	db	163
   405  0032F3  0F                 	db	15
   406                           
   407                           ;initializer for _PIR2_R
   408  0032F4  A1                 	db	161
   409  0032F5  0F                 	db	15
   410                           
   411                           ;initializer for _PIR3_R
   412  0032F6  A4                 	db	164
   413  0032F7  0F                 	db	15
   414                           
   415                           ;initializer for _T3GCON_R
   416  0032F8  B4                 	db	180
   417  0032F9  0F                 	db	15
   418                           
   419                           ;initializer for _U1ADDR_R
   420  0032FA  6E                 	db	110
   421  0032FB  0F                 	db	15
   422                           
   423                           ;initializer for _U1CNFG1_R
   424  0032FC  6F                 	db	111
   425  0032FD  0F                 	db	15
   426                           
   427                           ;initializer for _U1CON_R
   428  0032FE  6D                 	db	109
   429  0032FF  0F                 	db	15
   430                           
   431                           ;initializer for _U1EIE_R
   432  003300  6B                 	db	107
   433  003301  0F                 	db	15
   434                           
   435                           ;initializer for _U1EIR_R
   436  003302  6A                 	db	106
   437  003303  0F                 	db	15
   438                           
   439                           ;initializer for _U1EP1_R
   440  003304  71                 	db	113
   441  003305  0F                 	db	15
   442                           
   443                           ;initializer for _U1IE_R
   444  003306  69                 	db	105
   445  003307  0F                 	db	15
   446                           
   447                           ;initializer for _U1IR_R
   448  003308  68                 	db	104
   449  003309  0F                 	db	15
   450                           
   451                           ;initializer for _U1STAT_R
   452  00330A  6C                 	db	108
   453  00330B  0F                 	db	15
   454                           
   455                           ;initializer for _tcl5947_testbyte0
   456  00330C  23                 	db	35
   457                           
   458                           ;initializer for _tcl5947_testbyte1
   459  00330D  42                 	db	66
   460                           
   461                           ;initializer for _tlc_nchannels
   462  00330E  30                 	db	48
   463                           
   464                           	psect	idataBANK1
   465  002E8C                     __pidataBANK1:
   466                           	opt stack 0
   467                           
   468                           ;initializer for _tlc_memory
   469  002E8C  FF                 	db	255
   470  002E8D  FF                 	db	255
   471  002E8E  FF                 	db	255
   472  002E8F  FF                 	db	255
   473  002E90  FF                 	db	255
   474  002E91  FF                 	db	255
   475  002E92  FF                 	db	255
   476  002E93  FF                 	db	255
   477  002E94  FF                 	db	255
   478  002E95  FF                 	db	255
   479  002E96  FF                 	db	255
   480  002E97  FF                 	db	255
   481  002E98  FF                 	db	255
   482  002E99  FF                 	db	255
   483  002E9A  FF                 	db	255
   484  002E9B  FF                 	db	255
   485  002E9C  FF                 	db	255
   486  002E9D  FF                 	db	255
   487  002E9E  FF                 	db	255
   488  002E9F  FF                 	db	255
   489  002EA0  FF                 	db	255
   490  002EA1  FF                 	db	255
   491  002EA2  FF                 	db	255
   492  002EA3  FF                 	db	255
   493  002EA4  FF                 	db	255
   494  002EA5  FF                 	db	255
   495  002EA6  FF                 	db	255
   496  002EA7  FF                 	db	255
   497  002EA8  FF                 	db	255
   498  002EA9  FF                 	db	255
   499  002EAA  FF                 	db	255
   500  002EAB  FF                 	db	255
   501  002EAC  FF                 	db	255
   502  002EAD  FF                 	db	255
   503  002EAE  FF                 	db	255
   504  002EAF  FF                 	db	255
   505  002EB0  FF                 	db	255
   506  002EB1  FF                 	db	255
   507  002EB2  FF                 	db	255
   508  002EB3  FF                 	db	255
   509  002EB4  FF                 	db	255
   510  002EB5  FF                 	db	255
   511  002EB6  FF                 	db	255
   512  002EB7  FF                 	db	255
   513  002EB8  FF                 	db	255
   514  002EB9  FF                 	db	255
   515  002EBA  FF                 	db	255
   516  002EBB  FF                 	db	255
   517  002EBC  FF                 	db	255
   518  002EBD  FF                 	db	255
   519  002EBE  FF                 	db	255
   520  002EBF  FF                 	db	255
   521  002EC0  FF                 	db	255
   522  002EC1  FF                 	db	255
   523  002EC2  FF                 	db	255
   524  002EC3  FF                 	db	255
   525  002EC4  FF                 	db	255
   526  002EC5  FF                 	db	255
   527  002EC6  FF                 	db	255
   528  002EC7  FF                 	db	255
   529  002EC8  FF                 	db	255
   530  002EC9  FF                 	db	255
   531  002ECA  FF                 	db	255
   532  002ECB  FF                 	db	255
   533  002ECC  FF                 	db	255
   534  002ECD  FF                 	db	255
   535  002ECE  FF                 	db	255
   536  002ECF  FF                 	db	255
   537  002ED0  FF                 	db	255
   538  002ED1  FF                 	db	255
   539  002ED2  FF                 	db	255
   540  002ED3  FF                 	db	255
   541                           
   542                           ;initializer for _test_pattern
   543  002ED4  FF                 	db	255
   544  002ED5  00                 	db	0
   545  002ED6  00                 	db	0
   546  002ED7  00                 	db	0
   547  002ED8  FF                 	db	255
   548  002ED9  00                 	db	0
   549  002EDA  00                 	db	0
   550  002EDB  00                 	db	0
   551  002EDC  FF                 	db	255
   552  002EDD  FF                 	db	255
   553  002EDE  00                 	db	0
   554  002EDF  FF                 	db	255
   555  002EE0  00                 	db	0
   556  002EE1  FF                 	db	255
   557  002EE2  FF                 	db	255
   558  002EE3  FF                 	db	255
   559  002EE4  FF                 	db	255
   560  002EE5  00                 	db	0
   561  002EE6  FF                 	db	255
   562  002EE7  FF                 	db	255
   563  002EE8  FF                 	db	255
   564                           
   565                           	psect	smallconst
   566  000900                     __psmallconst:
   567                           	opt stack 0
   568  000900  00                 	db	0
   569  000901                     _USB_SD_Ptr:
   570                           	opt stack 0
   571  000901  A8                 	db	low _sd000
   572  000902  09                 	db	high _sd000
   573  000903  4E                 	db	low _sd001
   574  000904  09                 	db	high _sd001
   575  000905  74                 	db	low _sd002
   576  000906  09                 	db	high _sd002
   577  000907  9E                 	db	low _sd003
   578  000908  09                 	db	high _sd003
   579  000909                     __end_of_USB_SD_Ptr:
   580                           	opt stack 0
   581  000909                     _USB_CD_Ptr:
   582                           	opt stack 0
   583  000909  0B                 	db	low _configDescriptor1
   584  00090A  09                 	db	high _configDescriptor1
   585  00090B                     __end_of_USB_CD_Ptr:
   586                           	opt stack 0
   587  00090B                     _configDescriptor1:
   588                           	opt stack 0
   589  00090B  09                 	db	9
   590  00090C  02                 	db	2
   591  00090D  43                 	db	67
   592  00090E  00                 	db	0
   593  00090F  02                 	db	2
   594  000910  01                 	db	1
   595  000911  00                 	db	0
   596  000912  C0                 	db	192
   597  000913  32                 	db	50
   598  000914  09                 	db	9
   599  000915  04                 	db	4
   600  000916  00                 	db	0
   601  000917  00                 	db	0
   602  000918  01                 	db	1
   603  000919  02                 	db	2
   604  00091A  02                 	db	2
   605  00091B  01                 	db	1
   606  00091C  00                 	db	0
   607  00091D  05                 	db	5
   608  00091E  24                 	db	36
   609  00091F  00                 	db	0
   610  000920  10                 	db	16
   611  000921  01                 	db	1
   612  000922  04                 	db	4
   613  000923  24                 	db	36
   614  000924  02                 	db	2
   615  000925  02                 	db	2
   616  000926  05                 	db	5
   617  000927  24                 	db	36
   618  000928  06                 	db	6
   619  000929  00                 	db	0
   620  00092A  01                 	db	1
   621  00092B  05                 	db	5
   622  00092C  24                 	db	36
   623  00092D  01                 	db	1
   624  00092E  00                 	db	0
   625  00092F  01                 	db	1
   626  000930  07                 	db	7
   627  000931  05                 	db	5
   628  000932  81                 	db	129
   629  000933  03                 	db	3
   630  000934  08                 	db	8
   631  000935  00                 	db	0
   632  000936  02                 	db	2
   633  000937  09                 	db	9
   634  000938  04                 	db	4
   635  000939  01                 	db	1
   636  00093A  00                 	db	0
   637  00093B  02                 	db	2
   638  00093C  0A                 	db	10
   639  00093D  00                 	db	0
   640  00093E  00                 	db	0
   641  00093F  00                 	db	0
   642  000940  07                 	db	7
   643  000941  05                 	db	5
   644  000942  02                 	db	2
   645  000943  02                 	db	2
   646  000944  40                 	db	64
   647  000945  00                 	db	0
   648  000946  00                 	db	0
   649  000947  07                 	db	7
   650  000948  05                 	db	5
   651  000949  82                 	db	130
   652  00094A  02                 	db	2
   653  00094B  40                 	db	64
   654  00094C  00                 	db	0
   655  00094D  00                 	db	0
   656  00094E                     __end_of_configDescriptor1:
   657                           	opt stack 0
   658  00094E                     _sd001:
   659                           	opt stack 0
   660  00094E  26                 	db	38
   661  00094F  03                 	db	3
   662  000950  0063               	dw	99
   663  000952  0040               	dw	64
   664  000954  0072               	dw	114
   665  000956  0073               	dw	115
   666  000958  0074               	dw	116
   667  00095A  0065               	dw	101
   668  00095C  006E               	dw	110
   669  00095E  0070               	dw	112
   670  000960  0072               	dw	114
   671  000962  0065               	dw	101
   672  000964  0073               	dw	115
   673  000966  0073               	dw	115
   674  000968  0065               	dw	101
   675  00096A  0072               	dw	114
   676  00096C  002E               	dw	46
   677  00096E  0064               	dw	100
   678  000970  0065               	dw	101
   679  000972  00                 	db	0
   680  000973  00                 	db	0
   681  000974                     __end_of_sd001:
   682                           	opt stack 0
   683  000974                     _sd002:
   684                           	opt stack 0
   685  000974  18                 	db	24
   686  000975  03                 	db	3
   687  000976  004B               	dw	75
   688  000978  0061               	dw	97
   689  00097A  0072               	dw	114
   690  00097C  0061               	dw	97
   691  00097E  0074               	dw	116
   692  000980  0065               	dw	101
   693  000982  006C               	dw	108
   694  000984  0069               	dw	105
   695  000986  0067               	dw	103
   696  000988  0068               	dw	104
   697  00098A  0074               	dw	116
   698  00098C                     __end_of_sd002:
   699                           	opt stack 0
   700  00098C                     _device_dsc:
   701                           	opt stack 0
   702  00098C  12                 	db	18
   703  00098D  01                 	db	1
   704  00098E  0200               	dw	512
   705  000990  02                 	db	2
   706  000991  00                 	db	0
   707  000992  00                 	db	0
   708  000993  08                 	db	8
   709  000994  04D8               	dw	1240
   710  000996  000A               	dw	10
   711  000998  0100               	dw	256
   712  00099A  01                 	db	1
   713  00099B  02                 	db	2
   714  00099C  03                 	db	3
   715  00099D  01                 	db	1
   716  00099E                     __end_of_device_dsc:
   717                           	opt stack 0
   718  00099E                     _sd003:
   719                           	opt stack 0
   720  00099E  18                 	db	24
   721  00099F  03                 	db	3
   722  0009A0  0032               	dw	50
   723  0009A2  0033               	dw	51
   724  0009A4  0061               	dw	97
   725  0009A6  0066               	dw	102
   726  0009A8                     __end_of_sd003:
   727                           	opt stack 0
   728  0009A8                     _sd000:
   729                           	opt stack 0
   730  0009A8  04                 	db	4
   731  0009A9  03                 	db	3
   732  0009AA  0409               	dw	1033
   733  0009AC                     __end_of_sd000:
   734                           	opt stack 0
   735  0009AC  00                 	db	0	; dummy byte at the end
   736  0000                     
   737                           	psect	nvBANK0
   738  0000F1                     __pnvBANK0:
   739                           	opt stack 0
   740  0000F1                     _pic18_devid:
   741                           	opt stack 0
   742  0000F1                     	ds	2
   743  0000                     _ADCON0	set	4034
   744  0000                     _ADCON0bits	set	4034
   745  0000                     _ADCON1	set	4033
   746  0000                     _ADCON2	set	4032
   747  0000                     _ADRESH	set	4036
   748  0000                     _ADRESL	set	4035
   749  0000                     _DDRA	set	3986
   750  0000                     _DDRAbits	set	3986
   751  0000                     _DDRB	set	3987
   752  0000                     _DDRBbits	set	3987
   753  0000                     _DDRC	set	3988
   754  0000                     _DDRD	set	3989
   755  0000                     _DDRE	set	3990
   756  0000                     _EEADR	set	4009
   757  0000                     _EECON1bits	set	4006
   758  0000                     _EECON2	set	4007
   759  0000                     _EEDATA	set	4008
   760  0000                     _INTCONbits	set	4082
   761  0000                     _IPR1bits	set	3999
   762  0000                     _IPR2bits	set	4002
   763  0000                     _LATBbits	set	3978
   764  0000                     _LATC	set	3979
   765  0000                     _LATCbits	set	3979
   766  0000                     _OSCCON	set	4051
   767  0000                     _OSCTUNE	set	3995
   768  0000                     _PIE1bits	set	3997
   769  0000                     _PIE2	set	4000
   770  0000                     _PIR1bits	set	3998
   771  0000                     _PIR2bits	set	4001
   772  0000                     _PORTAbits	set	3968
   773  0000                     _PORTBbits	set	3969
   774  0000                     _PORTCbits	set	3970
   775  0000                     _PR2	set	4043
   776  0000                     _RCONbits	set	4048
   777  0000                     _SSPBUF	set	4041
   778  0000                     _SSPCON1	set	4038
   779  0000                     _SSPCON1bits	set	4038
   780  0000                     _SSPSTAT	set	4039
   781  0000                     _SSPSTATbits	set	4039
   782  0000                     _T2CON	set	4042
   783  0000                     _T3CON	set	4017
   784  0000                     _TABLAT	set	4085
   785  0000                     _TBLPTRH	set	4087
   786  0000                     _TBLPTRL	set	4086
   787  0000                     _TBLPTRU	set	4088
   788  0000                     _TMR3H	set	4019
   789  0000                     _TMR3L	set	4018
   790  0000                     _TRISAbits	set	3986
   791  0000                     _TRISBbits	set	3987
   792  0000                     _TRISC	set	3988
   793  0000                     _TRISCbits	set	3988
   794  0000                     _UCONbits	set	3949
   795  0000                     _UIEbits	set	3945
   796  0000                     _UIRbits	set	3944
   797  0000                     _UADDR	set	3950
   798  0000                     _UCFG	set	3951
   799  0000                     _UCON	set	3949
   800  0000                     _UEIE	set	3947
   801  0000                     _UEIR	set	3946
   802  0000                     _UEP0	set	3952
   803  0000                     _UEP1	set	3953
   804  0000                     _UIE	set	3945
   805  0000                     _UIR	set	3944
   806  0000                     _USTAT	set	3948
   807                           
   808                           ; #config settings
   809  0000                     
   810                           	psect	cinit
   811  002642                     __pcinit:
   812                           	opt stack 0
   813  002642                     start_initialization:
   814                           	opt stack 0
   815  002642                     __initialization:
   816                           	opt stack 0
   817                           
   818                           ; Clear objects allocated to BANK2 (128 bytes)
   819  002642  EE02  F000         	lfsr	0,__pbssBANK2
   820  002646  0E80               	movlw	128
   821  002648                     clear_0:
   822  002648  6AEE               	clrf	postinc0,c
   823  00264A  06E8               	decf	wreg,f,c
   824  00264C  E1FD               	bnz	clear_0
   825                           
   826                           ; Clear objects allocated to BANK1 (128 bytes)
   827  00264E  EE01  F000         	lfsr	0,__pbssBANK1
   828  002652  0E80               	movlw	128
   829  002654                     clear_1:
   830  002654  6AEE               	clrf	postinc0,c
   831  002656  06E8               	decf	wreg,f,c
   832  002658  E1FD               	bnz	clear_1
   833                           
   834                           ; Clear objects allocated to BANK0 (85 bytes)
   835  00265A  EE00  F060         	lfsr	0,__pbssBANK0
   836  00265E  0E55               	movlw	85
   837  002660                     clear_2:
   838  002660  6AEE               	clrf	postinc0,c
   839  002662  06E8               	decf	wreg,f,c
   840  002664  E1FD               	bnz	clear_2
   841                           
   842                           ; Clear objects allocated to COMRAM (31 bytes)
   843  002666  EE00  F03E         	lfsr	0,__pbssCOMRAM
   844  00266A  0E1F               	movlw	31
   845  00266C                     clear_3:
   846  00266C  6AEE               	clrf	postinc0,c
   847  00266E  06E8               	decf	wreg,f,c
   848  002670  E1FD               	bnz	clear_3
   849                           
   850                           ; Initialize objects allocated to BIGRAMl (512 bytes)
   851                           ; load TBLPTR registers with __pidataBIGRAMl
   852  002672  0E0E               	movlw	low __pidataBIGRAMl
   853  002674  6EF6               	movwf	tblptrl,c
   854  002676  0E13               	movlw	high __pidataBIGRAMl
   855  002678  6EF7               	movwf	tblptrh,c
   856  00267A  0E00               	movlw	low (__pidataBIGRAMl shr (0+16))
   857  00267C  6EF8               	movwf	tblptru,c
   858  00267E  EE05  F080         	lfsr	0,__pdataBIGRAMl
   859  002682  EE12 F000          	lfsr	1,512
   860  002686                     copy_data0:
   861  002686  0009               	tblrd		*+
   862  002688  CFF5 FFEE          	movff	tablat,postinc0
   863  00268C  50E5               	movf	postdec1,w,c
   864  00268E  50E1               	movf	fsr1l,w,c
   865  002690  E1FA               	bnz	copy_data0
   866  002692  50E2               	movf	fsr1h,w,c
   867  002694  E1F8               	bnz	copy_data0
   868                           
   869                           ; Initialize objects allocated to BANK1 (93 bytes)
   870                           ; load TBLPTR registers with __pidataBANK1
   871  002696  0E8C               	movlw	low __pidataBANK1
   872  002698  6EF6               	movwf	tblptrl,c
   873  00269A  0E2E               	movlw	high __pidataBANK1
   874  00269C  6EF7               	movwf	tblptrh,c
   875  00269E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   876  0026A0  6EF8               	movwf	tblptru,c
   877  0026A2  EE01  F080         	lfsr	0,__pdataBANK1
   878  0026A6  EE10 F05D          	lfsr	1,93
   879  0026AA                     copy_data1:
   880  0026AA  0009               	tblrd		*+
   881  0026AC  CFF5 FFEE          	movff	tablat,postinc0
   882  0026B0  50E5               	movf	postdec1,w,c
   883  0026B2  50E1               	movf	fsr1l,w,c
   884  0026B4  E1FA               	bnz	copy_data1
   885                           
   886                           ; Initialize objects allocated to BANK0 (41 bytes)
   887                           ; load TBLPTR registers with __pidataBANK0
   888  0026B6  0EE6               	movlw	low __pidataBANK0
   889  0026B8  6EF6               	movwf	tblptrl,c
   890  0026BA  0E32               	movlw	high __pidataBANK0
   891  0026BC  6EF7               	movwf	tblptrh,c
   892  0026BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   893  0026C0  6EF8               	movwf	tblptru,c
   894  0026C2  EE00  F0B5         	lfsr	0,__pdataBANK0
   895  0026C6  EE10 F029          	lfsr	1,41
   896  0026CA                     copy_data2:
   897  0026CA  0009               	tblrd		*+
   898  0026CC  CFF5 FFEE          	movff	tablat,postinc0
   899  0026D0  50E5               	movf	postdec1,w,c
   900  0026D2  50E1               	movf	fsr1l,w,c
   901  0026D4  E1FA               	bnz	copy_data2
   902                           
   903                           ; Initialize objects allocated to COMRAM (3 bytes)
   904                           ; load TBLPTR registers with __pidataCOMRAM
   905  0026D6  0E42               	movlw	low __pidataCOMRAM
   906  0026D8  6EF6               	movwf	tblptrl,c
   907  0026DA  0E34               	movlw	high __pidataCOMRAM
   908  0026DC  6EF7               	movwf	tblptrh,c
   909  0026DE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   910  0026E0  6EF8               	movwf	tblptru,c
   911  0026E2  0009               	tblrd		*+	;fetch initializer
   912  0026E4  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   913  0026E8  0009               	tblrd		*+	;fetch initializer
   914  0026EA  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   915  0026EE  0009               	tblrd		*+	;fetch initializer
   916  0026F0  CFF5 F05F          	movff	tablat,__pdataCOMRAM+2
   917  0026F4                     end_of_initialization:
   918                           	opt stack 0
   919  0026F4                     __end_of__initialization:
   920                           	opt stack 0
   921  0026F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   922  0026F6  6EF8               	movwf	tblptru,c
   923  0026F8  0100               	movlb	0
   924  0026FA  EFD4  F019         	goto	_main	;jump to C main() function
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           postdec1	equ	0xFE5
   932                           fsr1h	equ	0xFE2
   933                           fsr1l	equ	0xFE1
   934                           
   935                           	psect	bssCOMRAM
   936  00003E                     __pbssCOMRAM:
   937                           	opt stack 0
   938  00003E                     _pBDTEntryIn:
   939                           	opt stack 0
   940  00003E                     	ds	6
   941  000044                     _CDCDataOutHandle:
   942                           	opt stack 0
   943  000044                     	ds	2
   944  000046                     _pBDTEntryEP0OutCurrent:
   945                           	opt stack 0
   946  000046                     	ds	2
   947  000048                     _pBDTEntryEP0OutNext:
   948                           	opt stack 0
   949  000048                     	ds	2
   950  00004A                     _tlc_pwm_readback_value:
   951                           	opt stack 0
   952  00004A                     	ds	2
   953  00004C                     _USBDeferINDataStagePackets:
   954                           	opt stack 0
   955  00004C                     	ds	1
   956  00004D                     _USBDeferOUTDataStagePackets:
   957                           	opt stack 0
   958  00004D                     	ds	1
   959  00004E                     _USBDeferStatusStagePacket:
   960                           	opt stack 0
   961  00004E                     	ds	1
   962  00004F                     _USBStatusStageEnabledFlag1:
   963                           	opt stack 0
   964  00004F                     	ds	1
   965  000050                     _USBStatusStageEnabledFlag2:
   966                           	opt stack 0
   967  000050                     	ds	1
   968  000051                     _cdc_rx_len:
   969                           	opt stack 0
   970  000051                     	ds	1
   971  000052                     _cdc_trf_state:
   972                           	opt stack 0
   973  000052                     	ds	1
   974  000053                     _cdc_tx_len:
   975                           	opt stack 0
   976  000053                     	ds	1
   977  000054                     _controlTransferState:
   978                           	opt stack 0
   979  000054                     	ds	1
   980  000055                     _shortPacketStatus:
   981                           	opt stack 0
   982  000055                     	ds	1
   983  000056                     _inPipes:
   984                           	opt stack 0
   985  000056                     	ds	6
   986  00005C                     _USBActiveConfiguration:
   987                           	opt stack 0
   988  00005C                     	ds	1
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           postinc0	equ	0xFEE
   994                           wreg	equ	0xFE8
   995                           postdec1	equ	0xFE5
   996                           fsr1h	equ	0xFE2
   997                           fsr1l	equ	0xFE1
   998                           
   999                           	psect	dataCOMRAM
  1000  00005D                     __pdataCOMRAM:
  1001                           	opt stack 0
  1002  00005D                     _U1EP0_R:
  1003                           	opt stack 0
  1004  00005D                     	ds	2
  1005  00005F                     _tlc_nbytes:
  1006                           	opt stack 0
  1007  00005F                     	ds	1
  1008                           tblptru	equ	0xFF8
  1009                           tblptrh	equ	0xFF7
  1010                           tblptrl	equ	0xFF6
  1011                           tablat	equ	0xFF5
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           postdec1	equ	0xFE5
  1015                           fsr1h	equ	0xFE2
  1016                           fsr1l	equ	0xFE1
  1017                           
  1018                           	psect	bssBANK0
  1019  000060                     __pbssBANK0:
  1020                           	opt stack 0
  1021  000060                     _cdc_notice:
  1022                           	opt stack 0
  1023  000060                     	ds	10
  1024  00006A                     _outPipes:
  1025                           	opt stack 0
  1026  00006A                     	ds	8
  1027  000072                     _pBDTEntryOut:
  1028                           	opt stack 0
  1029  000072                     	ds	6
  1030  000078                     _BaudRateGen:
  1031                           	opt stack 0
  1032  000078                     	ds	4
  1033  00007C                     _ep_data_in:
  1034                           	opt stack 0
  1035  00007C                     	ds	3
  1036  00007F                     _ep_data_out:
  1037                           	opt stack 0
  1038  00007F                     	ds	3
  1039  000082                     _pCDCDst:
  1040                           	opt stack 0
  1041  000082                     	ds	3
  1042  000085                     _pCDCSrc:
  1043                           	opt stack 0
  1044  000085                     	ds	3
  1045  000088                     _CDCDataInHandle:
  1046                           	opt stack 0
  1047  000088                     	ds	2
  1048  00008A                     _led_count:
  1049                           	opt stack 0
  1050  00008A                     	ds	2
  1051  00008C                     _pDst:
  1052                           	opt stack 0
  1053  00008C                     	ds	2
  1054  00008E                     _pwr_delay:
  1055                           	opt stack 0
  1056  00008E                     	ds	2
  1057  000090                     _txmiss_count:
  1058                           	opt stack 0
  1059  000090                     	ds	2
  1060  000092                     _update_count:
  1061                           	opt stack 0
  1062  000092                     	ds	2
  1063  000094                     _BothEP0OutUOWNsSet:
  1064                           	opt stack 0
  1065  000094                     	ds	1
  1066  000095                     _RemoteWakeup:
  1067                           	opt stack 0
  1068  000095                     	ds	1
  1069  000096                     _USBBusIsSuspended:
  1070                           	opt stack 0
  1071  000096                     	ds	1
  1072  000097                     _USBDeviceState:
  1073                           	opt stack 0
  1074  000097                     	ds	1
  1075  000098                     _USBStatusStageTimeoutCounter:
  1076                           	opt stack 0
  1077  000098                     	ds	1
  1078  000099                     _cdc_mem_type:
  1079                           	opt stack 0
  1080  000099                     	ds	1
  1081  00009A                     _control_signal_bitmap:
  1082                           	opt stack 0
  1083  00009A                     	ds	1
  1084  00009B                     _endpoint_number:
  1085                           	opt stack 0
  1086  00009B                     	ds	1
  1087  00009C                     _green_led_counter:
  1088                           	opt stack 0
  1089  00009C                     	ds	1
  1090  00009D                     _old_sw2:
  1091                           	opt stack 0
  1092  00009D                     	ds	1
  1093  00009E                     _pattern_number:
  1094                           	opt stack 0
  1095  00009E                     	ds	1
  1096  00009F                     _pic18_rev:
  1097                           	opt stack 0
  1098  00009F                     	ds	1
  1099  0000A0                     _tlc_request:
  1100                           	opt stack 0
  1101  0000A0                     	ds	1
  1102  0000A1                     _tmr3h_cal:
  1103                           	opt stack 0
  1104  0000A1                     	ds	1
  1105  0000A2                     _tmr3l_cal:
  1106                           	opt stack 0
  1107  0000A2                     	ds	1
  1108  0000A3                     _dummy_encapsulated_cmd_response:
  1109                           	opt stack 0
  1110  0000A3                     	ds	8
  1111  0000AB                     _line_coding:
  1112                           	opt stack 0
  1113  0000AB                     	ds	7
  1114  0000B2                     _USBAlternateInterface:
  1115                           	opt stack 0
  1116  0000B2                     	ds	2
  1117  0000B4                     _USTATcopy:
  1118                           	opt stack 0
  1119  0000B4                     	ds	1
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1h	equ	0xFE2
  1128                           fsr1l	equ	0xFE1
  1129                           
  1130                           	psect	dataBANK0
  1131  0000B5                     __pdataBANK0:
  1132                           	opt stack 0
  1133  0000B5                     _ACTCON_R:
  1134                           	opt stack 0
  1135  0000B5                     	ds	2
  1136  0000B7                     _ANSELA_R:
  1137                           	opt stack 0
  1138  0000B7                     	ds	2
  1139  0000B9                     _ANSELC_R:
  1140                           	opt stack 0
  1141  0000B9                     	ds	2
  1142  0000BB                     _IOCB_R:
  1143                           	opt stack 0
  1144  0000BB                     	ds	2
  1145  0000BD                     _OSCCON2_R:
  1146                           	opt stack 0
  1147  0000BD                     	ds	2
  1148  0000BF                     _PIE2_R:
  1149                           	opt stack 0
  1150  0000BF                     	ds	2
  1151  0000C1                     _PIE3_R:
  1152                           	opt stack 0
  1153  0000C1                     	ds	2
  1154  0000C3                     _PIR2_R:
  1155                           	opt stack 0
  1156  0000C3                     	ds	2
  1157  0000C5                     _PIR3_R:
  1158                           	opt stack 0
  1159  0000C5                     	ds	2
  1160  0000C7                     _T3GCON_R:
  1161                           	opt stack 0
  1162  0000C7                     	ds	2
  1163  0000C9                     _U1ADDR_R:
  1164                           	opt stack 0
  1165  0000C9                     	ds	2
  1166  0000CB                     _U1CNFG1_R:
  1167                           	opt stack 0
  1168  0000CB                     	ds	2
  1169  0000CD                     _U1CON_R:
  1170                           	opt stack 0
  1171  0000CD                     	ds	2
  1172  0000CF                     _U1EIE_R:
  1173                           	opt stack 0
  1174  0000CF                     	ds	2
  1175  0000D1                     _U1EIR_R:
  1176                           	opt stack 0
  1177  0000D1                     	ds	2
  1178  0000D3                     _U1EP1_R:
  1179                           	opt stack 0
  1180  0000D3                     	ds	2
  1181  0000D5                     _U1IE_R:
  1182                           	opt stack 0
  1183  0000D5                     	ds	2
  1184  0000D7                     _U1IR_R:
  1185                           	opt stack 0
  1186  0000D7                     	ds	2
  1187  0000D9                     _U1STAT_R:
  1188                           	opt stack 0
  1189  0000D9                     	ds	2
  1190  0000DB                     _tcl5947_testbyte0:
  1191                           	opt stack 0
  1192  0000DB                     	ds	1
  1193  0000DC                     _tcl5947_testbyte1:
  1194                           	opt stack 0
  1195  0000DC                     	ds	1
  1196  0000DD                     _tlc_nchannels:
  1197                           	opt stack 0
  1198  0000DD                     	ds	1
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           tblptrl	equ	0xFF6
  1202                           tablat	equ	0xFF5
  1203                           postinc0	equ	0xFEE
  1204                           wreg	equ	0xFE8
  1205                           postdec1	equ	0xFE5
  1206                           fsr1h	equ	0xFE2
  1207                           fsr1l	equ	0xFE1
  1208                           
  1209                           	psect	bssBANK1
  1210  000100                     __pbssBANK1:
  1211                           	opt stack 0
  1212  000100                     _CDCBufferIn:
  1213                           	opt stack 0
  1214  000100                     	ds	64
  1215  000140                     _CDCBufferOut:
  1216                           	opt stack 0
  1217  000140                     	ds	64
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1h	equ	0xFE2
  1226                           fsr1l	equ	0xFE1
  1227                           
  1228                           	psect	dataBANK1
  1229  000180                     __pdataBANK1:
  1230                           	opt stack 0
  1231  000180                     _tlc_memory:
  1232                           	opt stack 0
  1233  000180                     	ds	72
  1234  0001C8                     _test_pattern:
  1235                           	opt stack 0
  1236  0001C8                     	ds	21
  1237                           tblptru	equ	0xFF8
  1238                           tblptrh	equ	0xFF7
  1239                           tblptrl	equ	0xFF6
  1240                           tablat	equ	0xFF5
  1241                           postinc0	equ	0xFEE
  1242                           wreg	equ	0xFE8
  1243                           postdec1	equ	0xFE5
  1244                           fsr1h	equ	0xFE2
  1245                           fsr1l	equ	0xFE1
  1246                           
  1247                           	psect	bssBANK2
  1248  000200                     __pbssBANK2:
  1249                           	opt stack 0
  1250  000200                     _USB_In_Buffer:
  1251                           	opt stack 0
  1252  000200                     	ds	64
  1253  000240                     _USB_Out_Buffer:
  1254                           	opt stack 0
  1255  000240                     	ds	64
  1256                           tblptru	equ	0xFF8
  1257                           tblptrh	equ	0xFF7
  1258                           tblptrl	equ	0xFF6
  1259                           tablat	equ	0xFF5
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           postdec1	equ	0xFE5
  1263                           fsr1h	equ	0xFE2
  1264                           fsr1l	equ	0xFE1
  1265                           
  1266                           	psect	dataBIGRAMl
  1267  000580                     __pdataBIGRAMl:
  1268                           	opt stack 0
  1269  000580                     _gamma_table:
  1270                           	opt stack 0
  1271  000580                     	ds	512
  1272                           tblptru	equ	0xFF8
  1273                           tblptrh	equ	0xFF7
  1274                           tblptrl	equ	0xFF6
  1275                           tablat	equ	0xFF5
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           fsr1h	equ	0xFE2
  1280                           fsr1l	equ	0xFE1
  1281                           
  1282                           	psect	cstackBANK0
  1283  0000DE                     __pcstackBANK0:
  1284                           	opt stack 0
  1285  0000DE                     ??_USBCtrlEPService:
  1286                           
  1287                           ; 0 bytes @ 0x0
  1288  0000DE                     	ds	2
  1289  0000E0                     USBDeviceTasks@i:
  1290                           	opt stack 0
  1291                           
  1292                           ; 1 bytes @ 0x2
  1293  0000E0                     	ds	1
  1294  0000E1                     ??_ProcessCDC:
  1295                           
  1296                           ; 0 bytes @ 0x3
  1297  0000E1                     	ds	4
  1298  0000E5                     ProcessCDC@csum:
  1299                           	opt stack 0
  1300                           
  1301                           ; 1 bytes @ 0x7
  1302  0000E5                     	ds	1
  1303  0000E6                     ProcessCDC@_c:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x8
  1307  0000E6                     	ds	1
  1308  0000E7                     ProcessCDC@checksum:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x9
  1312  0000E7                     	ds	1
  1313  0000E8                     ProcessCDC@_y:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0xA
  1317  0000E8                     	ds	2
  1318  0000EA                     ProcessCDC@cmd:
  1319                           	opt stack 0
  1320                           
  1321                           ; 1 bytes @ 0xC
  1322  0000EA                     	ds	1
  1323  0000EB                     ProcessCDC@boot_request0:
  1324                           	opt stack 0
  1325                           
  1326                           ; 1 bytes @ 0xD
  1327  0000EB                     	ds	1
  1328  0000EC                     ProcessCDC@boot_request1:
  1329                           	opt stack 0
  1330                           
  1331                           ; 1 bytes @ 0xE
  1332  0000EC                     	ds	1
  1333  0000ED                     ProcessCDC@numBytes:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0xF
  1337  0000ED                     	ds	1
  1338  0000EE                     ProcessCDC@_x:
  1339                           	opt stack 0
  1340                           
  1341                           ; 1 bytes @ 0x10
  1342  0000EE                     	ds	1
  1343  0000EF                     ProcessCDC@len:
  1344                           	opt stack 0
  1345                           
  1346                           ; 1 bytes @ 0x11
  1347  0000EF                     	ds	1
  1348  0000F0                     ProcessIO@x:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x12
  1352  0000F0                     	ds	1
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           postdec1	equ	0xFE5
  1360                           fsr1h	equ	0xFE2
  1361                           fsr1l	equ	0xFE1
  1362                           
  1363                           	psect	cstackCOMRAM
  1364  000001                     __pcstackCOMRAM:
  1365                           	opt stack 0
  1366  000001                     ??_LowPriorityISRCode:
  1367  000001                     
  1368                           ; 1 bytes @ 0x0
  1369  000001                     	ds	17
  1370  000012                     i2WriteSPI@TempVar:
  1371                           	opt stack 0
  1372  000012                     i2Delay100TCYx@unit:
  1373                           	opt stack 0
  1374  000012                     i2Delay10TCYx@unit:
  1375                           	opt stack 0
  1376                           
  1377                           ; 1 bytes @ 0x11
  1378  000012                     	ds	1
  1379  000013                     i2WriteSPI@data_out:
  1380                           	opt stack 0
  1381                           
  1382                           ; 1 bytes @ 0x12
  1383  000013                     	ds	1
  1384  000014                     i2tlc5947_update@x:
  1385                           	opt stack 0
  1386                           
  1387                           ; 1 bytes @ 0x13
  1388  000014                     	ds	1
  1389  000015                     ??_HighPriorityISRCode:
  1390                           
  1391                           ; 0 bytes @ 0x14
  1392  000015                     	ds	14
  1393  000023                     ??_readDeviceID:
  1394  000023                     ??_BlinkUSBStatus:
  1395  000023                     ??_USBStdGetDscHandler:
  1396  000023                     ??_USBStdGetStatusHandler:
  1397  000023                     ?_ReadADC:
  1398                           	opt stack 0
  1399  000023                     ?_USBTransferOnePacket:
  1400                           	opt stack 0
  1401  000023                     ?_gamma_lookup:
  1402                           	opt stack 0
  1403  000023                     ?___awdiv:
  1404                           	opt stack 0
  1405  000023                     ?___lwdiv:
  1406                           	opt stack 0
  1407  000023                     USBTransferOnePacket@dir:
  1408                           	opt stack 0
  1409  000023                     USBConfigureEndpoint@direction:
  1410                           	opt stack 0
  1411  000023                     USBCtrlTrfTxService@byteToSend:
  1412                           	opt stack 0
  1413  000023                     USBCtrlTrfRxService@i:
  1414                           	opt stack 0
  1415  000023                     OpenSPI@bus_mode:
  1416                           	opt stack 0
  1417  000023                     ReadSPI@TempVar:
  1418                           	opt stack 0
  1419  000023                     WriteSPI@TempVar:
  1420                           	opt stack 0
  1421  000023                     Delay100TCYx@unit:
  1422                           	opt stack 0
  1423  000023                     Delay10TCYx@unit:
  1424                           	opt stack 0
  1425  000023                     putUSBUSART@data:
  1426                           	opt stack 0
  1427  000023                     Read_b_eep@badd:
  1428                           	opt stack 0
  1429  000023                     Write_b_eep@badd:
  1430                           	opt stack 0
  1431  000023                     ___awdiv@dividend:
  1432                           	opt stack 0
  1433  000023                     ___lwdiv@dividend:
  1434                           	opt stack 0
  1435  000023                     memset@p1:
  1436                           	opt stack 0
  1437                           
  1438                           ; 2 bytes @ 0x22
  1439  000023                     	ds	1
  1440  000024                     ??_USBConfigureEndpoint:
  1441  000024                     USBCtrlTrfRxService@byteToRead:
  1442                           	opt stack 0
  1443  000024                     USBCtrlTrfInHandler@lastDTS:
  1444                           	opt stack 0
  1445  000024                     OpenSPI@smp_phase:
  1446                           	opt stack 0
  1447  000024                     WriteSPI@data_out:
  1448                           	opt stack 0
  1449  000024                     USBTransferOnePacket@data:
  1450                           	opt stack 0
  1451  000024                     USBStdGetStatusHandler@p:
  1452                           	opt stack 0
  1453                           
  1454                           ; 2 bytes @ 0x23
  1455  000024                     	ds	1
  1456  000025                     ??_ReadADC:
  1457  000025                     putUSBUSART@length:
  1458                           	opt stack 0
  1459  000025                     gamma_lookup@c:
  1460                           	opt stack 0
  1461  000025                     readDeviceID@devID1:
  1462                           	opt stack 0
  1463  000025                     tlc5947_update@x:
  1464                           	opt stack 0
  1465  000025                     Write_b_eep@bdat:
  1466                           	opt stack 0
  1467  000025                     OpenSPI@sync_mode:
  1468                           	opt stack 0
  1469  000025                     ___awdiv@divisor:
  1470                           	opt stack 0
  1471  000025                     ___lwdiv@divisor:
  1472                           	opt stack 0
  1473  000025                     memset@c:
  1474                           	opt stack 0
  1475                           
  1476                           ; 2 bytes @ 0x24
  1477  000025                     	ds	1
  1478  000026                     USBTransferOnePacket@len:
  1479                           	opt stack 0
  1480  000026                     readDeviceID@devID2:
  1481                           	opt stack 0
  1482  000026                     tlc5947_setChannel@val:
  1483                           	opt stack 0
  1484  000026                     Write_b_eep@GIE_BIT_VAL:
  1485                           	opt stack 0
  1486                           
  1487                           ; 1 bytes @ 0x25
  1488  000026                     	ds	1
  1489  000027                     ??_tlc5947_setChannel:
  1490  000027                     USBTransferOnePacket@ep:
  1491                           	opt stack 0
  1492  000027                     _readDeviceID$2783:
  1493                           	opt stack 0
  1494  000027                     ___awdiv@counter:
  1495                           	opt stack 0
  1496  000027                     ___lwdiv@quotient:
  1497                           	opt stack 0
  1498  000027                     memset@n:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x26
  1502  000027                     	ds	1
  1503  000028                     USBConfigureEndpoint@EPNum:
  1504                           	opt stack 0
  1505  000028                     ___awdiv@sign:
  1506                           	opt stack 0
  1507  000028                     USBTransferOnePacket@handle:
  1508                           	opt stack 0
  1509                           
  1510                           ; 2 bytes @ 0x27
  1511  000028                     	ds	1
  1512  000029                     ___lwdiv@counter:
  1513                           	opt stack 0
  1514  000029                     USBConfigureEndpoint@handle:
  1515                           	opt stack 0
  1516  000029                     ___awdiv@quotient:
  1517                           	opt stack 0
  1518  000029                     memset@p:
  1519                           	opt stack 0
  1520                           
  1521                           ; 2 bytes @ 0x28
  1522  000029                     	ds	1
  1523  00002A                     ??_CDCTxService:
  1524  00002A                     tlc5947_setChannel@ch:
  1525                           	opt stack 0
  1526  00002A                     getsUSBUSART@buffer:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0x29
  1530  00002A                     	ds	1
  1531  00002B                     USBDeviceInit@i:
  1532                           	opt stack 0
  1533  00002B                     USBEnableEndpoint@options:
  1534                           	opt stack 0
  1535  00002B                     tlc5947_count_channels@old_data:
  1536                           	opt stack 0
  1537  00002B                     _CDCTxService$1689:
  1538                           	opt stack 0
  1539  00002B                     tlc5947_setChannel@col:
  1540                           	opt stack 0
  1541                           
  1542                           ; 2 bytes @ 0x2A
  1543  00002B                     	ds	1
  1544  00002C                     getsUSBUSART@len:
  1545                           	opt stack 0
  1546  00002C                     tlc5947_count_channels@data:
  1547                           	opt stack 0
  1548  00002C                     USBEnableEndpoint@p:
  1549                           	opt stack 0
  1550                           
  1551                           ; 2 bytes @ 0x2B
  1552  00002C                     	ds	1
  1553  00002D                     ??_getsUSBUSART:
  1554  00002D                     CDCTxService@i:
  1555                           	opt stack 0
  1556  00002D                     tlc5947_setChannel@pos:
  1557                           	opt stack 0
  1558  00002D                     tlc5947_count_channels@pos:
  1559                           	opt stack 0
  1560                           
  1561                           ; 1 bytes @ 0x2C
  1562  00002D                     	ds	1
  1563  00002E                     USBEnableEndpoint@ep:
  1564                           	opt stack 0
  1565  00002E                     CDCTxService@byte_to_send:
  1566                           	opt stack 0
  1567  00002E                     tlc5947_setChannel@mpos:
  1568                           	opt stack 0
  1569  00002E                     _getsUSBUSART$1641:
  1570                           	opt stack 0
  1571                           
  1572                           ; 2 bytes @ 0x2D
  1573  00002E                     	ds	1
  1574  00002F                     ??_tlc5947_pwm_readback:
  1575  00002F                     comm_send_rply@cc:
  1576                           	opt stack 0
  1577  00002F                     comm_send_dat@i:
  1578                           	opt stack 0
  1579  00002F                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1580                           	opt stack 0
  1581                           
  1582                           ; 2 bytes @ 0x2E
  1583  00002F                     	ds	1
  1584  000030                     comm_send_dat@len:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x2F
  1588  000030                     	ds	1
  1589  000031                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1590                           	opt stack 0
  1591                           
  1592                           ; 2 bytes @ 0x30
  1593  000031                     	ds	2
  1594  000033                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1595                           	opt stack 0
  1596                           
  1597                           ; 2 bytes @ 0x32
  1598  000033                     	ds	2
  1599  000035                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1600  000035                     tlc5947_pwm_readback@i:
  1601                           	opt stack 0
  1602                           
  1603                           ; 1 bytes @ 0x34
  1604  000035                     	ds	1
  1605  000036                     
  1606                           ; 0 bytes @ 0x35
  1607  000036                     	ds	1
  1608  000037                     ??_USBStdFeatureReqHandler:
  1609  000037                     USBStdSetCfgHandler@i:
  1610                           	opt stack 0
  1611                           
  1612                           ; 1 bytes @ 0x36
  1613  000037                     	ds	1
  1614  000038                     USBStdFeatureReqHandler@pUEP:
  1615                           	opt stack 0
  1616                           
  1617                           ; 2 bytes @ 0x37
  1618  000038                     	ds	2
  1619  00003A                     USBStdFeatureReqHandler@current_ep_data:
  1620                           	opt stack 0
  1621                           
  1622                           ; 1 bytes @ 0x39
  1623  00003A                     	ds	1
  1624  00003B                     USBStdFeatureReqHandler@p:
  1625                           	opt stack 0
  1626                           
  1627                           ; 2 bytes @ 0x3A
  1628  00003B                     	ds	2
  1629  00003D                     USBCtrlEPService@setup_cnt:
  1630                           	opt stack 0
  1631                           
  1632                           ; 1 bytes @ 0x3C
  1633  00003D                     	ds	1
  1634  00003E                     tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           postinc0	equ	0xFEE
  1639                           wreg	equ	0xFE8
  1640                           postdec1	equ	0xFE5
  1641                           fsr1h	equ	0xFE2
  1642                           fsr1l	equ	0xFE1
  1643                           
  1644                           ; 0 bytes @ 0x3D
  1645 ;;
  1646 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1647 ;;
  1648 ;; *************** function _main *****************
  1649 ;; Defined at:
  1650 ;;		line 74 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;		None               void
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels required when called:   15
  1670 ;; This function calls:
  1671 ;;		_InitializeSystem
  1672 ;;		_ProcessIO
  1673 ;; This function is called by:
  1674 ;;		Startup code after reset
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text0
  1679  0033A8                     __ptext0:
  1680                           	opt stack 0
  1681  0033A8                     _main:
  1682                           	opt stack 16
  1683                           
  1684                           ;karate.c: 76: InitializeSystem();
  1685                           
  1686                           ;incstack = 0
  1687  0033A8  ECB5  F00C         	call	_InitializeSystem	;wreg free
  1688  0033AC  D000               	goto	l5688
  1689  0033AE                     l5688:
  1690                           
  1691                           ;karate.c: 79: if(PORTCbits.RC6 && (USBDeviceState == DETACHED_STATE)) {
  1692  0033AE  5082               	movf	3970,w,c	;volatile
  1693  0033B0  D000               	goto	l5692
  1694  0033B2                     l5692:
  1695                           
  1696                           ;karate.c: 81: }
  1697                           ;karate.c: 83: ProcessIO();
  1698  0033B2  EC6B  F00F         	call	_ProcessIO	;wreg free
  1699  0033B6  D7FB               	goto	l5688
  1700  0033B8  EF55  F004         	goto	start
  1701  0033BC                     __end_of_main:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           postinc0	equ	0xFEE
  1708                           wreg	equ	0xFE8
  1709                           postdec1	equ	0xFE5
  1710                           fsr1h	equ	0xFE2
  1711                           fsr1l	equ	0xFE1
  1712                           
  1713 ;; *************** function _ProcessIO *****************
  1714 ;; Defined at:
  1715 ;;		line 214 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  x               1   18[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;		None               void
  1722 ;; Registers used:
  1723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         0       0       0       0       0       0       0       0       0
  1730 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1732 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1733 ;;Total ram usage:        1 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:   14
  1736 ;; This function calls:
  1737 ;;		_BlinkUSBStatus
  1738 ;;		_CDCTxService
  1739 ;;		_ProcessCDC
  1740 ;;		_SwitchIsPressed
  1741 ;;		_USBDeviceTasks
  1742 ;;		_tlc5947_setChannel
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text1
  1749  001ED6                     __ptext1:
  1750                           	opt stack 0
  1751  001ED6                     _ProcessIO:
  1752                           	opt stack 16
  1753                           
  1754                           ;karate.c: 216: unsigned char x;
  1755                           ;karate.c: 219: USBDeviceTasks();
  1756                           
  1757                           ;incstack = 0
  1758  001ED6  EC76  F008         	call	_USBDeviceTasks	;wreg free
  1759                           
  1760                           ;karate.c: 222: BlinkUSBStatus();
  1761  001EDA  EC23  F018         	call	_BlinkUSBStatus	;wreg free
  1762                           
  1763                           ;karate.c: 225: if (green_led_counter > 0) {
  1764  001EDE  0100               	movlb	0	; () banked
  1765  001EE0  519C               	movf	_green_led_counter& (0+255),w,b
  1766  001EE2  B4D8               	btfsc	status,2,c
  1767  001EE4  D003               	goto	l718
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;karate.c: 226: green_led_counter--;
  1771  001EE6  0100               	movlb	0	; () banked
  1772  001EE8  079C               	decf	_green_led_counter& (0+255),f,b
  1773                           
  1774                           ;karate.c: 227: } else {
  1775  001EEA  D002               	goto	l5550
  1776  001EEC                     l718:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;karate.c: 228: LATCbits.LATC2 = 0;;
  1780  001EEC  948B               	bcf	3979,2,c	;volatile
  1781  001EEE  D000               	goto	l5550
  1782  001EF0                     l5550:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;karate.c: 229: }
  1786                           ;karate.c: 232: if (SwitchIsPressed()) {
  1787  001EF0  EC33  F019         	call	_SwitchIsPressed	;wreg free
  1788  001EF4  0900               	iorlw	0
  1789  001EF6  B4D8               	btfsc	status,2,c
  1790  001EF8  D057               	goto	l5570
  1791                           
  1792                           ;karate.c: 233: pattern_number++;
  1793  001EFA  0100               	movlb	0	; () banked
  1794  001EFC  2B9E               	incf	_pattern_number& (0+255),f,b
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;karate.c: 234: if (pattern_number > 6) {
  1798  001EFE  0E06               	movlw	6
  1799  001F00  0100               	movlb	0	; () banked
  1800  001F02  659E               	cpfsgt	_pattern_number& (0+255),b
  1801  001F04  D003               	goto	l721
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;karate.c: 235: pattern_number = 0;
  1805  001F06  0E00               	movlw	0
  1806  001F08  0100               	movlb	0	; () banked
  1807  001F0A  6F9E               	movwf	_pattern_number& (0+255),b
  1808  001F0C                     l721:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;karate.c: 236: }
  1812                           ;karate.c: 238: tlc_request = 0;
  1813  001F0C  0E00               	movlw	0
  1814  001F0E  0100               	movlb	0	; () banked
  1815  001F10  6FA0               	movwf	_tlc_request& (0+255),b
  1816                           
  1817                           ;karate.c: 239: for (x=0; x < tlc_nchannels; x+=3) {
  1818  001F12  0E00               	movlw	0
  1819  001F14  0100               	movlb	0	; () banked
  1820  001F16  6FF0               	movwf	ProcessIO@x& (0+255),b
  1821  001F18  D03A               	goto	l5562
  1822  001F1A                     l5558:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;karate.c: 240: tlc5947_setChannel(x+0, test_pattern[0 + pattern_number*3]);
  1826  001F1A  0100               	movlb	0	; () banked
  1827  001F1C  519E               	movf	_pattern_number& (0+255),w,b
  1828  001F1E  0D03               	mullw	3
  1829  001F20  0EC8               	movlw	low _test_pattern
  1830  001F22  24F3               	addwf	prodl,w,c
  1831  001F24  6ED9               	movwf	fsr2l,c
  1832  001F26  0E01               	movlw	high _test_pattern
  1833  001F28  20F4               	addwfc	prodh,w,c
  1834  001F2A  6EDA               	movwf	fsr2h,c
  1835  001F2C  50DF               	movf	indf2,w,c
  1836  001F2E  6E26               	movwf	tlc5947_setChannel@val,c
  1837  001F30  0100               	movlb	0	; () banked
  1838  001F32  51F0               	movf	ProcessIO@x& (0+255),w,b
  1839  001F34  EC87  F00A         	call	_tlc5947_setChannel
  1840                           
  1841                           ;karate.c: 241: tlc5947_setChannel(x+1, test_pattern[1 + pattern_number*3]);
  1842  001F38  0100               	movlb	0	; () banked
  1843  001F3A  519E               	movf	_pattern_number& (0+255),w,b
  1844  001F3C  0D03               	mullw	3
  1845  001F3E  0E01               	movlw	1
  1846  001F40  26F3               	addwf	prodl,f,c
  1847  001F42  0E00               	movlw	0
  1848  001F44  22F4               	addwfc	prodh,f,c
  1849  001F46  0EC8               	movlw	low _test_pattern
  1850  001F48  24F3               	addwf	prodl,w,c
  1851  001F4A  6ED9               	movwf	fsr2l,c
  1852  001F4C  0E01               	movlw	high _test_pattern
  1853  001F4E  20F4               	addwfc	prodh,w,c
  1854  001F50  6EDA               	movwf	fsr2h,c
  1855  001F52  50DF               	movf	indf2,w,c
  1856  001F54  6E26               	movwf	tlc5947_setChannel@val,c
  1857  001F56  0100               	movlb	0	; () banked
  1858  001F58  29F0               	incf	ProcessIO@x& (0+255),w,b
  1859  001F5A  EC87  F00A         	call	_tlc5947_setChannel
  1860                           
  1861                           ;karate.c: 242: tlc5947_setChannel(x+2, test_pattern[2 + pattern_number*3]);
  1862  001F5E  0100               	movlb	0	; () banked
  1863  001F60  519E               	movf	_pattern_number& (0+255),w,b
  1864  001F62  0D03               	mullw	3
  1865  001F64  0E02               	movlw	2
  1866  001F66  26F3               	addwf	prodl,f,c
  1867  001F68  0E00               	movlw	0
  1868  001F6A  22F4               	addwfc	prodh,f,c
  1869  001F6C  0EC8               	movlw	low _test_pattern
  1870  001F6E  24F3               	addwf	prodl,w,c
  1871  001F70  6ED9               	movwf	fsr2l,c
  1872  001F72  0E01               	movlw	high _test_pattern
  1873  001F74  20F4               	addwfc	prodh,w,c
  1874  001F76  6EDA               	movwf	fsr2h,c
  1875  001F78  50DF               	movf	indf2,w,c
  1876  001F7A  6E26               	movwf	tlc5947_setChannel@val,c
  1877  001F7C  0100               	movlb	0	; () banked
  1878  001F7E  51F0               	movf	ProcessIO@x& (0+255),w,b
  1879  001F80  0F02               	addlw	2
  1880  001F82  EC87  F00A         	call	_tlc5947_setChannel
  1881  001F86  0E03               	movlw	3
  1882  001F88  0100               	movlb	0	; () banked
  1883  001F8A  27F0               	addwf	ProcessIO@x& (0+255),f,b
  1884  001F8C  D000               	goto	l5562
  1885  001F8E                     l5562:
  1886                           
  1887                           ; BSR set to: 0
  1888  001F8E  0100               	movlb	0	; () banked
  1889  001F90  51DD               	movf	_tlc_nchannels& (0+255),w,b
  1890  001F92  0100               	movlb	0	; () banked
  1891  001F94  5DF0               	subwf	ProcessIO@x& (0+255),w,b
  1892  001F96  A0D8               	btfss	status,0,c
  1893  001F98  D7C0               	goto	l5558
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;karate.c: 243: }
  1897                           ;karate.c: 244: tlc_request = 1;
  1898                           
  1899                           ; BSR set to: 0
  1900  001F9A  0E01               	movlw	1
  1901  001F9C  0100               	movlb	0	; () banked
  1902  001F9E  6FA0               	movwf	_tlc_request& (0+255),b
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;karate.c: 247: LATCbits.LATC2 = 1;;
  1906  001FA0  848B               	bsf	3979,2,c	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;karate.c: 248: green_led_counter = 255;
  1910  001FA2  0100               	movlb	0	; () banked
  1911  001FA4  699C               	setf	_green_led_counter& (0+255),b
  1912  001FA6  D000               	goto	l5570
  1913  001FA8                     l5570:
  1914                           
  1915                           ;karate.c: 249: }
  1916                           ;karate.c: 252: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  1917  001FA8  0E1F               	movlw	31
  1918  001FAA  0100               	movlb	0	; () banked
  1919  001FAC  6597               	cpfsgt	_USBDeviceState& (0+255),b
  1920  001FAE  D008               	goto	l728
  1921                           
  1922                           ; BSR set to: 0
  1923  001FB0  B26D               	btfsc	3949,1,c	;volatile
  1924  001FB2  D006               	goto	l728
  1925  001FB4  D001               	goto	l5574
  1926                           
  1927                           ; BSR set to: 0
  1928  001FB6  D004               	goto	l728
  1929  001FB8                     l5574:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;karate.c: 255: ProcessCDC();
  1933  001FB8  ECD7  F004         	call	_ProcessCDC	;wreg free
  1934                           
  1935                           ;karate.c: 256: CDCTxService();
  1936  001FBC  EC0A  F00C         	call	_CDCTxService	;wreg free
  1937  001FC0                     l728:
  1938  001FC0  0012               	return		;funcret
  1939  001FC2                     __end_of_ProcessIO:
  1940                           	opt stack 0
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1h	equ	0xFE2
  1951                           fsr1l	equ	0xFE1
  1952                           indf2	equ	0xFDF
  1953                           fsr2h	equ	0xFDA
  1954                           fsr2l	equ	0xFD9
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _SwitchIsPressed *****************
  1958 ;; Defined at:
  1959 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    4
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_ProcessIO
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text2
  1988  003266                     __ptext2:
  1989                           	opt stack 0
  1990  003266                     _SwitchIsPressed:
  1991                           	opt stack 25
  1992                           
  1993                           ;karate.c: 187: if(PORTAbits.RA1 != old_sw2) {
  1994                           
  1995                           ;incstack = 0
  1996  003266  A280               	btfss	3968,1,c	;volatile
  1997  003268  D002               	goto	u4290
  1998  00326A  0E01               	movlw	1
  1999  00326C  D001               	goto	u4296
  2000  00326E                     u4290:
  2001  00326E  0E00               	movlw	0
  2002  003270                     u4296:
  2003  003270  0100               	movlb	0	; () banked
  2004  003272  199D               	xorwf	_old_sw2& (0+255),w,b
  2005  003274  B4D8               	btfsc	status,2,c
  2006  003276  D00A               	goto	l5184
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;karate.c: 188: old_sw2 = PORTAbits.RA1;
  2010  003278  0E00               	movlw	0
  2011  00327A  B280               	btfsc	3968,1,c	;volatile
  2012  00327C  0E01               	movlw	1
  2013  00327E  0100               	movlb	0	; () banked
  2014  003280  6F9D               	movwf	_old_sw2& (0+255),b
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;karate.c: 189: if(PORTAbits.RA1 == 0) {
  2018  003282  B280               	btfsc	3968,1,c	;volatile
  2019  003284  D003               	goto	l5184
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;karate.c: 190: return 1;
  2023  003286  0E01               	movlw	1
  2024                           
  2025                           ; BSR set to: 0
  2026  003288  D003               	goto	l715
  2027                           
  2028                           ; BSR set to: 0
  2029  00328A  D000               	goto	l5184
  2030  00328C                     l5184:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;karate.c: 191: }
  2034                           ;karate.c: 192: }
  2035                           ;karate.c: 193: return 0;
  2036  00328C  0E00               	movlw	0
  2037  00328E  D000               	goto	l715
  2038  003290                     l715:
  2039                           
  2040                           ; BSR set to: 0
  2041  003290  0012               	return		;funcret
  2042  003292                     __end_of_SwitchIsPressed:
  2043                           	opt stack 0
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           prodh	equ	0xFF4
  2049                           prodl	equ	0xFF3
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           postdec1	equ	0xFE5
  2053                           fsr1h	equ	0xFE2
  2054                           fsr1l	equ	0xFE1
  2055                           indf2	equ	0xFDF
  2056                           fsr2h	equ	0xFDA
  2057                           fsr2l	equ	0xFD9
  2058                           status	equ	0xFD8
  2059                           
  2060 ;; *************** function _ProcessCDC *****************
  2061 ;; Defined at:
  2062 ;;		line 67 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  _y              2   10[BANK0 ] unsigned int 
  2067 ;;  len             1   17[BANK0 ] unsigned char 
  2068 ;;  _x              1   16[BANK0 ] unsigned char 
  2069 ;;  numBytes        1   15[BANK0 ] unsigned char 
  2070 ;;  boot_request    1   14[BANK0 ] unsigned char 
  2071 ;;  boot_request    1   13[BANK0 ] unsigned char 
  2072 ;;  cmd             1   12[BANK0 ] unsigned char 
  2073 ;;  checksum        1    9[BANK0 ] unsigned char 
  2074 ;;  _c              1    8[BANK0 ] unsigned char 
  2075 ;;  csum            1    7[BANK0 ] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0
  2086 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2087 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2088 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2089 ;;Total ram usage:       15 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:   13
  2092 ;; This function calls:
  2093 ;;		_BusyADC
  2094 ;;		_Busy_eep
  2095 ;;		_ConvertADC
  2096 ;;		_Delay10TCYx
  2097 ;;		_ReadADC
  2098 ;;		_Read_b_eep
  2099 ;;		_USBDeviceTasks
  2100 ;;		_Write_b_eep
  2101 ;;		_comm_send_dat
  2102 ;;		_comm_send_rply
  2103 ;;		_getsUSBUSART
  2104 ;;		_tlc5947_count_channels
  2105 ;;		_tlc5947_pwm_readback
  2106 ;;		_tlc5947_setChannel
  2107 ;; This function is called by:
  2108 ;;		_ProcessIO
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text3
  2113  0009AE                     __ptext3:
  2114                           	opt stack 0
  2115  0009AE                     _ProcessCDC:
  2116                           	opt stack 16
  2117                           
  2118                           ;comm.c: 69: unsigned char numBytes, len, cmd, csum;
  2119                           ;comm.c: 70: unsigned char _x,_c = 0;
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;incstack = 0
  2123  0009AE  0E00               	movlw	0
  2124  0009B0  0100               	movlb	0	; () banked
  2125  0009B2  6FE6               	movwf	ProcessCDC@_c& (0+255),b
  2126                           
  2127                           ;comm.c: 71: unsigned int _y = 0;
  2128  0009B4  0E00               	movlw	0
  2129  0009B6  0100               	movlb	0	; () banked
  2130  0009B8  6FE9               	movwf	(ProcessCDC@_y+1)& (0+255),b
  2131  0009BA  0E00               	movlw	0
  2132  0009BC  6FE8               	movwf	ProcessCDC@_y& (0+255),b
  2133                           
  2134                           ;comm.c: 73: unsigned char checksum;
  2135                           ;comm.c: 74: unsigned char boot_request0 = 0x23;
  2136  0009BE  0E23               	movlw	35
  2137  0009C0  0100               	movlb	0	; () banked
  2138  0009C2  6FEB               	movwf	ProcessCDC@boot_request0& (0+255),b
  2139                           
  2140                           ;comm.c: 75: unsigned char boot_request1 = 0x42;
  2141  0009C4  0E42               	movlw	66
  2142  0009C6  0100               	movlb	0	; () banked
  2143  0009C8  6FEC               	movwf	ProcessCDC@boot_request1& (0+255),b
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;comm.c: 78: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2147  0009CA  0E1F               	movlw	31
  2148  0009CC  0100               	movlb	0	; () banked
  2149  0009CE  6597               	cpfsgt	_USBDeviceState& (0+255),b
  2150  0009D0  D241               	goto	l928
  2151                           
  2152                           ; BSR set to: 0
  2153  0009D2  B26D               	btfsc	3949,1,c	;volatile
  2154  0009D4  D23F               	goto	l928
  2155  0009D6  D001               	goto	l5202
  2156                           
  2157                           ; BSR set to: 0
  2158  0009D8  D23D               	goto	l928
  2159  0009DA                     l5202:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;comm.c: 81: numBytes = getsUSBUSART(CDCBufferIn, 64);
  2163  0009DA  0E00               	movlw	low _CDCBufferIn
  2164  0009DC  6E2A               	movwf	getsUSBUSART@buffer,c
  2165  0009DE  0E01               	movlw	high _CDCBufferIn
  2166  0009E0  6E2B               	movwf	getsUSBUSART@buffer+1,c
  2167  0009E2  0E40               	movlw	64
  2168  0009E4  6E2C               	movwf	getsUSBUSART@len,c
  2169  0009E6  EC7F  F013         	call	_getsUSBUSART	;wreg free
  2170  0009EA  0100               	movlb	0	; () banked
  2171  0009EC  6FED               	movwf	ProcessCDC@numBytes& (0+255),b
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;comm.c: 84: if ((numBytes >= 0x04) && (CDCBufferIn[0x00] == 0xAA)) {
  2175  0009EE  0E03               	movlw	3
  2176  0009F0  0100               	movlb	0	; () banked
  2177  0009F2  65ED               	cpfsgt	ProcessCDC@numBytes& (0+255),b
  2178  0009F4  D22B               	goto	l5418
  2179                           
  2180                           ; BSR set to: 0
  2181  0009F6  0EAA               	movlw	170
  2182  0009F8  0101               	movlb	1	; () banked
  2183  0009FA  1900               	xorwf	_CDCBufferIn& (0+255),w,b
  2184  0009FC  A4D8               	btfss	status,2,c
  2185  0009FE  D226               	goto	l5418
  2186                           
  2187                           ; BSR set to: 1
  2188                           ;comm.c: 85: len = CDCBufferIn[0x03];
  2189  000A00  C103  F0EF         	movff	_CDCBufferIn+3,ProcessCDC@len
  2190                           
  2191                           ;comm.c: 86: cmd = CDCBufferIn[0x01];
  2192  000A04  C101  F0EA         	movff	_CDCBufferIn+1,ProcessCDC@cmd
  2193                           
  2194                           ;comm.c: 87: csum = CDCBufferIn[0x02];
  2195  000A08  C102  F0E5         	movff	_CDCBufferIn+2,ProcessCDC@csum
  2196                           
  2197                           ; BSR set to: 1
  2198                           ;comm.c: 88: if ((len + 0x04) == numBytes) {
  2199  000A0C  0100               	movlb	0	; () banked
  2200  000A0E  51ED               	movf	ProcessCDC@numBytes& (0+255),w,b
  2201  000A10  0100               	movlb	0	; () banked
  2202  000A12  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2203  000A14  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2204  000A16  0100               	movlb	0	; () banked
  2205  000A18  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2206  000A1A  0100               	movlb	0	; () banked
  2207  000A1C  6FE3               	movwf	(??_ProcessCDC+2)& (0+255),b
  2208  000A1E  6BE4               	clrf	(??_ProcessCDC+3)& (0+255),b
  2209  000A20  0E04               	movlw	4
  2210  000A22  0100               	movlb	0	; () banked
  2211  000A24  27E3               	addwf	(??_ProcessCDC+2)& (0+255),f,b
  2212  000A26  0E00               	movlw	0
  2213  000A28  23E4               	addwfc	(??_ProcessCDC+3)& (0+255),f,b
  2214  000A2A  0100               	movlb	0	; () banked
  2215  000A2C  51E1               	movf	??_ProcessCDC& (0+255),w,b
  2216  000A2E  0100               	movlb	0	; () banked
  2217  000A30  19E3               	xorwf	(??_ProcessCDC+2)& (0+255),w,b
  2218  000A32  E105               	bnz	u4401
  2219  000A34  0100               	movlb	0	; () banked
  2220  000A36  51E2               	movf	(??_ProcessCDC+1)& (0+255),w,b
  2221  000A38  0100               	movlb	0	; () banked
  2222  000A3A  19E4               	xorwf	(??_ProcessCDC+3)& (0+255),w,b
  2223  000A3C  A4D8               	btfss	status,2,c
  2224  000A3E                     u4401:
  2225  000A3E  D202               	goto	l5416
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;comm.c: 91: checksum= CDCBufferIn[0x00] ^ CDCBufferIn[0x01];
  2229  000A40  0101               	movlb	1	; () banked
  2230  000A42  5101               	movf	(_CDCBufferIn+1)& (0+255),w,b
  2231  000A44  0101               	movlb	1	; () banked
  2232  000A46  1900               	xorwf	_CDCBufferIn& (0+255),w,b
  2233  000A48  0100               	movlb	0	; () banked
  2234  000A4A  6FE7               	movwf	ProcessCDC@checksum& (0+255),b
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;comm.c: 92: for (_x = 0x03; _x < numBytes; _x++) {
  2238  000A4C  0E03               	movlw	3
  2239  000A4E  0100               	movlb	0	; () banked
  2240  000A50  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2241  000A52  D00F               	goto	l5220
  2242  000A54                     l5216:
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;comm.c: 93: checksum ^= CDCBufferIn[_x];
  2246  000A54  0100               	movlb	0	; () banked
  2247  000A56  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2248  000A58  0D01               	mullw	1
  2249  000A5A  0E00               	movlw	low _CDCBufferIn
  2250  000A5C  24F3               	addwf	prodl,w,c
  2251  000A5E  6ED9               	movwf	fsr2l,c
  2252  000A60  0E01               	movlw	high _CDCBufferIn
  2253  000A62  20F4               	addwfc	prodh,w,c
  2254  000A64  6EDA               	movwf	fsr2h,c
  2255  000A66  50DF               	movf	indf2,w,c
  2256  000A68  0100               	movlb	0	; () banked
  2257  000A6A  1BE7               	xorwf	ProcessCDC@checksum& (0+255),f,b
  2258                           
  2259                           ; BSR set to: 0
  2260  000A6C  0100               	movlb	0	; () banked
  2261  000A6E  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2262  000A70  D000               	goto	l5220
  2263  000A72                     l5220:
  2264                           
  2265                           ; BSR set to: 0
  2266  000A72  0100               	movlb	0	; () banked
  2267  000A74  51ED               	movf	ProcessCDC@numBytes& (0+255),w,b
  2268  000A76  0100               	movlb	0	; () banked
  2269  000A78  5DEE               	subwf	ProcessCDC@_x& (0+255),w,b
  2270  000A7A  A0D8               	btfss	status,0,c
  2271  000A7C  D7EB               	goto	l5216
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;comm.c: 94: }
  2275                           ;comm.c: 95: if (csum == checksum) {
  2276                           
  2277                           ; BSR set to: 0
  2278  000A7E  0100               	movlb	0	; () banked
  2279  000A80  51E7               	movf	ProcessCDC@checksum& (0+255),w,b
  2280  000A82  0100               	movlb	0	; () banked
  2281  000A84  19E5               	xorwf	ProcessCDC@csum& (0+255),w,b
  2282  000A86  A4D8               	btfss	status,2,c
  2283  000A88  D1D9               	goto	l5414
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;comm.c: 96: LATCbits.LATC2 = 1;;
  2287  000A8A  848B               	bsf	3979,2,c	;volatile
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;comm.c: 97: green_led_counter = 128;
  2291  000A8C  0E80               	movlw	128
  2292  000A8E  0100               	movlb	0	; () banked
  2293  000A90  6F9C               	movwf	_green_led_counter& (0+255),b
  2294                           
  2295                           ;comm.c: 99: switch (cmd) {
  2296  000A92  D1A3               	goto	l5412
  2297  000A94                     l5228:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;comm.c: 101: if (len == 0) {
  2301  000A94  0100               	movlb	0	; () banked
  2302  000A96  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2303  000A98  0100               	movlb	0	; () banked
  2304  000A9A  A4D8               	btfss	status,2,c
  2305  000A9C  D018               	goto	l5242
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;comm.c: 102: ConvertADC();
  2309  000A9E  EC1F  F01A         	call	_ConvertADC	;wreg free
  2310                           
  2311                           ;comm.c: 103: while (BusyADC());
  2312  000AA2  D000               	goto	l5232
  2313  000AA4                     l5232:
  2314  000AA4  EC14  F01A         	call	_BusyADC	;wreg free
  2315  000AA8  0900               	iorlw	0
  2316  000AAA  A4D8               	btfss	status,2,c
  2317  000AAC  D7FB               	goto	l5232
  2318                           
  2319                           ;comm.c: 104: _y = ReadADC();
  2320  000AAE  EC0C  F01A         	call	_ReadADC	;wreg free
  2321  000AB2  C023  F0E8         	movff	?_ReadADC,ProcessCDC@_y
  2322  000AB6  C024  F0E9         	movff	?_ReadADC+1,ProcessCDC@_y+1
  2323                           
  2324                           ;comm.c: 105: CDCBufferOut[0x04 + 0] = (unsigned char)(_y & 0xFF);
  2325  000ABA  C0E8  F144         	movff	ProcessCDC@_y,_CDCBufferOut+4
  2326                           
  2327                           ;comm.c: 106: CDCBufferOut[0x04 + 1] = (unsigned char)(_y>>8 & 0xFF);
  2328  000ABE  0100               	movlb	0	; () banked
  2329  000AC0  51E9               	movf	(ProcessCDC@_y+1)& (0+255),w,b
  2330  000AC2  0101               	movlb	1	; () banked
  2331  000AC4  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2332                           
  2333                           ; BSR set to: 1
  2334                           ;comm.c: 107: comm_send_dat(2);
  2335  000AC6  0E02               	movlw	2
  2336  000AC8  ECB9  F015         	call	_comm_send_dat
  2337                           
  2338                           ;comm.c: 108: } else {
  2339  000ACC  D1C3               	goto	l928
  2340  000ACE                     l5242:
  2341                           
  2342                           ;comm.c: 109: comm_send_rply(0x03);
  2343  000ACE  0E03               	movlw	3
  2344  000AD0  ECFA  F017         	call	_comm_send_rply
  2345                           
  2346                           ;comm.c: 110: }
  2347                           ;comm.c: 111: break;
  2348  000AD4  D1BF               	goto	l928
  2349                           
  2350                           ;comm.c: 113: case 0x20:
  2351  000AD6  D000               	goto	l5244
  2352  000AD8                     l5244:
  2353                           
  2354                           ;comm.c: 114: case 0x21:
  2355                           ;comm.c: 115: if (len == 32) {
  2356  000AD8  0E20               	movlw	32
  2357  000ADA  0100               	movlb	0	; () banked
  2358  000ADC  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2359  000ADE  A4D8               	btfss	status,2,c
  2360  000AE0  D038               	goto	l5266
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;comm.c: 116: tlc_request = 0;
  2364  000AE2  0E00               	movlw	0
  2365  000AE4  0100               	movlb	0	; () banked
  2366  000AE6  6FA0               	movwf	_tlc_request& (0+255),b
  2367                           
  2368                           ;comm.c: 117: for (_x=0; _x<32; _x++) {
  2369  000AE8  0E00               	movlw	0
  2370  000AEA  0100               	movlb	0	; () banked
  2371  000AEC  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2372  000AEE                     l5248:
  2373                           
  2374                           ; BSR set to: 0
  2375  000AEE  0E1F               	movlw	31
  2376  000AF0  0100               	movlb	0	; () banked
  2377  000AF2  65EE               	cpfsgt	ProcessCDC@_x& (0+255),b
  2378  000AF4  D001               	goto	l5252
  2379                           
  2380                           ; BSR set to: 0
  2381  000AF6  D023               	goto	l5260
  2382  000AF8                     l5252:
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;comm.c: 118: _c = _x + (cmd - 0x20) * 32;
  2386  000AF8  0100               	movlb	0	; () banked
  2387  000AFA  39EA               	swapf	ProcessCDC@cmd& (0+255),w,b
  2388  000AFC  46E8               	rlncf	wreg,f,c
  2389  000AFE  0BE0               	andlw	224
  2390  000B00  0100               	movlb	0	; () banked
  2391  000B02  25EE               	addwf	ProcessCDC@_x& (0+255),w,b
  2392  000B04  0100               	movlb	0	; () banked
  2393  000B06  6FE6               	movwf	ProcessCDC@_c& (0+255),b
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;comm.c: 119: tlc5947_setChannel(_c, CDCBufferIn[0x04 + _x]);
  2397  000B08  0100               	movlb	0	; () banked
  2398  000B0A  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2399  000B0C  0100               	movlb	0	; () banked
  2400  000B0E  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2401  000B10  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2402  000B12  0E04               	movlw	4
  2403  000B14  0100               	movlb	0	; () banked
  2404  000B16  27E1               	addwf	??_ProcessCDC& (0+255),f,b
  2405  000B18  0E00               	movlw	0
  2406  000B1A  23E2               	addwfc	(??_ProcessCDC+1)& (0+255),f,b
  2407  000B1C  0E00               	movlw	low _CDCBufferIn
  2408  000B1E  0100               	movlb	0	; () banked
  2409  000B20  25E1               	addwf	??_ProcessCDC& (0+255),w,b
  2410  000B22  6ED9               	movwf	fsr2l,c
  2411  000B24  0E01               	movlw	high _CDCBufferIn
  2412  000B26  0100               	movlb	0	; () banked
  2413  000B28  21E2               	addwfc	(??_ProcessCDC+1)& (0+255),w,b
  2414  000B2A  6EDA               	movwf	fsr2h,c
  2415  000B2C  50DF               	movf	indf2,w,c
  2416  000B2E  6E26               	movwf	tlc5947_setChannel@val,c
  2417  000B30  0100               	movlb	0	; () banked
  2418  000B32  51E6               	movf	ProcessCDC@_c& (0+255),w,b
  2419  000B34  EC87  F00A         	call	_tlc5947_setChannel
  2420  000B38  0100               	movlb	0	; () banked
  2421  000B3A  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2422  000B3C  D7D8               	goto	l5248
  2423  000B3E                     l5260:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;comm.c: 120: }
  2427                           ;comm.c: 121: tlc_request = 1;
  2428  000B3E  0E01               	movlw	1
  2429  000B40  0100               	movlb	0	; () banked
  2430  000B42  6FA0               	movwf	_tlc_request& (0+255),b
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;comm.c: 122: update_count++;
  2434  000B44  0100               	movlb	0	; () banked
  2435  000B46  4B92               	infsnz	_update_count& (0+255),f,b
  2436  000B48  2B93               	incf	(_update_count+1)& (0+255),f,b
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;comm.c: 124: comm_send_rply(0x01);
  2440  000B4A  0E01               	movlw	1
  2441  000B4C  ECFA  F017         	call	_comm_send_rply
  2442                           
  2443                           ;comm.c: 125: } else {
  2444  000B50  D181               	goto	l928
  2445  000B52                     l5266:
  2446                           
  2447                           ;comm.c: 126: comm_send_rply(0x03);
  2448  000B52  0E03               	movlw	3
  2449  000B54  ECFA  F017         	call	_comm_send_rply
  2450                           
  2451                           ;comm.c: 127: }
  2452                           ;comm.c: 128: break;
  2453  000B58  D17D               	goto	l928
  2454  000B5A                     l5268:
  2455                           
  2456                           ;comm.c: 132: if (len == tlc_nchannels) {
  2457  000B5A  0100               	movlb	0	; () banked
  2458  000B5C  51DD               	movf	_tlc_nchannels& (0+255),w,b
  2459  000B5E  0100               	movlb	0	; () banked
  2460  000B60  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2461  000B62  A4D8               	btfss	status,2,c
  2462  000B64  D032               	goto	l5284
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;comm.c: 133: tlc_request = 0;
  2466  000B66  0E00               	movlw	0
  2467  000B68  0100               	movlb	0	; () banked
  2468  000B6A  6FA0               	movwf	_tlc_request& (0+255),b
  2469                           
  2470                           ;comm.c: 134: for (_x = 0; _x < tlc_nchannels; _x++) {
  2471  000B6C  0E00               	movlw	0
  2472  000B6E  0100               	movlb	0	; () banked
  2473  000B70  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2474  000B72  D01B               	goto	l5276
  2475  000B74                     l5272:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;comm.c: 135: tlc5947_setChannel(_x, CDCBufferIn[0x04 + _x]);
  2479  000B74  0100               	movlb	0	; () banked
  2480  000B76  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2481  000B78  0100               	movlb	0	; () banked
  2482  000B7A  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2483  000B7C  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2484  000B7E  0E04               	movlw	4
  2485  000B80  0100               	movlb	0	; () banked
  2486  000B82  27E1               	addwf	??_ProcessCDC& (0+255),f,b
  2487  000B84  0E00               	movlw	0
  2488  000B86  23E2               	addwfc	(??_ProcessCDC+1)& (0+255),f,b
  2489  000B88  0E00               	movlw	low _CDCBufferIn
  2490  000B8A  0100               	movlb	0	; () banked
  2491  000B8C  25E1               	addwf	??_ProcessCDC& (0+255),w,b
  2492  000B8E  6ED9               	movwf	fsr2l,c
  2493  000B90  0E01               	movlw	high _CDCBufferIn
  2494  000B92  0100               	movlb	0	; () banked
  2495  000B94  21E2               	addwfc	(??_ProcessCDC+1)& (0+255),w,b
  2496  000B96  6EDA               	movwf	fsr2h,c
  2497  000B98  50DF               	movf	indf2,w,c
  2498  000B9A  6E26               	movwf	tlc5947_setChannel@val,c
  2499  000B9C  0100               	movlb	0	; () banked
  2500  000B9E  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2501  000BA0  EC87  F00A         	call	_tlc5947_setChannel
  2502  000BA4  0100               	movlb	0	; () banked
  2503  000BA6  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2504  000BA8  D000               	goto	l5276
  2505  000BAA                     l5276:
  2506                           
  2507                           ; BSR set to: 0
  2508  000BAA  0100               	movlb	0	; () banked
  2509  000BAC  51DD               	movf	_tlc_nchannels& (0+255),w,b
  2510  000BAE  0100               	movlb	0	; () banked
  2511  000BB0  5DEE               	subwf	ProcessCDC@_x& (0+255),w,b
  2512  000BB2  A0D8               	btfss	status,0,c
  2513  000BB4  D7DF               	goto	l5272
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;comm.c: 136: }
  2517                           ;comm.c: 137: tlc_request = 1;
  2518                           
  2519                           ; BSR set to: 0
  2520  000BB6  0E01               	movlw	1
  2521  000BB8  0100               	movlb	0	; () banked
  2522  000BBA  6FA0               	movwf	_tlc_request& (0+255),b
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;comm.c: 138: update_count++;
  2526  000BBC  0100               	movlb	0	; () banked
  2527  000BBE  4B92               	infsnz	_update_count& (0+255),f,b
  2528  000BC0  2B93               	incf	(_update_count+1)& (0+255),f,b
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;comm.c: 139: comm_send_rply(0x01);
  2532  000BC2  0E01               	movlw	1
  2533  000BC4  ECFA  F017         	call	_comm_send_rply
  2534                           
  2535                           ;comm.c: 140: } else {
  2536  000BC8  D145               	goto	l928
  2537  000BCA                     l5284:
  2538                           
  2539                           ;comm.c: 141: comm_send_rply(0x03);
  2540  000BCA  0E03               	movlw	3
  2541  000BCC  ECFA  F017         	call	_comm_send_rply
  2542                           
  2543                           ;comm.c: 142: }
  2544                           ;comm.c: 143: break;
  2545  000BD0  D141               	goto	l928
  2546  000BD2                     l5286:
  2547                           
  2548                           ;comm.c: 147: if (len == 2) {
  2549  000BD2  0E02               	movlw	2
  2550  000BD4  0100               	movlb	0	; () banked
  2551  000BD6  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2552  000BD8  A4D8               	btfss	status,2,c
  2553  000BDA  D010               	goto	l5296
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;comm.c: 148: tlc_request = 0;
  2557  000BDC  0E00               	movlw	0
  2558  000BDE  0100               	movlb	0	; () banked
  2559  000BE0  6FA0               	movwf	_tlc_request& (0+255),b
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;comm.c: 149: tlc5947_setChannel(CDCBufferIn[0x04], CDCBufferIn[0x04 + 1]);
  2563  000BE2  C105  F026         	movff	_CDCBufferIn+5,tlc5947_setChannel@val
  2564  000BE6  0101               	movlb	1	; () banked
  2565  000BE8  5104               	movf	(_CDCBufferIn+4)& (0+255),w,b
  2566  000BEA  EC87  F00A         	call	_tlc5947_setChannel
  2567                           
  2568                           ;comm.c: 150: tlc_request = 1;
  2569  000BEE  0E01               	movlw	1
  2570  000BF0  0100               	movlb	0	; () banked
  2571  000BF2  6FA0               	movwf	_tlc_request& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;comm.c: 151: comm_send_rply(0x01);
  2575  000BF4  0E01               	movlw	1
  2576  000BF6  ECFA  F017         	call	_comm_send_rply
  2577                           
  2578                           ;comm.c: 152: } else {
  2579  000BFA  D12C               	goto	l928
  2580  000BFC                     l5296:
  2581                           
  2582                           ;comm.c: 153: comm_send_rply(0x03);
  2583  000BFC  0E03               	movlw	3
  2584  000BFE  ECFA  F017         	call	_comm_send_rply
  2585                           
  2586                           ;comm.c: 154: }
  2587                           ;comm.c: 155: break;
  2588  000C02  D128               	goto	l928
  2589  000C04                     l5298:
  2590                           
  2591                           ;comm.c: 159: if (len == 0) {
  2592  000C04  0100               	movlb	0	; () banked
  2593  000C06  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2594  000C08  0100               	movlb	0	; () banked
  2595  000C0A  A4D8               	btfss	status,2,c
  2596  000C0C  D008               	goto	l5306
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;comm.c: 160: tlc5947_count_channels();
  2600  000C0E  EC42  F016         	call	_tlc5947_count_channels	;wreg free
  2601                           
  2602                           ;comm.c: 161: CDCBufferOut[0x04 + 0] = tlc_nbytes;
  2603  000C12  C05F  F144         	movff	_tlc_nbytes,_CDCBufferOut+4
  2604                           
  2605                           ;comm.c: 162: comm_send_dat(1);
  2606  000C16  0E01               	movlw	1
  2607  000C18  ECB9  F015         	call	_comm_send_dat
  2608                           
  2609                           ;comm.c: 163: } else {
  2610  000C1C  D11B               	goto	l928
  2611  000C1E                     l5306:
  2612                           
  2613                           ;comm.c: 164: comm_send_rply(0x03);
  2614  000C1E  0E03               	movlw	3
  2615  000C20  ECFA  F017         	call	_comm_send_rply
  2616                           
  2617                           ;comm.c: 165: }
  2618                           ;comm.c: 166: break;
  2619  000C24  D117               	goto	l928
  2620  000C26                     l5308:
  2621                           
  2622                           ;comm.c: 169: if (len == 0) {
  2623  000C26  0100               	movlb	0	; () banked
  2624  000C28  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2625  000C2A  0100               	movlb	0	; () banked
  2626  000C2C  A4D8               	btfss	status,2,c
  2627  000C2E  D00B               	goto	l5318
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;comm.c: 170: tlc5947_count_channels();
  2631  000C30  EC42  F016         	call	_tlc5947_count_channels	;wreg free
  2632                           
  2633                           ;comm.c: 171: CDCBufferOut[0x04 + 0] = tlc_nchannels;
  2634  000C34  C0DD  F144         	movff	_tlc_nchannels,_CDCBufferOut+4
  2635                           
  2636                           ;comm.c: 172: CDCBufferOut[0x04 + 1] = 0;
  2637  000C38  0E00               	movlw	0
  2638  000C3A  0101               	movlb	1	; () banked
  2639  000C3C  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2640                           
  2641                           ; BSR set to: 1
  2642                           ;comm.c: 173: comm_send_dat(2);
  2643  000C3E  0E02               	movlw	2
  2644  000C40  ECB9  F015         	call	_comm_send_dat
  2645                           
  2646                           ;comm.c: 174: } else {
  2647  000C44  D107               	goto	l928
  2648  000C46                     l5318:
  2649                           
  2650                           ;comm.c: 175: comm_send_rply(0x03);
  2651  000C46  0E03               	movlw	3
  2652  000C48  ECFA  F017         	call	_comm_send_rply
  2653                           
  2654                           ;comm.c: 176: }
  2655                           ;comm.c: 177: break;
  2656  000C4C  D103               	goto	l928
  2657  000C4E                     l5320:
  2658                           
  2659                           ;comm.c: 180: if (len == 0) {
  2660  000C4E  0100               	movlb	0	; () banked
  2661  000C50  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2662  000C52  0100               	movlb	0	; () banked
  2663  000C54  A4D8               	btfss	status,2,c
  2664  000C56  D00B               	goto	l5330
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;comm.c: 181: tlc5947_pwm_readback();
  2668  000C58  EC38  F014         	call	_tlc5947_pwm_readback	;wreg free
  2669                           
  2670                           ;comm.c: 182: CDCBufferOut[0x04 + 0] = (unsigned char)(tlc_pwm_readback_value & 0xFF);
  2671  000C5C  C04A  F144         	movff	_tlc_pwm_readback_value,_CDCBufferOut+4
  2672                           
  2673                           ;comm.c: 183: CDCBufferOut[0x04 + 1] = (unsigned char)(tlc_pwm_readback_value>>8 & 0xFF)
      +                          ;
  2674  000C60  504B               	movf	_tlc_pwm_readback_value+1,w,c
  2675  000C62  0101               	movlb	1	; () banked
  2676  000C64  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2677                           
  2678                           ; BSR set to: 1
  2679                           ;comm.c: 184: comm_send_dat(2);
  2680  000C66  0E02               	movlw	2
  2681  000C68  ECB9  F015         	call	_comm_send_dat
  2682                           
  2683                           ;comm.c: 185: } else {
  2684  000C6C  D0F3               	goto	l928
  2685  000C6E                     l5330:
  2686                           
  2687                           ;comm.c: 186: comm_send_rply(0x03);
  2688  000C6E  0E03               	movlw	3
  2689  000C70  ECFA  F017         	call	_comm_send_rply
  2690                           
  2691                           ;comm.c: 187: }
  2692                           ;comm.c: 188: break;
  2693  000C74  D0EF               	goto	l928
  2694  000C76                     l5332:
  2695                           
  2696                           ;comm.c: 191: if (len == 2) {
  2697  000C76  0E02               	movlw	2
  2698  000C78  0100               	movlb	0	; () banked
  2699  000C7A  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2700  000C7C  A4D8               	btfss	status,2,c
  2701  000C7E  D00E               	goto	l5338
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;comm.c: 192: tmr3l_cal = CDCBufferIn[0x04 + 0]^0xFF;
  2705  000C80  0101               	movlb	1	; () banked
  2706  000C82  5104               	movf	(_CDCBufferIn+4)& (0+255),w,b
  2707  000C84  0AFF               	xorlw	255
  2708  000C86  0100               	movlb	0	; () banked
  2709  000C88  6FA2               	movwf	_tmr3l_cal& (0+255),b
  2710                           
  2711                           ;comm.c: 193: tmr3h_cal = CDCBufferIn[0x04 + 1]^0xFF;
  2712  000C8A  0101               	movlb	1	; () banked
  2713  000C8C  5105               	movf	(_CDCBufferIn+5)& (0+255),w,b
  2714  000C8E  0AFF               	xorlw	255
  2715  000C90  0100               	movlb	0	; () banked
  2716  000C92  6FA1               	movwf	_tmr3h_cal& (0+255),b
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;comm.c: 194: comm_send_rply(0x01);
  2720  000C94  0E01               	movlw	1
  2721  000C96  ECFA  F017         	call	_comm_send_rply
  2722                           
  2723                           ;comm.c: 195: } else {
  2724  000C9A  D0DC               	goto	l928
  2725  000C9C                     l5338:
  2726                           
  2727                           ;comm.c: 196: comm_send_rply(0x03);
  2728  000C9C  0E03               	movlw	3
  2729  000C9E  ECFA  F017         	call	_comm_send_rply
  2730                           
  2731                           ;comm.c: 197: }
  2732                           ;comm.c: 198: break;
  2733  000CA2  D0D8               	goto	l928
  2734  000CA4                     l5340:
  2735                           
  2736                           ;comm.c: 201: if (len == 1) {
  2737  000CA4  0100               	movlb	0	; () banked
  2738  000CA6  05EF               	decf	ProcessCDC@len& (0+255),w,b
  2739  000CA8  A4D8               	btfss	status,2,c
  2740  000CAA  D00D               	goto	l5348
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;comm.c: 202: Busy_eep();
  2744  000CAC  EC1B  F01A         	call	_Busy_eep	;wreg free
  2745                           
  2746                           ;comm.c: 203: CDCBufferOut[0x04] = Read_b_eep(CDCBufferIn[0x04]);
  2747  000CB0  C104  F023         	movff	_CDCBufferIn+4,Read_b_eep@badd
  2748  000CB4  6A24               	clrf	Read_b_eep@badd+1,c
  2749  000CB6  ECDE  F019         	call	_Read_b_eep	;wreg free
  2750  000CBA  0101               	movlb	1	; () banked
  2751  000CBC  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2752                           
  2753                           ; BSR set to: 1
  2754                           ;comm.c: 204: comm_send_dat(1);
  2755  000CBE  0E01               	movlw	1
  2756  000CC0  ECB9  F015         	call	_comm_send_dat
  2757                           
  2758                           ;comm.c: 205: } else {
  2759  000CC4  D0C7               	goto	l928
  2760  000CC6                     l5348:
  2761                           
  2762                           ;comm.c: 206: comm_send_rply(0x03);
  2763  000CC6  0E03               	movlw	3
  2764  000CC8  ECFA  F017         	call	_comm_send_rply
  2765                           
  2766                           ;comm.c: 207: }
  2767                           ;comm.c: 208: break;
  2768  000CCC  D0C3               	goto	l928
  2769  000CCE                     l5350:
  2770                           
  2771                           ;comm.c: 211: if (len == 2) {
  2772  000CCE  0E02               	movlw	2
  2773  000CD0  0100               	movlb	0	; () banked
  2774  000CD2  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2775  000CD4  A4D8               	btfss	status,2,c
  2776  000CD6  D00D               	goto	l5358
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;comm.c: 212: Busy_eep();
  2780  000CD8  EC1B  F01A         	call	_Busy_eep	;wreg free
  2781                           
  2782                           ;comm.c: 213: Write_b_eep(CDCBufferIn[0x04], CDCBufferIn[0x04+1]);
  2783  000CDC  C104  F023         	movff	_CDCBufferIn+4,Write_b_eep@badd
  2784  000CE0  6A24               	clrf	Write_b_eep@badd+1,c
  2785  000CE2  C105  F025         	movff	_CDCBufferIn+5,Write_b_eep@bdat
  2786  000CE6  EC87  F018         	call	_Write_b_eep	;wreg free
  2787                           
  2788                           ;comm.c: 214: comm_send_rply(0x01);
  2789  000CEA  0E01               	movlw	1
  2790  000CEC  ECFA  F017         	call	_comm_send_rply
  2791                           
  2792                           ;comm.c: 215: } else {
  2793  000CF0  D0B1               	goto	l928
  2794  000CF2                     l5358:
  2795                           
  2796                           ;comm.c: 216: comm_send_rply(0x03);
  2797  000CF2  0E03               	movlw	3
  2798  000CF4  ECFA  F017         	call	_comm_send_rply
  2799                           
  2800                           ;comm.c: 217: }
  2801                           ;comm.c: 218: break;
  2802  000CF8  D0AD               	goto	l928
  2803  000CFA                     l5360:
  2804                           
  2805                           ;comm.c: 221: if (len == 0) {
  2806  000CFA  0100               	movlb	0	; () banked
  2807  000CFC  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2808  000CFE  0100               	movlb	0	; () banked
  2809  000D00  A4D8               	btfss	status,2,c
  2810  000D02  D007               	goto	l5366
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;comm.c: 222: CDCBufferOut[0x04] = 0x34;
  2814  000D04  0E34               	movlw	52
  2815  000D06  0101               	movlb	1	; () banked
  2816  000D08  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2817                           
  2818                           ; BSR set to: 1
  2819                           ;comm.c: 223: comm_send_dat(1);
  2820  000D0A  0E01               	movlw	1
  2821  000D0C  ECB9  F015         	call	_comm_send_dat
  2822                           
  2823                           ;comm.c: 224: } else {
  2824  000D10  D0A1               	goto	l928
  2825  000D12                     l5366:
  2826                           
  2827                           ;comm.c: 225: comm_send_rply(0x03);
  2828  000D12  0E03               	movlw	3
  2829  000D14  ECFA  F017         	call	_comm_send_rply
  2830                           
  2831                           ;comm.c: 226: }
  2832                           ;comm.c: 227: break;
  2833  000D18  D09D               	goto	l928
  2834  000D1A                     l5368:
  2835                           
  2836                           ;comm.c: 230: if (len == 0) {
  2837  000D1A  0100               	movlb	0	; () banked
  2838  000D1C  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2839  000D1E  0100               	movlb	0	; () banked
  2840  000D20  A4D8               	btfss	status,2,c
  2841  000D22  D007               	goto	l5374
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;comm.c: 231: CDCBufferOut[0x04] = 0x01;
  2845  000D24  0E01               	movlw	1
  2846  000D26  0101               	movlb	1	; () banked
  2847  000D28  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2848                           
  2849                           ; BSR set to: 1
  2850                           ;comm.c: 232: comm_send_dat(1);
  2851  000D2A  0E01               	movlw	1
  2852  000D2C  ECB9  F015         	call	_comm_send_dat
  2853                           
  2854                           ;comm.c: 233: } else {
  2855  000D30  D091               	goto	l928
  2856  000D32                     l5374:
  2857                           
  2858                           ;comm.c: 234: comm_send_rply(0x03);
  2859  000D32  0E03               	movlw	3
  2860  000D34  ECFA  F017         	call	_comm_send_rply
  2861                           
  2862                           ;comm.c: 235: }
  2863                           ;comm.c: 236: break;
  2864  000D38  D08D               	goto	l928
  2865  000D3A                     l5376:
  2866                           
  2867                           ;comm.c: 239: if (len == 0) {
  2868  000D3A  0100               	movlb	0	; () banked
  2869  000D3C  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2870  000D3E  0100               	movlb	0	; () banked
  2871  000D40  A4D8               	btfss	status,2,c
  2872  000D42  D008               	goto	l5382
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;comm.c: 240: CDCBufferOut[0x04 + 0] = boot_request0;
  2876  000D44  C0EB  F144         	movff	ProcessCDC@boot_request0,_CDCBufferOut+4
  2877                           
  2878                           ;comm.c: 241: CDCBufferOut[0x04 + 1] = boot_request1;
  2879  000D48  C0EC  F145         	movff	ProcessCDC@boot_request1,_CDCBufferOut+5
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;comm.c: 242: comm_send_dat(2);
  2883  000D4C  0E02               	movlw	2
  2884  000D4E  ECB9  F015         	call	_comm_send_dat
  2885                           
  2886                           ;comm.c: 243: } else {
  2887  000D52  D080               	goto	l928
  2888  000D54                     l5382:
  2889                           
  2890                           ;comm.c: 244: comm_send_rply(0x03);
  2891  000D54  0E03               	movlw	3
  2892  000D56  ECFA  F017         	call	_comm_send_rply
  2893                           
  2894                           ;comm.c: 245: }
  2895                           ;comm.c: 246: break;
  2896  000D5A  D07C               	goto	l928
  2897  000D5C                     l5384:
  2898                           
  2899                           ;comm.c: 249: if (len == 2) {
  2900  000D5C  0E02               	movlw	2
  2901  000D5E  0100               	movlb	0	; () banked
  2902  000D60  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2903  000D62  A4D8               	btfss	status,2,c
  2904  000D64  D032               	goto	l5406
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;comm.c: 250: if ((CDCBufferIn[0x04] == boot_request0) && (CDCBufferIn[0x04 + 1] == boot
      +                          _request1)) {
  2908  000D66  0100               	movlb	0	; () banked
  2909  000D68  51EB               	movf	ProcessCDC@boot_request0& (0+255),w,b
  2910  000D6A  0101               	movlb	1	; () banked
  2911  000D6C  1904               	xorwf	(_CDCBufferIn+4)& (0+255),w,b
  2912  000D6E  A4D8               	btfss	status,2,c
  2913  000D70  D028               	goto	l5404
  2914                           
  2915                           ; BSR set to: 1
  2916  000D72  0100               	movlb	0	; () banked
  2917  000D74  51EC               	movf	ProcessCDC@boot_request1& (0+255),w,b
  2918  000D76  0101               	movlb	1	; () banked
  2919  000D78  1905               	xorwf	(_CDCBufferIn+5)& (0+255),w,b
  2920  000D7A  A4D8               	btfss	status,2,c
  2921  000D7C  D022               	goto	l5404
  2922                           
  2923                           ; BSR set to: 1
  2924                           ;comm.c: 251: INTCONbits.GIE = 0;
  2925  000D7E  9EF2               	bcf	intcon,7,c	;volatile
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;comm.c: 252: *U1CON_R = 0; *U1IE_R = 0; USBDeviceState = DETACHED_STATE;;
  2929  000D80  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  2930  000D84  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  2931  000D88  0E00               	movlw	0
  2932  000D8A  6EDF               	movwf	indf2,c
  2933  000D8C  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  2934  000D90  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  2935  000D94  0E00               	movlw	0
  2936  000D96  6EDF               	movwf	indf2,c
  2937                           
  2938                           ; BSR set to: 1
  2939  000D98  0E00               	movlw	0
  2940  000D9A  0100               	movlb	0	; () banked
  2941  000D9C  6F97               	movwf	_USBDeviceState& (0+255),b
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;comm.c: 253: USBDeviceTasks();
  2945  000D9E  EC76  F008         	call	_USBDeviceTasks	;wreg free
  2946                           
  2947                           ;comm.c: 254: Delay10TCYx(18);
  2948  000DA2  0E12               	movlw	18
  2949  000DA4  ECE8  F019         	call	_Delay10TCYx
  2950                           
  2951                           ;comm.c: 255: if (pic18_devid != 0x0090) {
  2952  000DA8  0E90               	movlw	144
  2953  000DAA  0100               	movlb	0	; () banked
  2954  000DAC  19F1               	xorwf	_pic18_devid& (0+255),w,b
  2955  000DAE  0100               	movlb	0	; () banked
  2956  000DB0  11F2               	iorwf	(_pic18_devid+1)& (0+255),w,b
  2957  000DB2  B4D8               	btfsc	status,2,c
  2958  000DB4  D003               	goto	l988
  2959                           
  2960                           ; BSR set to: 0
  2961  000DB6  EF9E F003          	goto	1852	;# 
  2962                           
  2963                           ;comm.c: 257: } else {
  2964  000DBA  D04C               	goto	l928
  2965  000DBC                     l988:
  2966                           
  2967                           ; BSR set to: 0
  2968  000DBC  EF92 F003          	goto	1828	;# 
  2969                           
  2970                           ;comm.c: 259: }
  2971                           ;comm.c: 260: } else {
  2972  000DC0  D049               	goto	l928
  2973  000DC2                     l5404:
  2974                           
  2975                           ;comm.c: 262: comm_send_rply(0x02);
  2976  000DC2  0E02               	movlw	2
  2977  000DC4  ECFA  F017         	call	_comm_send_rply
  2978                           
  2979                           ;comm.c: 263: }
  2980                           ;comm.c: 264: } else {
  2981  000DC8  D045               	goto	l928
  2982  000DCA                     l5406:
  2983                           
  2984                           ;comm.c: 265: comm_send_rply(0x03);
  2985  000DCA  0E03               	movlw	3
  2986  000DCC  ECFA  F017         	call	_comm_send_rply
  2987                           
  2988                           ;comm.c: 266: }
  2989                           ;comm.c: 267: break;
  2990  000DD0  D041               	goto	l928
  2991  000DD2                     l5408:
  2992                           
  2993                           ;comm.c: 271: comm_send_rply(0xFF);
  2994  000DD2  0EFF               	movlw	255
  2995  000DD4  ECFA  F017         	call	_comm_send_rply
  2996                           
  2997                           ;comm.c: 273: }
  2998                           
  2999                           ;comm.c: 272: break;
  3000  000DD8  D03D               	goto	l928
  3001  000DDA                     l5412:
  3002  000DDA  0100               	movlb	0	; () banked
  3003  000DDC  51EA               	movf	ProcessCDC@cmd& (0+255),w,b
  3004                           
  3005                           ; Switch size 1, requested type "space"
  3006                           ; Number of cases is 15, Range of values is 1 to 129
  3007                           ; switch strategies available:
  3008                           ; Name         Instructions Cycles
  3009                           ; simple_byte           46    24 (average)
  3010                           ;	Chosen strategy is simple_byte
  3011  000DDE  0A01               	xorlw	1	; case 1
  3012  000DE0  B4D8               	btfsc	status,2,c
  3013  000DE2  D78B               	goto	l5360
  3014  000DE4  0A03               	xorlw	3	; case 2
  3015  000DE6  B4D8               	btfsc	status,2,c
  3016  000DE8  D798               	goto	l5368
  3017  000DEA  0A13               	xorlw	19	; case 17
  3018  000DEC  B4D8               	btfsc	status,2,c
  3019  000DEE  D6F1               	goto	l5286
  3020  000DF0  0A03               	xorlw	3	; case 18
  3021  000DF2  B4D8               	btfsc	status,2,c
  3022  000DF4  D6B2               	goto	l5268
  3023  000DF6  0A01               	xorlw	1	; case 19
  3024  000DF8  B4D8               	btfsc	status,2,c
  3025  000DFA  D704               	goto	l5298
  3026  000DFC  0A07               	xorlw	7	; case 20
  3027  000DFE  B4D8               	btfsc	status,2,c
  3028  000E00  D726               	goto	l5320
  3029  000E02  0A01               	xorlw	1	; case 21
  3030  000E04  B4D8               	btfsc	status,2,c
  3031  000E06  D737               	goto	l5332
  3032  000E08  0A35               	xorlw	53	; case 32
  3033  000E0A  B4D8               	btfsc	status,2,c
  3034  000E0C  D665               	goto	l5244
  3035  000E0E  0A01               	xorlw	1	; case 33
  3036  000E10  B4D8               	btfsc	status,2,c
  3037  000E12  D662               	goto	l5244
  3038  000E14  0A11               	xorlw	17	; case 48
  3039  000E16  B4D8               	btfsc	status,2,c
  3040  000E18  D706               	goto	l5308
  3041  000E1A  0A70               	xorlw	112	; case 64
  3042  000E1C  B4D8               	btfsc	status,2,c
  3043  000E1E  D63A               	goto	l5228
  3044  000E20  0A10               	xorlw	16	; case 80
  3045  000E22  B4D8               	btfsc	status,2,c
  3046  000E24  D73F               	goto	l5340
  3047  000E26  0A01               	xorlw	1	; case 81
  3048  000E28  B4D8               	btfsc	status,2,c
  3049  000E2A  D751               	goto	l5350
  3050  000E2C  0AD1               	xorlw	209	; case 128
  3051  000E2E  B4D8               	btfsc	status,2,c
  3052  000E30  D784               	goto	l5376
  3053  000E32  0A01               	xorlw	1	; case 129
  3054  000E34  B4D8               	btfsc	status,2,c
  3055  000E36  D792               	goto	l5384
  3056  000E38  D7CC               	goto	l5408
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;comm.c: 274: } else {
  3060  000E3A  D00C               	goto	l928
  3061  000E3C                     l5414:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;comm.c: 276: comm_send_rply(0x04);
  3065  000E3C  0E04               	movlw	4
  3066  000E3E  ECFA  F017         	call	_comm_send_rply
  3067                           
  3068                           ;comm.c: 277: }
  3069                           ;comm.c: 278: } else {
  3070  000E42  D008               	goto	l928
  3071  000E44                     l5416:
  3072                           
  3073                           ;comm.c: 280: comm_send_rply(0x03);
  3074  000E44  0E03               	movlw	3
  3075  000E46  ECFA  F017         	call	_comm_send_rply
  3076                           
  3077                           ;comm.c: 281: }
  3078                           ;comm.c: 283: } else {
  3079  000E4A  D004               	goto	l928
  3080  000E4C                     l5418:
  3081                           
  3082                           ;comm.c: 285: len = 0;
  3083  000E4C  0E00               	movlw	0
  3084  000E4E  0100               	movlb	0	; () banked
  3085  000E50  6FEF               	movwf	ProcessCDC@len& (0+255),b
  3086  000E52  D000               	goto	l928
  3087  000E54                     l928:
  3088  000E54  0012               	return		;funcret
  3089  000E56                     __end_of_ProcessCDC:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           intcon	equ	0xFF2
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           postdec1	equ	0xFE5
  3101                           fsr1h	equ	0xFE2
  3102                           fsr1l	equ	0xFE1
  3103                           indf2	equ	0xFDF
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function _getsUSBUSART *****************
  3109 ;; Defined at:
  3110 ;;		line 542 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  buffer          2   41[COMRAM] PTR unsigned char 
  3113 ;;		 -> CDCBufferIn(64), 
  3114 ;;  len             1   43[COMRAM] unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      unsigned char 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3126 ;;      Params:         3       0       0       0       0       0       0       0       0
  3127 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3128 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3129 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3130 ;;Total ram usage:        6 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    5
  3133 ;; This function calls:
  3134 ;;		_USBTransferOnePacket
  3135 ;; This function is called by:
  3136 ;;		_ProcessCDC
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text4
  3141  0026FE                     __ptext4:
  3142                           	opt stack 0
  3143  0026FE                     _getsUSBUSART:
  3144                           	opt stack 23
  3145                           
  3146                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  3147                           
  3148                           ;incstack = 0
  3149  0026FE  0E00               	movlw	0
  3150  002700  6E51               	movwf	_cdc_rx_len,c
  3151                           
  3152                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  3153  002702  5044               	movf	_CDCDataOutHandle,w,c
  3154  002704  1045               	iorwf	_CDCDataOutHandle+1,w,c
  3155  002706  B4D8               	btfsc	status,2,c
  3156  002708  D00E               	goto	l4950
  3157  00270A  C044  FFD9         	movff	_CDCDataOutHandle,fsr2l
  3158  00270E  C045  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  3159  002712  AEDF               	btfss	indf2,7,c
  3160  002714  D003               	goto	u4030
  3161  002716  6A2D               	clrf	??_getsUSBUSART& (0+255),c
  3162  002718  2A2D               	incf	??_getsUSBUSART& (0+255),f,c
  3163  00271A  D001               	goto	u4038
  3164  00271C                     u4030:
  3165  00271C  6A2D               	clrf	??_getsUSBUSART& (0+255),c
  3166  00271E                     u4038:
  3167  00271E  502D               	movf	??_getsUSBUSART,w,c
  3168  002720  6E2E               	movwf	_getsUSBUSART$1641,c
  3169  002722  6A2F               	clrf	_getsUSBUSART$1641+1,c
  3170  002724  D005               	goto	l4952
  3171  002726                     l4950:
  3172  002726  0E00               	movlw	0
  3173  002728  6E2F               	movwf	_getsUSBUSART$1641+1,c
  3174  00272A  0E00               	movlw	0
  3175  00272C  6E2E               	movwf	_getsUSBUSART$1641,c
  3176  00272E  D000               	goto	l4952
  3177  002730                     l4952:
  3178  002730  502E               	movf	_getsUSBUSART$1641,w,c
  3179  002732  102F               	iorwf	_getsUSBUSART$1641+1,w,c
  3180  002734  A4D8               	btfss	status,2,c
  3181  002736  D03E               	goto	l4968
  3182                           
  3183                           ;usb_device_cdc.c: 547: {
  3184                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3185  002738  EE20 F001          	lfsr	2,1
  3186  00273C  5044               	movf	_CDCDataOutHandle,w,c
  3187  00273E  26D9               	addwf	fsr2l,f,c
  3188  002740  5045               	movf	_CDCDataOutHandle+1,w,c
  3189  002742  22DA               	addwfc	fsr2h,f,c
  3190  002744  502C               	movf	getsUSBUSART@len,w,c
  3191  002746  5CDE               	subwf	postinc2,w,c
  3192  002748  B0D8               	btfsc	status,0,c
  3193  00274A  D009               	goto	l4958
  3194                           
  3195                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3196  00274C  EE20 F001          	lfsr	2,1
  3197  002750  5044               	movf	_CDCDataOutHandle,w,c
  3198  002752  26D9               	addwf	fsr2l,f,c
  3199  002754  5045               	movf	_CDCDataOutHandle+1,w,c
  3200  002756  22DA               	addwfc	fsr2h,f,c
  3201  002758  50DF               	movf	indf2,w,c
  3202  00275A  6E2C               	movwf	getsUSBUSART@len,c
  3203  00275C  D000               	goto	l4958
  3204  00275E                     l4958:
  3205                           
  3206                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3207  00275E  0E00               	movlw	0
  3208  002760  6E51               	movwf	_cdc_rx_len,c
  3209  002762  D014               	goto	l4964
  3210  002764                     l4960:
  3211                           
  3212                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3213  002764  5051               	movf	_cdc_rx_len,w,c
  3214  002766  0D01               	mullw	1
  3215  002768  0E40               	movlw	64
  3216  00276A  24F3               	addwf	prodl,w,c
  3217  00276C  6ED9               	movwf	fsr2l,c
  3218  00276E  0E05               	movlw	5
  3219  002770  20F4               	addwfc	prodh,w,c
  3220  002772  6EDA               	movwf	fsr2h,c
  3221  002774  5051               	movf	_cdc_rx_len,w,c
  3222  002776  0D01               	mullw	1
  3223  002778  50F3               	movf	prodl,w,c
  3224  00277A  242A               	addwf	getsUSBUSART@buffer,w,c
  3225  00277C  6EE1               	movwf	fsr1l,c
  3226  00277E  50F4               	movf	prodh,w,c
  3227  002780  202B               	addwfc	getsUSBUSART@buffer+1,w,c
  3228  002782  6EE2               	movwf	fsr1h,c
  3229  002784  CFDF FFE7          	movff	indf2,indf1
  3230  002788  2A51               	incf	_cdc_rx_len,f,c
  3231  00278A  D000               	goto	l4964
  3232  00278C                     l4964:
  3233  00278C  502C               	movf	getsUSBUSART@len,w,c
  3234  00278E  5C51               	subwf	_cdc_rx_len,w,c
  3235  002790  A0D8               	btfss	status,0,c
  3236  002792  D7E8               	goto	l4960
  3237                           
  3238                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3239  002794  0E00               	movlw	0
  3240  002796  6E23               	movwf	USBTransferOnePacket@dir,c
  3241  002798  0E40               	movlw	64
  3242  00279A  6E24               	movwf	USBTransferOnePacket@data,c
  3243  00279C  0E05               	movlw	5
  3244  00279E  6E25               	movwf	USBTransferOnePacket@data+1,c
  3245  0027A0  0E40               	movlw	64
  3246  0027A2  6E26               	movwf	USBTransferOnePacket@len,c
  3247  0027A4  0E02               	movlw	2
  3248  0027A6  EC61  F012         	call	_USBTransferOnePacket
  3249  0027AA  C023  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  3250  0027AE  C024  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  3251  0027B2  D000               	goto	l4968
  3252  0027B4                     l4968:
  3253                           
  3254                           ;usb_device_cdc.c: 567: }
  3255                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  3256  0027B4  5051               	movf	_cdc_rx_len,w,c
  3257  0027B6  D000               	goto	l455
  3258  0027B8                     l455:
  3259  0027B8  0012               	return		;funcret
  3260  0027BA                     __end_of_getsUSBUSART:
  3261                           	opt stack 0
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           prodh	equ	0xFF4
  3267                           prodl	equ	0xFF3
  3268                           intcon	equ	0xFF2
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           indf1	equ	0xFE7
  3272                           postdec1	equ	0xFE5
  3273                           fsr1h	equ	0xFE2
  3274                           fsr1l	equ	0xFE1
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function _comm_send_rply *****************
  3282 ;; Defined at:
  3283 ;;		line 20 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  cc              1    wreg     unsigned char 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  cc              1   46[COMRAM] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;		None               void
  3290 ;; Registers used:
  3291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0
  3298 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3300 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3301 ;;Total ram usage:        1 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    6
  3304 ;; This function calls:
  3305 ;;		_CDCTxService
  3306 ;;		_putUSBUSART
  3307 ;; This function is called by:
  3308 ;;		_ProcessCDC
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text5
  3313  002FF4                     __ptext5:
  3314                           	opt stack 0
  3315  002FF4                     _comm_send_rply:
  3316                           	opt stack 22
  3317                           
  3318                           ;incstack = 0
  3319                           ;comm_send_rply@cc stored from wreg
  3320  002FF4  6E2F               	movwf	comm_send_rply@cc,c
  3321                           
  3322                           ;comm.c: 22: CDCBufferOut[0x00] = 0x55;
  3323  002FF6  0E55               	movlw	85
  3324  002FF8  0101               	movlb	1	; () banked
  3325  002FFA  6F40               	movwf	_CDCBufferOut& (0+255),b
  3326                           
  3327                           ; BSR set to: 1
  3328                           ;comm.c: 23: CDCBufferOut[0x01] = cc;
  3329  002FFC  C02F  F141         	movff	comm_send_rply@cc,_CDCBufferOut+1
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;comm.c: 24: CDCBufferOut[0x03] = 0x00;
  3333  003000  0E00               	movlw	0
  3334  003002  0101               	movlb	1	; () banked
  3335  003004  6F43               	movwf	(_CDCBufferOut+3)& (0+255),b
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;comm.c: 25: CDCBufferOut[0x02] = CDCBufferOut[0x00] ^ CDCBufferOut[0x01] ^ CDCBufferOut
      +                          [0x03];
  3339  003006  0101               	movlb	1	; () banked
  3340  003008  5141               	movf	(_CDCBufferOut+1)& (0+255),w,b
  3341  00300A  0101               	movlb	1	; () banked
  3342  00300C  1943               	xorwf	(_CDCBufferOut+3)& (0+255),w,b
  3343  00300E  0101               	movlb	1	; () banked
  3344  003010  1940               	xorwf	_CDCBufferOut& (0+255),w,b
  3345  003012  0101               	movlb	1	; () banked
  3346  003014  6F42               	movwf	(_CDCBufferOut+2)& (0+255),b
  3347                           
  3348                           ;comm.c: 27: while (!(cdc_trf_state == 0)) CDCTxService();
  3349  003016  D003               	goto	l5052
  3350  003018                     l5050:
  3351  003018  EC0A  F00C         	call	_CDCTxService	;wreg free
  3352  00301C  D000               	goto	l5052
  3353  00301E                     l5052:
  3354  00301E  5052               	movf	_cdc_trf_state,w,c
  3355  003020  A4D8               	btfss	status,2,c
  3356  003022  D7FA               	goto	l5050
  3357                           
  3358                           ;comm.c: 29: if((cdc_trf_state == 0)) {
  3359  003024  5052               	movf	_cdc_trf_state,w,c
  3360  003026  A4D8               	btfss	status,2,c
  3361  003028  D009               	goto	l5058
  3362                           
  3363                           ;comm.c: 30: putUSBUSART(CDCBufferOut, 4);
  3364  00302A  0E40               	movlw	low _CDCBufferOut
  3365  00302C  6E23               	movwf	putUSBUSART@data,c
  3366  00302E  0E01               	movlw	high _CDCBufferOut
  3367  003030  6E24               	movwf	putUSBUSART@data+1,c
  3368  003032  0E04               	movlw	4
  3369  003034  6E25               	movwf	putUSBUSART@length,c
  3370  003036  ECAA  F019         	call	_putUSBUSART	;wreg free
  3371                           
  3372                           ;comm.c: 31: } else {
  3373  00303A  D004               	goto	l909
  3374  00303C                     l5058:
  3375                           
  3376                           ;comm.c: 32: txmiss_count++;
  3377  00303C  0100               	movlb	0	; () banked
  3378  00303E  4B90               	infsnz	_txmiss_count& (0+255),f,b
  3379  003040  2B91               	incf	(_txmiss_count+1)& (0+255),f,b
  3380  003042  D000               	goto	l909
  3381  003044                     l909:
  3382  003044  0012               	return		;funcret
  3383  003046                     __end_of_comm_send_rply:
  3384                           	opt stack 0
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           prodh	equ	0xFF4
  3390                           prodl	equ	0xFF3
  3391                           intcon	equ	0xFF2
  3392                           postinc0	equ	0xFEE
  3393                           wreg	equ	0xFE8
  3394                           indf1	equ	0xFE7
  3395                           postdec1	equ	0xFE5
  3396                           fsr1h	equ	0xFE2
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           fsr2h	equ	0xFDA
  3401                           fsr2l	equ	0xFD9
  3402                           status	equ	0xFD8
  3403                           
  3404 ;; *************** function _comm_send_dat *****************
  3405 ;; Defined at:
  3406 ;;		line 36 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  len             1    wreg     unsigned char 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  len             1   47[COMRAM] unsigned char 
  3411 ;;  i               1   46[COMRAM] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;		None               void
  3414 ;; Registers used:
  3415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0
  3422 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3424 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3425 ;;Total ram usage:        2 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    6
  3428 ;; This function calls:
  3429 ;;		_CDCTxService
  3430 ;;		_putUSBUSART
  3431 ;; This function is called by:
  3432 ;;		_ProcessCDC
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text6
  3437  002B72                     __ptext6:
  3438                           	opt stack 0
  3439  002B72                     _comm_send_dat:
  3440                           	opt stack 22
  3441                           
  3442                           ;incstack = 0
  3443                           ;comm_send_dat@len stored from wreg
  3444  002B72  6E30               	movwf	comm_send_dat@len,c
  3445                           
  3446                           ;comm.c: 38: unsigned char i;
  3447                           ;comm.c: 39: if (len >60) {
  3448  002B74  0E3C               	movlw	60
  3449  002B76  6430               	cpfsgt	comm_send_dat@len,c
  3450  002B78  D002               	goto	l912
  3451                           
  3452                           ;comm.c: 40: len = 60;
  3453  002B7A  0E3C               	movlw	60
  3454  002B7C  6E30               	movwf	comm_send_dat@len,c
  3455  002B7E                     l912:
  3456                           
  3457                           ;comm.c: 41: }
  3458                           ;comm.c: 43: CDCBufferOut[0x00] = 0x55;
  3459  002B7E  0E55               	movlw	85
  3460  002B80  0101               	movlb	1	; () banked
  3461  002B82  6F40               	movwf	_CDCBufferOut& (0+255),b
  3462                           
  3463                           ;comm.c: 44: CDCBufferOut[0x01] = 0x20;
  3464  002B84  0E20               	movlw	32
  3465  002B86  0101               	movlb	1	; () banked
  3466  002B88  6F41               	movwf	(_CDCBufferOut+1)& (0+255),b
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;comm.c: 45: CDCBufferOut[0x03] = len;
  3470  002B8A  C030  F143         	movff	comm_send_dat@len,_CDCBufferOut+3
  3471                           
  3472                           ; BSR set to: 1
  3473                           ;comm.c: 47: len+=4;
  3474  002B8E  0E04               	movlw	4
  3475  002B90  2630               	addwf	comm_send_dat@len,f,c
  3476                           
  3477                           ; BSR set to: 1
  3478                           ;comm.c: 49: CDCBufferOut[0x02] = 0;
  3479  002B92  0E00               	movlw	0
  3480  002B94  0101               	movlb	1	; () banked
  3481  002B96  6F42               	movwf	(_CDCBufferOut+2)& (0+255),b
  3482                           
  3483                           ; BSR set to: 1
  3484                           ;comm.c: 50: for (i = 0 ; i < len; i++) {
  3485  002B98  0E00               	movlw	0
  3486  002B9A  6E2F               	movwf	comm_send_dat@i,c
  3487  002B9C  D012               	goto	l5078
  3488  002B9E                     l5072:
  3489                           
  3490                           ;comm.c: 51: if (i != 0x02) {
  3491  002B9E  0E02               	movlw	2
  3492  002BA0  182F               	xorwf	comm_send_dat@i,w,c
  3493  002BA2  B4D8               	btfsc	status,2,c
  3494  002BA4  D00C               	goto	l5076
  3495                           
  3496                           ;comm.c: 52: CDCBufferOut[0x02] ^= CDCBufferOut[i];
  3497  002BA6  502F               	movf	comm_send_dat@i,w,c
  3498  002BA8  0D01               	mullw	1
  3499  002BAA  0E40               	movlw	low _CDCBufferOut
  3500  002BAC  24F3               	addwf	prodl,w,c
  3501  002BAE  6ED9               	movwf	fsr2l,c
  3502  002BB0  0E01               	movlw	high _CDCBufferOut
  3503  002BB2  20F4               	addwfc	prodh,w,c
  3504  002BB4  6EDA               	movwf	fsr2h,c
  3505  002BB6  50DF               	movf	indf2,w,c
  3506  002BB8  0101               	movlb	1	; () banked
  3507  002BBA  1B42               	xorwf	(_CDCBufferOut+2)& (0+255),f,b
  3508  002BBC  D000               	goto	l5076
  3509  002BBE                     l5076:
  3510  002BBE  2A2F               	incf	comm_send_dat@i,f,c
  3511  002BC0  D000               	goto	l5078
  3512  002BC2                     l5078:
  3513  002BC2  5030               	movf	comm_send_dat@len,w,c
  3514  002BC4  5C2F               	subwf	comm_send_dat@i,w,c
  3515  002BC6  B0D8               	btfsc	status,0,c
  3516  002BC8  D005               	goto	l5082
  3517  002BCA  D7E9               	goto	l5072
  3518                           
  3519                           ;comm.c: 53: }
  3520                           ;comm.c: 54: }
  3521                           ;comm.c: 56: while (!(cdc_trf_state == 0)) CDCTxService();
  3522  002BCC  D003               	goto	l5082
  3523  002BCE                     l5080:
  3524  002BCE  EC0A  F00C         	call	_CDCTxService	;wreg free
  3525  002BD2  D000               	goto	l5082
  3526  002BD4                     l5082:
  3527  002BD4  5052               	movf	_cdc_trf_state,w,c
  3528  002BD6  A4D8               	btfss	status,2,c
  3529  002BD8  D7FA               	goto	l5080
  3530                           
  3531                           ;comm.c: 58: if((cdc_trf_state == 0)) {
  3532  002BDA  5052               	movf	_cdc_trf_state,w,c
  3533  002BDC  A4D8               	btfss	status,2,c
  3534  002BDE  D009               	goto	l5088
  3535                           
  3536                           ;comm.c: 59: putUSBUSART(CDCBufferOut, len);
  3537  002BE0  0E40               	movlw	low _CDCBufferOut
  3538  002BE2  6E23               	movwf	putUSBUSART@data,c
  3539  002BE4  0E01               	movlw	high _CDCBufferOut
  3540  002BE6  6E24               	movwf	putUSBUSART@data+1,c
  3541  002BE8  C030  F025         	movff	comm_send_dat@len,putUSBUSART@length
  3542  002BEC  ECAA  F019         	call	_putUSBUSART	;wreg free
  3543                           
  3544                           ;comm.c: 60: } else {
  3545  002BF0  D004               	goto	l922
  3546  002BF2                     l5088:
  3547                           
  3548                           ;comm.c: 61: txmiss_count++;
  3549  002BF2  0100               	movlb	0	; () banked
  3550  002BF4  4B90               	infsnz	_txmiss_count& (0+255),f,b
  3551  002BF6  2B91               	incf	(_txmiss_count+1)& (0+255),f,b
  3552  002BF8  D000               	goto	l922
  3553  002BFA                     l922:
  3554  002BFA  0012               	return		;funcret
  3555  002BFC                     __end_of_comm_send_dat:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           postinc0	equ	0xFEE
  3565                           wreg	equ	0xFE8
  3566                           indf1	equ	0xFE7
  3567                           postdec1	equ	0xFE5
  3568                           fsr1h	equ	0xFE2
  3569                           fsr1l	equ	0xFE1
  3570                           indf2	equ	0xFDF
  3571                           postinc2	equ	0xFDE
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function _putUSBUSART *****************
  3577 ;; Defined at:
  3578 ;;		line 613 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  data            2   34[COMRAM] PTR unsigned char 
  3581 ;;		 -> CDCBufferOut(64), 
  3582 ;;  length          1   36[COMRAM] unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3594 ;;      Params:         3       0       0       0       0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3597 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3598 ;;Total ram usage:        3 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    4
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_comm_send_rply
  3605 ;;		_comm_send_dat
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text7
  3610  003354                     __ptext7:
  3611                           	opt stack 0
  3612  003354                     _putUSBUSART:
  3613                           	opt stack 23
  3614                           
  3615                           ;usb_device_cdc.c: 638: ;
  3616                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  3617                           
  3618                           ;incstack = 0
  3619  003354  5052               	movf	_cdc_trf_state,w,c
  3620  003356  A4D8               	btfss	status,2,c
  3621  003358  D00C               	goto	l459
  3622                           
  3623                           ;usb_device_cdc.c: 640: {
  3624                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3625  00335A  C023  F085         	movff	putUSBUSART@data,_pCDCSrc
  3626  00335E  C024  F086         	movff	putUSBUSART@data+1,_pCDCSrc+1
  3627  003362  C025  F053         	movff	putUSBUSART@length,_cdc_tx_len
  3628  003366  0E01               	movlw	1
  3629  003368  0100               	movlb	0	; () banked
  3630  00336A  6F99               	movwf	_cdc_mem_type& (0+255),b
  3631                           
  3632                           ; BSR set to: 0
  3633  00336C  0E01               	movlw	1
  3634  00336E  6E52               	movwf	_cdc_trf_state,c
  3635  003370  D000               	goto	l459
  3636  003372                     l459:
  3637  003372  0012               	return		;funcret
  3638  003374                     __end_of_putUSBUSART:
  3639                           	opt stack 0
  3640                           tblptru	equ	0xFF8
  3641                           tblptrh	equ	0xFF7
  3642                           tblptrl	equ	0xFF6
  3643                           tablat	equ	0xFF5
  3644                           prodh	equ	0xFF4
  3645                           prodl	equ	0xFF3
  3646                           intcon	equ	0xFF2
  3647                           postinc0	equ	0xFEE
  3648                           wreg	equ	0xFE8
  3649                           indf1	equ	0xFE7
  3650                           postdec1	equ	0xFE5
  3651                           fsr1h	equ	0xFE2
  3652                           fsr1l	equ	0xFE1
  3653                           indf2	equ	0xFDF
  3654                           postinc2	equ	0xFDE
  3655                           fsr2h	equ	0xFDA
  3656                           fsr2l	equ	0xFD9
  3657                           status	equ	0xFD8
  3658                           
  3659 ;; *************** function _CDCTxService *****************
  3660 ;; Defined at:
  3661 ;;		line 893 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  byte_to_send    1   45[COMRAM] unsigned char 
  3666 ;;  i               1   44[COMRAM] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;		None               void
  3669 ;; Registers used:
  3670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3676 ;;      Params:         0       0       0       0       0       0       0       0       0
  3677 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3678 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3679 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3680 ;;Total ram usage:        5 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    5
  3683 ;; This function calls:
  3684 ;;		_USBTransferOnePacket
  3685 ;; This function is called by:
  3686 ;;		_ProcessIO
  3687 ;;		_comm_send_rply
  3688 ;;		_comm_send_dat
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text8
  3693  001814                     __ptext8:
  3694                           	opt stack 0
  3695  001814                     _CDCTxService:
  3696                           	opt stack 22
  3697                           
  3698                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  3699                           ;usb_device_cdc.c: 896: uint8_t i;
  3700                           ;usb_device_cdc.c: 898: ;
  3701                           ;usb_device_cdc.c: 900: {};
  3702                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  3703                           
  3704                           ;incstack = 0
  3705  001814  0100               	movlb	0	; () banked
  3706  001816  5188               	movf	_CDCDataInHandle& (0+255),w,b
  3707  001818  0100               	movlb	0	; () banked
  3708  00181A  1189               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3709  00181C  B4D8               	btfsc	status,2,c
  3710  00181E  D00F               	goto	l4600
  3711                           
  3712                           ; BSR set to: 0
  3713  001820  C088  FFD9         	movff	_CDCDataInHandle,fsr2l
  3714  001824  C089  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3715  001828  0100               	movlb	0	; () banked
  3716  00182A  AEDF               	btfss	indf2,7,c
  3717  00182C  D003               	goto	u3440
  3718  00182E  6A2A               	clrf	??_CDCTxService& (0+255),c
  3719  001830  2A2A               	incf	??_CDCTxService& (0+255),f,c
  3720  001832  D001               	goto	u3448
  3721  001834                     u3440:
  3722  001834  6A2A               	clrf	??_CDCTxService& (0+255),c
  3723  001836                     u3448:
  3724  001836  502A               	movf	??_CDCTxService,w,c
  3725  001838  6E2B               	movwf	_CDCTxService$1689,c
  3726  00183A  6A2C               	clrf	_CDCTxService$1689+1,c
  3727  00183C  D005               	goto	l4602
  3728  00183E                     l4600:
  3729  00183E  0E00               	movlw	0
  3730  001840  6E2C               	movwf	_CDCTxService$1689+1,c
  3731  001842  0E00               	movlw	0
  3732  001844  6E2B               	movwf	_CDCTxService$1689,c
  3733  001846  D000               	goto	l4602
  3734  001848                     l4602:
  3735  001848  502B               	movf	_CDCTxService$1689,w,c
  3736  00184A  102C               	iorwf	_CDCTxService$1689+1,w,c
  3737  00184C  A4D8               	btfss	status,2,c
  3738  00184E  D08C               	goto	l481
  3739  001850  D001               	goto	l4606
  3740                           
  3741                           ;usb_device_cdc.c: 903: {
  3742                           ;usb_device_cdc.c: 904: ;
  3743                           ;usb_device_cdc.c: 905: return;
  3744  001852  D08A               	goto	l481
  3745  001854                     l4606:
  3746                           
  3747                           ;usb_device_cdc.c: 906: }
  3748                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  3749  001854  0E03               	movlw	3
  3750  001856  1852               	xorwf	_cdc_trf_state,w,c
  3751  001858  A4D8               	btfss	status,2,c
  3752  00185A  D002               	goto	l482
  3753                           
  3754                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  3755  00185C  0E00               	movlw	0
  3756  00185E  6E52               	movwf	_cdc_trf_state,c
  3757  001860                     l482:
  3758                           
  3759                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  3760  001860  5052               	movf	_cdc_trf_state,w,c
  3761  001862  B4D8               	btfsc	status,2,c
  3762  001864  D081               	goto	l481
  3763  001866  D001               	goto	l4612
  3764                           
  3765                           ;usb_device_cdc.c: 920: {
  3766                           ;usb_device_cdc.c: 921: ;
  3767                           ;usb_device_cdc.c: 922: return;
  3768  001868  D07F               	goto	l481
  3769  00186A                     l4612:
  3770                           
  3771                           ;usb_device_cdc.c: 923: }
  3772                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  3773  00186A  0E02               	movlw	2
  3774  00186C  1852               	xorwf	_cdc_trf_state,w,c
  3775  00186E  A4D8               	btfss	status,2,c
  3776  001870  D012               	goto	l4618
  3777                           
  3778                           ;usb_device_cdc.c: 929: {
  3779                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3780  001872  0E01               	movlw	1
  3781  001874  6E23               	movwf	USBTransferOnePacket@dir,c
  3782  001876  0E00               	movlw	0
  3783  001878  6E24               	movwf	USBTransferOnePacket@data,c
  3784  00187A  0E00               	movlw	0
  3785  00187C  6E25               	movwf	USBTransferOnePacket@data+1,c
  3786  00187E  0E00               	movlw	0
  3787  001880  6E26               	movwf	USBTransferOnePacket@len,c
  3788  001882  0E02               	movlw	2
  3789  001884  EC61  F012         	call	_USBTransferOnePacket
  3790  001888  C023  F088         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3791  00188C  C024  F089         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3792                           
  3793                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  3794  001890  0E03               	movlw	3
  3795  001892  6E52               	movwf	_cdc_trf_state,c
  3796                           
  3797                           ;usb_device_cdc.c: 933: }
  3798  001894  D069               	goto	l481
  3799  001896                     l4618:
  3800                           
  3801                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  3802  001896  0452               	decf	_cdc_trf_state,w,c
  3803  001898  A4D8               	btfss	status,2,c
  3804  00189A  D066               	goto	l481
  3805                           
  3806                           ;usb_device_cdc.c: 935: {
  3807                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  3808  00189C  0E40               	movlw	64
  3809  00189E  6453               	cpfsgt	_cdc_tx_len,c
  3810  0018A0  D003               	goto	l487
  3811                           
  3812                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  3813  0018A2  0E40               	movlw	64
  3814  0018A4  6E2E               	movwf	CDCTxService@byte_to_send,c
  3815  0018A6  D003               	goto	l4624
  3816  0018A8                     l487:
  3817                           
  3818                           ;usb_device_cdc.c: 941: else
  3819                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  3820  0018A8  C053  F02E         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3821  0018AC  D000               	goto	l4624
  3822  0018AE                     l4624:
  3823                           
  3824                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  3825  0018AE  502E               	movf	CDCTxService@byte_to_send,w,c
  3826  0018B0  0800               	sublw	0
  3827  0018B2  2453               	addwf	_cdc_tx_len,w,c
  3828  0018B4  6E53               	movwf	_cdc_tx_len,c
  3829                           
  3830                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3831  0018B6  0E00               	movlw	0
  3832  0018B8  0100               	movlb	0	; () banked
  3833  0018BA  6F82               	movwf	_pCDCDst& (0+255),b
  3834  0018BC  0E05               	movlw	5
  3835  0018BE  0100               	movlb	0	; () banked
  3836  0018C0  6F83               	movwf	(_pCDCDst+1)& (0+255),b
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;usb_device_cdc.c: 951: i = byte_to_send;
  3840  0018C2  C02E  F02D         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  3844  0018C6  0100               	movlb	0	; () banked
  3845  0018C8  5199               	movf	_cdc_mem_type& (0+255),w,b
  3846  0018CA  B4D8               	btfsc	status,2,c
  3847  0018CC  D014               	goto	l4640
  3848  0018CE  D02B               	goto	l4650
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;usb_device_cdc.c: 953: {
  3852                           ;usb_device_cdc.c: 954: while(i)
  3853  0018D0  D012               	goto	l4640
  3854  0018D2                     l4632:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;usb_device_cdc.c: 955: {
  3858                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  3859  0018D2  C085  FFD9         	movff	_pCDCSrc,fsr2l
  3860  0018D6  C086  FFDA         	movff	_pCDCSrc+1,fsr2h
  3861  0018DA  C082  FFE1         	movff	_pCDCDst,fsr1l
  3862  0018DE  C083  FFE2         	movff	_pCDCDst+1,fsr1h
  3863  0018E2  CFDF FFE7          	movff	indf2,indf1
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  3867  0018E6  0100               	movlb	0	; () banked
  3868  0018E8  4B82               	infsnz	_pCDCDst& (0+255),f,b
  3869  0018EA  2B83               	incf	(_pCDCDst+1)& (0+255),f,b
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  3873  0018EC  0100               	movlb	0	; () banked
  3874  0018EE  4B85               	infsnz	_pCDCSrc& (0+255),f,b
  3875  0018F0  2B86               	incf	(_pCDCSrc+1)& (0+255),f,b
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;usb_device_cdc.c: 959: i--;
  3879  0018F2  062D               	decf	CDCTxService@i,f,c
  3880  0018F4  D000               	goto	l4640
  3881  0018F6                     l4640:
  3882                           
  3883                           ; BSR set to: 0
  3884  0018F6  502D               	movf	CDCTxService@i,w,c
  3885  0018F8  B4D8               	btfsc	status,2,c
  3886  0018FA  D01A               	goto	l4652
  3887  0018FC  D7EA               	goto	l4632
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;usb_device_cdc.c: 960: }
  3891                           ;usb_device_cdc.c: 961: }
  3892  0018FE  D018               	goto	l4652
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;usb_device_cdc.c: 962: else
  3896                           ;usb_device_cdc.c: 963: {
  3897                           ;usb_device_cdc.c: 964: while(i)
  3898  001900  D012               	goto	l4650
  3899  001902                     l4642:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;usb_device_cdc.c: 965: {
  3903                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  3904  001902  C085  FFD9         	movff	_pCDCSrc,fsr2l
  3905  001906  C086  FFDA         	movff	_pCDCSrc+1,fsr2h
  3906  00190A  C082  FFE1         	movff	_pCDCDst,fsr1l
  3907  00190E  C083  FFE2         	movff	_pCDCDst+1,fsr1h
  3908  001912  CFDF FFE7          	movff	indf2,indf1
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  3912  001916  0100               	movlb	0	; () banked
  3913  001918  4B82               	infsnz	_pCDCDst& (0+255),f,b
  3914  00191A  2B83               	incf	(_pCDCDst+1)& (0+255),f,b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  3918  00191C  0100               	movlb	0	; () banked
  3919  00191E  4B85               	infsnz	_pCDCSrc& (0+255),f,b
  3920  001920  2B86               	incf	(_pCDCSrc+1)& (0+255),f,b
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;usb_device_cdc.c: 969: i--;
  3924  001922  062D               	decf	CDCTxService@i,f,c
  3925  001924  D000               	goto	l4650
  3926  001926                     l4650:
  3927                           
  3928                           ; BSR set to: 0
  3929  001926  502D               	movf	CDCTxService@i,w,c
  3930  001928  B4D8               	btfsc	status,2,c
  3931  00192A  D002               	goto	l4652
  3932  00192C  D7EA               	goto	l4642
  3933                           
  3934                           ; BSR set to: 0
  3935  00192E  D000               	goto	l4652
  3936  001930                     l4652:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;usb_device_cdc.c: 970: }
  3940                           ;usb_device_cdc.c: 971: }
  3941                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  3942  001930  5053               	movf	_cdc_tx_len,w,c
  3943  001932  A4D8               	btfss	status,2,c
  3944  001934  D009               	goto	l4660
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;usb_device_cdc.c: 978: {
  3948                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  3949  001936  0E40               	movlw	64
  3950  001938  182E               	xorwf	CDCTxService@byte_to_send,w,c
  3951  00193A  A4D8               	btfss	status,2,c
  3952  00193C  D002               	goto	l4658
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  3956  00193E  0E02               	movlw	2
  3957  001940  D001               	goto	L1
  3958  001942                     l4658:
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;usb_device_cdc.c: 981: else
  3962                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  3963  001942  0E03               	movlw	3
  3964  001944                     L1:
  3965  001944  6E52               	movwf	_cdc_trf_state,c
  3966                           
  3967                           ; BSR set to: 0
  3968  001946  D000               	goto	l4660
  3969  001948                     l4660:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;usb_device_cdc.c: 983: }
  3973                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3974  001948  0E01               	movlw	1
  3975  00194A  6E23               	movwf	USBTransferOnePacket@dir,c
  3976  00194C  0E00               	movlw	0
  3977  00194E  6E24               	movwf	USBTransferOnePacket@data,c
  3978  001950  0E05               	movlw	5
  3979  001952  6E25               	movwf	USBTransferOnePacket@data+1,c
  3980  001954  C02E  F026         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3981  001958  0E02               	movlw	2
  3982  00195A  EC61  F012         	call	_USBTransferOnePacket
  3983  00195E  C023  F088         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3984  001962  C024  F089         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3985  001966  D000               	goto	l481
  3986  001968                     l481:
  3987  001968  0012               	return		;funcret
  3988  00196A                     __end_of_CDCTxService:
  3989                           	opt stack 0
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           prodh	equ	0xFF4
  3995                           prodl	equ	0xFF3
  3996                           intcon	equ	0xFF2
  3997                           postinc0	equ	0xFEE
  3998                           wreg	equ	0xFE8
  3999                           indf1	equ	0xFE7
  4000                           postdec1	equ	0xFE5
  4001                           fsr1h	equ	0xFE2
  4002                           fsr1l	equ	0xFE1
  4003                           indf2	equ	0xFDF
  4004                           postinc2	equ	0xFDE
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009 ;; *************** function _Write_b_eep *****************
  4010 ;; Defined at:
  4011 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\write_B.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  badd            2   34[COMRAM] unsigned int 
  4014 ;;  bdat            1   36[COMRAM] unsigned char 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  GIE_BIT_VAL     1   37[COMRAM] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;		None               void
  4019 ;; Registers used:
  4020 ;;		wreg, status,2
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4026 ;;      Params:         3       0       0       0       0       0       0       0       0
  4027 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4029 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4030 ;;Total ram usage:        4 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    4
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_ProcessCDC
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text9
  4041  00310E                     __ptext9:
  4042                           	opt stack 0
  4043  00310E                     _Write_b_eep:
  4044                           	opt stack 24
  4045                           
  4046                           ;incstack = 0
  4047  00310E  0E00               	movlw	0
  4048  003110  6E26               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4049  003112  C023  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  4050  003116  C025  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  4051  00311A  9EA6               	bcf	4006,7,c	;volatile
  4052  00311C  9CA6               	bcf	4006,6,c	;volatile
  4053  00311E  84A6               	bsf	4006,2,c	;volatile
  4054  003120  0E00               	movlw	0
  4055  003122  BEF2               	btfsc	intcon,7,c	;volatile
  4056  003124  0E01               	movlw	1
  4057  003126  6E26               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4058  003128  9EF2               	bcf	intcon,7,c	;volatile
  4059  00312A  0E55               	movlw	85
  4060  00312C  6EA7               	movwf	4007,c	;volatile
  4061  00312E  0EAA               	movlw	170
  4062  003130  6EA7               	movwf	4007,c	;volatile
  4063  003132  82A6               	bsf	4006,1,c	;volatile
  4064  003134  D000               	goto	l1109
  4065  003136                     l1109:
  4066  003136  B2A6               	btfsc	4006,1,c	;volatile
  4067  003138  D7FE               	goto	l1109
  4068  00313A  B026               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  4069  00313C  D002               	bra	u4255
  4070  00313E  9EF2               	bcf	intcon,7,c	;volatile
  4071  003140  D001               	bra	u4256
  4072  003142                     u4255:
  4073  003142  8EF2               	bsf	intcon,7,c	;volatile
  4074  003144                     u4256:
  4075  003144  94A6               	bcf	4006,2,c	;volatile
  4076  003146  0012               	return		;funcret
  4077  003148                     __end_of_Write_b_eep:
  4078                           	opt stack 0
  4079                           tblptru	equ	0xFF8
  4080                           tblptrh	equ	0xFF7
  4081                           tblptrl	equ	0xFF6
  4082                           tablat	equ	0xFF5
  4083                           prodh	equ	0xFF4
  4084                           prodl	equ	0xFF3
  4085                           intcon	equ	0xFF2
  4086                           postinc0	equ	0xFEE
  4087                           wreg	equ	0xFE8
  4088                           indf1	equ	0xFE7
  4089                           postdec1	equ	0xFE5
  4090                           fsr1h	equ	0xFE2
  4091                           fsr1l	equ	0xFE1
  4092                           indf2	equ	0xFDF
  4093                           postinc2	equ	0xFDE
  4094                           fsr2h	equ	0xFDA
  4095                           fsr2l	equ	0xFD9
  4096                           status	equ	0xFD8
  4097                           
  4098 ;; *************** function _USBDeviceTasks *****************
  4099 ;; Defined at:
  4100 ;;		line 489 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  i               1    2[BANK0 ] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;		None               void
  4107 ;; Registers used:
  4108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0
  4115 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4117 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4118 ;;Total ram usage:        1 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:   12
  4121 ;; This function calls:
  4122 ;;		_USBClearUSBInterrupt
  4123 ;;		_USBCtrlEPAllowStatusStage
  4124 ;;		_USBCtrlEPService
  4125 ;;		_USBDeviceInit
  4126 ;;		_USBStallHandler
  4127 ;;		_USBSuspend
  4128 ;;		_USBWakeFromSuspend
  4129 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4130 ;; This function is called by:
  4131 ;;		_ProcessIO
  4132 ;;		_ProcessCDC
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text10
  4137  0010EC                     __ptext10:
  4138                           	opt stack 0
  4139  0010EC                     _USBDeviceTasks:
  4140                           	opt stack 17
  4141                           
  4142                           ;usb_device.c: 491: uint8_t i;
  4143                           ;usb_device.c: 517: if (PORTCbits.RC6 != 1)
  4144                           
  4145                           ;incstack = 0
  4146  0010EC  BC82               	btfsc	3970,6,c	;volatile
  4147  0010EE  D012               	goto	l4822
  4148                           
  4149                           ;usb_device.c: 518: {
  4150                           ;usb_device.c: 520: *U1CON_R = 0;
  4151  0010F0  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4152  0010F4  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4153  0010F8  0E00               	movlw	0
  4154  0010FA  6EDF               	movwf	indf2,c
  4155                           
  4156                           ;usb_device.c: 523: *U1IE_R = 0;
  4157  0010FC  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4158  001100  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4159  001104  0E00               	movlw	0
  4160  001106  6EDF               	movwf	indf2,c
  4161                           
  4162                           ;usb_device.c: 526: USBDeviceState = DETACHED_STATE;
  4163  001108  0E00               	movlw	0
  4164  00110A  0100               	movlb	0	; () banked
  4165  00110C  6F97               	movwf	_USBDeviceState& (0+255),b
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;usb_device.c: 554: USBClearUSBInterrupt();
  4169  00110E  ECEE  F018         	call	_USBClearUSBInterrupt	;wreg free
  4170                           
  4171                           ;usb_device.c: 555: return;
  4172  001112  D0FC               	goto	l142
  4173  001114                     l4822:
  4174                           
  4175                           ;usb_device.c: 556: }
  4176                           ;usb_device.c: 578: if(USBDeviceState == DETACHED_STATE)
  4177  001114  0100               	movlb	0	; () banked
  4178  001116  5197               	movf	_USBDeviceState& (0+255),w,b
  4179  001118  A4D8               	btfss	status,2,c
  4180  00111A  D02E               	goto	l4836
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;usb_device.c: 579: {
  4184                           ;usb_device.c: 581: *U1CON_R = 0;
  4185  00111C  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4186  001120  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4187  001124  0E00               	movlw	0
  4188  001126  6EDF               	movwf	indf2,c
  4189                           
  4190                           ;usb_device.c: 584: *U1IE_R = 0;
  4191  001128  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4192  00112C  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4193  001130  0E00               	movlw	0
  4194  001132  6EDF               	movwf	indf2,c
  4195                           
  4196                           ;usb_device.c: 588: { *U1CNFG1_R = 0x10 | 0x00 | 0x04 | 0x02; *U1EIE_R = 0x9F; UIE = 0x3
      +                          9 | 0x40 | 0x02; };
  4197  001134  C0CB  FFD9         	movff	_U1CNFG1_R,fsr2l
  4198  001138  C0CC  FFDA         	movff	_U1CNFG1_R+1,fsr2h
  4199  00113C  0E16               	movlw	22
  4200  00113E  6EDF               	movwf	indf2,c
  4201  001140  C0CF  FFD9         	movff	_U1EIE_R,fsr2l
  4202  001144  C0D0  FFDA         	movff	_U1EIE_R+1,fsr2h
  4203  001148  0E9F               	movlw	159
  4204  00114A  6EDF               	movwf	indf2,c
  4205                           
  4206                           ; BSR set to: 0
  4207  00114C  0E7B               	movlw	123
  4208  00114E  6E69               	movwf	3945,c	;volatile
  4209                           
  4210                           ;usb_device.c: 591: while(!(*U1CON_R & 0x08)){
  4211  001150  D008               	goto	l4832
  4212  001152                     l4828:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;usb_device.c: 592: *U1CON_R |= 0x08;
  4216  001152  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4217  001156  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4218  00115A  0E00               	movlw	0
  4219  00115C  86DB               	bsf	plusw2,3,c
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;usb_device.c: 593: LATCbits.LATC2 = !LATCbits.LATC2;;
  4223  00115E  748B               	btg	3979,2,c	;volatile
  4224  001160  D000               	goto	l4832
  4225  001162                     l4832:
  4226                           
  4227                           ; BSR set to: 0
  4228  001162  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4229  001166  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4230  00116A  0100               	movlb	0	; () banked
  4231  00116C  A6DF               	btfss	indf2,3,c
  4232  00116E  D7F1               	goto	l4828
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;usb_device.c: 594: }
  4236                           ;usb_device.c: 597: USBDeviceState = ATTACHED_STATE;
  4237                           
  4238                           ; BSR set to: 0
  4239  001170  0E01               	movlw	1
  4240  001172  0100               	movlb	0	; () banked
  4241  001174  6F97               	movwf	_USBDeviceState& (0+255),b
  4242  001176  D000               	goto	l4836
  4243  001178                     l4836:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;usb_device.c: 602: }
  4247                           ;usb_device.c: 605: if(USBDeviceState == ATTACHED_STATE)
  4248  001178  0100               	movlb	0	; () banked
  4249  00117A  0597               	decf	_USBDeviceState& (0+255),w,b
  4250  00117C  B4D8               	btfsc	status,2,c
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;usb_device.c: 606: {
  4254                           ;usb_device.c: 616: if(!UCONbits.SE0)
  4255  00117E  BA6D               	btfsc	3949,5,c	;volatile
  4256  001180  D012               	goto	l4848
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;usb_device.c: 617: {
  4260                           ;usb_device.c: 618: {*U1IR_R = 0;};
  4261  001182  C0D7  FFD9         	movff	_U1IR_R,fsr2l
  4262  001186  C0D8  FFDA         	movff	_U1IR_R+1,fsr2h
  4263  00118A  0E00               	movlw	0
  4264  00118C  6EDF               	movwf	indf2,c
  4265                           
  4266                           ;usb_device.c: 620: *U1IE_R=0;
  4267  00118E  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4268  001192  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4269  001196  0E00               	movlw	0
  4270  001198  6EDF               	movwf	indf2,c
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;usb_device.c: 622: UIEbits.URSTIE = 1;
  4274  00119A  8069               	bsf	3945,0,c	;volatile
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;usb_device.c: 623: UIEbits.IDLEIE = 1;
  4278  00119C  8869               	bsf	3945,4,c	;volatile
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;usb_device.c: 624: USBDeviceState = POWERED_STATE;
  4282  00119E  0E02               	movlw	2
  4283  0011A0  0100               	movlb	0	; () banked
  4284  0011A2  6F97               	movwf	_USBDeviceState& (0+255),b
  4285                           
  4286                           ; BSR set to: 0
  4287  0011A4  D000               	goto	l4848
  4288  0011A6                     l4848:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;usb_device.c: 625: }
  4292                           ;usb_device.c: 626: }
  4293                           ;usb_device.c: 642: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4294  0011A6  B468               	btfsc	3944,2,c	;volatile
  4295                           
  4296                           ; BSR set to: 0
  4297  0011A8  A469               	btfss	3945,2,c	;volatile
  4298  0011AA  D004               	goto	l4856
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;usb_device.c: 643: {
  4302                           ;usb_device.c: 644: (UIR &= 0xFB);
  4303  0011AC  9468               	bcf	3944,2,c	;volatile
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;usb_device.c: 648: USBWakeFromSuspend();
  4307  0011AE  EC69  F018         	call	_USBWakeFromSuspend	;wreg free
  4308  0011B2  D000               	goto	l4856
  4309  0011B4                     l4856:
  4310                           
  4311                           ;usb_device.c: 650: }
  4312                           ;usb_device.c: 655: if(UCONbits.SUSPND==1)
  4313  0011B4  A26D               	btfss	3949,1,c	;volatile
  4314  0011B6  D003               	goto	l150
  4315                           
  4316                           ;usb_device.c: 656: {
  4317                           ;usb_device.c: 657: USBClearUSBInterrupt();
  4318  0011B8  ECEE  F018         	call	_USBClearUSBInterrupt	;wreg free
  4319                           
  4320                           ;usb_device.c: 658: return;
  4321  0011BC  D0A7               	goto	l142
  4322  0011BE                     l150:
  4323                           
  4324                           ;usb_device.c: 659: }
  4325                           ;usb_device.c: 671: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4326  0011BE  B068               	btfsc	3944,0,c	;volatile
  4327  0011C0  A069               	btfss	3945,0,c	;volatile
  4328  0011C2  D007               	goto	l4870
  4329                           
  4330                           ;usb_device.c: 672: {
  4331                           ;usb_device.c: 673: USBDeviceInit();
  4332  0011C4  EC52  F00B         	call	_USBDeviceInit	;wreg free
  4333                           
  4334                           ;usb_device.c: 677: ;
  4335                           ;usb_device.c: 679: USBDeviceState = DEFAULT_STATE;
  4336  0011C8  0E04               	movlw	4
  4337  0011CA  0100               	movlb	0	; () banked
  4338  0011CC  6F97               	movwf	_USBDeviceState& (0+255),b
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;usb_device.c: 689: (UIR &= 0xFE);
  4342  0011CE  9068               	bcf	3944,0,c	;volatile
  4343  0011D0  D000               	goto	l4870
  4344  0011D2                     l4870:
  4345                           
  4346                           ;usb_device.c: 690: }
  4347                           ;usb_device.c: 695: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4348  0011D2  B868               	btfsc	3944,4,c	;volatile
  4349  0011D4  A869               	btfss	3945,4,c	;volatile
  4350  0011D6  D004               	goto	l4878
  4351                           
  4352                           ;usb_device.c: 696: {
  4353                           ;usb_device.c: 701: USBSuspend();
  4354  0011D8  ECA4  F018         	call	_USBSuspend	;wreg free
  4355                           
  4356                           ;usb_device.c: 704: (UIR &= 0xEF);
  4357  0011DC  9868               	bcf	3944,4,c	;volatile
  4358  0011DE  D000               	goto	l4878
  4359  0011E0                     l4878:
  4360                           
  4361                           ;usb_device.c: 705: }
  4362                           ;usb_device.c: 707: if(UIRbits.SOFIF)
  4363  0011E0  AC68               	btfss	3944,6,c	;volatile
  4364  0011E2  D020               	goto	l4894
  4365                           
  4366                           ;usb_device.c: 708: {
  4367                           ;usb_device.c: 709: if(UIEbits.SOFIE)
  4368  0011E4  AC69               	btfss	3945,6,c	;volatile
  4369  0011E6  D00F               	goto	l4884
  4370                           
  4371                           ;usb_device.c: 710: {
  4372                           ;usb_device.c: 711: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4373  0011E8  0E00               	movlw	0
  4374  0011EA  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4375  0011EC  0E73               	movlw	115
  4376  0011EE  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4377  0011F0  0E00               	movlw	0
  4378  0011F2  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4379  0011F4  0E00               	movlw	0
  4380  0011F6  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4381  0011F8  0E00               	movlw	0
  4382  0011FA  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4383  0011FC  0E01               	movlw	1
  4384  0011FE  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4385  001200  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4386  001204  D000               	goto	l4884
  4387  001206                     l4884:
  4388                           
  4389                           ;usb_device.c: 712: }
  4390                           ;usb_device.c: 713: (UIR &= 0xBF);
  4391  001206  9C68               	bcf	3944,6,c	;volatile
  4392                           
  4393                           ;usb_device.c: 738: if(USBStatusStageTimeoutCounter != 0u)
  4394  001208  0100               	movlb	0	; () banked
  4395  00120A  5198               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  4396  00120C  B4D8               	btfsc	status,2,c
  4397  00120E  D003               	goto	l4890
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;usb_device.c: 739: {
  4401                           ;usb_device.c: 740: USBStatusStageTimeoutCounter--;
  4402  001210  0100               	movlb	0	; () banked
  4403  001212  0798               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  4404  001214  D000               	goto	l4890
  4405  001216                     l4890:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;usb_device.c: 741: }
  4409                           ;usb_device.c: 747: if(USBStatusStageTimeoutCounter == 0)
  4410  001216  0100               	movlb	0	; () banked
  4411  001218  5198               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  4412  00121A  A4D8               	btfss	status,2,c
  4413  00121C  D003               	goto	l4894
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;usb_device.c: 748: {
  4417                           ;usb_device.c: 749: USBCtrlEPAllowStatusStage();
  4418  00121E  EC9D  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4419  001222  D000               	goto	l4894
  4420  001224                     l4894:
  4421                           
  4422                           ;usb_device.c: 750: }
  4423                           ;usb_device.c: 752: }
  4424                           ;usb_device.c: 754: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4425  001224  BA68               	btfsc	3944,5,c	;volatile
  4426  001226  AA69               	btfss	3945,5,c	;volatile
  4427  001228  D003               	goto	l4900
  4428                           
  4429                           ;usb_device.c: 755: {
  4430                           ;usb_device.c: 756: USBStallHandler();
  4431  00122A  ECA3  F017         	call	_USBStallHandler	;wreg free
  4432  00122E  D000               	goto	l4900
  4433  001230                     l4900:
  4434                           
  4435                           ;usb_device.c: 757: }
  4436                           ;usb_device.c: 759: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4437  001230  B268               	btfsc	3944,1,c	;volatile
  4438  001232  A269               	btfss	3945,1,c	;volatile
  4439  001234  D014               	goto	l4908
  4440                           
  4441                           ;usb_device.c: 760: {
  4442                           ;usb_device.c: 761: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4443  001236  0E7F               	movlw	127
  4444  001238  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4445  00123A  682F               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4446  00123C  0E00               	movlw	0
  4447  00123E  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4448  001240  0E00               	movlw	0
  4449  001242  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4450  001244  0E00               	movlw	0
  4451  001246  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4452  001248  0E01               	movlw	1
  4453  00124A  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4454  00124C  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4455                           
  4456                           ;usb_device.c: 762: {*U1EIR_R = 0;};
  4457  001250  C0D1  FFD9         	movff	_U1EIR_R,fsr2l
  4458  001254  C0D2  FFDA         	movff	_U1EIR_R+1,fsr2h
  4459  001258  0E00               	movlw	0
  4460  00125A  6EDF               	movwf	indf2,c
  4461  00125C  D000               	goto	l4908
  4462  00125E                     l4908:
  4463                           
  4464                           ;usb_device.c: 770: }
  4465                           ;usb_device.c: 777: if(USBDeviceState < DEFAULT_STATE)
  4466  00125E  0E04               	movlw	4
  4467  001260  0100               	movlb	0	; () banked
  4468  001262  6197               	cpfslt	_USBDeviceState& (0+255),b
  4469  001264  D003               	goto	l159
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;usb_device.c: 778: {
  4473                           ;usb_device.c: 779: USBClearUSBInterrupt();
  4474  001266  ECEE  F018         	call	_USBClearUSBInterrupt	;wreg free
  4475                           
  4476                           ;usb_device.c: 780: return;
  4477  00126A  D050               	goto	l142
  4478  00126C                     l159:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;usb_device.c: 781: }
  4482                           ;usb_device.c: 786: if(UIEbits.TRNIE)
  4483  00126C  A669               	btfss	3945,3,c	;volatile
  4484  00126E  D04C               	goto	l4942
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;usb_device.c: 787: {
  4488                           ;usb_device.c: 788: for(i = 0; i < 4u; i++)
  4489  001270  0E00               	movlw	0
  4490  001272  0100               	movlb	0	; () banked
  4491  001274  6FE0               	movwf	USBDeviceTasks@i& (0+255),b
  4492  001276                     l4916:
  4493                           
  4494                           ; BSR set to: 0
  4495  001276  0E03               	movlw	3
  4496  001278  0100               	movlb	0	; () banked
  4497  00127A  65E0               	cpfsgt	USBDeviceTasks@i& (0+255),b
  4498  00127C  D001               	goto	l161
  4499                           
  4500                           ; BSR set to: 0
  4501  00127E  D044               	goto	l4942
  4502  001280                     l161:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;usb_device.c: 789: {
  4506                           ;usb_device.c: 790: if(UIRbits.TRNIF)
  4507  001280  A668               	btfss	3944,3,c	;volatile
  4508  001282  D042               	goto	l4942
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;usb_device.c: 791: {
  4512                           ;usb_device.c: 793: USTATcopy.Val = *U1STAT_R;
  4513  001284  C0D9  FFD9         	movff	_U1STAT_R,fsr2l
  4514  001288  C0DA  FFDA         	movff	_U1STAT_R+1,fsr2h
  4515  00128C  50DF               	movf	indf2,w,c
  4516  00128E  0100               	movlb	0	; () banked
  4517  001290  6FB4               	movwf	_USTATcopy& (0+255),b
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;usb_device.c: 794: endpoint_number = USTATcopy.endpoint_number;
  4521  001292  0100               	movlb	0	; () banked
  4522  001294  31B4               	rrcf	_USTATcopy& (0+255),w,b
  4523  001296  32E8               	rrcf	wreg,f,c
  4524  001298  32E8               	rrcf	wreg,f,c
  4525  00129A  0B0F               	andlw	15
  4526  00129C  0100               	movlb	0	; () banked
  4527  00129E  6F9B               	movwf	_endpoint_number& (0+255),b
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;usb_device.c: 796: (UIR &= 0xF7);
  4531  0012A0  9668               	bcf	3944,3,c	;volatile
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;usb_device.c: 801: if(USTATcopy.direction == 0)
  4535  0012A2  0100               	movlb	0	; () banked
  4536  0012A4  B5B4               	btfsc	_USTATcopy& (0+255),2,b
  4537  0012A6  D008               	goto	l4930
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;usb_device.c: 802: {
  4541                           ;usb_device.c: 803: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4542  0012A8  0100               	movlb	0	; () banked
  4543  0012AA  519B               	movf	_endpoint_number& (0+255),w,b
  4544  0012AC  0D01               	mullw	1
  4545  0012AE  0E7F               	movlw	low _ep_data_out
  4546  0012B0  24F3               	addwf	prodl,w,c
  4547  0012B2  6ED9               	movwf	fsr2l,c
  4548  0012B4  0E00               	movlw	high _ep_data_out
  4549  0012B6  D007               	goto	L2
  4550  0012B8                     l4930:
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;usb_device.c: 805: else
  4554                           ;usb_device.c: 806: {
  4555                           ;usb_device.c: 807: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4556  0012B8  0100               	movlb	0	; () banked
  4557  0012BA  519B               	movf	_endpoint_number& (0+255),w,b
  4558  0012BC  0D01               	mullw	1
  4559  0012BE  0E7C               	movlw	low _ep_data_in
  4560  0012C0  24F3               	addwf	prodl,w,c
  4561  0012C2  6ED9               	movwf	fsr2l,c
  4562  0012C4  0E00               	movlw	high _ep_data_in
  4563  0012C6                     L2:
  4564  0012C6  20F4               	addwfc	prodh,w,c
  4565  0012C8  6EDA               	movwf	fsr2h,c
  4566  0012CA  0100               	movlb	0	; () banked
  4567  0012CC  70DF               	btg	indf2,0,c
  4568  0012CE  D000               	goto	l4932
  4569  0012D0                     l4932:
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;usb_device.c: 808: }
  4573                           ;usb_device.c: 813: if(endpoint_number == 0)
  4574  0012D0  0100               	movlb	0	; () banked
  4575  0012D2  519B               	movf	_endpoint_number& (0+255),w,b
  4576  0012D4  0100               	movlb	0	; () banked
  4577  0012D6  A4D8               	btfss	status,2,c
  4578  0012D8  D003               	goto	l4936
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;usb_device.c: 814: {
  4582                           ;usb_device.c: 815: USBCtrlEPService();
  4583  0012DA  EC2F  F011         	call	_USBCtrlEPService	;wreg free
  4584                           
  4585                           ;usb_device.c: 816: }
  4586  0012DE  D010               	goto	l4938
  4587  0012E0                     l4936:
  4588                           
  4589                           ;usb_device.c: 817: else
  4590                           ;usb_device.c: 818: {
  4591                           ;usb_device.c: 819: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4592  0012E0  0E00               	movlw	0
  4593  0012E2  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4594  0012E4  0E72               	movlw	114
  4595  0012E6  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4596  0012E8  0EB4               	movlw	low _USTATcopy
  4597  0012EA  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4598  0012EC  0E00               	movlw	high _USTATcopy
  4599  0012EE  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4600  0012F0  0E00               	movlw	0
  4601  0012F2  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4602  0012F4  0E00               	movlw	0
  4603  0012F6  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4604  0012F8  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4605                           
  4606                           ;usb_device.c: 820: }
  4607                           ;usb_device.c: 821: }
  4608  0012FC  D001               	goto	l4938
  4609                           
  4610                           ;usb_device.c: 822: else
  4611                           ;usb_device.c: 823: {
  4612                           ;usb_device.c: 824: break;
  4613  0012FE  D004               	goto	l4942
  4614  001300                     l4938:
  4615  001300  0100               	movlb	0	; () banked
  4616  001302  2BE0               	incf	USBDeviceTasks@i& (0+255),f,b
  4617  001304  D7B8               	goto	l4916
  4618                           
  4619                           ; BSR set to: 0
  4620                           
  4621                           ; BSR set to: 0
  4622  001306  D000               	goto	l4942
  4623  001308                     l4942:
  4624                           
  4625                           ;usb_device.c: 825: }
  4626                           ;usb_device.c: 826: }
  4627                           ;usb_device.c: 827: }
  4628                           ;usb_device.c: 829: USBClearUSBInterrupt();
  4629  001308  ECEE  F018         	call	_USBClearUSBInterrupt	;wreg free
  4630  00130C                     l142:
  4631  00130C  0012               	return		;funcret
  4632  00130E                     __end_of_USBDeviceTasks:
  4633                           	opt stack 0
  4634                           tblptru	equ	0xFF8
  4635                           tblptrh	equ	0xFF7
  4636                           tblptrl	equ	0xFF6
  4637                           tablat	equ	0xFF5
  4638                           prodh	equ	0xFF4
  4639                           prodl	equ	0xFF3
  4640                           intcon	equ	0xFF2
  4641                           postinc0	equ	0xFEE
  4642                           wreg	equ	0xFE8
  4643                           indf1	equ	0xFE7
  4644                           postdec1	equ	0xFE5
  4645                           fsr1h	equ	0xFE2
  4646                           fsr1l	equ	0xFE1
  4647                           indf2	equ	0xFDF
  4648                           postinc2	equ	0xFDE
  4649                           plusw2	equ	0xFDB
  4650                           fsr2h	equ	0xFDA
  4651                           fsr2l	equ	0xFD9
  4652                           status	equ	0xFD8
  4653                           
  4654 ;; *************** function _USBWakeFromSuspend *****************
  4655 ;; Defined at:
  4656 ;;		line 2305 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;		None               void
  4663 ;; Registers used:
  4664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4670 ;;      Params:         0       0       0       0       0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4673 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    8
  4677 ;; This function calls:
  4678 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4679 ;; This function is called by:
  4680 ;;		_USBDeviceTasks
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text11
  4685  0030D2                     __ptext11:
  4686                           	opt stack 0
  4687  0030D2                     _USBWakeFromSuspend:
  4688                           	opt stack 20
  4689                           
  4690                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
  4691                           
  4692                           ;incstack = 0
  4693  0030D2  0E00               	movlw	0
  4694  0030D4  0100               	movlb	0	; () banked
  4695  0030D6  6F96               	movwf	_USBBusIsSuspended& (0+255),b
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4699  0030D8  0E00               	movlw	0
  4700  0030DA  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4701  0030DC  0E74               	movlw	116
  4702  0030DE  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4703  0030E0  0E00               	movlw	0
  4704  0030E2  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4705  0030E4  0E00               	movlw	0
  4706  0030E6  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4707  0030E8  0E00               	movlw	0
  4708  0030EA  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4709  0030EC  0E00               	movlw	0
  4710  0030EE  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4711  0030F0  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4712                           
  4713                           ;usb_device.c: 2320: *U1CON_R &= 0xFD;
  4714  0030F4  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4715  0030F8  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4716  0030FC  0EFD               	movlw	253
  4717  0030FE  16DF               	andwf	indf2,f,c
  4718                           
  4719                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
  4720  003100  9469               	bcf	3945,2,c	;volatile
  4721                           
  4722                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
  4723  003102  D002               	goto	l4524
  4724  003104                     l4522:
  4725                           
  4726                           ;usb_device.c: 2345: {
  4727                           ;usb_device.c: 2346: (UIR &= 0xFB);
  4728  003104  9468               	bcf	3944,2,c	;volatile
  4729  003106  D000               	goto	l4524
  4730  003108                     l4524:
  4731  003108  B468               	btfsc	3944,2,c	;volatile
  4732  00310A  D7FC               	goto	l4522
  4733  00310C  0012               	return		;funcret
  4734  00310E                     __end_of_USBWakeFromSuspend:
  4735                           	opt stack 0
  4736                           tblptru	equ	0xFF8
  4737                           tblptrh	equ	0xFF7
  4738                           tblptrl	equ	0xFF6
  4739                           tablat	equ	0xFF5
  4740                           prodh	equ	0xFF4
  4741                           prodl	equ	0xFF3
  4742                           intcon	equ	0xFF2
  4743                           postinc0	equ	0xFEE
  4744                           wreg	equ	0xFE8
  4745                           indf1	equ	0xFE7
  4746                           postdec1	equ	0xFE5
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           postinc2	equ	0xFDE
  4751                           plusw2	equ	0xFDB
  4752                           fsr2h	equ	0xFDA
  4753                           fsr2l	equ	0xFD9
  4754                           status	equ	0xFD8
  4755                           
  4756 ;; *************** function _USBSuspend *****************
  4757 ;; Defined at:
  4758 ;;		line 2248 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;		None               void
  4765 ;; Registers used:
  4766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4775 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    8
  4779 ;; This function calls:
  4780 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4781 ;; This function is called by:
  4782 ;;		_USBDeviceTasks
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text12
  4787  003148                     __ptext12:
  4788                           	opt stack 0
  4789  003148                     _USBSuspend:
  4790                           	opt stack 20
  4791                           
  4792                           ;usb_device.c: 2273: UIEbits.ACTVIE = 1;
  4793                           
  4794                           ;incstack = 0
  4795  003148  8469               	bsf	3945,2,c	;volatile
  4796                           
  4797                           ;usb_device.c: 2274: (UIR &= 0xEF);
  4798  00314A  9868               	bcf	3944,4,c	;volatile
  4799                           
  4800                           ;usb_device.c: 2277: *U1CON_R |= 0x02;
  4801  00314C  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4802  003150  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4803  003154  0E00               	movlw	0
  4804  003156  82DB               	bsf	plusw2,1,c
  4805                           
  4806                           ;usb_device.c: 2280: USBBusIsSuspended = 1;
  4807  003158  0E01               	movlw	1
  4808  00315A  0100               	movlb	0	; () banked
  4809  00315C  6F96               	movwf	_USBBusIsSuspended& (0+255),b
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4813  00315E  0E00               	movlw	0
  4814  003160  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4815  003162  0E75               	movlw	117
  4816  003164  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4817  003166  0E00               	movlw	0
  4818  003168  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4819  00316A  0E00               	movlw	0
  4820  00316C  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4821  00316E  0E00               	movlw	0
  4822  003170  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4823  003172  0E00               	movlw	0
  4824  003174  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4825  003176  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4826  00317A  0012               	return		;funcret
  4827  00317C                     __end_of_USBSuspend:
  4828                           	opt stack 0
  4829                           tblptru	equ	0xFF8
  4830                           tblptrh	equ	0xFF7
  4831                           tblptrl	equ	0xFF6
  4832                           tablat	equ	0xFF5
  4833                           prodh	equ	0xFF4
  4834                           prodl	equ	0xFF3
  4835                           intcon	equ	0xFF2
  4836                           postinc0	equ	0xFEE
  4837                           wreg	equ	0xFE8
  4838                           indf1	equ	0xFE7
  4839                           postdec1	equ	0xFE5
  4840                           fsr1h	equ	0xFE2
  4841                           fsr1l	equ	0xFE1
  4842                           indf2	equ	0xFDF
  4843                           postinc2	equ	0xFDE
  4844                           plusw2	equ	0xFDB
  4845                           fsr2h	equ	0xFDA
  4846                           fsr2l	equ	0xFD9
  4847                           status	equ	0xFD8
  4848                           
  4849 ;; *************** function _USBStallHandler *****************
  4850 ;; Defined at:
  4851 ;;		line 2205 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;		None               void
  4858 ;; Registers used:
  4859 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4865 ;;      Params:         0       0       0       0       0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4867 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4868 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4869 ;;Total ram usage:        1 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    4
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_USBDeviceTasks
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text13
  4880  002F46                     __ptext13:
  4881                           	opt stack 0
  4882  002F46                     _USBStallHandler:
  4883                           	opt stack 24
  4884                           
  4885                           ;usb_device.c: 2217: if(*U1EP0_R & 0x01)
  4886                           
  4887                           ;incstack = 0
  4888  002F46  C05D  FFD9         	movff	_U1EP0_R,fsr2l
  4889  002F4A  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
  4890  002F4E  A0DF               	btfss	indf2,0,c
  4891  002F50  D024               	goto	l4548
  4892                           
  4893                           ;usb_device.c: 2218: {
  4894                           ;usb_device.c: 2220: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4895  002F52  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4896  002F56  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4897  002F5A  0E80               	movlw	128
  4898  002F5C  18DE               	xorwf	postinc2,w,c
  4899  002F5E  A4D8               	btfss	status,2,c
  4900  002F60  D015               	goto	l4546
  4901  002F62  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  4902  002F66  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  4903  002F6A  0E84               	movlw	132
  4904  002F6C  18DE               	xorwf	postinc2,w,c
  4905  002F6E  A4D8               	btfss	status,2,c
  4906  002F70  D00D               	goto	l4546
  4907                           
  4908                           ;usb_device.c: 2221: {
  4909                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4910  002F72  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4911  002F76  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4912  002F7A  0E0C               	movlw	12
  4913  002F7C  6EDF               	movwf	indf2,c
  4914                           
  4915                           ;usb_device.c: 2224: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4916  002F7E  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4917  002F82  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4918  002F86  0E00               	movlw	0
  4919  002F88  8EDB               	bsf	plusw2,7,c
  4920  002F8A  D000               	goto	l4546
  4921  002F8C                     l4546:
  4922                           
  4923                           ;usb_device.c: 2225: }
  4924                           ;usb_device.c: 2226: *U1EP0_R &= 0xFE;
  4925  002F8C  C05D  FFD9         	movff	_U1EP0_R,fsr2l
  4926  002F90  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
  4927  002F94  0EFE               	movlw	254
  4928  002F96  16DF               	andwf	indf2,f,c
  4929  002F98  D000               	goto	l4548
  4930  002F9A                     l4548:
  4931                           
  4932                           ;usb_device.c: 2227: }
  4933                           ;usb_device.c: 2229: (UIR &= 0xDF);
  4934  002F9A  9A68               	bcf	3944,5,c	;volatile
  4935  002F9C  0012               	return		;funcret
  4936  002F9E                     __end_of_USBStallHandler:
  4937                           	opt stack 0
  4938                           tblptru	equ	0xFF8
  4939                           tblptrh	equ	0xFF7
  4940                           tblptrl	equ	0xFF6
  4941                           tablat	equ	0xFF5
  4942                           prodh	equ	0xFF4
  4943                           prodl	equ	0xFF3
  4944                           intcon	equ	0xFF2
  4945                           postinc0	equ	0xFEE
  4946                           wreg	equ	0xFE8
  4947                           indf1	equ	0xFE7
  4948                           postdec1	equ	0xFE5
  4949                           fsr1h	equ	0xFE2
  4950                           fsr1l	equ	0xFE1
  4951                           indf2	equ	0xFDF
  4952                           postinc2	equ	0xFDE
  4953                           plusw2	equ	0xFDB
  4954                           fsr2h	equ	0xFDA
  4955                           fsr2l	equ	0xFD9
  4956                           status	equ	0xFD8
  4957                           
  4958 ;; *************** function _USBCtrlEPService *****************
  4959 ;; Defined at:
  4960 ;;		line 2372 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  setup_cnt       1   60[COMRAM] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;		None               void
  4967 ;; Registers used:
  4968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4974 ;;      Params:         0       0       0       0       0       0       0       0       0
  4975 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4976 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4977 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4978 ;;Total ram usage:        3 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:   11
  4981 ;; This function calls:
  4982 ;;		_USBCtrlTrfInHandler
  4983 ;;		_USBCtrlTrfOutHandler
  4984 ;;		_USBCtrlTrfSetupHandler
  4985 ;; This function is called by:
  4986 ;;		_USBDeviceTasks
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text14
  4991  00225E                     __ptext14:
  4992                           	opt stack 0
  4993  00225E                     _USBCtrlEPService:
  4994                           	opt stack 17
  4995                           
  4996                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  4997                           
  4998                           ;incstack = 0
  4999  00225E  0E2D               	movlw	45
  5000  002260  0100               	movlb	0	; () banked
  5001  002262  6F98               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5005  002264  C0B4  F0DE         	movff	_USTATcopy,??_USBCtrlEPService
  5006  002268  0EFD               	movlw	253
  5007  00226A  0100               	movlb	0	; () banked
  5008  00226C  17DE               	andwf	??_USBCtrlEPService& (0+255),f,b
  5009  00226E  A4D8               	btfss	status,2,c
  5010  002270  D05A               	goto	l4582
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;usb_device.c: 2383: {
  5014                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5015  002272  C0B4  F0DE         	movff	_USTATcopy,??_USBCtrlEPService
  5016  002276  0100               	movlb	0	; () banked
  5017  002278  90D8               	bcf	status,0,c
  5018  00227A  33DE               	rrcf	??_USBCtrlEPService& (0+255),f,b
  5019  00227C  0E3F               	movlw	63
  5020  00227E  0100               	movlb	0	; () banked
  5021  002280  17DE               	andwf	??_USBCtrlEPService& (0+255),f,b
  5022  002282  0100               	movlb	0	; () banked
  5023  002284  51DE               	movf	??_USBCtrlEPService& (0+255),w,b
  5024  002286  0D04               	mullw	4
  5025  002288  0E00               	movlw	0
  5026  00228A  24F3               	addwf	prodl,w,c
  5027  00228C  6E46               	movwf	_pBDTEntryEP0OutCurrent,c
  5028  00228E  0E04               	movlw	4
  5029  002290  20F4               	addwfc	prodh,w,c
  5030  002292  6E47               	movwf	_pBDTEntryEP0OutCurrent+1,c
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5034  002294  C046  F048         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  5035  002298  C047  F049         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;usb_device.c: 2396: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5039  00229C  0E04               	movlw	4
  5040  00229E  1A48               	xorwf	_pBDTEntryEP0OutNext,f,c
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5044  0022A0  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5045  0022A4  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5046  0022A8  30DF               	rrcf	indf2,w,c
  5047  0022AA  32E8               	rrcf	wreg,f,c
  5048  0022AC  0B0F               	andlw	15
  5049  0022AE  0A0D               	xorlw	13
  5050  0022B0  A4D8               	btfss	status,2,c
  5051  0022B2  D036               	goto	l4580
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;usb_device.c: 2400: {
  5055                           ;usb_device.c: 2401: unsigned char setup_cnt;
  5056                           ;usb_device.c: 2407: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5057  0022B4  0E00               	movlw	0
  5058  0022B6  6E3D               	movwf	USBCtrlEPService@setup_cnt,c
  5059  0022B8                     l4564:
  5060                           
  5061                           ; BSR set to: 0
  5062  0022B8  0E07               	movlw	7
  5063  0022BA  643D               	cpfsgt	USBCtrlEPService@setup_cnt,c
  5064  0022BC  D001               	goto	l4568
  5065                           
  5066                           ; BSR set to: 0
  5067  0022BE  D023               	goto	l4576
  5068  0022C0                     l4568:
  5069                           
  5070                           ;usb_device.c: 2408: {
  5071                           ;usb_device.c: 2409: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  5072  0022C0  EE20 F002          	lfsr	2,2
  5073  0022C4  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5074  0022C6  26D9               	addwf	fsr2l,f,c
  5075  0022C8  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5076  0022CA  22DA               	addwfc	fsr2h,f,c
  5077  0022CC  CFDE F0DE          	movff	postinc2,??_USBCtrlEPService
  5078  0022D0  CFDD F0DF          	movff	postdec2,??_USBCtrlEPService+1
  5079  0022D4  C0DE  FFD9         	movff	??_USBCtrlEPService,fsr2l
  5080  0022D8  C0DF  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
  5081  0022DC  503D               	movf	USBCtrlEPService@setup_cnt,w,c
  5082  0022DE  0D01               	mullw	1
  5083  0022E0  0E30               	movlw	48
  5084  0022E2  24F3               	addwf	prodl,w,c
  5085  0022E4  6EE1               	movwf	fsr1l,c
  5086  0022E6  0E04               	movlw	4
  5087  0022E8  20F4               	addwfc	prodh,w,c
  5088  0022EA  6EE2               	movwf	fsr1h,c
  5089  0022EC  CFDF FFE7          	movff	indf2,indf1
  5090                           
  5091                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR++;
  5092  0022F0  EE20 F002          	lfsr	2,2
  5093  0022F4  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5094  0022F6  26D9               	addwf	fsr2l,f,c
  5095  0022F8  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5096  0022FA  22DA               	addwfc	fsr2h,f,c
  5097  0022FC  2ADE               	incf	postinc2,f,c
  5098  0022FE  0E00               	movlw	0
  5099  002300  22DD               	addwfc	postdec2,f,c
  5100  002302  2A3D               	incf	USBCtrlEPService@setup_cnt,f,c
  5101  002304  D7D9               	goto	l4564
  5102  002306                     l4576:
  5103                           
  5104                           ;usb_device.c: 2411: }
  5105                           ;usb_device.c: 2412: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  5106  002306  EE20 F002          	lfsr	2,2
  5107  00230A  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5108  00230C  26D9               	addwf	fsr2l,f,c
  5109  00230E  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5110  002310  22DA               	addwfc	fsr2h,f,c
  5111  002312  0E30               	movlw	48
  5112  002314  6EDE               	movwf	postinc2,c
  5113  002316  0E04               	movlw	4
  5114  002318  6EDD               	movwf	postdec2,c
  5115                           
  5116                           ;usb_device.c: 2415: USBCtrlTrfSetupHandler();
  5117  00231A  ECFE  F015         	call	_USBCtrlTrfSetupHandler	;wreg free
  5118                           
  5119                           ;usb_device.c: 2416: }
  5120  00231E  D00C               	goto	l309
  5121  002320                     l4580:
  5122                           
  5123                           ;usb_device.c: 2417: else
  5124                           ;usb_device.c: 2418: {
  5125                           ;usb_device.c: 2420: USBCtrlTrfOutHandler();
  5126  002320  ECE5  F016         	call	_USBCtrlTrfOutHandler	;wreg free
  5127                           
  5128                           ;usb_device.c: 2421: }
  5129                           ;usb_device.c: 2422: }
  5130  002324  D009               	goto	l309
  5131  002326                     l4582:
  5132                           
  5133                           ;usb_device.c: 2423: else if((USTATcopy.Val & ~0x02) == 0x04)
  5134  002326  0100               	movlb	0	; () banked
  5135  002328  51B4               	movf	_USTATcopy& (0+255),w,b
  5136  00232A  0BFD               	andlw	253
  5137  00232C  0A04               	xorlw	4
  5138  00232E  A4D8               	btfss	status,2,c
  5139  002330  D003               	goto	l309
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;usb_device.c: 2424: {
  5143                           ;usb_device.c: 2427: USBCtrlTrfInHandler();
  5144  002332  ECC1  F012         	call	_USBCtrlTrfInHandler	;wreg free
  5145  002336  D000               	goto	l309
  5146  002338                     l309:
  5147  002338  0012               	return		;funcret
  5148  00233A                     __end_of_USBCtrlEPService:
  5149                           	opt stack 0
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           intcon	equ	0xFF2
  5157                           postinc0	equ	0xFEE
  5158                           wreg	equ	0xFE8
  5159                           indf1	equ	0xFE7
  5160                           postdec1	equ	0xFE5
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           indf2	equ	0xFDF
  5164                           postinc2	equ	0xFDE
  5165                           postdec2	equ	0xFDD
  5166                           plusw2	equ	0xFDB
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5172 ;; Defined at:
  5173 ;;		line 2472 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;		None               void
  5180 ;; Registers used:
  5181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5190 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5191 ;;Total ram usage:        0 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:   10
  5194 ;; This function calls:
  5195 ;;		_USBCheckStdRequest
  5196 ;;		_USBCtrlEPServiceComplete
  5197 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5198 ;; This function is called by:
  5199 ;;		_USBCtrlEPService
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text15
  5204  002BFC                     __ptext15:
  5205                           	opt stack 0
  5206  002BFC                     _USBCtrlTrfSetupHandler:
  5207                           	opt stack 17
  5208                           
  5209                           ;usb_device.c: 2477: shortPacketStatus = 0;
  5210                           
  5211                           ;incstack = 0
  5212  002BFC  0E00               	movlw	0
  5213  002BFE  6E55               	movwf	_shortPacketStatus,c
  5214                           
  5215                           ;usb_device.c: 2478: USBDeferStatusStagePacket = 0;
  5216  002C00  0E00               	movlw	0
  5217  002C02  6E4E               	movwf	_USBDeferStatusStagePacket,c	;volatile
  5218                           
  5219                           ;usb_device.c: 2479: USBDeferINDataStagePackets = 0;
  5220  002C04  0E00               	movlw	0
  5221  002C06  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5222                           
  5223                           ;usb_device.c: 2480: USBDeferOUTDataStagePackets = 0;
  5224  002C08  0E00               	movlw	0
  5225  002C0A  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5226                           
  5227                           ;usb_device.c: 2481: BothEP0OutUOWNsSet = 0;
  5228  002C0C  0E00               	movlw	0
  5229  002C0E  0100               	movlb	0	; () banked
  5230  002C10  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  5231                           
  5232                           ;usb_device.c: 2482: controlTransferState = 0;
  5233  002C12  0E00               	movlw	0
  5234  002C14  6E54               	movwf	_controlTransferState,c
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5238  002C16  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5239  002C1A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5240  002C1E  0E7F               	movlw	127
  5241  002C20  16DF               	andwf	indf2,f,c
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5245  002C22  0E04               	movlw	4
  5246  002C24  1A3E               	xorwf	_pBDTEntryIn,f,c
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;usb_device.c: 2493: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5250  002C26  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5251  002C2A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5252  002C2E  0E7F               	movlw	127
  5253  002C30  16DF               	andwf	indf2,f,c
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;usb_device.c: 2494: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5257  002C32  0E04               	movlw	4
  5258  002C34  1A3E               	xorwf	_pBDTEntryIn,f,c
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;usb_device.c: 2495: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5262  002C36  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5263  002C3A  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5264  002C3E  0E7F               	movlw	127
  5265  002C40  16DF               	andwf	indf2,f,c
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;usb_device.c: 2497: inPipes[0].info.Val = 0;
  5269  002C42  0E00               	movlw	0
  5270  002C44  6E59               	movwf	_inPipes+3,c
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;usb_device.c: 2498: inPipes[0].wCount.Val = 0;
  5274  002C46  0E00               	movlw	0
  5275  002C48  6E5B               	movwf	_inPipes+5,c
  5276  002C4A  0E00               	movlw	0
  5277  002C4C  6E5A               	movwf	_inPipes+4,c
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;usb_device.c: 2499: outPipes[0].info.Val = 0;
  5281  002C4E  0E00               	movlw	0
  5282  002C50  0100               	movlb	0	; () banked
  5283  002C52  6F6D               	movwf	(_outPipes+3)& (0+255),b
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;usb_device.c: 2500: outPipes[0].wCount.Val = 0;
  5287  002C54  0E00               	movlw	0
  5288  002C56  0100               	movlb	0	; () banked
  5289  002C58  6F6F               	movwf	(_outPipes+5)& (0+255),b
  5290  002C5A  0E00               	movlw	0
  5291  002C5C  6F6E               	movwf	(_outPipes+4)& (0+255),b
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;usb_device.c: 2506: USBCheckStdRequest();
  5295  002C5E  ECE1  F00F         	call	_USBCheckStdRequest	;wreg free
  5296                           
  5297                           ;usb_device.c: 2507: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5298  002C62  0E00               	movlw	0
  5299  002C64  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5300  002C66  0E03               	movlw	3
  5301  002C68  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5302  002C6A  0E00               	movlw	0
  5303  002C6C  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5304  002C6E  0E00               	movlw	0
  5305  002C70  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5306  002C72  0E00               	movlw	0
  5307  002C74  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5308  002C76  0E00               	movlw	0
  5309  002C78  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5310  002C7A  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5311                           
  5312                           ;usb_device.c: 2520: USBCtrlEPServiceComplete();
  5313  002C7E  EC72  F00E         	call	_USBCtrlEPServiceComplete	;wreg free
  5314  002C82  0012               	return		;funcret
  5315  002C84                     __end_of_USBCtrlTrfSetupHandler:
  5316                           	opt stack 0
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           intcon	equ	0xFF2
  5324                           postinc0	equ	0xFEE
  5325                           wreg	equ	0xFE8
  5326                           indf1	equ	0xFE7
  5327                           postdec1	equ	0xFE5
  5328                           fsr1h	equ	0xFE2
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           plusw2	equ	0xFDB
  5334                           fsr2h	equ	0xFDA
  5335                           fsr2l	equ	0xFD9
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function _USBCtrlEPServiceComplete *****************
  5339 ;; Defined at:
  5340 ;;		line 1619 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;		None               void
  5347 ;; Registers used:
  5348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    6
  5361 ;; This function calls:
  5362 ;;		_USBCtrlEPAllowDataStage
  5363 ;;		_USBCtrlEPAllowStatusStage
  5364 ;; This function is called by:
  5365 ;;		_USBCtrlTrfSetupHandler
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text16
  5370  001CE4                     __ptext16:
  5371                           	opt stack 0
  5372  001CE4                     _USBCtrlEPServiceComplete:
  5373                           	opt stack 20
  5374                           
  5375                           ;usb_device.c: 1625: UCONbits.PKTDIS = 0;
  5376                           
  5377                           ;incstack = 0
  5378  001CE4  986D               	bcf	3949,4,c	;volatile
  5379                           
  5380                           ;usb_device.c: 1631: if(inPipes[0].info.bits.busy == 0)
  5381  001CE6  BE59               	btfsc	_inPipes+3,7,c
  5382  001CE8  D03B               	goto	l212
  5383                           
  5384                           ;usb_device.c: 1632: {
  5385                           ;usb_device.c: 1633: if(outPipes[0].info.bits.busy == 1)
  5386  001CEA  0100               	movlb	0	; () banked
  5387  001CEC  AF6D               	btfss	(_outPipes+3)& (0+255),7,b
  5388  001CEE  D00D               	goto	l4212
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;usb_device.c: 1634: {
  5392                           ;usb_device.c: 1635: controlTransferState = 2;
  5393  001CF0  0E02               	movlw	2
  5394  001CF2  6E54               	movwf	_controlTransferState,c
  5395                           
  5396                           ;usb_device.c: 1646: if(USBDeferOUTDataStagePackets == 0)
  5397  001CF4  504D               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  5398  001CF6  A4D8               	btfss	status,2,c
  5399  001CF8  D003               	goto	l4208
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;usb_device.c: 1647: {
  5403                           ;usb_device.c: 1648: USBCtrlEPAllowDataStage();
  5404  001CFA  EC8F  F014         	call	_USBCtrlEPAllowDataStage	;wreg free
  5405  001CFE  D000               	goto	l4208
  5406  001D00                     l4208:
  5407                           
  5408                           ;usb_device.c: 1649: }
  5409                           ;usb_device.c: 1653: USBStatusStageEnabledFlag2 = 0;
  5410  001D00  0E00               	movlw	0
  5411  001D02  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5412                           
  5413                           ;usb_device.c: 1654: USBStatusStageEnabledFlag1 = 0;
  5414  001D04  0E00               	movlw	0
  5415  001D06  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5416                           
  5417                           ;usb_device.c: 1655: }
  5418  001D08  D06A               	goto	l222
  5419  001D0A                     l4212:
  5420                           
  5421                           ;usb_device.c: 1656: else
  5422                           ;usb_device.c: 1657: {
  5423                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->CNT = 8;
  5424  001D0A  EE20 F001          	lfsr	2,1
  5425  001D0E  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5426  001D10  26D9               	addwf	fsr2l,f,c
  5427  001D12  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5428  001D14  22DA               	addwfc	fsr2h,f,c
  5429  001D16  0E08               	movlw	8
  5430  001D18  6EDF               	movwf	indf2,c
  5431                           
  5432                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5433  001D1A  EE20 F002          	lfsr	2,2
  5434  001D1E  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5435  001D20  26D9               	addwf	fsr2l,f,c
  5436  001D22  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5437  001D24  22DA               	addwfc	fsr2h,f,c
  5438  001D26  0E30               	movlw	48
  5439  001D28  6EDE               	movwf	postinc2,c
  5440  001D2A  0E04               	movlw	4
  5441  001D2C  6EDD               	movwf	postdec2,c
  5442                           
  5443                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5444  001D2E  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5445  001D32  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5446  001D36  0E0C               	movlw	12
  5447  001D38  6EDF               	movwf	indf2,c
  5448                           
  5449                           ;usb_device.c: 1665: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5450  001D3A  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5451  001D3E  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5452  001D42  0E00               	movlw	0
  5453  001D44  8EDB               	bsf	plusw2,7,c
  5454                           
  5455                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val = 0x04;
  5456  001D46  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5457  001D4A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5458  001D4E  0E04               	movlw	4
  5459  001D50  6EDF               	movwf	indf2,c
  5460                           
  5461                           ;usb_device.c: 1667: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5462  001D52  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5463  001D56  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5464  001D5A  0E00               	movlw	0
  5465  001D5C  8EDB               	bsf	plusw2,7,c
  5466                           
  5467                           ;usb_device.c: 1668: }
  5468                           ;usb_device.c: 1669: }
  5469  001D5E  D03F               	goto	l222
  5470  001D60                     l212:
  5471                           
  5472                           ;usb_device.c: 1670: else
  5473                           ;usb_device.c: 1671: {
  5474                           ;usb_device.c: 1672: if(SetupPkt.DataDir == (0x80>>7))
  5475  001D60  0104               	movlb	4	; () banked
  5476  001D62  AF30               	btfss	48,7,b	;volatile
  5477  001D64  D012               	goto	l4232
  5478                           
  5479                           ; BSR set to: 4
  5480                           ;usb_device.c: 1673: {
  5481                           ;usb_device.c: 1674: controlTransferState = 1;
  5482  001D66  0E01               	movlw	1
  5483  001D68  6E54               	movwf	_controlTransferState,c
  5484                           
  5485                           ;usb_device.c: 1688: if(USBDeferINDataStagePackets == 0)
  5486  001D6A  504C               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  5487  001D6C  A4D8               	btfss	status,2,c
  5488  001D6E  D003               	goto	l4224
  5489                           
  5490                           ; BSR set to: 4
  5491                           ;usb_device.c: 1689: {
  5492                           ;usb_device.c: 1690: USBCtrlEPAllowDataStage();
  5493  001D70  EC8F  F014         	call	_USBCtrlEPAllowDataStage	;wreg free
  5494  001D74  D000               	goto	l4224
  5495  001D76                     l4224:
  5496                           
  5497                           ;usb_device.c: 1691: }
  5498                           ;usb_device.c: 1713: USBStatusStageEnabledFlag2 = 0;
  5499  001D76  0E00               	movlw	0
  5500  001D78  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5501                           
  5502                           ;usb_device.c: 1714: USBStatusStageEnabledFlag1 = 0;
  5503  001D7A  0E00               	movlw	0
  5504  001D7C  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5505                           
  5506                           ;usb_device.c: 1715: if(USBDeferStatusStagePacket == 0)
  5507  001D7E  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5508  001D80  A4D8               	btfss	status,2,c
  5509  001D82  D02D               	goto	l222
  5510                           
  5511                           ;usb_device.c: 1716: {
  5512                           ;usb_device.c: 1717: USBCtrlEPAllowStatusStage();
  5513  001D84  EC9D  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5514                           
  5515                           ;usb_device.c: 1718: }
  5516                           ;usb_device.c: 1719: }
  5517  001D88  D02A               	goto	l222
  5518  001D8A                     l4232:
  5519                           
  5520                           ;usb_device.c: 1720: else
  5521                           ;usb_device.c: 1721: {
  5522                           ;usb_device.c: 1732: controlTransferState = 2;
  5523  001D8A  0E02               	movlw	2
  5524  001D8C  6E54               	movwf	_controlTransferState,c
  5525                           
  5526                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->CNT = 8;
  5527  001D8E  EE20 F001          	lfsr	2,1
  5528  001D92  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5529  001D94  26D9               	addwf	fsr2l,f,c
  5530  001D96  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5531  001D98  22DA               	addwfc	fsr2h,f,c
  5532  001D9A  0E08               	movlw	8
  5533  001D9C  6EDF               	movwf	indf2,c
  5534                           
  5535                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5536  001D9E  EE20 F002          	lfsr	2,2
  5537  001DA2  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5538  001DA4  26D9               	addwf	fsr2l,f,c
  5539  001DA6  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5540  001DA8  22DA               	addwfc	fsr2h,f,c
  5541  001DAA  0E30               	movlw	48
  5542  001DAC  6EDE               	movwf	postinc2,c
  5543  001DAE  0E04               	movlw	4
  5544  001DB0  6EDD               	movwf	postdec2,c
  5545                           
  5546                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5547  001DB2  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5548  001DB6  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5549  001DBA  0E04               	movlw	4
  5550  001DBC  6EDF               	movwf	indf2,c
  5551                           
  5552                           ;usb_device.c: 1738: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5553  001DBE  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5554  001DC2  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5555  001DC6  0E00               	movlw	0
  5556  001DC8  8EDB               	bsf	plusw2,7,c
  5557                           
  5558                           ;usb_device.c: 1741: USBStatusStageEnabledFlag2 = 0;
  5559  001DCA  0E00               	movlw	0
  5560  001DCC  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5561                           
  5562                           ;usb_device.c: 1742: USBStatusStageEnabledFlag1 = 0;
  5563  001DCE  0E00               	movlw	0
  5564  001DD0  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5565                           
  5566                           ;usb_device.c: 1743: if(USBDeferStatusStagePacket == 0)
  5567  001DD2  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5568  001DD4  A4D8               	btfss	status,2,c
  5569  001DD6  D003               	goto	l222
  5570                           
  5571                           ;usb_device.c: 1744: {
  5572                           ;usb_device.c: 1745: USBCtrlEPAllowStatusStage();
  5573  001DD8  EC9D  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5574  001DDC  D000               	goto	l222
  5575  001DDE                     l222:
  5576  001DDE  0012               	return		;funcret
  5577  001DE0                     __end_of_USBCtrlEPServiceComplete:
  5578                           	opt stack 0
  5579                           tblptru	equ	0xFF8
  5580                           tblptrh	equ	0xFF7
  5581                           tblptrl	equ	0xFF6
  5582                           tablat	equ	0xFF5
  5583                           prodh	equ	0xFF4
  5584                           prodl	equ	0xFF3
  5585                           intcon	equ	0xFF2
  5586                           postinc0	equ	0xFEE
  5587                           wreg	equ	0xFE8
  5588                           indf1	equ	0xFE7
  5589                           postdec1	equ	0xFE5
  5590                           fsr1h	equ	0xFE2
  5591                           fsr1l	equ	0xFE1
  5592                           indf2	equ	0xFDF
  5593                           postinc2	equ	0xFDE
  5594                           postdec2	equ	0xFDD
  5595                           plusw2	equ	0xFDB
  5596                           fsr2h	equ	0xFDA
  5597                           fsr2l	equ	0xFD9
  5598                           status	equ	0xFD8
  5599                           
  5600 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5601 ;; Defined at:
  5602 ;;		line 1491 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;		None               void
  5609 ;; Registers used:
  5610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5619 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5620 ;;Total ram usage:        0 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:    5
  5623 ;; This function calls:
  5624 ;;		_USBCtrlTrfTxService
  5625 ;; This function is called by:
  5626 ;;		_USBCtrlEPServiceComplete
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text17
  5631  00291E                     __ptext17:
  5632                           	opt stack 0
  5633  00291E                     _USBCtrlEPAllowDataStage:
  5634                           	opt stack 20
  5635                           
  5636                           ;usb_device.c: 1493: USBDeferINDataStagePackets = 0;
  5637                           
  5638                           ;incstack = 0
  5639  00291E  0E00               	movlw	0
  5640  002920  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5641                           
  5642                           ;usb_device.c: 1494: USBDeferOUTDataStagePackets = 0;
  5643  002922  0E00               	movlw	0
  5644  002924  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5645                           
  5646                           ;usb_device.c: 1496: if(controlTransferState == 2)
  5647  002926  0E02               	movlw	2
  5648  002928  1854               	xorwf	_controlTransferState,w,c
  5649  00292A  A4D8               	btfss	status,2,c
  5650  00292C  D01D               	goto	l4006
  5651                           
  5652                           ;usb_device.c: 1497: {
  5653                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->CNT = 8;
  5654  00292E  EE20 F001          	lfsr	2,1
  5655  002932  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5656  002934  26D9               	addwf	fsr2l,f,c
  5657  002936  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5658  002938  22DA               	addwfc	fsr2h,f,c
  5659  00293A  0E08               	movlw	8
  5660  00293C  6EDF               	movwf	indf2,c
  5661                           
  5662                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  5663  00293E  EE20 F002          	lfsr	2,2
  5664  002942  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5665  002944  26D9               	addwf	fsr2l,f,c
  5666  002946  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5667  002948  22DA               	addwfc	fsr2h,f,c
  5668  00294A  0E38               	movlw	56
  5669  00294C  6EDE               	movwf	postinc2,c
  5670  00294E  0E04               	movlw	4
  5671  002950  6EDD               	movwf	postdec2,c
  5672                           
  5673                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5674  002952  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5675  002956  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5676  00295A  0E48               	movlw	72
  5677  00295C  6EDF               	movwf	indf2,c
  5678                           
  5679                           ;usb_device.c: 1502: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5680  00295E  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5681  002962  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5682  002966  D023               	goto	L3
  5683  002968                     l4006:
  5684                           
  5685                           ;usb_device.c: 1504: else
  5686                           ;usb_device.c: 1505: {
  5687                           ;usb_device.c: 1508: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5688  002968  505A               	movf	_inPipes+4,w,c
  5689  00296A  0104               	movlb	4	; () banked
  5690  00296C  5D36               	subwf	54,w,b	;volatile
  5691  00296E  505B               	movf	_inPipes+5,w,c
  5692  002970  0104               	movlb	4	; () banked
  5693  002972  5937               	subwfb	55,w,b	;volatile
  5694  002974  B0D8               	btfsc	status,0,c
  5695  002976  D005               	goto	l4010
  5696                           
  5697                           ; BSR set to: 4
  5698                           ;usb_device.c: 1509: {
  5699                           ;usb_device.c: 1510: inPipes[0].wCount.Val = SetupPkt.wLength;
  5700  002978  C436 F05A          	movff	1078,_inPipes+4	;volatile
  5701  00297C  C437 F05B          	movff	1079,_inPipes+5	;volatile
  5702  002980  D000               	goto	l4010
  5703  002982                     l4010:
  5704                           
  5705                           ; BSR set to: 4
  5706                           ;usb_device.c: 1511: }
  5707                           ;usb_device.c: 1512: USBCtrlTrfTxService();
  5708  002982  ECC0  F010         	call	_USBCtrlTrfTxService	;wreg free
  5709                           
  5710                           ;usb_device.c: 1517: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  5711  002986  EE20 F002          	lfsr	2,2
  5712  00298A  503E               	movf	_pBDTEntryIn,w,c
  5713  00298C  26D9               	addwf	fsr2l,f,c
  5714  00298E  503F               	movf	_pBDTEntryIn+1,w,c
  5715  002990  22DA               	addwfc	fsr2h,f,c
  5716  002992  0E38               	movlw	56
  5717  002994  6EDE               	movwf	postinc2,c
  5718  002996  0E04               	movlw	4
  5719  002998  6EDD               	movwf	postdec2,c
  5720                           
  5721                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5722  00299A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5723  00299E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5724  0029A2  0E48               	movlw	72
  5725  0029A4  6EDF               	movwf	indf2,c
  5726                           
  5727                           ;usb_device.c: 1519: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5728  0029A6  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5729  0029AA  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5730  0029AE                     L3:
  5731  0029AE  0E00               	movlw	0
  5732  0029B0  8EDB               	bsf	plusw2,7,c
  5733  0029B2  D000               	goto	l204
  5734  0029B4                     l204:
  5735  0029B4  0012               	return		;funcret
  5736  0029B6                     __end_of_USBCtrlEPAllowDataStage:
  5737                           	opt stack 0
  5738                           tblptru	equ	0xFF8
  5739                           tblptrh	equ	0xFF7
  5740                           tblptrl	equ	0xFF6
  5741                           tablat	equ	0xFF5
  5742                           prodh	equ	0xFF4
  5743                           prodl	equ	0xFF3
  5744                           intcon	equ	0xFF2
  5745                           postinc0	equ	0xFEE
  5746                           wreg	equ	0xFE8
  5747                           indf1	equ	0xFE7
  5748                           postdec1	equ	0xFE5
  5749                           fsr1h	equ	0xFE2
  5750                           fsr1l	equ	0xFE1
  5751                           indf2	equ	0xFDF
  5752                           postinc2	equ	0xFDE
  5753                           postdec2	equ	0xFDD
  5754                           plusw2	equ	0xFDB
  5755                           fsr2h	equ	0xFDA
  5756                           fsr2l	equ	0xFD9
  5757                           status	equ	0xFD8
  5758                           
  5759 ;; *************** function _USBCheckStdRequest *****************
  5760 ;; Defined at:
  5761 ;;		line 2692 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;		None               void
  5768 ;; Registers used:
  5769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5778 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5779 ;;Total ram usage:        0 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    9
  5782 ;; This function calls:
  5783 ;;		_USBStdFeatureReqHandler
  5784 ;;		_USBStdGetDscHandler
  5785 ;;		_USBStdGetStatusHandler
  5786 ;;		_USBStdSetCfgHandler
  5787 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5788 ;; This function is called by:
  5789 ;;		_USBCtrlTrfSetupHandler
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text18
  5794  001FC2                     __ptext18:
  5795                           	opt stack 0
  5796  001FC2                     _USBCheckStdRequest:
  5797                           	opt stack 17
  5798                           
  5799                           ;usb_device.c: 2694: if(SetupPkt.RequestType != (0x00>>5)) return;
  5800                           
  5801                           ;incstack = 0
  5802  001FC2  0104               	movlb	4	; () banked
  5803  001FC4  3930               	swapf	48,w,b	;volatile
  5804  001FC6  32E8               	rrcf	wreg,f,c
  5805  001FC8  0B03               	andlw	3
  5806  001FCA  0900               	iorlw	0
  5807  001FCC  A4D8               	btfss	status,2,c
  5808  001FCE  D068               	goto	l337
  5809  001FD0  D045               	goto	l4330
  5810                           
  5811                           ; BSR set to: 4
  5812  001FD2  D066               	goto	l337
  5813                           
  5814                           ; BSR set to: 4
  5815                           ;usb_device.c: 2696: switch(SetupPkt.bRequest)
  5816  001FD4  D043               	goto	l4330
  5817  001FD6                     l339:
  5818                           
  5819                           ; BSR set to: 4
  5820                           ;usb_device.c: 2699: inPipes[0].info.bits.busy = 1;
  5821  001FD6  8E59               	bsf	_inPipes+3,7,c
  5822                           
  5823                           ; BSR set to: 4
  5824                           ;usb_device.c: 2700: USBDeviceState = ADR_PENDING_STATE;
  5825  001FD8  0E08               	movlw	8
  5826  001FDA  0100               	movlb	0	; () banked
  5827  001FDC  6F97               	movwf	_USBDeviceState& (0+255),b
  5828                           
  5829                           ;usb_device.c: 2702: break;
  5830  001FDE  D060               	goto	l337
  5831  001FE0                     l4300:
  5832                           
  5833                           ;usb_device.c: 2704: USBStdGetDscHandler();
  5834  001FE0  EC54  F00D         	call	_USBStdGetDscHandler	;wreg free
  5835                           
  5836                           ;usb_device.c: 2705: break;
  5837  001FE4  D05D               	goto	l337
  5838  001FE6                     l4302:
  5839                           
  5840                           ;usb_device.c: 2707: USBStdSetCfgHandler();
  5841  001FE6  EC51  F010         	call	_USBStdSetCfgHandler	;wreg free
  5842                           
  5843                           ;usb_device.c: 2708: break;
  5844  001FEA  D05A               	goto	l337
  5845  001FEC                     l4304:
  5846                           
  5847                           ;usb_device.c: 2710: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5848  001FEC  0E5C               	movlw	low _USBActiveConfiguration
  5849  001FEE  6E56               	movwf	_inPipes,c
  5850  001FF0  0E00               	movlw	high _USBActiveConfiguration
  5851  001FF2  D013               	goto	L4
  5852  001FF4                     l4306:
  5853                           
  5854                           ;usb_device.c: 2711: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5855  001FF4  8059               	bsf	_inPipes+3,0,c
  5856  001FF6  D013               	goto	l4320
  5857  001FF8                     l4310:
  5858                           
  5859                           ;usb_device.c: 2713: inPipes[0].info.bits.busy = 1;
  5860  001FF8  8E59               	bsf	_inPipes+3,7,c
  5861                           
  5862                           ;usb_device.c: 2714: break;
  5863  001FFA  D052               	goto	l337
  5864  001FFC                     l4312:
  5865                           
  5866                           ;usb_device.c: 2716: USBStdGetStatusHandler();
  5867  001FFC  ECDD  F013         	call	_USBStdGetStatusHandler	;wreg free
  5868                           
  5869                           ;usb_device.c: 2717: break;
  5870  002000  D04F               	goto	l337
  5871                           
  5872                           ;usb_device.c: 2718: case 1:
  5873  002002  D000               	goto	l4314
  5874  002004                     l4314:
  5875                           
  5876                           ;usb_device.c: 2719: case 3:
  5877                           ;usb_device.c: 2720: USBStdFeatureReqHandler();
  5878  002004  EC2B  F007         	call	_USBStdFeatureReqHandler	;wreg free
  5879                           
  5880                           ;usb_device.c: 2721: break;
  5881  002008  D04B               	goto	l337
  5882  00200A                     l4316:
  5883                           
  5884                           ;usb_device.c: 2723: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5885  00200A  0104               	movlb	4	; () banked
  5886  00200C  5134               	movf	52,w,b	;volatile
  5887  00200E  0D01               	mullw	1
  5888  002010  0EB2               	movlw	low _USBAlternateInterface
  5889  002012  24F3               	addwf	prodl,w,c
  5890  002014  6E56               	movwf	_inPipes,c
  5891  002016  0E00               	movlw	high _USBAlternateInterface
  5892  002018  20F4               	addwfc	prodh,w,c
  5893  00201A                     L4:
  5894  00201A  6E57               	movwf	_inPipes+1,c
  5895  00201C  D7EB               	goto	l4306
  5896  00201E                     l4320:
  5897                           
  5898                           ; BSR set to: 4
  5899                           ;usb_device.c: 2725: inPipes[0].wCount.v[0] = 1;
  5900  00201E  0E01               	movlw	1
  5901  002020  6E5A               	movwf	_inPipes+4,c
  5902  002022  D7EA               	goto	l4310
  5903  002024                     l348:
  5904                           
  5905                           ; BSR set to: 4
  5906                           ;usb_device.c: 2729: inPipes[0].info.bits.busy = 1;
  5907  002024  8E59               	bsf	_inPipes+3,7,c
  5908                           
  5909                           ; BSR set to: 4
  5910                           ;usb_device.c: 2730: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5911  002026  0104               	movlb	4	; () banked
  5912  002028  5134               	movf	52,w,b	;volatile
  5913  00202A  0D01               	mullw	1
  5914  00202C  0EB2               	movlw	low _USBAlternateInterface
  5915  00202E  24F3               	addwf	prodl,w,c
  5916  002030  6ED9               	movwf	fsr2l,c
  5917  002032  0E00               	movlw	high _USBAlternateInterface
  5918  002034  20F4               	addwfc	prodh,w,c
  5919  002036  6EDA               	movwf	fsr2h,c
  5920  002038  C432 FFDF          	movff	1074,indf2	;volatile
  5921                           
  5922                           ;usb_device.c: 2731: break;
  5923  00203C  D031               	goto	l337
  5924  00203E                     l4326:
  5925                           
  5926                           ; BSR set to: 4
  5927                           ;usb_device.c: 2733: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5928  00203E  0E00               	movlw	0
  5929  002040  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5930  002042  0E02               	movlw	2
  5931  002044  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5932  002046  0E00               	movlw	0
  5933  002048  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5934  00204A  0E00               	movlw	0
  5935  00204C  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5936  00204E  0E00               	movlw	0
  5937  002050  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5938  002052  0E00               	movlw	0
  5939  002054  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5940  002056  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5941                           
  5942                           ;usb_device.c: 2738: }
  5943                           
  5944                           ;usb_device.c: 2737: break;
  5945                           
  5946                           ;usb_device.c: 2736: default:
  5947                           
  5948                           ;usb_device.c: 2735: case 12:
  5949                           
  5950                           ;usb_device.c: 2734: break;
  5951  00205A  D022               	goto	l337
  5952  00205C                     l4330:
  5953  00205C  0104               	movlb	4	; () banked
  5954  00205E  5131               	movf	49,w,b	;volatile
  5955                           
  5956                           ; Switch size 1, requested type "space"
  5957                           ; Number of cases is 11, Range of values is 0 to 12
  5958                           ; switch strategies available:
  5959                           ; Name         Instructions Cycles
  5960                           ; simple_byte           34    18 (average)
  5961                           ;	Chosen strategy is simple_byte
  5962  002060  0A00               	xorlw	0	; case 0
  5963  002062  B4D8               	btfsc	status,2,c
  5964  002064  D7CB               	goto	l4312
  5965  002066  0A01               	xorlw	1	; case 1
  5966  002068  B4D8               	btfsc	status,2,c
  5967  00206A  D7CC               	goto	l4314
  5968  00206C  0A02               	xorlw	2	; case 3
  5969  00206E  B4D8               	btfsc	status,2,c
  5970  002070  D7C9               	goto	l4314
  5971  002072  0A06               	xorlw	6	; case 5
  5972  002074  B4D8               	btfsc	status,2,c
  5973  002076  D7AF               	goto	l339
  5974  002078  0A03               	xorlw	3	; case 6
  5975  00207A  B4D8               	btfsc	status,2,c
  5976  00207C  D7B1               	goto	l4300
  5977  00207E  0A01               	xorlw	1	; case 7
  5978  002080  B4D8               	btfsc	status,2,c
  5979  002082  D7DD               	goto	l4326
  5980  002084  0A0F               	xorlw	15	; case 8
  5981  002086  B4D8               	btfsc	status,2,c
  5982  002088  D7B1               	goto	l4304
  5983  00208A  0A01               	xorlw	1	; case 9
  5984  00208C  B4D8               	btfsc	status,2,c
  5985  00208E  D7AB               	goto	l4302
  5986  002090  0A03               	xorlw	3	; case 10
  5987  002092  B4D8               	btfsc	status,2,c
  5988  002094  D7BA               	goto	l4316
  5989  002096  0A01               	xorlw	1	; case 11
  5990  002098  B4D8               	btfsc	status,2,c
  5991  00209A  D7C4               	goto	l348
  5992  00209C  0A07               	xorlw	7	; case 12
  5993  00209E  D000               	goto	l337
  5994  0020A0                     l337:
  5995  0020A0  0012               	return		;funcret
  5996  0020A2                     __end_of_USBCheckStdRequest:
  5997                           	opt stack 0
  5998                           tblptru	equ	0xFF8
  5999                           tblptrh	equ	0xFF7
  6000                           tblptrl	equ	0xFF6
  6001                           tablat	equ	0xFF5
  6002                           prodh	equ	0xFF4
  6003                           prodl	equ	0xFF3
  6004                           intcon	equ	0xFF2
  6005                           postinc0	equ	0xFEE
  6006                           wreg	equ	0xFE8
  6007                           indf1	equ	0xFE7
  6008                           postdec1	equ	0xFE5
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           indf2	equ	0xFDF
  6012                           postinc2	equ	0xFDE
  6013                           postdec2	equ	0xFDD
  6014                           plusw2	equ	0xFDB
  6015                           fsr2h	equ	0xFDA
  6016                           fsr2l	equ	0xFD9
  6017                           status	equ	0xFD8
  6018                           
  6019 ;; *************** function _USBStdSetCfgHandler *****************
  6020 ;; Defined at:
  6021 ;;		line 1971 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;		None
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  i               1   54[COMRAM] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;		None               void
  6028 ;; Registers used:
  6029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6035 ;;      Params:         0       0       0       0       0       0       0       0       0
  6036 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6038 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6039 ;;Total ram usage:        1 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    8
  6042 ;; This function calls:
  6043 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6044 ;;		_memset
  6045 ;; This function is called by:
  6046 ;;		_USBCheckStdRequest
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text19
  6051  0020A2                     __ptext19:
  6052                           	opt stack 0
  6053  0020A2                     _USBStdSetCfgHandler:
  6054                           	opt stack 17
  6055                           
  6056                           ;usb_device.c: 1973: uint8_t i;
  6057                           ;usb_device.c: 1976: inPipes[0].info.bits.busy = 1;
  6058                           
  6059                           ;incstack = 0
  6060  0020A2  8E59               	bsf	_inPipes+3,7,c
  6061                           
  6062                           ;usb_device.c: 1979: memset((void*)&*U1EP1_R,0x00,(2));;
  6063  0020A4  C0D3  F023         	movff	_U1EP1_R,memset@p1
  6064  0020A8  C0D4  F024         	movff	_U1EP1_R+1,memset@p1+1
  6065  0020AC  0E00               	movlw	0
  6066  0020AE  6E26               	movwf	memset@c+1,c
  6067  0020B0  0E00               	movlw	0
  6068  0020B2  6E25               	movwf	memset@c,c
  6069  0020B4  0E00               	movlw	0
  6070  0020B6  6E28               	movwf	memset@n+1,c
  6071  0020B8  0E02               	movlw	2
  6072  0020BA  6E27               	movwf	memset@n,c
  6073  0020BC  EC05  F019         	call	_memset	;wreg free
  6074                           
  6075                           ;usb_device.c: 1982: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6076  0020C0  0E00               	movlw	0
  6077  0020C2  6E23               	movwf	memset@p1,c
  6078  0020C4  0E04               	movlw	4
  6079  0020C6  6E24               	movwf	memset@p1+1,c
  6080  0020C8  0E00               	movlw	0
  6081  0020CA  6E26               	movwf	memset@c+1,c
  6082  0020CC  0E00               	movlw	0
  6083  0020CE  6E25               	movwf	memset@c,c
  6084  0020D0  0E00               	movlw	0
  6085  0020D2  6E28               	movwf	memset@n+1,c
  6086  0020D4  0E30               	movlw	48
  6087  0020D6  6E27               	movwf	memset@n,c
  6088  0020D8  EC05  F019         	call	_memset	;wreg free
  6089                           
  6090                           ;usb_device.c: 1985: UCONbits.PPBRST = 1;
  6091  0020DC  8C6D               	bsf	3949,6,c	;volatile
  6092                           
  6093                           ;usb_device.c: 1990: for(i = 0; i < (uint8_t)(2+1u); i++)
  6094  0020DE  0E00               	movlw	0
  6095  0020E0  6E37               	movwf	USBStdSetCfgHandler@i,c
  6096  0020E2                     l4026:
  6097  0020E2  0E02               	movlw	2
  6098  0020E4  6437               	cpfsgt	USBStdSetCfgHandler@i,c
  6099  0020E6  D001               	goto	l4030
  6100  0020E8  D016               	goto	l4036
  6101  0020EA                     l4030:
  6102                           
  6103                           ;usb_device.c: 1991: {
  6104                           ;usb_device.c: 1992: ep_data_in[i].Val = 0u;
  6105  0020EA  5037               	movf	USBStdSetCfgHandler@i,w,c
  6106  0020EC  0D01               	mullw	1
  6107  0020EE  0E7C               	movlw	low _ep_data_in
  6108  0020F0  24F3               	addwf	prodl,w,c
  6109  0020F2  6ED9               	movwf	fsr2l,c
  6110  0020F4  0E00               	movlw	high _ep_data_in
  6111  0020F6  20F4               	addwfc	prodh,w,c
  6112  0020F8  6EDA               	movwf	fsr2h,c
  6113  0020FA  0E00               	movlw	0
  6114  0020FC  6EDF               	movwf	indf2,c
  6115                           
  6116                           ;usb_device.c: 1993: ep_data_out[i].Val = 0u;
  6117  0020FE  5037               	movf	USBStdSetCfgHandler@i,w,c
  6118  002100  0D01               	mullw	1
  6119  002102  0E7F               	movlw	low _ep_data_out
  6120  002104  24F3               	addwf	prodl,w,c
  6121  002106  6ED9               	movwf	fsr2l,c
  6122  002108  0E00               	movlw	high _ep_data_out
  6123  00210A  20F4               	addwfc	prodh,w,c
  6124  00210C  6EDA               	movwf	fsr2h,c
  6125  00210E  0E00               	movlw	0
  6126  002110  6EDF               	movwf	indf2,c
  6127  002112  2A37               	incf	USBStdSetCfgHandler@i,f,c
  6128  002114  D7E6               	goto	l4026
  6129  002116                     l4036:
  6130                           
  6131                           ;usb_device.c: 1994: }
  6132                           ;usb_device.c: 1997: memset((void*)&USBAlternateInterface,0x00,2);
  6133  002116  0EB2               	movlw	low _USBAlternateInterface
  6134  002118  6E23               	movwf	memset@p1,c
  6135  00211A  0E00               	movlw	high _USBAlternateInterface
  6136  00211C  6E24               	movwf	memset@p1+1,c
  6137  00211E  0E00               	movlw	0
  6138  002120  6E26               	movwf	memset@c+1,c
  6139  002122  0E00               	movlw	0
  6140  002124  6E25               	movwf	memset@c,c
  6141  002126  0E00               	movlw	0
  6142  002128  6E28               	movwf	memset@n+1,c
  6143  00212A  0E02               	movlw	2
  6144  00212C  6E27               	movwf	memset@n,c
  6145  00212E  EC05  F019         	call	_memset	;wreg free
  6146                           
  6147                           ;usb_device.c: 2000: UCONbits.PPBRST = 0;
  6148  002132  9C6D               	bcf	3949,6,c	;volatile
  6149                           
  6150                           ;usb_device.c: 2002: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6151  002134  0E08               	movlw	8
  6152  002136  6E3E               	movwf	_pBDTEntryIn,c
  6153  002138  0E04               	movlw	4
  6154  00213A  6E3F               	movwf	_pBDTEntryIn+1,c
  6155                           
  6156                           ;usb_device.c: 2005: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6157  00213C  0E00               	movlw	0
  6158  00213E  6E46               	movwf	_pBDTEntryEP0OutCurrent,c
  6159  002140  0E04               	movlw	4
  6160  002142  6E47               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6161                           
  6162                           ;usb_device.c: 2006: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6163  002144  C046  F048         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6164  002148  C047  F049         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6165                           
  6166                           ;usb_device.c: 2009: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6167  00214C  C432 F05C          	movff	1074,_USBActiveConfiguration	;volatile
  6168                           
  6169                           ;usb_device.c: 2012: if(USBActiveConfiguration == 0)
  6170  002150  505C               	movf	_USBActiveConfiguration,w,c
  6171  002152  A4D8               	btfss	status,2,c
  6172  002154  D002               	goto	l4052
  6173                           
  6174                           ;usb_device.c: 2013: {
  6175                           ;usb_device.c: 2015: USBDeviceState = ADDRESS_STATE;
  6176  002156  0E10               	movlw	16
  6177  002158  D00F               	goto	L5
  6178  00215A                     l4052:
  6179                           
  6180                           ;usb_device.c: 2017: else
  6181                           ;usb_device.c: 2018: {
  6182                           ;usb_device.c: 2020: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6183  00215A  0E00               	movlw	0
  6184  00215C  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6185  00215E  0E01               	movlw	1
  6186  002160  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6187  002162  0E5C               	movlw	low _USBActiveConfiguration
  6188  002164  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6189  002166  0E00               	movlw	high _USBActiveConfiguration
  6190  002168  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  6191  00216A  0E00               	movlw	0
  6192  00216C  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  6193  00216E  0E01               	movlw	1
  6194  002170  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  6195  002172  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6196                           
  6197                           ;usb_device.c: 2025: USBDeviceState = CONFIGURED_STATE;
  6198  002176  0E20               	movlw	32
  6199  002178                     L5:
  6200  002178  0100               	movlb	0	; () banked
  6201  00217A  6F97               	movwf	_USBDeviceState& (0+255),b
  6202  00217C  D000               	goto	l257
  6203  00217E                     l257:
  6204                           
  6205                           ; BSR set to: 0
  6206  00217E  0012               	return		;funcret
  6207  002180                     __end_of_USBStdSetCfgHandler:
  6208                           	opt stack 0
  6209                           tblptru	equ	0xFF8
  6210                           tblptrh	equ	0xFF7
  6211                           tblptrl	equ	0xFF6
  6212                           tablat	equ	0xFF5
  6213                           prodh	equ	0xFF4
  6214                           prodl	equ	0xFF3
  6215                           intcon	equ	0xFF2
  6216                           postinc0	equ	0xFEE
  6217                           wreg	equ	0xFE8
  6218                           indf1	equ	0xFE7
  6219                           postdec1	equ	0xFE5
  6220                           fsr1h	equ	0xFE2
  6221                           fsr1l	equ	0xFE1
  6222                           indf2	equ	0xFDF
  6223                           postinc2	equ	0xFDE
  6224                           postdec2	equ	0xFDD
  6225                           plusw2	equ	0xFDB
  6226                           fsr2h	equ	0xFDA
  6227                           fsr2l	equ	0xFD9
  6228                           status	equ	0xFD8
  6229                           
  6230 ;; *************** function _USBStdGetStatusHandler *****************
  6231 ;; Defined at:
  6232 ;;		line 2132 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  p               2   35[COMRAM] PTR struct __BDT
  6237 ;;		 -> NULL(0), BDT(48), 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;		None               void
  6240 ;; Registers used:
  6241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6247 ;;      Params:         0       0       0       0       0       0       0       0       0
  6248 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6249 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6250 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6251 ;;Total ram usage:        3 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; Hardware stack levels required when called:    4
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_USBCheckStdRequest
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text20
  6262  0027BA                     __ptext20:
  6263                           	opt stack 0
  6264  0027BA                     _USBStdGetStatusHandler:
  6265                           	opt stack 21
  6266                           
  6267                           ;usb_device.c: 2134: CtrlTrfData[0] = 0;
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;incstack = 0
  6271  0027BA  0E00               	movlw	0
  6272  0027BC  0104               	movlb	4	; () banked
  6273  0027BE  6F38               	movwf	56,b	;volatile
  6274                           
  6275                           ;usb_device.c: 2135: CtrlTrfData[1] = 0;
  6276  0027C0  0E00               	movlw	0
  6277  0027C2  0104               	movlb	4	; () banked
  6278  0027C4  6F39               	movwf	57,b	;volatile
  6279                           
  6280                           ;usb_device.c: 2137: switch(SetupPkt.Recipient)
  6281  0027C6  D03D               	goto	l4108
  6282  0027C8                     l275:
  6283                           
  6284                           ; BSR set to: 4
  6285                           ;usb_device.c: 2145: if(1 == 1)
  6286  0027C8  8E59               	bsf	_inPipes+3,7,c
  6287                           
  6288                           ; BSR set to: 4
  6289                           ;usb_device.c: 2146: {
  6290                           ;usb_device.c: 2147: CtrlTrfData[0]|=0x01;
  6291  0027CA  0104               	movlb	4	; () banked
  6292  0027CC  8138               	bsf	56,0,b	;volatile
  6293  0027CE  D000               	goto	l4092
  6294  0027D0                     l4092:
  6295                           
  6296                           ; BSR set to: 4
  6297                           ;usb_device.c: 2148: }
  6298                           ;usb_device.c: 2150: if(RemoteWakeup == 1)
  6299  0027D0  0100               	movlb	0	; () banked
  6300  0027D2  0595               	decf	_RemoteWakeup& (0+255),w,b
  6301  0027D4  A4D8               	btfss	status,2,c
  6302  0027D6  D041               	goto	l278
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;usb_device.c: 2151: {
  6306                           ;usb_device.c: 2152: CtrlTrfData[0]|=0x02;
  6307  0027D8  0104               	movlb	4	; () banked
  6308  0027DA  8338               	bsf	56,1,b	;volatile
  6309                           
  6310                           ; BSR set to: 4
  6311                           ;usb_device.c: 2153: }
  6312                           ;usb_device.c: 2154: break;
  6313  0027DC  D03E               	goto	l278
  6314  0027DE                     l279:
  6315                           
  6316                           ; BSR set to: 4
  6317                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6318  0027DE  8E59               	bsf	_inPipes+3,7,c
  6319                           
  6320                           ;usb_device.c: 2157: break;
  6321  0027E0  D03C               	goto	l278
  6322  0027E2                     l280:
  6323                           
  6324                           ; BSR set to: 4
  6325                           ;usb_device.c: 2159: inPipes[0].info.bits.busy = 1;
  6326  0027E2  8E59               	bsf	_inPipes+3,7,c
  6327                           
  6328                           ;usb_device.c: 2163: {
  6329                           ;usb_device.c: 2164: BDT_ENTRY *p;
  6330                           ;usb_device.c: 2166: if(SetupPkt.EPDir == 0)
  6331  0027E4  0104               	movlb	4	; () banked
  6332  0027E6  BF34               	btfsc	52,7,b	;volatile
  6333  0027E8  D00B               	goto	l4098
  6334                           
  6335                           ; BSR set to: 4
  6336                           ;usb_device.c: 2167: {
  6337                           ;usb_device.c: 2168: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6338  0027EA  0104               	movlb	4	; () banked
  6339  0027EC  5134               	movf	52,w,b	;volatile
  6340  0027EE  0B0F               	andlw	15
  6341  0027F0  6E23               	movwf	??_USBStdGetStatusHandler& (0+255),c
  6342  0027F2  5023               	movf	??_USBStdGetStatusHandler,w,c
  6343  0027F4  0D02               	mullw	2
  6344  0027F6  0E72               	movlw	low _pBDTEntryOut
  6345  0027F8  24F3               	addwf	prodl,w,c
  6346  0027FA  6ED9               	movwf	fsr2l,c
  6347  0027FC  0E00               	movlw	high _pBDTEntryOut
  6348  0027FE  D00A               	goto	L6
  6349  002800                     l4098:
  6350                           
  6351                           ; BSR set to: 4
  6352                           ;usb_device.c: 2170: else
  6353                           ;usb_device.c: 2171: {
  6354                           ;usb_device.c: 2172: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6355  002800  0104               	movlb	4	; () banked
  6356  002802  5134               	movf	52,w,b	;volatile
  6357  002804  0B0F               	andlw	15
  6358  002806  6E23               	movwf	??_USBStdGetStatusHandler& (0+255),c
  6359  002808  5023               	movf	??_USBStdGetStatusHandler,w,c
  6360  00280A  0D02               	mullw	2
  6361  00280C  0E3E               	movlw	low _pBDTEntryIn
  6362  00280E  24F3               	addwf	prodl,w,c
  6363  002810  6ED9               	movwf	fsr2l,c
  6364  002812  0E00               	movlw	high _pBDTEntryIn
  6365  002814                     L6:
  6366  002814  20F4               	addwfc	prodh,w,c
  6367  002816  6EDA               	movwf	fsr2h,c
  6368  002818  CFDE F024          	movff	postinc2,USBStdGetStatusHandler@p
  6369  00281C  CFDD F025          	movff	postdec2,USBStdGetStatusHandler@p+1
  6370  002820  D000               	goto	l4100
  6371  002822                     l4100:
  6372                           
  6373                           ; BSR set to: 4
  6374                           ;usb_device.c: 2173: }
  6375                           ;usb_device.c: 2175: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6376  002822  C024  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6377  002826  C025  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6378  00282A  AEDF               	btfss	indf2,7,c
  6379  00282C  D016               	goto	l278
  6380                           
  6381                           ; BSR set to: 4
  6382  00282E  C024  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6383  002832  C025  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6384  002836  A4DF               	btfss	indf2,2,c
  6385  002838  D010               	goto	l278
  6386                           
  6387                           ; BSR set to: 4
  6388                           ;usb_device.c: 2176: CtrlTrfData[0]=0x01;
  6389  00283A  0E01               	movlw	1
  6390  00283C  0104               	movlb	4	; () banked
  6391  00283E  6F38               	movwf	56,b	;volatile
  6392                           
  6393                           ; BSR set to: 4
  6394                           ;usb_device.c: 2178: }
  6395                           ;usb_device.c: 2179: }
  6396                           
  6397                           ; BSR set to: 4
  6398                           ;usb_device.c: 2177: break;
  6399  002840  D00C               	goto	l278
  6400  002842                     l4108:
  6401                           
  6402                           ; BSR set to: 4
  6403  002842  0104               	movlb	4	; () banked
  6404  002844  5130               	movf	48,w,b	;volatile
  6405  002846  0B1F               	andlw	31
  6406                           
  6407                           ; Switch size 1, requested type "space"
  6408                           ; Number of cases is 3, Range of values is 0 to 2
  6409                           ; switch strategies available:
  6410                           ; Name         Instructions Cycles
  6411                           ; simple_byte           10     6 (average)
  6412                           ;	Chosen strategy is simple_byte
  6413  002848  0A00               	xorlw	0	; case 0
  6414  00284A  B4D8               	btfsc	status,2,c
  6415  00284C  D7BD               	goto	l275
  6416  00284E  0A01               	xorlw	1	; case 1
  6417  002850  B4D8               	btfsc	status,2,c
  6418  002852  D7C5               	goto	l279
  6419  002854  0A03               	xorlw	3	; case 2
  6420  002856  B4D8               	btfsc	status,2,c
  6421  002858  D7C4               	goto	l280
  6422  00285A                     l278:
  6423                           
  6424                           ;usb_device.c: 2181: if(inPipes[0].info.bits.busy == 1)
  6425  00285A  AE59               	btfss	_inPipes+3,7,c
  6426  00285C  D008               	goto	l285
  6427                           
  6428                           ;usb_device.c: 2182: {
  6429                           ;usb_device.c: 2183: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6430  00285E  0E38               	movlw	56
  6431  002860  6E56               	movwf	_inPipes,c
  6432  002862  0E04               	movlw	4
  6433  002864  6E57               	movwf	_inPipes+1,c
  6434                           
  6435                           ;usb_device.c: 2184: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6436  002866  8059               	bsf	_inPipes+3,0,c
  6437                           
  6438                           ;usb_device.c: 2185: inPipes[0].wCount.v[0] = 2;
  6439  002868  0E02               	movlw	2
  6440  00286A  6E5A               	movwf	_inPipes+4,c
  6441  00286C  D000               	goto	l285
  6442  00286E                     l285:
  6443  00286E  0012               	return		;funcret
  6444  002870                     __end_of_USBStdGetStatusHandler:
  6445                           	opt stack 0
  6446                           tblptru	equ	0xFF8
  6447                           tblptrh	equ	0xFF7
  6448                           tblptrl	equ	0xFF6
  6449                           tablat	equ	0xFF5
  6450                           prodh	equ	0xFF4
  6451                           prodl	equ	0xFF3
  6452                           intcon	equ	0xFF2
  6453                           postinc0	equ	0xFEE
  6454                           wreg	equ	0xFE8
  6455                           indf1	equ	0xFE7
  6456                           postdec1	equ	0xFE5
  6457                           fsr1h	equ	0xFE2
  6458                           fsr1l	equ	0xFE1
  6459                           indf2	equ	0xFDF
  6460                           postinc2	equ	0xFDE
  6461                           postdec2	equ	0xFDD
  6462                           plusw2	equ	0xFDB
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _USBStdGetDscHandler *****************
  6468 ;; Defined at:
  6469 ;;		line 2046 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;		None               void
  6476 ;; Registers used:
  6477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6485 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6486 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6487 ;;Total ram usage:        2 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    4
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_USBCheckStdRequest
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text21
  6498  001AA8                     __ptext21:
  6499                           	opt stack 0
  6500  001AA8                     _USBStdGetDscHandler:
  6501                           	opt stack 21
  6502                           
  6503                           ;usb_device.c: 2048: if(SetupPkt.bmRequestType == 0x80)
  6504                           
  6505                           ;incstack = 0
  6506  001AA8  0E80               	movlw	128
  6507  001AAA  0104               	movlb	4	; () banked
  6508  001AAC  1930               	xorwf	48,w,b	;volatile
  6509  001AAE  A4D8               	btfss	status,2,c
  6510  001AB0  D08C               	goto	l271
  6511                           
  6512                           ; BSR set to: 4
  6513                           ;usb_device.c: 2049: {
  6514                           ;usb_device.c: 2050: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6515  001AB2  0EC0               	movlw	192
  6516  001AB4  6E59               	movwf	_inPipes+3,c
  6517                           
  6518                           ;usb_device.c: 2052: switch(SetupPkt.bDescriptorType)
  6519  001AB6  D07C               	goto	l4086
  6520  001AB8                     l4060:
  6521                           
  6522                           ; BSR set to: 4
  6523                           ;usb_device.c: 2058: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6524  001AB8  0E8C               	movlw	low _device_dsc
  6525  001ABA  6E56               	movwf	_inPipes,c
  6526  001ABC  0E09               	movlw	high _device_dsc
  6527  001ABE  6E57               	movwf	_inPipes+1,c
  6528                           
  6529                           ; BSR set to: 4
  6530                           ;usb_device.c: 2060: inPipes[0].wCount.Val = sizeof(device_dsc);
  6531  001AC0  0E00               	movlw	0
  6532  001AC2  6E5B               	movwf	_inPipes+5,c
  6533  001AC4  0E12               	movlw	18
  6534  001AC6  6E5A               	movwf	_inPipes+4,c
  6535                           
  6536                           ;usb_device.c: 2061: break;
  6537  001AC8  D080               	goto	l271
  6538  001ACA                     l4064:
  6539                           
  6540                           ; BSR set to: 4
  6541                           ;usb_device.c: 2066: if(SetupPkt.bDscIndex < 1)
  6542  001ACA  0104               	movlb	4	; () banked
  6543  001ACC  5132               	movf	50,w,b	;volatile
  6544  001ACE  A4D8               	btfss	status,2,c
  6545  001AD0  D03E               	goto	l4072
  6546                           
  6547                           ; BSR set to: 4
  6548                           ;usb_device.c: 2067: {
  6549                           ;usb_device.c: 2071: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6550  001AD2  0104               	movlb	4	; () banked
  6551  001AD4  5132               	movf	50,w,b	;volatile
  6552  001AD6  0D02               	mullw	2
  6553  001AD8  0E09               	movlw	low _USB_CD_Ptr
  6554  001ADA  24F3               	addwf	prodl,w,c
  6555  001ADC  6EF6               	movwf	tblptrl,c
  6556  001ADE  0E09               	movlw	high _USB_CD_Ptr
  6557  001AE0  20F4               	addwfc	prodh,w,c
  6558  001AE2  6EF7               	movwf	tblptrh,c
  6559  001AE4                     	if	0	;There are less than 3 active tblptr bytes
  6560  001AE4                     	endif
  6561  001AE4  0009               	tblrd		*+
  6562  001AE6  CFF5 F056          	movff	tablat,_inPipes
  6563  001AEA  000A               	tblrd		*-
  6564  001AEC  CFF5 F057          	movff	tablat,_inPipes+1
  6565                           
  6566                           ; BSR set to: 4
  6567                           ;usb_device.c: 2077: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6568  001AF0  0E02               	movlw	2
  6569  001AF2  2456               	addwf	_inPipes,w,c
  6570  001AF4  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6571  001AF6  0E00               	movlw	0
  6572  001AF8  2057               	addwfc	_inPipes+1,w,c
  6573  001AFA  6E24               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  6574  001AFC  C023  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6575  001B00  C024  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6576  001B04  6AF8               	clrf	tblptru,c
  6577  001B06  0E07               	movlw	(high __ramtop+-1)
  6578  001B08  64F7               	cpfsgt	tblptrh,c
  6579  001B0A  D003               	bra	u2767
  6580  001B0C  0008               	tblrd		*
  6581  001B0E  50F5               	movf	tablat,w,c
  6582  001B10  D005               	bra	u2760
  6583  001B12                     u2767:
  6584  001B12  CFF6 FFE1          	movff	tblptrl,fsr1l
  6585  001B16  CFF7 FFE2          	movff	tblptrh,fsr1h
  6586  001B1A  50E7               	movf	indf1,w,c
  6587  001B1C                     u2760:
  6588  001B1C  6E5A               	movwf	_inPipes+4,c
  6589                           
  6590                           ;usb_device.c: 2078: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6591  001B1E  0E03               	movlw	3
  6592  001B20  2456               	addwf	_inPipes,w,c
  6593  001B22  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6594  001B24  0E00               	movlw	0
  6595  001B26  2057               	addwfc	_inPipes+1,w,c
  6596  001B28  6E24               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  6597  001B2A  C023  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6598  001B2E  C024  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6599  001B32  6AF8               	clrf	tblptru,c
  6600  001B34  0E07               	movlw	(high __ramtop+-1)
  6601  001B36  64F7               	cpfsgt	tblptrh,c
  6602  001B38  D003               	bra	u2777
  6603  001B3A  0008               	tblrd		*
  6604  001B3C  50F5               	movf	tablat,w,c
  6605  001B3E  D005               	bra	u2770
  6606  001B40                     u2777:
  6607  001B40  CFF6 FFE1          	movff	tblptrl,fsr1l
  6608  001B44  CFF7 FFE2          	movff	tblptrh,fsr1h
  6609  001B48  50E7               	movf	indf1,w,c
  6610  001B4A                     u2770:
  6611  001B4A  6E5B               	movwf	_inPipes+5,c
  6612                           
  6613                           ;usb_device.c: 2079: }
  6614  001B4C  D03E               	goto	l271
  6615  001B4E                     l4072:
  6616                           
  6617                           ;usb_device.c: 2080: else
  6618                           ;usb_device.c: 2081: {
  6619                           ;usb_device.c: 2082: inPipes[0].info.Val = 0;
  6620  001B4E  0E00               	movlw	0
  6621  001B50  6E59               	movwf	_inPipes+3,c
  6622                           
  6623                           ;usb_device.c: 2083: }
  6624                           ;usb_device.c: 2084: break;
  6625  001B52  D03B               	goto	l271
  6626  001B54                     l4074:
  6627                           
  6628                           ;usb_device.c: 2089: if(SetupPkt.bDscIndex<4)
  6629  001B54  0E04               	movlw	4
  6630  001B56  0104               	movlb	4	; () banked
  6631  001B58  6132               	cpfslt	50,b	;volatile
  6632  001B5A  D024               	goto	l4080
  6633                           
  6634                           ; BSR set to: 4
  6635                           ;usb_device.c: 2090: {
  6636                           ;usb_device.c: 2092: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6637  001B5C  0104               	movlb	4	; () banked
  6638  001B5E  5132               	movf	50,w,b	;volatile
  6639  001B60  0D02               	mullw	2
  6640  001B62  0E01               	movlw	low _USB_SD_Ptr
  6641  001B64  24F3               	addwf	prodl,w,c
  6642  001B66  6EF6               	movwf	tblptrl,c
  6643  001B68  0E09               	movlw	high _USB_SD_Ptr
  6644  001B6A  20F4               	addwfc	prodh,w,c
  6645  001B6C  6EF7               	movwf	tblptrh,c
  6646  001B6E                     	if	0	;There are less than 3 active tblptr bytes
  6647  001B6E                     	endif
  6648  001B6E  0009               	tblrd		*+
  6649  001B70  CFF5 F056          	movff	tablat,_inPipes
  6650  001B74  000A               	tblrd		*-
  6651  001B76  CFF5 F057          	movff	tablat,_inPipes+1
  6652                           
  6653                           ; BSR set to: 4
  6654                           ;usb_device.c: 2094: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6655  001B7A  C056  FFF6         	movff	_inPipes,tblptrl
  6656  001B7E  C057  FFF7         	movff	_inPipes+1,tblptrh
  6657  001B82  6AF8               	clrf	tblptru,c
  6658  001B84  0E07               	movlw	(high __ramtop+-1)
  6659  001B86  64F7               	cpfsgt	tblptrh,c
  6660  001B88  D003               	bra	u2797
  6661  001B8A  0008               	tblrd		*
  6662  001B8C  50F5               	movf	tablat,w,c
  6663  001B8E  D005               	bra	u2790
  6664  001B90                     u2797:
  6665  001B90  CFF6 FFE1          	movff	tblptrl,fsr1l
  6666  001B94  CFF7 FFE2          	movff	tblptrh,fsr1h
  6667  001B98  50E7               	movf	indf1,w,c
  6668  001B9A                     u2790:
  6669  001B9A  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6670  001B9C  5023               	movf	??_USBStdGetDscHandler,w,c
  6671  001B9E  6E5A               	movwf	_inPipes+4,c
  6672  001BA0  6A5B               	clrf	_inPipes+5,c
  6673                           
  6674                           ;usb_device.c: 2095: }
  6675  001BA2  D013               	goto	l271
  6676  001BA4                     l4080:
  6677                           
  6678                           ;usb_device.c: 2105: else
  6679                           ;usb_device.c: 2106: {
  6680                           ;usb_device.c: 2107: inPipes[0].info.Val = 0;
  6681  001BA4  0E00               	movlw	0
  6682  001BA6  6E59               	movwf	_inPipes+3,c
  6683                           
  6684                           ;usb_device.c: 2108: }
  6685                           ;usb_device.c: 2109: break;
  6686  001BA8  D010               	goto	l271
  6687  001BAA                     l4082:
  6688                           
  6689                           ;usb_device.c: 2111: inPipes[0].info.Val = 0;
  6690  001BAA  0E00               	movlw	0
  6691  001BAC  6E59               	movwf	_inPipes+3,c
  6692                           
  6693                           ;usb_device.c: 2113: }
  6694                           
  6695                           ;usb_device.c: 2112: break;
  6696  001BAE  D00D               	goto	l271
  6697  001BB0                     l4086:
  6698  001BB0  0104               	movlb	4	; () banked
  6699  001BB2  5133               	movf	51,w,b	;volatile
  6700                           
  6701                           ; Switch size 1, requested type "space"
  6702                           ; Number of cases is 3, Range of values is 1 to 3
  6703                           ; switch strategies available:
  6704                           ; Name         Instructions Cycles
  6705                           ; simple_byte           10     6 (average)
  6706                           ;	Chosen strategy is simple_byte
  6707  001BB4  0A01               	xorlw	1	; case 1
  6708  001BB6  B4D8               	btfsc	status,2,c
  6709  001BB8  D77F               	goto	l4060
  6710  001BBA  0A03               	xorlw	3	; case 2
  6711  001BBC  B4D8               	btfsc	status,2,c
  6712  001BBE  D785               	goto	l4064
  6713  001BC0  0A01               	xorlw	1	; case 3
  6714  001BC2  B4D8               	btfsc	status,2,c
  6715  001BC4  D7C7               	goto	l4074
  6716  001BC6  D7F1               	goto	l4082
  6717                           
  6718                           ; BSR set to: 4
  6719  001BC8  D000               	goto	l271
  6720  001BCA                     l271:
  6721  001BCA  0012               	return		;funcret
  6722  001BCC                     __end_of_USBStdGetDscHandler:
  6723                           	opt stack 0
  6724                           tblptru	equ	0xFF8
  6725                           tblptrh	equ	0xFF7
  6726                           tblptrl	equ	0xFF6
  6727                           tablat	equ	0xFF5
  6728                           prodh	equ	0xFF4
  6729                           prodl	equ	0xFF3
  6730                           intcon	equ	0xFF2
  6731                           postinc0	equ	0xFEE
  6732                           wreg	equ	0xFE8
  6733                           indf1	equ	0xFE7
  6734                           postdec1	equ	0xFE5
  6735                           fsr1h	equ	0xFE2
  6736                           fsr1l	equ	0xFE1
  6737                           indf2	equ	0xFDF
  6738                           postinc2	equ	0xFDE
  6739                           postdec2	equ	0xFDD
  6740                           plusw2	equ	0xFDB
  6741                           fsr2h	equ	0xFDA
  6742                           fsr2l	equ	0xFD9
  6743                           status	equ	0xFD8
  6744                           
  6745 ;; *************** function _USBStdFeatureReqHandler *****************
  6746 ;; Defined at:
  6747 ;;		line 2760 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;		None
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  p               2   58[COMRAM] PTR struct __BDT
  6752 ;;		 -> NULL(0), BDT(48), 
  6753 ;;  pUEP            2   55[COMRAM] PTR unsigned char 
  6754 ;;		 -> UEP0(1), RAM(2047), 
  6755 ;;  current_ep_d    1   57[COMRAM] struct .
  6756 ;; Return value:  Size  Location     Type
  6757 ;;		None               void
  6758 ;; Registers used:
  6759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6765 ;;      Params:         0       0       0       0       0       0       0       0       0
  6766 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6767 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6768 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6769 ;;Total ram usage:        6 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    8
  6772 ;; This function calls:
  6773 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6774 ;; This function is called by:
  6775 ;;		_USBCheckStdRequest
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text22
  6780  000E56                     __ptext22:
  6781                           	opt stack 0
  6782  000E56                     _USBStdFeatureReqHandler:
  6783                           	opt stack 17
  6784                           
  6785                           ;usb_device.c: 2762: BDT_ENTRY *p;
  6786                           ;usb_device.c: 2763: EP_STATUS current_ep_data;
  6787                           ;usb_device.c: 2767: unsigned char* pUEP;
  6788                           ;usb_device.c: 2805: if((SetupPkt.bFeature == 1)&&
  6789                           ;usb_device.c: 2806: (SetupPkt.Recipient == (0x00)))
  6790                           
  6791                           ;incstack = 0
  6792  000E56  0104               	movlb	4	; () banked
  6793  000E58  0532               	decf	50,w,b	;volatile
  6794  000E5A  A4D8               	btfss	status,2,c
  6795  000E5C  D012               	goto	l354
  6796                           
  6797                           ; BSR set to: 4
  6798  000E5E  0104               	movlb	4	; () banked
  6799  000E60  5130               	movf	48,w,b	;volatile
  6800  000E62  0B1F               	andlw	31
  6801  000E64  0900               	iorlw	0
  6802  000E66  A4D8               	btfss	status,2,c
  6803  000E68  D00C               	goto	l354
  6804                           
  6805                           ; BSR set to: 4
  6806                           ;usb_device.c: 2807: {
  6807                           ;usb_device.c: 2808: inPipes[0].info.bits.busy = 1;
  6808  000E6A  8E59               	bsf	_inPipes+3,7,c
  6809                           
  6810                           ; BSR set to: 4
  6811                           ;usb_device.c: 2809: if(SetupPkt.bRequest == 3)
  6812  000E6C  0E03               	movlw	3
  6813  000E6E  0104               	movlb	4	; () banked
  6814  000E70  1931               	xorwf	49,w,b	;volatile
  6815  000E72  A4D8               	btfss	status,2,c
  6816  000E74  D002               	goto	l4126
  6817                           
  6818                           ; BSR set to: 4
  6819                           ;usb_device.c: 2810: RemoteWakeup = 1;
  6820  000E76  0E01               	movlw	1
  6821  000E78  D001               	goto	L7
  6822  000E7A                     l4126:
  6823                           
  6824                           ;usb_device.c: 2811: else
  6825                           ;usb_device.c: 2812: RemoteWakeup = 0;
  6826  000E7A  0E00               	movlw	0
  6827  000E7C                     L7:
  6828  000E7C  0100               	movlb	0	; () banked
  6829  000E7E  6F95               	movwf	_RemoteWakeup& (0+255),b
  6830  000E80  D000               	goto	l354
  6831  000E82                     l354:
  6832                           
  6833                           ;usb_device.c: 2813: }
  6834                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 0)&&
  6835                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x02))&&
  6836                           ;usb_device.c: 2818: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6837                           ;usb_device.c: 2819: (USBDeviceState == CONFIGURED_STATE))
  6838  000E82  0104               	movlb	4	; () banked
  6839  000E84  5132               	movf	50,w,b	;volatile
  6840  000E86  A4D8               	btfss	status,2,c
  6841  000E88  D130               	goto	l377
  6842                           
  6843                           ; BSR set to: 4
  6844  000E8A  0104               	movlb	4	; () banked
  6845  000E8C  5130               	movf	48,w,b	;volatile
  6846  000E8E  0B1F               	andlw	31
  6847  000E90  0A02               	xorlw	2
  6848  000E92  A4D8               	btfss	status,2,c
  6849  000E94  D12A               	goto	l377
  6850                           
  6851                           ; BSR set to: 4
  6852  000E96  0104               	movlb	4	; () banked
  6853  000E98  5134               	movf	52,w,b	;volatile
  6854  000E9A  0B0F               	andlw	15
  6855  000E9C  0900               	iorlw	0
  6856  000E9E  B4D8               	btfsc	status,2,c
  6857  000EA0  D124               	goto	l377
  6858                           
  6859                           ; BSR set to: 4
  6860  000EA2  0104               	movlb	4	; () banked
  6861  000EA4  5134               	movf	52,w,b	;volatile
  6862  000EA6  0B0F               	andlw	15
  6863  000EA8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6864  000EAA  0E03               	movlw	3
  6865  000EAC  6037               	cpfslt	??_USBStdFeatureReqHandler,c
  6866  000EAE  D11D               	goto	l377
  6867                           
  6868                           ; BSR set to: 4
  6869  000EB0  0E20               	movlw	32
  6870  000EB2  0100               	movlb	0	; () banked
  6871  000EB4  1997               	xorwf	_USBDeviceState& (0+255),w,b
  6872  000EB6  A4D8               	btfss	status,2,c
  6873  000EB8  D118               	goto	l377
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;usb_device.c: 2820: {
  6877                           ;usb_device.c: 2823: inPipes[0].info.bits.busy = 1;
  6878  000EBA  8E59               	bsf	_inPipes+3,7,c
  6879                           
  6880                           ;usb_device.c: 2826: if(SetupPkt.EPDir == 0)
  6881  000EBC  0104               	movlb	4	; () banked
  6882  000EBE  BF34               	btfsc	52,7,b	;volatile
  6883  000EC0  D01B               	goto	l4140
  6884                           
  6885                           ; BSR set to: 4
  6886                           ;usb_device.c: 2827: {
  6887                           ;usb_device.c: 2828: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6888  000EC2  0104               	movlb	4	; () banked
  6889  000EC4  5134               	movf	52,w,b	;volatile
  6890  000EC6  0B0F               	andlw	15
  6891  000EC8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6892  000ECA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6893  000ECC  0D02               	mullw	2
  6894  000ECE  0E72               	movlw	low _pBDTEntryOut
  6895  000ED0  24F3               	addwf	prodl,w,c
  6896  000ED2  6ED9               	movwf	fsr2l,c
  6897  000ED4  0E00               	movlw	high _pBDTEntryOut
  6898  000ED6  20F4               	addwfc	prodh,w,c
  6899  000ED8  6EDA               	movwf	fsr2h,c
  6900  000EDA  CFDE F03B          	movff	postinc2,USBStdFeatureReqHandler@p
  6901  000EDE  CFDD F03C          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6902                           
  6903                           ;usb_device.c: 2829: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6904  000EE2  0104               	movlb	4	; () banked
  6905  000EE4  5134               	movf	52,w,b	;volatile
  6906  000EE6  0B0F               	andlw	15
  6907  000EE8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6908  000EEA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6909  000EEC  0D01               	mullw	1
  6910  000EEE  0E7F               	movlw	low _ep_data_out
  6911  000EF0  24F3               	addwf	prodl,w,c
  6912  000EF2  6ED9               	movwf	fsr2l,c
  6913  000EF4  0E00               	movlw	high _ep_data_out
  6914  000EF6  D01A               	goto	L8
  6915  000EF8                     l4140:
  6916                           
  6917                           ; BSR set to: 4
  6918                           ;usb_device.c: 2831: else
  6919                           ;usb_device.c: 2832: {
  6920                           ;usb_device.c: 2833: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6921  000EF8  0104               	movlb	4	; () banked
  6922  000EFA  5134               	movf	52,w,b	;volatile
  6923  000EFC  0B0F               	andlw	15
  6924  000EFE  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6925  000F00  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6926  000F02  0D02               	mullw	2
  6927  000F04  0E3E               	movlw	low _pBDTEntryIn
  6928  000F06  24F3               	addwf	prodl,w,c
  6929  000F08  6ED9               	movwf	fsr2l,c
  6930  000F0A  0E00               	movlw	high _pBDTEntryIn
  6931  000F0C  20F4               	addwfc	prodh,w,c
  6932  000F0E  6EDA               	movwf	fsr2h,c
  6933  000F10  CFDE F03B          	movff	postinc2,USBStdFeatureReqHandler@p
  6934  000F14  CFDD F03C          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6935                           
  6936                           ;usb_device.c: 2834: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6937  000F18  0104               	movlb	4	; () banked
  6938  000F1A  5134               	movf	52,w,b	;volatile
  6939  000F1C  0B0F               	andlw	15
  6940  000F1E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6941  000F20  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6942  000F22  0D01               	mullw	1
  6943  000F24  0E7C               	movlw	low _ep_data_in
  6944  000F26  24F3               	addwf	prodl,w,c
  6945  000F28  6ED9               	movwf	fsr2l,c
  6946  000F2A  0E00               	movlw	high _ep_data_in
  6947  000F2C                     L8:
  6948  000F2C  20F4               	addwfc	prodh,w,c
  6949  000F2E  6EDA               	movwf	fsr2h,c
  6950  000F30  50DF               	movf	indf2,w,c
  6951  000F32  6E3A               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  6952  000F34  D000               	goto	l4142
  6953  000F36                     l4142:
  6954                           
  6955                           ; BSR set to: 4
  6956                           ;usb_device.c: 2835: }
  6957                           ;usb_device.c: 2841: if(current_ep_data.bits.ping_pong_state == 0)
  6958  000F36  B03A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  6959  000F38  D002               	goto	l4146
  6960                           
  6961                           ; BSR set to: 4
  6962                           ;usb_device.c: 2842: {
  6963                           ;usb_device.c: 2843: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6964  000F3A  943B               	bcf	USBStdFeatureReqHandler@p,2,c
  6965                           
  6966                           ;usb_device.c: 2844: }
  6967  000F3C  D002               	goto	l4148
  6968  000F3E                     l4146:
  6969                           
  6970                           ; BSR set to: 4
  6971                           ;usb_device.c: 2845: else
  6972                           ;usb_device.c: 2846: {
  6973                           ;usb_device.c: 2847: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6974  000F3E  843B               	bsf	USBStdFeatureReqHandler@p,2,c
  6975  000F40  D000               	goto	l4148
  6976  000F42                     l4148:
  6977                           
  6978                           ; BSR set to: 4
  6979                           ;usb_device.c: 2848: }
  6980                           ;usb_device.c: 2853: if(SetupPkt.EPDir == 0)
  6981  000F42  0104               	movlb	4	; () banked
  6982  000F44  BF34               	btfsc	52,7,b	;volatile
  6983  000F46  D00B               	goto	l4152
  6984                           
  6985                           ; BSR set to: 4
  6986                           ;usb_device.c: 2854: {
  6987                           ;usb_device.c: 2855: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6988  000F48  0104               	movlb	4	; () banked
  6989  000F4A  5134               	movf	52,w,b	;volatile
  6990  000F4C  0B0F               	andlw	15
  6991  000F4E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6992  000F50  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6993  000F52  0D02               	mullw	2
  6994  000F54  0E72               	movlw	low _pBDTEntryOut
  6995  000F56  24F3               	addwf	prodl,w,c
  6996  000F58  6ED9               	movwf	fsr2l,c
  6997  000F5A  0E00               	movlw	high _pBDTEntryOut
  6998  000F5C  D00A               	goto	L9
  6999  000F5E                     l4152:
  7000                           
  7001                           ; BSR set to: 4
  7002                           ;usb_device.c: 2857: else
  7003                           ;usb_device.c: 2858: {
  7004                           ;usb_device.c: 2859: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7005  000F5E  0104               	movlb	4	; () banked
  7006  000F60  5134               	movf	52,w,b	;volatile
  7007  000F62  0B0F               	andlw	15
  7008  000F64  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7009  000F66  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7010  000F68  0D02               	mullw	2
  7011  000F6A  0E3E               	movlw	low _pBDTEntryIn
  7012  000F6C  24F3               	addwf	prodl,w,c
  7013  000F6E  6ED9               	movwf	fsr2l,c
  7014  000F70  0E00               	movlw	high _pBDTEntryIn
  7015  000F72                     L9:
  7016  000F72  20F4               	addwfc	prodh,w,c
  7017  000F74  6EDA               	movwf	fsr2h,c
  7018  000F76  C03B  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7019  000F7A  C03C  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7020  000F7E  D000               	goto	l4154
  7021  000F80                     l4154:
  7022                           
  7023                           ; BSR set to: 4
  7024                           ;usb_device.c: 2860: }
  7025                           ;usb_device.c: 2863: if(SetupPkt.bRequest == 3)
  7026  000F80  0E03               	movlw	3
  7027  000F82  0104               	movlb	4	; () banked
  7028  000F84  1931               	xorwf	49,w,b	;volatile
  7029  000F86  A4D8               	btfss	status,2,c
  7030  000F88  D030               	goto	l4168
  7031                           
  7032                           ; BSR set to: 4
  7033                           ;usb_device.c: 2864: {
  7034                           ;usb_device.c: 2865: if(p->STAT.UOWN == 1)
  7035  000F8A  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7036  000F8E  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7037  000F92  AEDF               	btfss	indf2,7,c
  7038  000F94  D01D               	goto	l4164
  7039                           
  7040                           ; BSR set to: 4
  7041                           ;usb_device.c: 2866: {
  7042                           ;usb_device.c: 2869: if(SetupPkt.EPDir == 0)
  7043  000F96  0104               	movlb	4	; () banked
  7044  000F98  BF34               	btfsc	52,7,b	;volatile
  7045  000F9A  D00B               	goto	l4162
  7046                           
  7047                           ; BSR set to: 4
  7048                           ;usb_device.c: 2870: {
  7049                           ;usb_device.c: 2871: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7050  000F9C  0104               	movlb	4	; () banked
  7051  000F9E  5134               	movf	52,w,b	;volatile
  7052  000FA0  0B0F               	andlw	15
  7053  000FA2  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7054  000FA4  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7055  000FA6  0D01               	mullw	1
  7056  000FA8  0E7F               	movlw	low _ep_data_out
  7057  000FAA  24F3               	addwf	prodl,w,c
  7058  000FAC  6ED9               	movwf	fsr2l,c
  7059  000FAE  0E00               	movlw	high _ep_data_out
  7060  000FB0  D00A               	goto	L10
  7061  000FB2                     l4162:
  7062                           
  7063                           ;usb_device.c: 2873: else
  7064                           ;usb_device.c: 2874: {
  7065                           ;usb_device.c: 2875: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7066  000FB2  0104               	movlb	4	; () banked
  7067  000FB4  5134               	movf	52,w,b	;volatile
  7068  000FB6  0B0F               	andlw	15
  7069  000FB8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7070  000FBA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7071  000FBC  0D01               	mullw	1
  7072  000FBE  0E7C               	movlw	low _ep_data_in
  7073  000FC0  24F3               	addwf	prodl,w,c
  7074  000FC2  6ED9               	movwf	fsr2l,c
  7075  000FC4  0E00               	movlw	high _ep_data_in
  7076  000FC6                     L10:
  7077  000FC6  20F4               	addwfc	prodh,w,c
  7078  000FC8  6EDA               	movwf	fsr2h,c
  7079  000FCA  0100               	movlb	0	; () banked
  7080  000FCC  82DF               	bsf	indf2,1,c
  7081                           
  7082                           ; BSR set to: 0
  7083  000FCE  D000               	goto	l4164
  7084  000FD0                     l4164:
  7085                           
  7086                           ;usb_device.c: 2876: }
  7087                           ;usb_device.c: 2877: }
  7088                           ;usb_device.c: 2880: p->STAT.Val |= 0x04;
  7089  000FD0  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7090  000FD4  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7091  000FD8  0E00               	movlw	0
  7092  000FDA  84DB               	bsf	plusw2,2,c
  7093                           
  7094                           ;usb_device.c: 2881: p->STAT.Val |= 0x80;
  7095  000FDC  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7096  000FE0  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7097  000FE4  0E00               	movlw	0
  7098  000FE6  8EDB               	bsf	plusw2,7,c
  7099                           
  7100                           ;usb_device.c: 2882: }
  7101  000FE8  D080               	goto	l377
  7102  000FEA                     l4168:
  7103                           
  7104                           ;usb_device.c: 2883: else
  7105                           ;usb_device.c: 2884: {
  7106                           ;usb_device.c: 2888: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7107  000FEA  0E04               	movlw	4
  7108  000FEC  1A3B               	xorwf	USBStdFeatureReqHandler@p,f,c
  7109                           
  7110                           ;usb_device.c: 2890: if(p->STAT.UOWN == 1)
  7111  000FEE  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7112  000FF2  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7113  000FF6  AEDF               	btfss	indf2,7,c
  7114  000FF8  D01B               	goto	l4178
  7115                           
  7116                           ;usb_device.c: 2891: {
  7117                           ;usb_device.c: 2894: p->STAT.Val &= (~0x80);
  7118  000FFA  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7119  000FFE  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7120  001002  0E7F               	movlw	127
  7121  001004  16DF               	andwf	indf2,f,c
  7122                           
  7123                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7124  001006  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7125  00100A  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7126  00100E  0E00               	movlw	0
  7127  001010  8CDB               	bsf	plusw2,6,c
  7128                           
  7129                           ;usb_device.c: 2896: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7130  001012  0E00               	movlw	0
  7131  001014  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7132  001016  0E05               	movlw	5
  7133  001018  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7134  00101A  C03B  F031         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7135  00101E  C03C  F032         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7136  001022  0E00               	movlw	0
  7137  001024  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7138  001026  0E02               	movlw	2
  7139  001028  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7140  00102A  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7141                           
  7142                           ;usb_device.c: 2897: }
  7143  00102E  D007               	goto	l4180
  7144  001030                     l4178:
  7145                           
  7146                           ;usb_device.c: 2898: else
  7147                           ;usb_device.c: 2899: {
  7148                           ;usb_device.c: 2901: p->STAT.Val |= 0x40;
  7149  001030  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7150  001034  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7151  001038  0E00               	movlw	0
  7152  00103A  8CDB               	bsf	plusw2,6,c
  7153  00103C  D000               	goto	l4180
  7154  00103E                     l4180:
  7155                           
  7156                           ;usb_device.c: 2902: }
  7157                           ;usb_device.c: 2906: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7158  00103E  0E04               	movlw	4
  7159  001040  1A3B               	xorwf	USBStdFeatureReqHandler@p,f,c
  7160                           
  7161                           ;usb_device.c: 2912: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7162  001042  B23A               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7163  001044  D006               	goto	l373
  7164  001046  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7165  00104A  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7166  00104E  AEDF               	btfss	indf2,7,c
  7167  001050  D032               	goto	l4194
  7168  001052                     l373:
  7169                           
  7170                           ;usb_device.c: 2913: {
  7171                           ;usb_device.c: 2914: if(SetupPkt.EPDir == 0)
  7172  001052  0104               	movlb	4	; () banked
  7173  001054  BF34               	btfsc	52,7,b	;volatile
  7174  001056  D00B               	goto	l4188
  7175                           
  7176                           ; BSR set to: 4
  7177                           ;usb_device.c: 2915: {
  7178                           ;usb_device.c: 2916: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7179  001058  0104               	movlb	4	; () banked
  7180  00105A  5134               	movf	52,w,b	;volatile
  7181  00105C  0B0F               	andlw	15
  7182  00105E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7183  001060  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7184  001062  0D01               	mullw	1
  7185  001064  0E7F               	movlw	low _ep_data_out
  7186  001066  24F3               	addwf	prodl,w,c
  7187  001068  6ED9               	movwf	fsr2l,c
  7188  00106A  0E00               	movlw	high _ep_data_out
  7189  00106C  D00A               	goto	L11
  7190  00106E                     l4188:
  7191                           
  7192                           ;usb_device.c: 2918: else
  7193                           ;usb_device.c: 2919: {
  7194                           ;usb_device.c: 2920: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7195  00106E  0104               	movlb	4	; () banked
  7196  001070  5134               	movf	52,w,b	;volatile
  7197  001072  0B0F               	andlw	15
  7198  001074  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7199  001076  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7200  001078  0D01               	mullw	1
  7201  00107A  0E7C               	movlw	low _ep_data_in
  7202  00107C  24F3               	addwf	prodl,w,c
  7203  00107E  6ED9               	movwf	fsr2l,c
  7204  001080  0E00               	movlw	high _ep_data_in
  7205  001082                     L11:
  7206  001082  20F4               	addwfc	prodh,w,c
  7207  001084  6EDA               	movwf	fsr2h,c
  7208  001086  0100               	movlb	0	; () banked
  7209  001088  92DF               	bcf	indf2,1,c
  7210  00108A  D000               	goto	l4190
  7211  00108C                     l4190:
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;usb_device.c: 2921: }
  7215                           ;usb_device.c: 2923: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7216  00108C  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7217  001090  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7218  001094  0E3B               	movlw	59
  7219  001096  16DF               	andwf	indf2,f,c
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;usb_device.c: 2926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7223  001098  0E00               	movlw	0
  7224  00109A  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7225  00109C  0E05               	movlw	5
  7226  00109E  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7227  0010A0  C03B  F031         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7228  0010A4  C03C  F032         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7229  0010A8  0E00               	movlw	0
  7230  0010AA  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7231  0010AC  0E02               	movlw	2
  7232  0010AE  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7233  0010B0  EC16  F017         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7234                           
  7235                           ;usb_device.c: 2927: }
  7236  0010B4  D007               	goto	l4196
  7237  0010B6                     l4194:
  7238                           
  7239                           ;usb_device.c: 2928: else
  7240                           ;usb_device.c: 2929: {
  7241                           ;usb_device.c: 2931: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7242  0010B6  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7243  0010BA  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7244  0010BE  0E3B               	movlw	59
  7245  0010C0  16DF               	andwf	indf2,f,c
  7246  0010C2  D000               	goto	l4196
  7247  0010C4                     l4196:
  7248                           
  7249                           ;usb_device.c: 2932: }
  7250                           ;usb_device.c: 2979: pUEP = (unsigned char*)(&*U1EP0_R+SetupPkt.EPNum);
  7251  0010C4  0104               	movlb	4	; () banked
  7252  0010C6  5134               	movf	52,w,b	;volatile
  7253  0010C8  0B0F               	andlw	15
  7254  0010CA  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7255  0010CC  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7256  0010CE  0D01               	mullw	1
  7257  0010D0  50F3               	movf	prodl,w,c
  7258  0010D2  245D               	addwf	_U1EP0_R,w,c
  7259  0010D4  6E38               	movwf	USBStdFeatureReqHandler@pUEP,c
  7260  0010D6  50F4               	movf	prodh,w,c
  7261  0010D8  205E               	addwfc	_U1EP0_R+1,w,c
  7262  0010DA  6E39               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7263                           
  7264                           ; BSR set to: 4
  7265                           ;usb_device.c: 2983: *pUEP &= ~0x0001;
  7266  0010DC  C038  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7267  0010E0  C039  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7268  0010E4  0EFE               	movlw	254
  7269  0010E6  16DF               	andwf	indf2,f,c
  7270                           
  7271                           ; BSR set to: 4
  7272  0010E8  D000               	goto	l377
  7273  0010EA                     l377:
  7274  0010EA  0012               	return		;funcret
  7275  0010EC                     __end_of_USBStdFeatureReqHandler:
  7276                           	opt stack 0
  7277                           tblptru	equ	0xFF8
  7278                           tblptrh	equ	0xFF7
  7279                           tblptrl	equ	0xFF6
  7280                           tablat	equ	0xFF5
  7281                           prodh	equ	0xFF4
  7282                           prodl	equ	0xFF3
  7283                           intcon	equ	0xFF2
  7284                           postinc0	equ	0xFEE
  7285                           wreg	equ	0xFE8
  7286                           indf1	equ	0xFE7
  7287                           postdec1	equ	0xFE5
  7288                           fsr1h	equ	0xFE2
  7289                           fsr1l	equ	0xFE1
  7290                           indf2	equ	0xFDF
  7291                           postinc2	equ	0xFDE
  7292                           postdec2	equ	0xFDD
  7293                           plusw2	equ	0xFDB
  7294                           fsr2h	equ	0xFDA
  7295                           fsr2l	equ	0xFD9
  7296                           status	equ	0xFD8
  7297                           
  7298 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7299 ;; Defined at:
  7300 ;;		line 271 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  event           2   46[COMRAM] enum E5298
  7303 ;;  pdata           2   48[COMRAM] PTR void 
  7304 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  7305 ;;  size            2   50[COMRAM] unsigned int 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  1    wreg      unsigned char 
  7310 ;; Registers used:
  7311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7317 ;;      Params:         6       0       0       0       0       0       0       0       0
  7318 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7319 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7320 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7321 ;;Total ram usage:        8 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; Hardware stack levels required when called:    7
  7324 ;; This function calls:
  7325 ;;		_CDCInitEP
  7326 ;;		_USBCheckCDCRequest
  7327 ;; This function is called by:
  7328 ;;		_USBDeviceTasks
  7329 ;;		_USBStdSetCfgHandler
  7330 ;;		_USBSuspend
  7331 ;;		_USBWakeFromSuspend
  7332 ;;		_USBCtrlTrfSetupHandler
  7333 ;;		_USBCheckStdRequest
  7334 ;;		_USBStdFeatureReqHandler
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text23
  7339  002E2C                     __ptext23:
  7340                           	opt stack 0
  7341  002E2C                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7342                           	opt stack 21
  7343                           
  7344                           ;karate.c: 273: switch( (int) event )
  7345                           
  7346                           ;incstack = 0
  7347  002E2C  D007               	goto	l3908
  7348                           
  7349                           ;karate.c: 289: break;
  7350                           
  7351                           ;karate.c: 287: case EVENT_RESUME:
  7352                           
  7353                           ;karate.c: 285: break;
  7354                           
  7355                           ;karate.c: 283: case EVENT_SUSPEND:
  7356                           
  7357                           ;karate.c: 281: break;
  7358                           
  7359                           ;karate.c: 278: case EVENT_SOF:
  7360                           
  7361                           ;karate.c: 276: break;
  7362                           
  7363                           ;karate.c: 274: {
  7364                           ;karate.c: 275: case EVENT_TRANSFER:
  7365  002E2E  D02D               	goto	l749
  7366  002E30                     l3902:
  7367                           
  7368                           ;karate.c: 294: CDCInitEP();
  7369  002E30  EC7D  F016         	call	_CDCInitEP	;wreg free
  7370                           
  7371                           ;karate.c: 298: break;
  7372                           
  7373                           ;karate.c: 297: case EVENT_SET_DESCRIPTOR:
  7374                           
  7375                           ;karate.c: 295: break;
  7376  002E34  D02A               	goto	l749
  7377  002E36                     l3904:
  7378                           
  7379                           ;karate.c: 303: USBCheckCDCRequest();
  7380  002E36  EC01  F012         	call	_USBCheckCDCRequest	;wreg free
  7381                           
  7382                           ;karate.c: 314: }
  7383                           
  7384                           ;karate.c: 313: break;
  7385                           
  7386                           ;karate.c: 312: default:
  7387                           
  7388                           ;karate.c: 310: break;
  7389                           
  7390                           ;karate.c: 309: case EVENT_TRANSFER_TERMINATED:
  7391                           
  7392                           ;karate.c: 307: break;
  7393                           
  7394                           ;karate.c: 306: case EVENT_BUS_ERROR:
  7395                           
  7396                           ;karate.c: 304: break;
  7397  002E3A  D027               	goto	l749
  7398  002E3C                     l3908:
  7399  002E3C  C02F  F035         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7400  002E40  C030  F036         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7401                           
  7402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7403                           ; Switch size 1, requested type "space"
  7404                           ; Number of cases is 2, Range of values is 0 to 127
  7405                           ; switch strategies available:
  7406                           ; Name         Instructions Cycles
  7407                           ; simple_byte            7     4 (average)
  7408                           ;	Chosen strategy is simple_byte
  7409  002E44  5036               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7410  002E46  0A00               	xorlw	0	; case 0
  7411  002E48  B4D8               	btfsc	status,2,c
  7412  002E4A  D004               	goto	l5734
  7413  002E4C  0A7F               	xorlw	127	; case 127
  7414  002E4E  B4D8               	btfsc	status,2,c
  7415  002E50  D019               	goto	l5736
  7416  002E52  D01B               	goto	l749
  7417  002E54                     l5734:
  7418                           
  7419                           ; Switch size 1, requested type "space"
  7420                           ; Number of cases is 8, Range of values is 1 to 117
  7421                           ; switch strategies available:
  7422                           ; Name         Instructions Cycles
  7423                           ; simple_byte           25    13 (average)
  7424                           ;	Chosen strategy is simple_byte
  7425  002E54  5035               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7426  002E56  0A01               	xorlw	1	; case 1
  7427  002E58  B4D8               	btfsc	status,2,c
  7428  002E5A  D7EA               	goto	l3902
  7429  002E5C  0A03               	xorlw	3	; case 2
  7430  002E5E  B4D8               	btfsc	status,2,c
  7431  002E60  D014               	goto	l749
  7432  002E62  0A01               	xorlw	1	; case 3
  7433  002E64  B4D8               	btfsc	status,2,c
  7434  002E66  D7E7               	goto	l3904
  7435  002E68  0A06               	xorlw	6	; case 5
  7436  002E6A  B4D8               	btfsc	status,2,c
  7437  002E6C  D00E               	goto	l749
  7438  002E6E  0A77               	xorlw	119	; case 114
  7439  002E70  B4D8               	btfsc	status,2,c
  7440  002E72  D00B               	goto	l749
  7441  002E74  0A01               	xorlw	1	; case 115
  7442  002E76  B4D8               	btfsc	status,2,c
  7443  002E78  D008               	goto	l749
  7444  002E7A  0A07               	xorlw	7	; case 116
  7445  002E7C  B4D8               	btfsc	status,2,c
  7446  002E7E  D005               	goto	l749
  7447  002E80  0A01               	xorlw	1	; case 117
  7448  002E82  D003               	goto	l749
  7449  002E84                     l5736:
  7450                           
  7451                           ; Switch size 1, requested type "space"
  7452                           ; Number of cases is 1, Range of values is 255 to 255
  7453                           ; switch strategies available:
  7454                           ; Name         Instructions Cycles
  7455                           ; simple_byte            4     3 (average)
  7456                           ;	Chosen strategy is simple_byte
  7457  002E84  5035               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7458  002E86  0AFF               	xorlw	255	; case 255
  7459  002E88  D000               	goto	l749
  7460  002E8A                     l749:
  7461  002E8A  0012               	return		;funcret
  7462  002E8C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7463                           	opt stack 0
  7464                           tblptru	equ	0xFF8
  7465                           tblptrh	equ	0xFF7
  7466                           tblptrl	equ	0xFF6
  7467                           tablat	equ	0xFF5
  7468                           prodh	equ	0xFF4
  7469                           prodl	equ	0xFF3
  7470                           intcon	equ	0xFF2
  7471                           postinc0	equ	0xFEE
  7472                           wreg	equ	0xFE8
  7473                           indf1	equ	0xFE7
  7474                           postdec1	equ	0xFE5
  7475                           fsr1h	equ	0xFE2
  7476                           fsr1l	equ	0xFE1
  7477                           indf2	equ	0xFDF
  7478                           postinc2	equ	0xFDE
  7479                           postdec2	equ	0xFDD
  7480                           plusw2	equ	0xFDB
  7481                           fsr2h	equ	0xFDA
  7482                           fsr2l	equ	0xFD9
  7483                           status	equ	0xFD8
  7484                           
  7485 ;; *************** function _USBCheckCDCRequest *****************
  7486 ;; Defined at:
  7487 ;;		line 204 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;		None
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;		None
  7492 ;; Return value:  Size  Location     Type
  7493 ;;		None               void
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7501 ;;      Params:         0       0       0       0       0       0       0       0       0
  7502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7504 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7505 ;;Total ram usage:        0 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    4
  7508 ;; This function calls:
  7509 ;;		Nothing
  7510 ;; This function is called by:
  7511 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           	psect	text24
  7516  002402                     __ptext24:
  7517                           	opt stack 0
  7518  002402                     _USBCheckCDCRequest:
  7519                           	opt stack 23
  7520                           
  7521                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
  7522                           
  7523                           ;incstack = 0
  7524  002402  0104               	movlb	4	; () banked
  7525  002404  5130               	movf	48,w,b	;volatile
  7526  002406  0B1F               	andlw	31
  7527  002408  06E8               	decf	wreg,f,c
  7528  00240A  A4D8               	btfss	status,2,c
  7529  00240C  D059               	goto	l421
  7530  00240E  D001               	goto	l3844
  7531                           
  7532                           ; BSR set to: 4
  7533  002410  D057               	goto	l421
  7534  002412                     l3844:
  7535                           
  7536                           ; BSR set to: 4
  7537                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
  7538  002412  0104               	movlb	4	; () banked
  7539  002414  3930               	swapf	48,w,b	;volatile
  7540  002416  32E8               	rrcf	wreg,f,c
  7541  002418  0B03               	andlw	3
  7542  00241A  06E8               	decf	wreg,f,c
  7543  00241C  A4D8               	btfss	status,2,c
  7544  00241E  D050               	goto	l421
  7545  002420  D001               	goto	l3848
  7546                           
  7547                           ; BSR set to: 4
  7548  002422  D04E               	goto	l421
  7549  002424                     l3848:
  7550                           
  7551                           ; BSR set to: 4
  7552                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
  7553                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
  7554  002424  0104               	movlb	4	; () banked
  7555  002426  5134               	movf	52,w,b	;volatile
  7556  002428  B4D8               	btfsc	status,2,c
  7557  00242A  D038               	goto	l3878
  7558                           
  7559                           ; BSR set to: 4
  7560  00242C  0104               	movlb	4	; () banked
  7561  00242E  0534               	decf	52,w,b	;volatile
  7562  002430  A4D8               	btfss	status,2,c
  7563  002432  D046               	goto	l421
  7564  002434  D033               	goto	l3878
  7565                           
  7566                           ; BSR set to: 4
  7567  002436  D044               	goto	l421
  7568                           
  7569                           ; BSR set to: 4
  7570                           ;usb_device_cdc.c: 223: switch(SetupPkt.bRequest)
  7571  002438  D031               	goto	l3878
  7572  00243A                     l3854:
  7573                           
  7574                           ; BSR set to: 4
  7575                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7576  00243A  0EA3               	movlw	low _dummy_encapsulated_cmd_response
  7577  00243C  6E56               	movwf	_inPipes,c
  7578  00243E  0E00               	movlw	high _dummy_encapsulated_cmd_response
  7579  002440  6E57               	movwf	_inPipes+1,c
  7580                           
  7581                           ; BSR set to: 4
  7582                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
  7583  002442  0E00               	movlw	0
  7584  002444  6E5B               	movwf	_inPipes+5,c
  7585  002446  0E08               	movlw	8
  7586  002448  6E5A               	movwf	_inPipes+4,c
  7587                           
  7588                           ; BSR set to: 4
  7589                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7590  00244A  8059               	bsf	_inPipes+3,0,c
  7591  00244C  D025               	goto	L12
  7592  00244E                     l3862:
  7593                           
  7594                           ; BSR set to: 4
  7595                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7596  00244E  0EA3               	movlw	low _dummy_encapsulated_cmd_response
  7597  002450  6E56               	movwf	_inPipes,c
  7598  002452  0E00               	movlw	high _dummy_encapsulated_cmd_response
  7599  002454  6E57               	movwf	_inPipes+1,c
  7600  002456  D020               	goto	L12
  7601  002458                     l428:
  7602                           
  7603                           ; BSR set to: 4
  7604                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
  7605  002458  C436 F06E          	movff	1078,_outPipes+4	;volatile
  7606  00245C  C437 F06F          	movff	1079,_outPipes+5	;volatile
  7607                           
  7608                           ; BSR set to: 4
  7609                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7610  002460  0EAB               	movlw	low _line_coding
  7611  002462  0100               	movlb	0	; () banked
  7612  002464  6F6A               	movwf	_outPipes& (0+255),b
  7613  002466  0E00               	movlw	high _line_coding
  7614  002468  0100               	movlb	0	; () banked
  7615  00246A  6F6B               	movwf	(_outPipes+1)& (0+255),b
  7616                           
  7617                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
  7618  00246C  0E00               	movlw	0
  7619  00246E  0100               	movlb	0	; () banked
  7620  002470  6F70               	movwf	(_outPipes+6)& (0+255),b
  7621  002472  0E00               	movlw	0
  7622  002474  0100               	movlb	0	; () banked
  7623  002476  6F71               	movwf	(_outPipes+7)& (0+255),b
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
  7627  002478  0100               	movlb	0	; () banked
  7628  00247A  8F6D               	bsf	(_outPipes+3)& (0+255),7,b
  7629                           
  7630                           ;usb_device_cdc.c: 246: break;
  7631  00247C  D021               	goto	l421
  7632  00247E                     l3870:
  7633                           
  7634                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7635  00247E  0EAB               	movlw	low _line_coding
  7636  002480  6E56               	movwf	_inPipes,c
  7637  002482  0E00               	movlw	high _line_coding
  7638  002484  6E57               	movwf	_inPipes+1,c
  7639  002486  0E00               	movlw	0
  7640  002488  6E5B               	movwf	_inPipes+5,c
  7641  00248A  0E07               	movlw	7
  7642  00248C  6E5A               	movwf	_inPipes+4,c
  7643  00248E  0EC1               	movlw	193
  7644  002490  6E59               	movwf	_inPipes+3,c
  7645                           
  7646                           ;usb_device_cdc.c: 253: break;
  7647  002492  D016               	goto	l421
  7648  002494                     l430:
  7649                           
  7650                           ; BSR set to: 4
  7651                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7652  002494  C432 F09A          	movff	1074,_control_signal_bitmap	;volatile
  7653  002498                     L12:
  7654                           
  7655                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
  7656  002498  8E59               	bsf	_inPipes+3,7,c
  7657                           
  7658                           ; BSR set to: 4
  7659                           ;usb_device_cdc.c: 315: }
  7660                           
  7661                           ; BSR set to: 4
  7662                           ;usb_device_cdc.c: 314: break;
  7663                           
  7664                           ;usb_device_cdc.c: 313: default:
  7665                           
  7666                           ;usb_device_cdc.c: 289: break;
  7667  00249A  D012               	goto	l421
  7668  00249C                     l3878:
  7669                           
  7670                           ; BSR set to: 4
  7671  00249C  0104               	movlb	4	; () banked
  7672  00249E  5131               	movf	49,w,b	;volatile
  7673                           
  7674                           ; Switch size 1, requested type "space"
  7675                           ; Number of cases is 5, Range of values is 0 to 34
  7676                           ; switch strategies available:
  7677                           ; Name         Instructions Cycles
  7678                           ; simple_byte           16     9 (average)
  7679                           ;	Chosen strategy is simple_byte
  7680  0024A0  0A00               	xorlw	0	; case 0
  7681  0024A2  B4D8               	btfsc	status,2,c
  7682  0024A4  D7CA               	goto	l3854
  7683  0024A6  0A01               	xorlw	1	; case 1
  7684  0024A8  B4D8               	btfsc	status,2,c
  7685  0024AA  D7D1               	goto	l3862
  7686  0024AC  0A21               	xorlw	33	; case 32
  7687  0024AE  B4D8               	btfsc	status,2,c
  7688  0024B0  D7D3               	goto	l428
  7689  0024B2  0A01               	xorlw	1	; case 33
  7690  0024B4  B4D8               	btfsc	status,2,c
  7691  0024B6  D7E3               	goto	l3870
  7692  0024B8  0A03               	xorlw	3	; case 34
  7693  0024BA  B4D8               	btfsc	status,2,c
  7694  0024BC  D7EB               	goto	l430
  7695  0024BE  D000               	goto	l421
  7696  0024C0                     l421:
  7697  0024C0  0012               	return		;funcret
  7698  0024C2                     __end_of_USBCheckCDCRequest:
  7699                           	opt stack 0
  7700                           tblptru	equ	0xFF8
  7701                           tblptrh	equ	0xFF7
  7702                           tblptrl	equ	0xFF6
  7703                           tablat	equ	0xFF5
  7704                           prodh	equ	0xFF4
  7705                           prodl	equ	0xFF3
  7706                           intcon	equ	0xFF2
  7707                           postinc0	equ	0xFEE
  7708                           wreg	equ	0xFE8
  7709                           indf1	equ	0xFE7
  7710                           postdec1	equ	0xFE5
  7711                           fsr1h	equ	0xFE2
  7712                           fsr1l	equ	0xFE1
  7713                           indf2	equ	0xFDF
  7714                           postinc2	equ	0xFDE
  7715                           postdec2	equ	0xFDD
  7716                           plusw2	equ	0xFDB
  7717                           fsr2h	equ	0xFDA
  7718                           fsr2l	equ	0xFD9
  7719                           status	equ	0xFD8
  7720                           
  7721 ;; *************** function _CDCInitEP *****************
  7722 ;; Defined at:
  7723 ;;		line 351 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;		None
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;		None
  7728 ;; Return value:  Size  Location     Type
  7729 ;;		None               void
  7730 ;; Registers used:
  7731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7737 ;;      Params:         0       0       0       0       0       0       0       0       0
  7738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7741 ;;Total ram usage:        0 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:    6
  7744 ;; This function calls:
  7745 ;;		_USBEnableEndpoint
  7746 ;;		_USBTransferOnePacket
  7747 ;; This function is called by:
  7748 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text25
  7753  002CFA                     __ptext25:
  7754                           	opt stack 0
  7755  002CFA                     _CDCInitEP:
  7756                           	opt stack 21
  7757                           
  7758                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
  7759                           
  7760                           ;incstack = 0
  7761  002CFA  0E00               	movlw	0
  7762  002CFC  0100               	movlb	0	; () banked
  7763  002CFE  6FAB               	movwf	_line_coding& (0+255),b
  7764  002D00  0E4B               	movlw	75
  7765  002D02  6FAC               	movwf	(_line_coding+1)& (0+255),b
  7766  002D04  0E00               	movlw	0
  7767  002D06  6FAD               	movwf	(_line_coding+2)& (0+255),b
  7768  002D08  0E00               	movlw	0
  7769  002D0A  6FAE               	movwf	(_line_coding+3)& (0+255),b
  7770                           
  7771                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
  7772  002D0C  0E00               	movlw	0
  7773  002D0E  0100               	movlb	0	; () banked
  7774  002D10  6FAF               	movwf	(_line_coding+4)& (0+255),b
  7775                           
  7776                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
  7777  002D12  0E00               	movlw	0
  7778  002D14  0100               	movlb	0	; () banked
  7779  002D16  6FB0               	movwf	(_line_coding+5)& (0+255),b
  7780                           
  7781                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
  7782  002D18  0E08               	movlw	8
  7783  002D1A  0100               	movlb	0	; () banked
  7784  002D1C  6FB1               	movwf	(_line_coding+6)& (0+255),b
  7785                           
  7786                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
  7787  002D1E  0E00               	movlw	0
  7788  002D20  6E51               	movwf	_cdc_rx_len,c
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
  7792  002D22  0E1A               	movlw	26
  7793  002D24  6E2B               	movwf	USBEnableEndpoint@options,c
  7794  002D26  0E01               	movlw	1
  7795  002D28  EC49  F018         	call	_USBEnableEndpoint
  7796                           
  7797                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7798  002D2C  0E1E               	movlw	30
  7799  002D2E  6E2B               	movwf	USBEnableEndpoint@options,c
  7800  002D30  0E02               	movlw	2
  7801  002D32  EC49  F018         	call	_USBEnableEndpoint
  7802                           
  7803                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7804  002D36  0E00               	movlw	0
  7805  002D38  6E23               	movwf	USBTransferOnePacket@dir,c
  7806  002D3A  0E40               	movlw	64
  7807  002D3C  6E24               	movwf	USBTransferOnePacket@data,c
  7808  002D3E  0E05               	movlw	5
  7809  002D40  6E25               	movwf	USBTransferOnePacket@data+1,c
  7810  002D42  0E40               	movlw	64
  7811  002D44  6E26               	movwf	USBTransferOnePacket@len,c
  7812  002D46  0E02               	movlw	2
  7813  002D48  EC61  F012         	call	_USBTransferOnePacket
  7814  002D4C  C023  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  7815  002D50  C024  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  7816                           
  7817                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
  7818  002D54  0E00               	movlw	0
  7819  002D56  0100               	movlb	0	; () banked
  7820  002D58  6F88               	movwf	_CDCDataInHandle& (0+255),b
  7821  002D5A  0E00               	movlw	0
  7822  002D5C  0100               	movlb	0	; () banked
  7823  002D5E  6F89               	movwf	(_CDCDataInHandle+1)& (0+255),b
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
  7827  002D60  0E00               	movlw	0
  7828  002D62  6E52               	movwf	_cdc_trf_state,c
  7829                           
  7830                           ; BSR set to: 0
  7831  002D64  0012               	return		;funcret
  7832  002D66                     __end_of_CDCInitEP:
  7833                           	opt stack 0
  7834                           tblptru	equ	0xFF8
  7835                           tblptrh	equ	0xFF7
  7836                           tblptrl	equ	0xFF6
  7837                           tablat	equ	0xFF5
  7838                           prodh	equ	0xFF4
  7839                           prodl	equ	0xFF3
  7840                           intcon	equ	0xFF2
  7841                           postinc0	equ	0xFEE
  7842                           wreg	equ	0xFE8
  7843                           indf1	equ	0xFE7
  7844                           postdec1	equ	0xFE5
  7845                           fsr1h	equ	0xFE2
  7846                           fsr1l	equ	0xFE1
  7847                           indf2	equ	0xFDF
  7848                           postinc2	equ	0xFDE
  7849                           postdec2	equ	0xFDD
  7850                           plusw2	equ	0xFDB
  7851                           fsr2h	equ	0xFDA
  7852                           fsr2l	equ	0xFD9
  7853                           status	equ	0xFD8
  7854                           
  7855 ;; *************** function _USBTransferOnePacket *****************
  7856 ;; Defined at:
  7857 ;;		line 998 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  ep              1    wreg     unsigned char 
  7860 ;;  dir             1   34[COMRAM] unsigned char 
  7861 ;;  data            2   35[COMRAM] PTR unsigned char 
  7862 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7863 ;;  len             1   37[COMRAM] unsigned char 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  ep              1   38[COMRAM] unsigned char 
  7866 ;;  handle          2   39[COMRAM] PTR volatile struct __BD
  7867 ;;		 -> NULL(0), BDT(48), 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  2   34[COMRAM] PTR void 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7877 ;;      Params:         4       0       0       0       0       0       0       0       0
  7878 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7880 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7881 ;;Total ram usage:        7 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    4
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_CDCInitEP
  7888 ;;		_getsUSBUSART
  7889 ;;		_CDCTxService
  7890 ;;		_USBCDCEventHandler
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text26
  7895  0024C2                     __ptext26:
  7896                           	opt stack 0
  7897  0024C2                     _USBTransferOnePacket:
  7898                           	opt stack 22
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;incstack = 0
  7902                           ;USBTransferOnePacket@ep stored from wreg
  7903  0024C2  6E27               	movwf	USBTransferOnePacket@ep,c
  7904                           
  7905                           ;usb_device.c: 1000: volatile BDT_ENTRY* handle;
  7906                           ;usb_device.c: 1003: if(dir != 0)
  7907  0024C4  5023               	movf	USBTransferOnePacket@dir,w,c
  7908  0024C6  B4D8               	btfsc	status,2,c
  7909  0024C8  D007               	goto	l3814
  7910                           
  7911                           ;usb_device.c: 1004: {
  7912                           ;usb_device.c: 1006: handle = pBDTEntryIn[ep];
  7913  0024CA  5027               	movf	USBTransferOnePacket@ep,w,c
  7914  0024CC  0D02               	mullw	2
  7915  0024CE  0E3E               	movlw	low _pBDTEntryIn
  7916  0024D0  24F3               	addwf	prodl,w,c
  7917  0024D2  6ED9               	movwf	fsr2l,c
  7918  0024D4  0E00               	movlw	high _pBDTEntryIn
  7919  0024D6  D006               	goto	L13
  7920  0024D8                     l3814:
  7921                           
  7922                           ;usb_device.c: 1008: else
  7923                           ;usb_device.c: 1009: {
  7924                           ;usb_device.c: 1011: handle = pBDTEntryOut[ep];
  7925  0024D8  5027               	movf	USBTransferOnePacket@ep,w,c
  7926  0024DA  0D02               	mullw	2
  7927  0024DC  0E72               	movlw	low _pBDTEntryOut
  7928  0024DE  24F3               	addwf	prodl,w,c
  7929  0024E0  6ED9               	movwf	fsr2l,c
  7930  0024E2  0E00               	movlw	high _pBDTEntryOut
  7931  0024E4                     L13:
  7932  0024E4  20F4               	addwfc	prodh,w,c
  7933  0024E6  6EDA               	movwf	fsr2h,c
  7934  0024E8  CFDE F028          	movff	postinc2,USBTransferOnePacket@handle
  7935  0024EC  CFDD F029          	movff	postdec2,USBTransferOnePacket@handle+1
  7936  0024F0  D000               	goto	l3816
  7937  0024F2                     l3816:
  7938                           
  7939                           ;usb_device.c: 1012: }
  7940                           ;usb_device.c: 1016: if(handle == 0)
  7941  0024F2  5028               	movf	USBTransferOnePacket@handle,w,c
  7942  0024F4  1029               	iorwf	USBTransferOnePacket@handle+1,w,c
  7943  0024F6  A4D8               	btfss	status,2,c
  7944  0024F8  D005               	goto	l3822
  7945                           
  7946                           ;usb_device.c: 1017: {
  7947                           ;usb_device.c: 1018: return 0;
  7948  0024FA  0E00               	movlw	0
  7949  0024FC  6E23               	movwf	?_USBTransferOnePacket,c
  7950  0024FE  0E00               	movlw	0
  7951  002500  6E24               	movwf	?_USBTransferOnePacket+1,c
  7952  002502  D03E               	goto	l179
  7953  002504                     l3822:
  7954                           
  7955                           ;usb_device.c: 1019: }
  7956                           ;usb_device.c: 1032: handle->ADR = ((uint16_t)(data));
  7957  002504  EE20 F002          	lfsr	2,2
  7958  002508  5028               	movf	USBTransferOnePacket@handle,w,c
  7959  00250A  26D9               	addwf	fsr2l,f,c
  7960  00250C  5029               	movf	USBTransferOnePacket@handle+1,w,c
  7961  00250E  22DA               	addwfc	fsr2h,f,c
  7962  002510  C024  FFDE         	movff	USBTransferOnePacket@data,postinc2
  7963  002514  C025  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  7964                           
  7965                           ;usb_device.c: 1033: handle->CNT = len;
  7966  002518  EE20 F001          	lfsr	2,1
  7967  00251C  5028               	movf	USBTransferOnePacket@handle,w,c
  7968  00251E  26D9               	addwf	fsr2l,f,c
  7969  002520  5029               	movf	USBTransferOnePacket@handle+1,w,c
  7970  002522  22DA               	addwfc	fsr2h,f,c
  7971  002524  C026  FFDF         	movff	USBTransferOnePacket@len,indf2
  7972                           
  7973                           ;usb_device.c: 1034: handle->STAT.Val &= 0x40;
  7974  002528  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7975  00252C  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7976  002530  0E40               	movlw	64
  7977  002532  16DF               	andwf	indf2,f,c
  7978                           
  7979                           ;usb_device.c: 1035: handle->STAT.Val |= (0x08 & 0x08);
  7980  002534  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7981  002538  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7982  00253C  0E00               	movlw	0
  7983  00253E  86DB               	bsf	plusw2,3,c
  7984                           
  7985                           ;usb_device.c: 1036: handle->STAT.Val |= 0x80;
  7986  002540  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7987  002544  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7988  002548  0E00               	movlw	0
  7989  00254A  8EDB               	bsf	plusw2,7,c
  7990                           
  7991                           ;usb_device.c: 1039: if(dir != 0)
  7992  00254C  5023               	movf	USBTransferOnePacket@dir,w,c
  7993  00254E  B4D8               	btfsc	status,2,c
  7994  002550  D007               	goto	l3834
  7995                           
  7996                           ;usb_device.c: 1040: {
  7997                           ;usb_device.c: 1042: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  7998  002552  5027               	movf	USBTransferOnePacket@ep,w,c
  7999  002554  0D02               	mullw	2
  8000  002556  0E3E               	movlw	low _pBDTEntryIn
  8001  002558  24F3               	addwf	prodl,w,c
  8002  00255A  6ED9               	movwf	fsr2l,c
  8003  00255C  0E00               	movlw	high _pBDTEntryIn
  8004  00255E  D006               	goto	L14
  8005  002560                     l3834:
  8006                           
  8007                           ;usb_device.c: 1044: else
  8008                           ;usb_device.c: 1045: {
  8009                           ;usb_device.c: 1047: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8010  002560  5027               	movf	USBTransferOnePacket@ep,w,c
  8011  002562  0D02               	mullw	2
  8012  002564  0E72               	movlw	low _pBDTEntryOut
  8013  002566  24F3               	addwf	prodl,w,c
  8014  002568  6ED9               	movwf	fsr2l,c
  8015  00256A  0E00               	movlw	high _pBDTEntryOut
  8016  00256C                     L14:
  8017  00256C  20F4               	addwfc	prodh,w,c
  8018  00256E  6EDA               	movwf	fsr2h,c
  8019  002570  0E04               	movlw	4
  8020  002572  1ADF               	xorwf	indf2,f,c
  8021  002574  D000               	goto	l3836
  8022  002576                     l3836:
  8023                           
  8024                           ;usb_device.c: 1048: }
  8025                           ;usb_device.c: 1049: return (void*)handle;
  8026  002576  C028  F023         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  8027  00257A  C029  F024         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  8028  00257E  D000               	goto	l179
  8029  002580                     l179:
  8030  002580  0012               	return		;funcret
  8031  002582                     __end_of_USBTransferOnePacket:
  8032                           	opt stack 0
  8033                           tblptru	equ	0xFF8
  8034                           tblptrh	equ	0xFF7
  8035                           tblptrl	equ	0xFF6
  8036                           tablat	equ	0xFF5
  8037                           prodh	equ	0xFF4
  8038                           prodl	equ	0xFF3
  8039                           intcon	equ	0xFF2
  8040                           postinc0	equ	0xFEE
  8041                           wreg	equ	0xFE8
  8042                           indf1	equ	0xFE7
  8043                           postdec1	equ	0xFE5
  8044                           fsr1h	equ	0xFE2
  8045                           fsr1l	equ	0xFE1
  8046                           indf2	equ	0xFDF
  8047                           postinc2	equ	0xFDE
  8048                           postdec2	equ	0xFDD
  8049                           plusw2	equ	0xFDB
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8
  8053                           
  8054 ;; *************** function _USBEnableEndpoint *****************
  8055 ;; Defined at:
  8056 ;;		line 881 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  ep              1    wreg     unsigned char 
  8059 ;;  options         1   42[COMRAM] unsigned char 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  ep              1   45[COMRAM] unsigned char 
  8062 ;;  p               2   43[COMRAM] PTR unsigned char 
  8063 ;;		 -> UEP0(1), RAM(2047), 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;		None               void
  8066 ;; Registers used:
  8067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8073 ;;      Params:         1       0       0       0       0       0       0       0       0
  8074 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8076 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8077 ;;Total ram usage:        4 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    5
  8080 ;; This function calls:
  8081 ;;		_USBConfigureEndpoint
  8082 ;; This function is called by:
  8083 ;;		_CDCInitEP
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text27
  8088  003092                     __ptext27:
  8089                           	opt stack 0
  8090  003092                     _USBEnableEndpoint:
  8091                           	opt stack 21
  8092                           
  8093                           ;incstack = 0
  8094                           ;USBEnableEndpoint@ep stored from wreg
  8095  003092  6E2E               	movwf	USBEnableEndpoint@ep,c
  8096                           
  8097                           ;usb_device.c: 883: unsigned char* p;
  8098                           ;usb_device.c: 887: if(options & 0x04)
  8099  003094  A42B               	btfss	USBEnableEndpoint@options,2,c
  8100  003096  D006               	goto	l3802
  8101                           
  8102                           ;usb_device.c: 888: {
  8103                           ;usb_device.c: 889: USBConfigureEndpoint(ep, 0);
  8104  003098  0E00               	movlw	0
  8105  00309A  6E23               	movwf	USBConfigureEndpoint@direction,c
  8106  00309C  502E               	movf	USBEnableEndpoint@ep,w,c
  8107  00309E  ECDB  F014         	call	_USBConfigureEndpoint
  8108  0030A2  D000               	goto	l3802
  8109  0030A4                     l3802:
  8110                           
  8111                           ;usb_device.c: 890: }
  8112                           ;usb_device.c: 891: if(options & 0x02)
  8113  0030A4  A22B               	btfss	USBEnableEndpoint@options,1,c
  8114  0030A6  D006               	goto	l3806
  8115                           
  8116                           ;usb_device.c: 892: {
  8117                           ;usb_device.c: 893: USBConfigureEndpoint(ep, 1);
  8118  0030A8  0E01               	movlw	1
  8119  0030AA  6E23               	movwf	USBConfigureEndpoint@direction,c
  8120  0030AC  502E               	movf	USBEnableEndpoint@ep,w,c
  8121  0030AE  ECDB  F014         	call	_USBConfigureEndpoint
  8122  0030B2  D000               	goto	l3806
  8123  0030B4                     l3806:
  8124                           
  8125                           ;usb_device.c: 894: }
  8126                           ;usb_device.c: 902: p = (unsigned char*)(&*U1EP0_R+ep);
  8127  0030B4  502E               	movf	USBEnableEndpoint@ep,w,c
  8128  0030B6  0D01               	mullw	1
  8129  0030B8  50F3               	movf	prodl,w,c
  8130  0030BA  245D               	addwf	_U1EP0_R,w,c
  8131  0030BC  6E2C               	movwf	USBEnableEndpoint@p,c
  8132  0030BE  50F4               	movf	prodh,w,c
  8133  0030C0  205E               	addwfc	_U1EP0_R+1,w,c
  8134  0030C2  6E2D               	movwf	USBEnableEndpoint@p+1,c
  8135                           
  8136                           ;usb_device.c: 904: *p = options;
  8137  0030C4  C02C  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8138  0030C8  C02D  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8139  0030CC  C02B  FFDF         	movff	USBEnableEndpoint@options,indf2
  8140  0030D0  0012               	return		;funcret
  8141  0030D2                     __end_of_USBEnableEndpoint:
  8142                           	opt stack 0
  8143                           tblptru	equ	0xFF8
  8144                           tblptrh	equ	0xFF7
  8145                           tblptrl	equ	0xFF6
  8146                           tablat	equ	0xFF5
  8147                           prodh	equ	0xFF4
  8148                           prodl	equ	0xFF3
  8149                           intcon	equ	0xFF2
  8150                           postinc0	equ	0xFEE
  8151                           wreg	equ	0xFE8
  8152                           indf1	equ	0xFE7
  8153                           postdec1	equ	0xFE5
  8154                           fsr1h	equ	0xFE2
  8155                           fsr1l	equ	0xFE1
  8156                           indf2	equ	0xFDF
  8157                           postinc2	equ	0xFDE
  8158                           postdec2	equ	0xFDD
  8159                           plusw2	equ	0xFDB
  8160                           fsr2h	equ	0xFDA
  8161                           fsr2l	equ	0xFD9
  8162                           status	equ	0xFD8
  8163                           
  8164 ;; *************** function _USBConfigureEndpoint *****************
  8165 ;; Defined at:
  8166 ;;		line 1546 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  EPNum           1    wreg     unsigned char 
  8169 ;;  direction       1   34[COMRAM] unsigned char 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  EPNum           1   39[COMRAM] unsigned char 
  8172 ;;  handle          2   40[COMRAM] PTR volatile struct __BD
  8173 ;;		 -> BDT(48), 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;		None               void
  8176 ;; Registers used:
  8177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8183 ;;      Params:         1       0       0       0       0       0       0       0       0
  8184 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8185 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8186 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8187 ;;Total ram usage:        8 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:    4
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_USBEnableEndpoint
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text28
  8198  0029B6                     __ptext28:
  8199                           	opt stack 0
  8200  0029B6                     _USBConfigureEndpoint:
  8201                           	opt stack 21
  8202                           
  8203                           ;incstack = 0
  8204                           ;USBConfigureEndpoint@EPNum stored from wreg
  8205  0029B6  6E28               	movwf	USBConfigureEndpoint@EPNum,c
  8206                           
  8207                           ;usb_device.c: 1548: volatile BDT_ENTRY* handle;
  8208                           ;usb_device.c: 1552: handle = (volatile BDT_ENTRY*)&BDT[0];
  8209  0029B8  0E00               	movlw	0
  8210  0029BA  6E29               	movwf	USBConfigureEndpoint@handle,c
  8211  0029BC  0E04               	movlw	4
  8212  0029BE  6E2A               	movwf	USBConfigureEndpoint@handle+1,c
  8213                           
  8214                           ;usb_device.c: 1553: handle += (4*EPNum+2*direction+0u);
  8215  0029C0  5023               	movf	USBConfigureEndpoint@direction,w,c
  8216  0029C2  6E24               	movwf	??_USBConfigureEndpoint& (0+255),c
  8217  0029C4  6A25               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8218  0029C6  90D8               	bcf	status,0,c
  8219  0029C8  3624               	rlcf	??_USBConfigureEndpoint,f,c
  8220  0029CA  3625               	rlcf	??_USBConfigureEndpoint+1,f,c
  8221  0029CC  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8222  0029CE  6E26               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8223  0029D0  6A27               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8224  0029D2  90D8               	bcf	status,0,c
  8225  0029D4  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8226  0029D6  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8227  0029D8  90D8               	bcf	status,0,c
  8228  0029DA  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8229  0029DC  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8230  0029DE  5024               	movf	??_USBConfigureEndpoint,w,c
  8231  0029E0  2626               	addwf	??_USBConfigureEndpoint+2,f,c
  8232  0029E2  5025               	movf	??_USBConfigureEndpoint+1,w,c
  8233  0029E4  2227               	addwfc	??_USBConfigureEndpoint+3,f,c
  8234  0029E6  90D8               	bcf	status,0,c
  8235  0029E8  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8236  0029EA  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8237  0029EC  90D8               	bcf	status,0,c
  8238  0029EE  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8239  0029F0  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8240  0029F2  5026               	movf	??_USBConfigureEndpoint+2,w,c
  8241  0029F4  2629               	addwf	USBConfigureEndpoint@handle,f,c
  8242  0029F6  5027               	movf	??_USBConfigureEndpoint+3,w,c
  8243  0029F8  222A               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8244                           
  8245                           ;usb_device.c: 1555: handle->STAT.UOWN = 0;
  8246  0029FA  C029  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8247  0029FE  C02A  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8248  002A02  9EDF               	bcf	indf2,7,c
  8249                           
  8250                           ;usb_device.c: 1560: if(direction == 0)
  8251  002A04  5023               	movf	USBConfigureEndpoint@direction,w,c
  8252  002A06  A4D8               	btfss	status,2,c
  8253  002A08  D007               	goto	l3792
  8254                           
  8255                           ;usb_device.c: 1561: {
  8256                           ;usb_device.c: 1562: pBDTEntryOut[EPNum] = handle;
  8257  002A0A  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8258  002A0C  0D02               	mullw	2
  8259  002A0E  0E72               	movlw	low _pBDTEntryOut
  8260  002A10  24F3               	addwf	prodl,w,c
  8261  002A12  6ED9               	movwf	fsr2l,c
  8262  002A14  0E00               	movlw	high _pBDTEntryOut
  8263  002A16  D006               	goto	L15
  8264  002A18                     l3792:
  8265                           
  8266                           ;usb_device.c: 1564: else
  8267                           ;usb_device.c: 1565: {
  8268                           ;usb_device.c: 1566: pBDTEntryIn[EPNum] = handle;
  8269  002A18  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8270  002A1A  0D02               	mullw	2
  8271  002A1C  0E3E               	movlw	low _pBDTEntryIn
  8272  002A1E  24F3               	addwf	prodl,w,c
  8273  002A20  6ED9               	movwf	fsr2l,c
  8274  002A22  0E00               	movlw	high _pBDTEntryIn
  8275  002A24                     L15:
  8276  002A24  20F4               	addwfc	prodh,w,c
  8277  002A26  6EDA               	movwf	fsr2h,c
  8278  002A28  C029  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8279  002A2C  C02A  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8280  002A30  D000               	goto	l3794
  8281  002A32                     l3794:
  8282                           
  8283                           ;usb_device.c: 1567: }
  8284                           ;usb_device.c: 1570: handle->STAT.DTS = 0;
  8285  002A32  C029  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8286  002A36  C02A  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8287  002A3A  9CDF               	bcf	indf2,6,c
  8288                           
  8289                           ;usb_device.c: 1571: (handle+1)->STAT.DTS = 1;
  8290  002A3C  EE20 F004          	lfsr	2,4
  8291  002A40  5029               	movf	USBConfigureEndpoint@handle,w,c
  8292  002A42  26D9               	addwf	fsr2l,f,c
  8293  002A44  502A               	movf	USBConfigureEndpoint@handle+1,w,c
  8294  002A46  22DA               	addwfc	fsr2h,f,c
  8295  002A48  8CDF               	bsf	indf2,6,c
  8296  002A4A  0012               	return		;funcret
  8297  002A4C                     __end_of_USBConfigureEndpoint:
  8298                           	opt stack 0
  8299                           tblptru	equ	0xFF8
  8300                           tblptrh	equ	0xFF7
  8301                           tblptrl	equ	0xFF6
  8302                           tablat	equ	0xFF5
  8303                           prodh	equ	0xFF4
  8304                           prodl	equ	0xFF3
  8305                           intcon	equ	0xFF2
  8306                           postinc0	equ	0xFEE
  8307                           wreg	equ	0xFE8
  8308                           indf1	equ	0xFE7
  8309                           postdec1	equ	0xFE5
  8310                           fsr1h	equ	0xFE2
  8311                           fsr1l	equ	0xFE1
  8312                           indf2	equ	0xFDF
  8313                           postinc2	equ	0xFDE
  8314                           postdec2	equ	0xFDD
  8315                           plusw2	equ	0xFDB
  8316                           fsr2h	equ	0xFDA
  8317                           fsr2l	equ	0xFD9
  8318                           status	equ	0xFD8
  8319                           
  8320 ;; *************** function _USBCtrlTrfOutHandler *****************
  8321 ;; Defined at:
  8322 ;;		line 2544 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;		None
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;		None               void
  8329 ;; Registers used:
  8330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8339 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8340 ;;Total ram usage:        0 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; Hardware stack levels required when called:    6
  8343 ;; This function calls:
  8344 ;;		_USBCtrlTrfRxService
  8345 ;; This function is called by:
  8346 ;;		_USBCtrlEPService
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text29
  8351  002DCA                     __ptext29:
  8352                           	opt stack 0
  8353  002DCA                     _USBCtrlTrfOutHandler:
  8354                           	opt stack 21
  8355                           
  8356                           ;usb_device.c: 2546: if(controlTransferState == 2)
  8357                           
  8358                           ;incstack = 0
  8359  002DCA  0E02               	movlw	2
  8360  002DCC  1854               	xorwf	_controlTransferState,w,c
  8361  002DCE  A4D8               	btfss	status,2,c
  8362  002DD0  D003               	goto	l4368
  8363                           
  8364                           ;usb_device.c: 2547: {
  8365                           ;usb_device.c: 2548: USBCtrlTrfRxService();
  8366  002DD2  ECE6  F00D         	call	_USBCtrlTrfRxService	;wreg free
  8367                           
  8368                           ;usb_device.c: 2549: }
  8369  002DD6  D029               	goto	l319
  8370  002DD8                     l4368:
  8371                           
  8372                           ;usb_device.c: 2550: else
  8373                           ;usb_device.c: 2551: {
  8374                           ;usb_device.c: 2554: controlTransferState = 0;
  8375  002DD8  0E00               	movlw	0
  8376  002DDA  6E54               	movwf	_controlTransferState,c
  8377                           
  8378                           ;usb_device.c: 2561: if(BothEP0OutUOWNsSet == 0)
  8379  002DDC  0100               	movlb	0	; () banked
  8380  002DDE  5194               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
  8381  002DE0  A4D8               	btfss	status,2,c
  8382  002DE2  D01F               	goto	l4376
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;usb_device.c: 2562: {
  8386                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->CNT = 8;
  8387  002DE4  EE20 F001          	lfsr	2,1
  8388  002DE8  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8389  002DEA  26D9               	addwf	fsr2l,f,c
  8390  002DEC  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8391  002DEE  22DA               	addwfc	fsr2h,f,c
  8392  002DF0  0E08               	movlw	8
  8393  002DF2  6EDF               	movwf	indf2,c
  8394                           
  8395                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8396  002DF4  EE20 F002          	lfsr	2,2
  8397  002DF8  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8398  002DFA  26D9               	addwf	fsr2l,f,c
  8399  002DFC  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8400  002DFE  22DA               	addwfc	fsr2h,f,c
  8401  002E00  0E30               	movlw	48
  8402  002E02  6EDE               	movwf	postinc2,c
  8403  002E04  0E04               	movlw	4
  8404  002E06  6EDD               	movwf	postdec2,c
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;usb_device.c: 2565: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8408  002E08  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8409  002E0C  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8410  002E10  0E0C               	movlw	12
  8411  002E12  6EDF               	movwf	indf2,c
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;usb_device.c: 2566: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8415  002E14  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8416  002E18  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8417  002E1C  0E00               	movlw	0
  8418  002E1E  8EDB               	bsf	plusw2,7,c
  8419                           
  8420                           ;usb_device.c: 2567: }
  8421  002E20  D004               	goto	l319
  8422  002E22                     l4376:
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;usb_device.c: 2568: else
  8426                           ;usb_device.c: 2569: {
  8427                           ;usb_device.c: 2570: BothEP0OutUOWNsSet = 0;
  8428  002E22  0E00               	movlw	0
  8429  002E24  0100               	movlb	0	; () banked
  8430  002E26  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8431                           
  8432                           ; BSR set to: 0
  8433  002E28  D000               	goto	l319
  8434  002E2A                     l319:
  8435  002E2A  0012               	return		;funcret
  8436  002E2C                     __end_of_USBCtrlTrfOutHandler:
  8437                           	opt stack 0
  8438                           tblptru	equ	0xFF8
  8439                           tblptrh	equ	0xFF7
  8440                           tblptrl	equ	0xFF6
  8441                           tablat	equ	0xFF5
  8442                           prodh	equ	0xFF4
  8443                           prodl	equ	0xFF3
  8444                           intcon	equ	0xFF2
  8445                           postinc0	equ	0xFEE
  8446                           wreg	equ	0xFE8
  8447                           indf1	equ	0xFE7
  8448                           postdec1	equ	0xFE5
  8449                           fsr1h	equ	0xFE2
  8450                           fsr1l	equ	0xFE1
  8451                           indf2	equ	0xFDF
  8452                           postinc2	equ	0xFDE
  8453                           postdec2	equ	0xFDD
  8454                           plusw2	equ	0xFDB
  8455                           fsr2h	equ	0xFDA
  8456                           fsr2l	equ	0xFD9
  8457                           status	equ	0xFD8
  8458                           
  8459 ;; *************** function _USBCtrlTrfRxService *****************
  8460 ;; Defined at:
  8461 ;;		line 1855 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;		None
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  byteToRead      1   35[COMRAM] unsigned char 
  8466 ;;  i               1   34[COMRAM] unsigned char 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;		None               void
  8469 ;; Registers used:
  8470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8476 ;;      Params:         0       0       0       0       0       0       0       0       0
  8477 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8479 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8480 ;;Total ram usage:        2 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    5
  8483 ;; This function calls:
  8484 ;;		_USBCtrlEPAllowStatusStage
  8485 ;; This function is called by:
  8486 ;;		_USBCtrlTrfOutHandler
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text30
  8491  001BCC                     __ptext30:
  8492                           	opt stack 0
  8493  001BCC                     _USBCtrlTrfRxService:
  8494                           	opt stack 21
  8495                           
  8496                           ;usb_device.c: 1857: uint8_t byteToRead;
  8497                           ;usb_device.c: 1858: uint8_t i;
  8498                           ;usb_device.c: 1862: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8499                           
  8500                           ;incstack = 0
  8501  001BCC  EE20 F001          	lfsr	2,1
  8502  001BD0  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8503  001BD2  26D9               	addwf	fsr2l,f,c
  8504  001BD4  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8505  001BD6  22DA               	addwfc	fsr2h,f,c
  8506  001BD8  50DF               	movf	indf2,w,c
  8507  001BDA  6E24               	movwf	USBCtrlTrfRxService@byteToRead,c
  8508                           
  8509                           ;usb_device.c: 1868: if(byteToRead > outPipes[0].wCount.Val)
  8510  001BDC  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8511  001BDE  0100               	movlb	0	; () banked
  8512  001BE0  5D6E               	subwf	(_outPipes+4)& (0+255),w,b
  8513  001BE2  0E00               	movlw	0
  8514  001BE4  596F               	subwfb	(_outPipes+5)& (0+255),w,b
  8515  001BE6  B0D8               	btfsc	status,0,c
  8516  001BE8  D003               	goto	l4256
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;usb_device.c: 1869: {
  8520                           ;usb_device.c: 1870: byteToRead = outPipes[0].wCount.Val;
  8521  001BEA  C06E  F024         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
  8522  001BEE  D000               	goto	l4256
  8523  001BF0                     l4256:
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;usb_device.c: 1871: }
  8527                           ;usb_device.c: 1873: outPipes[0].wCount.Val -= byteToRead;
  8528  001BF0  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8529  001BF2  0100               	movlb	0	; () banked
  8530  001BF4  5F6E               	subwf	(_outPipes+4)& (0+255),f,b
  8531  001BF6  0E00               	movlw	0
  8532  001BF8  5B6F               	subwfb	(_outPipes+5)& (0+255),f,b
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;usb_device.c: 1877: for(i=0;i<byteToRead;i++)
  8536  001BFA  0E00               	movlw	0
  8537  001BFC  6E23               	movwf	USBCtrlTrfRxService@i,c
  8538  001BFE  D013               	goto	l4266
  8539  001C00                     l4260:
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;usb_device.c: 1878: {
  8543                           ;usb_device.c: 1879: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8544  001C00  5023               	movf	USBCtrlTrfRxService@i,w,c
  8545  001C02  0D01               	mullw	1
  8546  001C04  0E38               	movlw	56
  8547  001C06  24F3               	addwf	prodl,w,c
  8548  001C08  6ED9               	movwf	fsr2l,c
  8549  001C0A  0E04               	movlw	4
  8550  001C0C  20F4               	addwfc	prodh,w,c
  8551  001C0E  6EDA               	movwf	fsr2h,c
  8552  001C10  C06A  FFE1         	movff	_outPipes,fsr1l
  8553  001C14  C06B  FFE2         	movff	_outPipes+1,fsr1h
  8554  001C18  CFDF FFE7          	movff	indf2,indf1
  8555                           
  8556                           ; BSR set to: 0
  8557  001C1C  0100               	movlb	0	; () banked
  8558  001C1E  4B6A               	infsnz	_outPipes& (0+255),f,b
  8559  001C20  2B6B               	incf	(_outPipes+1)& (0+255),f,b
  8560                           
  8561                           ; BSR set to: 0
  8562  001C22  2A23               	incf	USBCtrlTrfRxService@i,f,c
  8563  001C24  D000               	goto	l4266
  8564  001C26                     l4266:
  8565                           
  8566                           ; BSR set to: 0
  8567  001C26  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8568  001C28  5C23               	subwf	USBCtrlTrfRxService@i,w,c
  8569  001C2A  A0D8               	btfss	status,0,c
  8570  001C2C  D7E9               	goto	l4260
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;usb_device.c: 1880: }
  8574                           ;usb_device.c: 1884: if(outPipes[0].wCount.Val > 0)
  8575                           
  8576                           ; BSR set to: 0
  8577  001C2E  0100               	movlb	0	; () banked
  8578  001C30  516E               	movf	(_outPipes+4)& (0+255),w,b
  8579  001C32  0100               	movlb	0	; () banked
  8580  001C34  116F               	iorwf	(_outPipes+5)& (0+255),w,b
  8581  001C36  B4D8               	btfsc	status,2,c
  8582  001C38  D02D               	goto	l4282
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;usb_device.c: 1885: {
  8586                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->CNT = 8;
  8587  001C3A  EE20 F001          	lfsr	2,1
  8588  001C3E  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8589  001C40  26D9               	addwf	fsr2l,f,c
  8590  001C42  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8591  001C44  22DA               	addwfc	fsr2h,f,c
  8592  001C46  0E08               	movlw	8
  8593  001C48  6EDF               	movwf	indf2,c
  8594                           
  8595                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  8596  001C4A  EE20 F002          	lfsr	2,2
  8597  001C4E  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8598  001C50  26D9               	addwf	fsr2l,f,c
  8599  001C52  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8600  001C54  22DA               	addwfc	fsr2h,f,c
  8601  001C56  0E38               	movlw	56
  8602  001C58  6EDE               	movwf	postinc2,c
  8603  001C5A  0E04               	movlw	4
  8604  001C5C  6EDD               	movwf	postdec2,c
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;usb_device.c: 1888: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8608  001C5E  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8609  001C62  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8610  001C66  BCDF               	btfsc	indf2,6,c
  8611  001C68  D00D               	goto	l4278
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;usb_device.c: 1889: {
  8615                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8616  001C6A  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8617  001C6E  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8618  001C72  0E48               	movlw	72
  8619  001C74  D00C               	goto	L16
  8620  001C76                     l4276:
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;usb_device.c: 1891: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8624  001C76  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8625  001C7A  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8626  001C7E  0E00               	movlw	0
  8627  001C80  8EDB               	bsf	plusw2,7,c
  8628                           
  8629                           ;usb_device.c: 1892: }
  8630  001C82  D02F               	goto	l250
  8631  001C84                     l4278:
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;usb_device.c: 1893: else
  8635                           ;usb_device.c: 1894: {
  8636                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8637  001C84  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8638  001C88  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8639  001C8C  0E08               	movlw	8
  8640  001C8E                     L16:
  8641  001C8E  6EDF               	movwf	indf2,c
  8642  001C90  D7F2               	goto	l4276
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;usb_device.c: 1897: }
  8646                           ;usb_device.c: 1898: }
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;usb_device.c: 1896: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8650  001C92  D027               	goto	l250
  8651  001C94                     l4282:
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;usb_device.c: 1899: else
  8655                           ;usb_device.c: 1900: {
  8656                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->CNT = 8;
  8657  001C94  EE20 F001          	lfsr	2,1
  8658  001C98  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8659  001C9A  26D9               	addwf	fsr2l,f,c
  8660  001C9C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8661  001C9E  22DA               	addwfc	fsr2h,f,c
  8662  001CA0  0E08               	movlw	8
  8663  001CA2  6EDF               	movwf	indf2,c
  8664                           
  8665                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8666  001CA4  EE20 F002          	lfsr	2,2
  8667  001CA8  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8668  001CAA  26D9               	addwf	fsr2l,f,c
  8669  001CAC  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8670  001CAE  22DA               	addwfc	fsr2h,f,c
  8671  001CB0  0E30               	movlw	48
  8672  001CB2  6EDE               	movwf	postinc2,c
  8673  001CB4  0E04               	movlw	4
  8674  001CB6  6EDD               	movwf	postdec2,c
  8675                           
  8676                           ; BSR set to: 0
  8677                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8678  001CB8  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8679  001CBC  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8680  001CC0  0E04               	movlw	4
  8681  001CC2  6EDF               	movwf	indf2,c
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8685  001CC4  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8686  001CC8  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8687  001CCC  0E00               	movlw	0
  8688  001CCE  8EDB               	bsf	plusw2,7,c
  8689  001CD0  D000               	goto	l248
  8690  001CD2                     l248:
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;usb_device.c: 1929: }
  8694                           ;usb_device.c: 1930: outPipes[0].info.bits.busy = 0;
  8695  001CD2  0100               	movlb	0	; () banked
  8696  001CD4  9F6D               	bcf	(_outPipes+3)& (0+255),7,b
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;usb_device.c: 1944: if(USBDeferStatusStagePacket == 0)
  8700  001CD6  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  8701  001CD8  A4D8               	btfss	status,2,c
  8702  001CDA  D003               	goto	l250
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;usb_device.c: 1945: {
  8706                           ;usb_device.c: 1946: USBCtrlEPAllowStatusStage();
  8707  001CDC  EC9D  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8708  001CE0  D000               	goto	l250
  8709  001CE2                     l250:
  8710  001CE2  0012               	return		;funcret
  8711  001CE4                     __end_of_USBCtrlTrfRxService:
  8712                           	opt stack 0
  8713                           tblptru	equ	0xFF8
  8714                           tblptrh	equ	0xFF7
  8715                           tblptrl	equ	0xFF6
  8716                           tablat	equ	0xFF5
  8717                           prodh	equ	0xFF4
  8718                           prodl	equ	0xFF3
  8719                           intcon	equ	0xFF2
  8720                           postinc0	equ	0xFEE
  8721                           wreg	equ	0xFE8
  8722                           indf1	equ	0xFE7
  8723                           postdec1	equ	0xFE5
  8724                           fsr1h	equ	0xFE2
  8725                           fsr1l	equ	0xFE1
  8726                           indf2	equ	0xFDF
  8727                           postinc2	equ	0xFDE
  8728                           postdec2	equ	0xFDD
  8729                           plusw2	equ	0xFDB
  8730                           fsr2h	equ	0xFDA
  8731                           fsr2l	equ	0xFD9
  8732                           status	equ	0xFD8
  8733                           
  8734 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8735 ;; Defined at:
  8736 ;;		line 1419 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;		None
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;		None               void
  8743 ;; Registers used:
  8744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8753 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8754 ;;Total ram usage:        0 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    4
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_USBDeviceTasks
  8761 ;;		_USBCtrlEPServiceComplete
  8762 ;;		_USBCtrlTrfRxService
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text31
  8767  00233A                     __ptext31:
  8768                           	opt stack 0
  8769  00233A                     _USBCtrlEPAllowStatusStage:
  8770                           	opt stack 21
  8771                           
  8772                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag1 == 0)
  8773                           
  8774                           ;incstack = 0
  8775  00233A  504F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  8776  00233C  A4D8               	btfss	status,2,c
  8777  00233E  D060               	goto	l198
  8778                           
  8779                           ;usb_device.c: 1427: {
  8780                           ;usb_device.c: 1428: USBStatusStageEnabledFlag1 = 1;
  8781  002340  0E01               	movlw	1
  8782  002342  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8783                           
  8784                           ;usb_device.c: 1429: if(USBStatusStageEnabledFlag2 == 0)
  8785  002344  5050               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  8786  002346  A4D8               	btfss	status,2,c
  8787  002348  D05B               	goto	l198
  8788                           
  8789                           ;usb_device.c: 1430: {
  8790                           ;usb_device.c: 1431: USBStatusStageEnabledFlag2 = 1;
  8791  00234A  0E01               	movlw	1
  8792  00234C  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8793                           
  8794                           ;usb_device.c: 1435: if(controlTransferState == 2)
  8795  00234E  0E02               	movlw	2
  8796  002350  1854               	xorwf	_controlTransferState,w,c
  8797  002352  A4D8               	btfss	status,2,c
  8798  002354  D015               	goto	l3976
  8799                           
  8800                           ;usb_device.c: 1436: {
  8801                           ;usb_device.c: 1437: pBDTEntryIn[0]->CNT = 0;
  8802  002356  EE20 F001          	lfsr	2,1
  8803  00235A  503E               	movf	_pBDTEntryIn,w,c
  8804  00235C  26D9               	addwf	fsr2l,f,c
  8805  00235E  503F               	movf	_pBDTEntryIn+1,w,c
  8806  002360  22DA               	addwfc	fsr2h,f,c
  8807  002362  0E00               	movlw	0
  8808  002364  6EDF               	movwf	indf2,c
  8809                           
  8810                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8811  002366  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8812  00236A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8813  00236E  0E48               	movlw	72
  8814  002370  6EDF               	movwf	indf2,c
  8815                           
  8816                           ;usb_device.c: 1439: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8817  002372  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8818  002376  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8819  00237A  0E00               	movlw	0
  8820  00237C  8EDB               	bsf	plusw2,7,c
  8821                           
  8822                           ;usb_device.c: 1440: }
  8823  00237E  D040               	goto	l198
  8824  002380                     l3976:
  8825                           
  8826                           ;usb_device.c: 1441: else if(controlTransferState == 1)
  8827  002380  0454               	decf	_controlTransferState,w,c
  8828  002382  A4D8               	btfss	status,2,c
  8829  002384  D03D               	goto	l198
  8830                           
  8831                           ;usb_device.c: 1442: {
  8832                           ;usb_device.c: 1443: BothEP0OutUOWNsSet = 0;
  8833  002386  0E00               	movlw	0
  8834  002388  0100               	movlb	0	; () banked
  8835  00238A  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->CNT = 8;
  8839  00238C  EE20 F001          	lfsr	2,1
  8840  002390  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8841  002392  26D9               	addwf	fsr2l,f,c
  8842  002394  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8843  002396  22DA               	addwfc	fsr2h,f,c
  8844  002398  0E08               	movlw	8
  8845  00239A  6EDF               	movwf	indf2,c
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  8849  00239C  EE20 F002          	lfsr	2,2
  8850  0023A0  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8851  0023A2  26D9               	addwf	fsr2l,f,c
  8852  0023A4  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8853  0023A6  22DA               	addwfc	fsr2h,f,c
  8854  0023A8  0E30               	movlw	48
  8855  0023AA  6EDE               	movwf	postinc2,c
  8856  0023AC  0E04               	movlw	4
  8857  0023AE  6EDD               	movwf	postdec2,c
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8861  0023B0  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8862  0023B4  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8863  0023B8  0E04               	movlw	4
  8864  0023BA  6EDF               	movwf	indf2,c
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;usb_device.c: 1451: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8868  0023BC  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8869  0023C0  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8870  0023C4  0E00               	movlw	0
  8871  0023C6  8EDB               	bsf	plusw2,7,c
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;usb_device.c: 1452: BothEP0OutUOWNsSet = 1;
  8875  0023C8  0E01               	movlw	1
  8876  0023CA  0100               	movlb	0	; () banked
  8877  0023CC  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->CNT = 8;
  8881  0023CE  EE20 F001          	lfsr	2,1
  8882  0023D2  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8883  0023D4  26D9               	addwf	fsr2l,f,c
  8884  0023D6  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8885  0023D8  22DA               	addwfc	fsr2h,f,c
  8886  0023DA  0E08               	movlw	8
  8887  0023DC  6EDF               	movwf	indf2,c
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8891  0023DE  EE20 F002          	lfsr	2,2
  8892  0023E2  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8893  0023E4  26D9               	addwf	fsr2l,f,c
  8894  0023E6  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8895  0023E8  22DA               	addwfc	fsr2h,f,c
  8896  0023EA  0E30               	movlw	48
  8897  0023EC  6EDE               	movwf	postinc2,c
  8898  0023EE  0E04               	movlw	4
  8899  0023F0  6EDD               	movwf	postdec2,c
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;usb_device.c: 1458: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8903  0023F2  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8904  0023F6  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8905  0023FA  0E80               	movlw	128
  8906  0023FC  6EDF               	movwf	indf2,c
  8907                           
  8908                           ; BSR set to: 0
  8909                           
  8910                           ; BSR set to: 0
  8911                           
  8912                           ; BSR set to: 0
  8913  0023FE  D000               	goto	l198
  8914  002400                     l198:
  8915  002400  0012               	return		;funcret
  8916  002402                     __end_of_USBCtrlEPAllowStatusStage:
  8917                           	opt stack 0
  8918                           tblptru	equ	0xFF8
  8919                           tblptrh	equ	0xFF7
  8920                           tblptrl	equ	0xFF6
  8921                           tablat	equ	0xFF5
  8922                           prodh	equ	0xFF4
  8923                           prodl	equ	0xFF3
  8924                           intcon	equ	0xFF2
  8925                           postinc0	equ	0xFEE
  8926                           wreg	equ	0xFE8
  8927                           indf1	equ	0xFE7
  8928                           postdec1	equ	0xFE5
  8929                           fsr1h	equ	0xFE2
  8930                           fsr1l	equ	0xFE1
  8931                           indf2	equ	0xFDF
  8932                           postinc2	equ	0xFDE
  8933                           postdec2	equ	0xFDD
  8934                           plusw2	equ	0xFDB
  8935                           fsr2h	equ	0xFDA
  8936                           fsr2l	equ	0xFD9
  8937                           status	equ	0xFD8
  8938                           
  8939 ;; *************** function _USBCtrlTrfInHandler *****************
  8940 ;; Defined at:
  8941 ;;		line 2598 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;  lastDTS         1   35[COMRAM] unsigned char 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;		None               void
  8948 ;; Registers used:
  8949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0
  8956 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8958 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8959 ;;Total ram usage:        1 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    5
  8962 ;; This function calls:
  8963 ;;		_USBCtrlTrfTxService
  8964 ;; This function is called by:
  8965 ;;		_USBCtrlEPService
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text32
  8970  002582                     __ptext32:
  8971                           	opt stack 0
  8972  002582                     _USBCtrlTrfInHandler:
  8973                           	opt stack 22
  8974                           
  8975                           ;usb_device.c: 2600: uint8_t lastDTS;
  8976                           ;usb_device.c: 2602: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  8977                           
  8978                           ;incstack = 0
  8979  002582  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8980  002586  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8981  00258A  0E00               	movlw	0
  8982  00258C  BCDF               	btfsc	indf2,6,c
  8983  00258E  0E01               	movlw	1
  8984  002590  6E24               	movwf	USBCtrlTrfInHandler@lastDTS,c
  8985                           
  8986                           ;usb_device.c: 2605: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8987  002592  0E04               	movlw	4
  8988  002594  1A3E               	xorwf	_pBDTEntryIn,f,c
  8989                           
  8990                           ;usb_device.c: 2610: if(USBDeviceState == ADR_PENDING_STATE)
  8991  002596  0E08               	movlw	8
  8992  002598  0100               	movlb	0	; () banked
  8993  00259A  1997               	xorwf	_USBDeviceState& (0+255),w,b
  8994  00259C  A4D8               	btfss	status,2,c
  8995  00259E  D015               	goto	l4392
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;usb_device.c: 2611: {
  8999                           ;usb_device.c: 2612: *U1ADDR_R = (SetupPkt.bDevADR & 0x7F);
  9000  0025A0  0104               	movlb	4	; () banked
  9001  0025A2  5132               	movf	50,w,b	;volatile
  9002  0025A4  0B7F               	andlw	127
  9003  0025A6  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
  9004  0025AA  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
  9005  0025AE  6EDF               	movwf	indf2,c
  9006                           
  9007                           ; BSR set to: 4
  9008                           ;usb_device.c: 2613: if(*U1ADDR_R != 0u)
  9009  0025B0  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
  9010  0025B4  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
  9011  0025B8  50DF               	movf	indf2,w,c
  9012  0025BA  B4D8               	btfsc	status,2,c
  9013  0025BC  D002               	goto	l4390
  9014                           
  9015                           ; BSR set to: 4
  9016                           ;usb_device.c: 2614: {
  9017                           ;usb_device.c: 2615: USBDeviceState=ADDRESS_STATE;
  9018  0025BE  0E10               	movlw	16
  9019  0025C0  D001               	goto	L17
  9020  0025C2                     l4390:
  9021                           
  9022                           ;usb_device.c: 2617: else
  9023                           ;usb_device.c: 2618: {
  9024                           ;usb_device.c: 2619: USBDeviceState=DEFAULT_STATE;
  9025  0025C2  0E04               	movlw	4
  9026  0025C4                     L17:
  9027  0025C4  0100               	movlb	0	; () banked
  9028  0025C6  6F97               	movwf	_USBDeviceState& (0+255),b
  9029                           
  9030                           ; BSR set to: 0
  9031  0025C8  D000               	goto	l4392
  9032  0025CA                     l4392:
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;usb_device.c: 2620: }
  9036                           ;usb_device.c: 2621: }
  9037                           ;usb_device.c: 2624: if(controlTransferState == 1)
  9038  0025CA  0454               	decf	_controlTransferState,w,c
  9039  0025CC  A4D8               	btfss	status,2,c
  9040  0025CE  D02F               	goto	l325
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;usb_device.c: 2625: {
  9044                           ;usb_device.c: 2626: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
  9045  0025D0  EE20 F002          	lfsr	2,2
  9046  0025D4  503E               	movf	_pBDTEntryIn,w,c
  9047  0025D6  26D9               	addwf	fsr2l,f,c
  9048  0025D8  503F               	movf	_pBDTEntryIn+1,w,c
  9049  0025DA  22DA               	addwfc	fsr2h,f,c
  9050  0025DC  0E38               	movlw	56
  9051  0025DE  6EDE               	movwf	postinc2,c
  9052  0025E0  0E04               	movlw	4
  9053  0025E2  6EDD               	movwf	postdec2,c
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;usb_device.c: 2627: USBCtrlTrfTxService();
  9057  0025E4  ECC0  F010         	call	_USBCtrlTrfTxService	;wreg free
  9058                           
  9059                           ;usb_device.c: 2633: if(shortPacketStatus == 2)
  9060  0025E8  0E02               	movlw	2
  9061  0025EA  1855               	xorwf	_shortPacketStatus,w,c
  9062  0025EC  A4D8               	btfss	status,2,c
  9063  0025EE  D00D               	goto	l4404
  9064                           
  9065                           ;usb_device.c: 2634: {
  9066                           ;usb_device.c: 2637: pBDTEntryIn[0]->STAT.Val = 0x04;
  9067  0025F0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9068  0025F4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9069  0025F8  0E04               	movlw	4
  9070  0025FA  D016               	goto	L19
  9071  0025FC                     l4402:
  9072                           
  9073                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9074  0025FC  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9075  002600  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9076  002604  0E00               	movlw	0
  9077  002606  8EDB               	bsf	plusw2,7,c
  9078                           
  9079                           ;usb_device.c: 2639: }
  9080  002608  D01B               	goto	l333
  9081  00260A                     l4404:
  9082                           
  9083                           ;usb_device.c: 2640: else
  9084                           ;usb_device.c: 2641: {
  9085                           ;usb_device.c: 2642: if(lastDTS == 0)
  9086  00260A  5024               	movf	USBCtrlTrfInHandler@lastDTS,w,c
  9087  00260C  A4D8               	btfss	status,2,c
  9088  00260E  D007               	goto	l4410
  9089                           
  9090                           ;usb_device.c: 2643: {
  9091                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9092  002610  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9093  002614  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9094  002618  0E48               	movlw	72
  9095  00261A  D006               	goto	L19
  9096  00261C  D7EF               	goto	l4402
  9097  00261E                     l4410:
  9098                           
  9099                           ;usb_device.c: 2647: else
  9100                           ;usb_device.c: 2648: {
  9101                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9102  00261E  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9103  002622  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9104  002626  0E08               	movlw	8
  9105  002628                     L19:
  9106  002628  6EDF               	movwf	indf2,c
  9107  00262A  D7E8               	goto	l4402
  9108                           
  9109                           ;usb_device.c: 2651: }
  9110                           ;usb_device.c: 2652: }
  9111                           ;usb_device.c: 2653: }
  9112                           
  9113                           ;usb_device.c: 2650: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9114  00262C  D009               	goto	l333
  9115  00262E                     l325:
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;usb_device.c: 2654: else
  9119                           ;usb_device.c: 2655: {
  9120                           ;usb_device.c: 2659: if(outPipes[0].info.bits.busy == 1)
  9121  00262E  0100               	movlb	0	; () banked
  9122  002630  AF6D               	btfss	(_outPipes+3)& (0+255),7,b
  9123  002632  D003               	goto	l4416
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;usb_device.c: 2664: }
  9127                           ;usb_device.c: 2665: outPipes[0].info.bits.busy = 0;
  9128                           
  9129                           ; BSR set to: 0
  9130  002634  0100               	movlb	0	; () banked
  9131  002636  9F6D               	bcf	(_outPipes+3)& (0+255),7,b
  9132  002638  D000               	goto	l4416
  9133  00263A                     l4416:
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;usb_device.c: 2666: }
  9137                           ;usb_device.c: 2668: controlTransferState = 0;
  9138  00263A  0E00               	movlw	0
  9139  00263C  6E54               	movwf	_controlTransferState,c
  9140  00263E  D000               	goto	l333
  9141  002640                     l333:
  9142  002640  0012               	return		;funcret
  9143  002642                     __end_of_USBCtrlTrfInHandler:
  9144                           	opt stack 0
  9145                           tblptru	equ	0xFF8
  9146                           tblptrh	equ	0xFF7
  9147                           tblptrl	equ	0xFF6
  9148                           tablat	equ	0xFF5
  9149                           prodh	equ	0xFF4
  9150                           prodl	equ	0xFF3
  9151                           intcon	equ	0xFF2
  9152                           postinc0	equ	0xFEE
  9153                           wreg	equ	0xFE8
  9154                           indf1	equ	0xFE7
  9155                           postdec1	equ	0xFE5
  9156                           fsr1h	equ	0xFE2
  9157                           fsr1l	equ	0xFE1
  9158                           indf2	equ	0xFDF
  9159                           postinc2	equ	0xFDE
  9160                           postdec2	equ	0xFDD
  9161                           plusw2	equ	0xFDB
  9162                           fsr2h	equ	0xFDA
  9163                           fsr2l	equ	0xFD9
  9164                           status	equ	0xFD8
  9165                           
  9166 ;; *************** function _USBCtrlTrfTxService *****************
  9167 ;; Defined at:
  9168 ;;		line 1774 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;		None
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  byteToSend      1   34[COMRAM] unsigned char 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;		None               void
  9175 ;; Registers used:
  9176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9182 ;;      Params:         0       0       0       0       0       0       0       0       0
  9183 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9185 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9186 ;;Total ram usage:        1 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    4
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		_USBCtrlEPAllowDataStage
  9193 ;;		_USBCtrlTrfInHandler
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text33
  9198  002180                     __ptext33:
  9199                           	opt stack 0
  9200  002180                     _USBCtrlTrfTxService:
  9201                           	opt stack 20
  9202                           
  9203                           ;usb_device.c: 1776: uint8_t byteToSend;
  9204                           ;usb_device.c: 1780: byteToSend = 8;
  9205                           
  9206                           ;incstack = 0
  9207  002180  0E08               	movlw	8
  9208  002182  6E23               	movwf	USBCtrlTrfTxService@byteToSend,c
  9209                           
  9210                           ;usb_device.c: 1781: if(inPipes[0].wCount.Val < (uint8_t)8)
  9211  002184  505B               	movf	_inPipes+5,w,c
  9212  002186  E111               	bnz	l3932
  9213  002188  0E08               	movlw	8
  9214  00218A  5C5A               	subwf	_inPipes+4,w,c
  9215  00218C  B0D8               	btfsc	status,0,c
  9216  00218E  D00D               	goto	l3932
  9217                           
  9218                           ;usb_device.c: 1782: {
  9219                           ;usb_device.c: 1783: byteToSend = inPipes[0].wCount.Val;
  9220  002190  C05A  F023         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
  9221                           
  9222                           ;usb_device.c: 1790: if(shortPacketStatus == 0)
  9223  002194  5055               	movf	_shortPacketStatus,w,c
  9224  002196  A4D8               	btfss	status,2,c
  9225  002198  D002               	goto	l3928
  9226                           
  9227                           ;usb_device.c: 1791: {
  9228                           ;usb_device.c: 1792: shortPacketStatus = 1;
  9229  00219A  0E01               	movlw	1
  9230  00219C  D004               	goto	L20
  9231  00219E                     l3928:
  9232                           
  9233                           ;usb_device.c: 1794: else if(shortPacketStatus == 1)
  9234  00219E  0455               	decf	_shortPacketStatus,w,c
  9235  0021A0  A4D8               	btfss	status,2,c
  9236  0021A2  D003               	goto	l3932
  9237                           
  9238                           ;usb_device.c: 1795: {
  9239                           ;usb_device.c: 1796: shortPacketStatus = 2;
  9240  0021A4  0E02               	movlw	2
  9241  0021A6                     L20:
  9242  0021A6  6E55               	movwf	_shortPacketStatus,c
  9243  0021A8  D000               	goto	l3932
  9244  0021AA                     l3932:
  9245                           
  9246                           ;usb_device.c: 1797: }
  9247                           ;usb_device.c: 1798: }
  9248                           ;usb_device.c: 1802: inPipes[0].wCount.Val -= byteToSend;
  9249  0021AA  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9250  0021AC  5E5A               	subwf	_inPipes+4,f,c
  9251  0021AE  0E00               	movlw	0
  9252  0021B0  5A5B               	subwfb	_inPipes+5,f,c
  9253                           
  9254                           ;usb_device.c: 1807: pBDTEntryIn[0]->CNT = byteToSend;
  9255  0021B2  EE20 F001          	lfsr	2,1
  9256  0021B6  503E               	movf	_pBDTEntryIn,w,c
  9257  0021B8  26D9               	addwf	fsr2l,f,c
  9258  0021BA  503F               	movf	_pBDTEntryIn+1,w,c
  9259  0021BC  22DA               	addwfc	fsr2h,f,c
  9260  0021BE  C023  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
  9261                           
  9262                           ;usb_device.c: 1811: pDst = ( uint8_t*)CtrlTrfData;
  9263  0021C2  0E38               	movlw	56
  9264  0021C4  0100               	movlb	0	; () banked
  9265  0021C6  6F8C               	movwf	_pDst& (0+255),b
  9266  0021C8  0E04               	movlw	4
  9267  0021CA  0100               	movlb	0	; () banked
  9268  0021CC  6F8D               	movwf	(_pDst+1)& (0+255),b
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;usb_device.c: 1812: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9272  0021CE  A059               	btfss	_inPipes+3,0,c
  9273  0021D0  D01E               	goto	l3950
  9274  0021D2  D03F               	goto	l3960
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;usb_device.c: 1813: {
  9278                           ;usb_device.c: 1814: while(byteToSend)
  9279  0021D4  D01C               	goto	l3950
  9280  0021D6                     l3942:
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;usb_device.c: 1815: {
  9284                           ;usb_device.c: 1816: *pDst++ = *inPipes[0].pSrc.bRom++;
  9285  0021D6  C056  FFF6         	movff	_inPipes,tblptrl
  9286  0021DA  C057  FFF7         	movff	_inPipes+1,tblptrh
  9287  0021DE  6AF8               	clrf	tblptru,c
  9288  0021E0  C08C  FFD9         	movff	_pDst,fsr2l
  9289  0021E4  C08D  FFDA         	movff	_pDst+1,fsr2h
  9290  0021E8  0E07               	movlw	(high __ramtop+-1)
  9291  0021EA  64F7               	cpfsgt	tblptrh,c
  9292  0021EC  D003               	bra	u2617
  9293  0021EE  0008               	tblrd		*
  9294  0021F0  50F5               	movf	tablat,w,c
  9295  0021F2  D005               	bra	u2610
  9296  0021F4                     u2617:
  9297  0021F4  CFF6 FFE1          	movff	tblptrl,fsr1l
  9298  0021F8  CFF7 FFE2          	movff	tblptrh,fsr1h
  9299  0021FC  50E7               	movf	indf1,w,c
  9300  0021FE                     u2610:
  9301  0021FE  6EDF               	movwf	indf2,c
  9302  002200  4A56               	infsnz	_inPipes,f,c
  9303  002202  2A57               	incf	_inPipes+1,f,c
  9304  002204  0100               	movlb	0	; () banked
  9305  002206  4B8C               	infsnz	_pDst& (0+255),f,b
  9306  002208  2B8D               	incf	(_pDst+1)& (0+255),f,b
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;usb_device.c: 1817: byteToSend--;
  9310  00220A  0623               	decf	USBCtrlTrfTxService@byteToSend,f,c
  9311  00220C  D000               	goto	l3950
  9312  00220E                     l3950:
  9313                           
  9314                           ; BSR set to: 0
  9315  00220E  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9316  002210  B4D8               	btfsc	status,2,c
  9317  002212  D024               	goto	l237
  9318  002214  D7E0               	goto	l3942
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;usb_device.c: 1818: }
  9322                           ;usb_device.c: 1819: }
  9323  002216  D022               	goto	l237
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;usb_device.c: 1820: else
  9327                           ;usb_device.c: 1821: {
  9328                           ;usb_device.c: 1822: while(byteToSend)
  9329  002218  D01C               	goto	l3960
  9330  00221A                     l3952:
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;usb_device.c: 1823: {
  9334                           ;usb_device.c: 1824: *pDst++ = *inPipes[0].pSrc.bRam++;
  9335  00221A  C056  FFF6         	movff	_inPipes,tblptrl
  9336  00221E  C057  FFF7         	movff	_inPipes+1,tblptrh
  9337  002222  6AF8               	clrf	tblptru,c
  9338  002224  C08C  FFD9         	movff	_pDst,fsr2l
  9339  002228  C08D  FFDA         	movff	_pDst+1,fsr2h
  9340  00222C  0E07               	movlw	(high __ramtop+-1)
  9341  00222E  64F7               	cpfsgt	tblptrh,c
  9342  002230  D003               	bra	u2637
  9343  002232  0008               	tblrd		*
  9344  002234  50F5               	movf	tablat,w,c
  9345  002236  D005               	bra	u2630
  9346  002238                     u2637:
  9347  002238  CFF6 FFE1          	movff	tblptrl,fsr1l
  9348  00223C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9349  002240  50E7               	movf	indf1,w,c
  9350  002242                     u2630:
  9351  002242  6EDF               	movwf	indf2,c
  9352  002244  4A56               	infsnz	_inPipes,f,c
  9353  002246  2A57               	incf	_inPipes+1,f,c
  9354  002248  0100               	movlb	0	; () banked
  9355  00224A  4B8C               	infsnz	_pDst& (0+255),f,b
  9356  00224C  2B8D               	incf	(_pDst+1)& (0+255),f,b
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;usb_device.c: 1825: byteToSend--;
  9360  00224E  0623               	decf	USBCtrlTrfTxService@byteToSend,f,c
  9361  002250  D000               	goto	l3960
  9362  002252                     l3960:
  9363                           
  9364                           ; BSR set to: 0
  9365  002252  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9366  002254  B4D8               	btfsc	status,2,c
  9367  002256  D002               	goto	l237
  9368  002258  D7E0               	goto	l3952
  9369                           
  9370                           ; BSR set to: 0
  9371  00225A  D000               	goto	l237
  9372  00225C                     l237:
  9373                           
  9374                           ; BSR set to: 0
  9375  00225C  0012               	return		;funcret
  9376  00225E                     __end_of_USBCtrlTrfTxService:
  9377                           	opt stack 0
  9378                           tblptru	equ	0xFF8
  9379                           tblptrh	equ	0xFF7
  9380                           tblptrl	equ	0xFF6
  9381                           tablat	equ	0xFF5
  9382                           prodh	equ	0xFF4
  9383                           prodl	equ	0xFF3
  9384                           intcon	equ	0xFF2
  9385                           postinc0	equ	0xFEE
  9386                           wreg	equ	0xFE8
  9387                           indf1	equ	0xFE7
  9388                           postdec1	equ	0xFE5
  9389                           fsr1h	equ	0xFE2
  9390                           fsr1l	equ	0xFE1
  9391                           indf2	equ	0xFDF
  9392                           postinc2	equ	0xFDE
  9393                           postdec2	equ	0xFDD
  9394                           plusw2	equ	0xFDB
  9395                           fsr2h	equ	0xFDA
  9396                           fsr2l	equ	0xFD9
  9397                           status	equ	0xFD8
  9398                           
  9399 ;; *************** function _USBClearUSBInterrupt *****************
  9400 ;; Defined at:
  9401 ;;		line 23 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;		None               void
  9408 ;; Registers used:
  9409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9415 ;;      Params:         0       0       0       0       0       0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9419 ;;Total ram usage:        0 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    4
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_USBDeviceTasks
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text34
  9430  0031DC                     __ptext34:
  9431                           	opt stack 0
  9432  0031DC                     _USBClearUSBInterrupt:
  9433                           	opt stack 24
  9434                           
  9435                           ;usb_hal_fixes.c: 24: if (pic18_devid == 0x02E0) {
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;incstack = 0
  9439  0031DC  0EE0               	movlw	224
  9440  0031DE  0100               	movlb	0	; () banked
  9441  0031E0  19F1               	xorwf	_pic18_devid& (0+255),w,b
  9442  0031E2  E10B               	bnz	l4512
  9443  0031E4  0E02               	movlw	2
  9444  0031E6  0100               	movlb	0	; () banked
  9445  0031E8  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
  9446  0031EA  A4D8               	btfss	status,2,c
  9447  0031EC  D006               	goto	l4512
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;usb_hal_fixes.c: 25: *PIR3_R &= 0b11111011;
  9451  0031EE  C0C5  FFD9         	movff	_PIR3_R,fsr2l
  9452  0031F2  C0C6  FFDA         	movff	_PIR3_R+1,fsr2h
  9453  0031F6  0EFB               	movlw	251
  9454  0031F8  D005               	goto	L21
  9455  0031FA                     l4512:
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;usb_hal_fixes.c: 27: *PIR2_R &= 0b11011111;
  9459  0031FA  C0C3  FFD9         	movff	_PIR2_R,fsr2l
  9460  0031FE  C0C4  FFDA         	movff	_PIR2_R+1,fsr2h
  9461  003202  0EDF               	movlw	223
  9462  003204                     L21:
  9463  003204  16DF               	andwf	indf2,f,c
  9464  003206  D000               	goto	l1050
  9465  003208                     l1050:
  9466                           
  9467                           ; BSR set to: 0
  9468  003208  0012               	return		;funcret
  9469  00320A                     __end_of_USBClearUSBInterrupt:
  9470                           	opt stack 0
  9471                           tblptru	equ	0xFF8
  9472                           tblptrh	equ	0xFF7
  9473                           tblptrl	equ	0xFF6
  9474                           tablat	equ	0xFF5
  9475                           prodh	equ	0xFF4
  9476                           prodl	equ	0xFF3
  9477                           intcon	equ	0xFF2
  9478                           postinc0	equ	0xFEE
  9479                           wreg	equ	0xFE8
  9480                           indf1	equ	0xFE7
  9481                           postdec1	equ	0xFE5
  9482                           fsr1h	equ	0xFE2
  9483                           fsr1l	equ	0xFE1
  9484                           indf2	equ	0xFDF
  9485                           postinc2	equ	0xFDE
  9486                           postdec2	equ	0xFDD
  9487                           plusw2	equ	0xFDB
  9488                           fsr2h	equ	0xFDA
  9489                           fsr2l	equ	0xFD9
  9490                           status	equ	0xFD8
  9491                           
  9492 ;; *************** function _Read_b_eep *****************
  9493 ;; Defined at:
  9494 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\read_B.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  badd            2   34[COMRAM] unsigned int 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;		None
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      unsigned char 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9508 ;;      Params:         2       0       0       0       0       0       0       0       0
  9509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9511 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9512 ;;Total ram usage:        2 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:    4
  9515 ;; This function calls:
  9516 ;;		Nothing
  9517 ;; This function is called by:
  9518 ;;		_ProcessCDC
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text35
  9523  0033BC                     __ptext35:
  9524                           	opt stack 0
  9525  0033BC                     _Read_b_eep:
  9526                           	opt stack 24
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;incstack = 0
  9530  0033BC  C023  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  9531  0033C0  9CA6               	bcf	4006,6,c	;volatile
  9532  0033C2  9EA6               	bcf	4006,7,c	;volatile
  9533  0033C4  80A6               	bsf	4006,0,c	;volatile
  9534  0033C6  F000               	nop	
  9535  0033C8  F000               	nop	
  9536  0033CA  50A8               	movf	4008,w,c	;volatile
  9537  0033CC  D000               	goto	l1096
  9538  0033CE                     l1096:
  9539  0033CE  0012               	return		;funcret
  9540  0033D0                     __end_of_Read_b_eep:
  9541                           	opt stack 0
  9542                           tblptru	equ	0xFF8
  9543                           tblptrh	equ	0xFF7
  9544                           tblptrl	equ	0xFF6
  9545                           tablat	equ	0xFF5
  9546                           prodh	equ	0xFF4
  9547                           prodl	equ	0xFF3
  9548                           intcon	equ	0xFF2
  9549                           postinc0	equ	0xFEE
  9550                           wreg	equ	0xFE8
  9551                           indf1	equ	0xFE7
  9552                           postdec1	equ	0xFE5
  9553                           fsr1h	equ	0xFE2
  9554                           fsr1l	equ	0xFE1
  9555                           indf2	equ	0xFDF
  9556                           postinc2	equ	0xFDE
  9557                           postdec2	equ	0xFDD
  9558                           plusw2	equ	0xFDB
  9559                           fsr2h	equ	0xFDA
  9560                           fsr2l	equ	0xFD9
  9561                           status	equ	0xFD8
  9562                           
  9563 ;; *************** function _ReadADC *****************
  9564 ;; Defined at:
  9565 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;		None
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  2   34[COMRAM] int 
  9572 ;; Registers used:
  9573 ;;		wreg, status,2
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9579 ;;      Params:         2       0       0       0       0       0       0       0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9581 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9582 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9583 ;;Total ram usage:        4 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:    4
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_ProcessCDC
  9590 ;; This function uses a non-reentrant model
  9591 ;;
  9592                           
  9593                           	psect	text36
  9594  003418                     __ptext36:
  9595                           	opt stack 0
  9596  003418                     _ReadADC:
  9597                           	opt stack 24
  9598                           
  9599                           ;incstack = 0
  9600  003418  50C4               	movf	4036,w,c	;volatile
  9601  00341A  6E25               	movwf	??_ReadADC& (0+255),c
  9602  00341C  50C3               	movf	4035,w,c	;volatile
  9603  00341E  6E23               	movwf	?_ReadADC,c
  9604  003420  C025  F024         	movff	??_ReadADC,?_ReadADC+1
  9605  003424  D000               	goto	l1077
  9606  003426                     l1077:
  9607  003426  0012               	return		;funcret
  9608  003428                     __end_of_ReadADC:
  9609                           	opt stack 0
  9610                           tblptru	equ	0xFF8
  9611                           tblptrh	equ	0xFF7
  9612                           tblptrl	equ	0xFF6
  9613                           tablat	equ	0xFF5
  9614                           prodh	equ	0xFF4
  9615                           prodl	equ	0xFF3
  9616                           intcon	equ	0xFF2
  9617                           postinc0	equ	0xFEE
  9618                           wreg	equ	0xFE8
  9619                           indf1	equ	0xFE7
  9620                           postdec1	equ	0xFE5
  9621                           fsr1h	equ	0xFE2
  9622                           fsr1l	equ	0xFE1
  9623                           indf2	equ	0xFDF
  9624                           postinc2	equ	0xFDE
  9625                           postdec2	equ	0xFDD
  9626                           plusw2	equ	0xFDB
  9627                           fsr2h	equ	0xFDA
  9628                           fsr2l	equ	0xFD9
  9629                           status	equ	0xFD8
  9630                           
  9631 ;; *************** function _ConvertADC *****************
  9632 ;; Defined at:
  9633 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;		None
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;		None
  9638 ;; Return value:  Size  Location     Type
  9639 ;;		None               void
  9640 ;; Registers used:
  9641 ;;		None
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9647 ;;      Params:         0       0       0       0       0       0       0       0       0
  9648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9651 ;;Total ram usage:        0 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; Hardware stack levels required when called:    4
  9654 ;; This function calls:
  9655 ;;		Nothing
  9656 ;; This function is called by:
  9657 ;;		_ProcessCDC
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           
  9661                           	psect	text37
  9662  00343E                     __ptext37:
  9663                           	opt stack 0
  9664  00343E                     _ConvertADC:
  9665                           	opt stack 24
  9666                           
  9667                           ;incstack = 0
  9668  00343E  82C2               	bsf	4034,1,c	;volatile
  9669  003440  0012               	return		;funcret
  9670  003442                     __end_of_ConvertADC:
  9671                           	opt stack 0
  9672                           tblptru	equ	0xFF8
  9673                           tblptrh	equ	0xFF7
  9674                           tblptrl	equ	0xFF6
  9675                           tablat	equ	0xFF5
  9676                           prodh	equ	0xFF4
  9677                           prodl	equ	0xFF3
  9678                           intcon	equ	0xFF2
  9679                           postinc0	equ	0xFEE
  9680                           wreg	equ	0xFE8
  9681                           indf1	equ	0xFE7
  9682                           postdec1	equ	0xFE5
  9683                           fsr1h	equ	0xFE2
  9684                           fsr1l	equ	0xFE1
  9685                           indf2	equ	0xFDF
  9686                           postinc2	equ	0xFDE
  9687                           postdec2	equ	0xFDD
  9688                           plusw2	equ	0xFDB
  9689                           fsr2h	equ	0xFDA
  9690                           fsr2l	equ	0xFD9
  9691                           status	equ	0xFD8
  9692                           
  9693 ;; *************** function _Busy_eep *****************
  9694 ;; Defined at:
  9695 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\busy_eep.c"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;		None
  9698 ;; Auto vars:     Size  Location     Type
  9699 ;;		None
  9700 ;; Return value:  Size  Location     Type
  9701 ;;		None               void
  9702 ;; Registers used:
  9703 ;;		None
  9704 ;; Tracked objects:
  9705 ;;		On entry : 0/0
  9706 ;;		On exit  : 0/0
  9707 ;;		Unchanged: 0/0
  9708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9709 ;;      Params:         0       0       0       0       0       0       0       0       0
  9710 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9712 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9713 ;;Total ram usage:        0 bytes
  9714 ;; Hardware stack levels used:    1
  9715 ;; Hardware stack levels required when called:    4
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		_ProcessCDC
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           	psect	text38
  9724  003436                     __ptext38:
  9725                           	opt stack 0
  9726  003436                     _Busy_eep:
  9727                           	opt stack 24
  9728                           
  9729                           ;incstack = 0
  9730  003436  D000               	goto	l1082
  9731  003438                     l1082:
  9732  003438  B2A6               	btfsc	4006,1,c	;volatile
  9733  00343A  D7FE               	goto	l1082
  9734  00343C  0012               	return		;funcret
  9735  00343E                     __end_of_Busy_eep:
  9736                           	opt stack 0
  9737                           tblptru	equ	0xFF8
  9738                           tblptrh	equ	0xFF7
  9739                           tblptrl	equ	0xFF6
  9740                           tablat	equ	0xFF5
  9741                           prodh	equ	0xFF4
  9742                           prodl	equ	0xFF3
  9743                           intcon	equ	0xFF2
  9744                           postinc0	equ	0xFEE
  9745                           wreg	equ	0xFE8
  9746                           indf1	equ	0xFE7
  9747                           postdec1	equ	0xFE5
  9748                           fsr1h	equ	0xFE2
  9749                           fsr1l	equ	0xFE1
  9750                           indf2	equ	0xFDF
  9751                           postinc2	equ	0xFDE
  9752                           postdec2	equ	0xFDD
  9753                           plusw2	equ	0xFDB
  9754                           fsr2h	equ	0xFDA
  9755                           fsr2l	equ	0xFD9
  9756                           status	equ	0xFD8
  9757                           
  9758 ;; *************** function _BusyADC *****************
  9759 ;; Defined at:
  9760 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      unsigned char 
  9767 ;; Registers used:
  9768 ;;		wreg
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:    4
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_ProcessCDC
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text39
  9789  003428                     __ptext39:
  9790                           	opt stack 0
  9791  003428                     _BusyADC:
  9792                           	opt stack 24
  9793                           
  9794                           ;incstack = 0
  9795  003428  A2C2               	btfss	4034,1,c	;volatile
  9796  00342A  D002               	goto	u4220
  9797  00342C  0E01               	movlw	1
  9798  00342E  D002               	goto	l1065
  9799  003430                     u4220:
  9800  003430  0E00               	movlw	0
  9801  003432  D000               	goto	l1065
  9802  003434                     l1065:
  9803  003434  0012               	return		;funcret
  9804  003436                     __end_of_BusyADC:
  9805                           	opt stack 0
  9806                           tblptru	equ	0xFF8
  9807                           tblptrh	equ	0xFF7
  9808                           tblptrl	equ	0xFF6
  9809                           tablat	equ	0xFF5
  9810                           prodh	equ	0xFF4
  9811                           prodl	equ	0xFF3
  9812                           intcon	equ	0xFF2
  9813                           postinc0	equ	0xFEE
  9814                           wreg	equ	0xFE8
  9815                           indf1	equ	0xFE7
  9816                           postdec1	equ	0xFE5
  9817                           fsr1h	equ	0xFE2
  9818                           fsr1l	equ	0xFE1
  9819                           indf2	equ	0xFDF
  9820                           postinc2	equ	0xFDE
  9821                           postdec2	equ	0xFDD
  9822                           plusw2	equ	0xFDB
  9823                           fsr2h	equ	0xFDA
  9824                           fsr2l	equ	0xFD9
  9825                           status	equ	0xFD8
  9826                           
  9827 ;; *************** function _BlinkUSBStatus *****************
  9828 ;; Defined at:
  9829 ;;		line 259 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;		None               void
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9843 ;;      Params:         0       0       0       0       0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9845 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9846 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9847 ;;Total ram usage:        1 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    4
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_ProcessIO
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text40
  9858  003046                     __ptext40:
  9859                           	opt stack 0
  9860  003046                     _BlinkUSBStatus:
  9861                           	opt stack 25
  9862                           
  9863                           ;karate.c: 261: if(led_count-- == 0) {
  9864                           
  9865                           ;incstack = 0
  9866  003046  0100               	movlb	0	; () banked
  9867  003048  078A               	decf	_led_count& (0+255),f,b
  9868  00304A  A0D8               	btfss	status,0,c
  9869  00304C  078B               	decf	(_led_count+1)& (0+255),f,b
  9870  00304E  0100               	movlb	0	; () banked
  9871  003050  298A               	incf	_led_count& (0+255),w,b
  9872  003052  E11E               	bnz	l734
  9873  003054  0100               	movlb	0	; () banked
  9874  003056  298B               	incf	(_led_count+1)& (0+255),w,b
  9875  003058  A4D8               	btfss	status,2,c
  9876  00305A  D01A               	goto	l734
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;karate.c: 262: led_count = 10000U;
  9880  00305C  0E27               	movlw	39
  9881  00305E  0100               	movlb	0	; () banked
  9882  003060  6F8B               	movwf	(_led_count+1)& (0+255),b
  9883  003062  0E10               	movlw	16
  9884  003064  6F8A               	movwf	_led_count& (0+255),b
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;karate.c: 263: if ((USBDeviceState == CONFIGURED_STATE) & (UCONbits.SUSPND != 1)) {
  9888  003066  B26D               	btfsc	3949,1,c	;volatile
  9889  003068  D002               	goto	u4330
  9890  00306A  0E01               	movlw	1
  9891  00306C  D001               	goto	u4332
  9892  00306E                     u4330:
  9893  00306E  0E00               	movlw	0
  9894  003070                     u4332:
  9895  003070  6E23               	movwf	??_BlinkUSBStatus& (0+255),c
  9896  003072  0E20               	movlw	32
  9897  003074  0100               	movlb	0	; () banked
  9898  003076  1997               	xorwf	_USBDeviceState& (0+255),w,b
  9899  003078  A4D8               	btfss	status,2,c
  9900  00307A  D002               	goto	u4340
  9901  00307C  0E01               	movlw	1
  9902  00307E  D001               	goto	u4342
  9903  003080                     u4340:
  9904  003080  0E00               	movlw	0
  9905  003082                     u4342:
  9906  003082  1423               	andwf	??_BlinkUSBStatus,w,c
  9907  003084  A0E8               	btfss	wreg,0,c
  9908  003086  D002               	goto	l732
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;karate.c: 264: LATCbits.LATC1 = !LATCbits.LATC1;;
  9912  003088  728B               	btg	3979,1,c	;volatile
  9913                           
  9914                           ;karate.c: 265: } else {
  9915  00308A  D002               	goto	l734
  9916  00308C                     l732:
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;karate.c: 266: LATCbits.LATC1 = 0;;
  9920  00308C  928B               	bcf	3979,1,c	;volatile
  9921                           
  9922                           ; BSR set to: 0
  9923  00308E  D000               	goto	l734
  9924  003090                     l734:
  9925                           
  9926                           ; BSR set to: 0
  9927  003090  0012               	return		;funcret
  9928  003092                     __end_of_BlinkUSBStatus:
  9929                           	opt stack 0
  9930                           tblptru	equ	0xFF8
  9931                           tblptrh	equ	0xFF7
  9932                           tblptrl	equ	0xFF6
  9933                           tablat	equ	0xFF5
  9934                           prodh	equ	0xFF4
  9935                           prodl	equ	0xFF3
  9936                           intcon	equ	0xFF2
  9937                           postinc0	equ	0xFEE
  9938                           wreg	equ	0xFE8
  9939                           indf1	equ	0xFE7
  9940                           postdec1	equ	0xFE5
  9941                           fsr1h	equ	0xFE2
  9942                           fsr1l	equ	0xFE1
  9943                           indf2	equ	0xFDF
  9944                           postinc2	equ	0xFDE
  9945                           postdec2	equ	0xFDD
  9946                           plusw2	equ	0xFDB
  9947                           fsr2h	equ	0xFDA
  9948                           fsr2l	equ	0xFD9
  9949                           status	equ	0xFD8
  9950                           
  9951 ;; *************** function _InitializeSystem *****************
  9952 ;; Defined at:
  9953 ;;		line 88 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;		None
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;		None
  9958 ;; Return value:  Size  Location     Type
  9959 ;;		None               void
  9960 ;; Registers used:
  9961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9967 ;;      Params:         0       0       0       0       0       0       0       0       0
  9968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9970 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9971 ;;Total ram usage:        0 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; Hardware stack levels required when called:    7
  9974 ;; This function calls:
  9975 ;;		_OpenSPI
  9976 ;;		_USBDeviceInit
  9977 ;;		_USBRegisterFix
  9978 ;;		_readDeviceID
  9979 ;;		_tlc5947_count_channels
  9980 ;;		_tlc5947_pwm_readback
  9981 ;; This function is called by:
  9982 ;;		_main
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text41
  9987  00196A                     __ptext41:
  9988                           	opt stack 0
  9989  00196A                     _InitializeSystem:
  9990                           	opt stack 23
  9991                           
  9992                           ;karate.c: 90: DDRE &= 0x00; DDRD &= 0x00; DDRC &= 0xFF; DDRB &= 0x3F; DDRA &= 0xC3;;
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;incstack = 0
  9996  00196A  0E00               	movlw	0
  9997  00196C  6E96               	movwf	3990,c	;volatile
  9998  00196E  0E00               	movlw	0
  9999  001970  6E95               	movwf	3989,c	;volatile
 10000  001972  5094               	movf	3988,w,c	;volatile
 10001  001974  0E3F               	movlw	63
 10002  001976  1693               	andwf	3987,f,c	;volatile
 10003  001978  0EC3               	movlw	195
 10004  00197A  1692               	andwf	3986,f,c	;volatile
 10005                           
 10006                           ;karate.c: 91: LATC &= 0xF9; TRISC &= 0xF9;;
 10007  00197C  0EF9               	movlw	249
 10008  00197E  168B               	andwf	3979,f,c	;volatile
 10009  001980  0EF9               	movlw	249
 10010  001982  1694               	andwf	3988,f,c	;volatile
 10011                           
 10012                           ;karate.c: 93: readDeviceID();
 10013  001984  ECB3  F016         	call	_readDeviceID	;wreg free
 10014                           
 10015                           ;karate.c: 96: if (pic18_devid == 0x02E0) {
 10016  001988  0EE0               	movlw	224
 10017  00198A  0100               	movlb	0	; () banked
 10018  00198C  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10019  00198E  E130               	bnz	l5462
 10020  001990  0E02               	movlw	2
 10021  001992  0100               	movlb	0	; () banked
 10022  001994  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 10023  001996  A4D8               	btfss	status,2,c
 10024  001998  D02B               	goto	l5462
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;karate.c: 97: OSCTUNE = 0x80;
 10028  00199A  0E80               	movlw	128
 10029  00199C  6E9B               	movwf	3995,c	;volatile
 10030                           
 10031                           ;karate.c: 98: OSCCON = 0x70;
 10032  00199E  0E70               	movlw	112
 10033  0019A0  6ED3               	movwf	4051,c	;volatile
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;karate.c: 99: *OSCCON2_R = 0x10;
 10037  0019A2  C0BD  FFD9         	movff	_OSCCON2_R,fsr2l
 10038  0019A6  C0BE  FFDA         	movff	_OSCCON2_R+1,fsr2h
 10039  0019AA  0E10               	movlw	16
 10040  0019AC  6EDF               	movwf	indf2,c
 10041                           
 10042                           ; BSR set to: 0
 10043                           
 10044                           ;karate.c: 100: while((*OSCCON2_R & 0x80) != 0x80);
 10045  0019AE  D000               	goto	l5458
 10046  0019B0                     l5458:
 10047                           
 10048                           ; BSR set to: 0
 10049  0019B0  C0BD  FFD9         	movff	_OSCCON2_R,fsr2l
 10050  0019B4  C0BE  FFDA         	movff	_OSCCON2_R+1,fsr2h
 10051  0019B8  0100               	movlb	0	; () banked
 10052  0019BA  AEDF               	btfss	indf2,7,c
 10053  0019BC  D7F9               	goto	l5458
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;karate.c: 101: *ACTCON_R = 0x90;
 10057                           
 10058                           ; BSR set to: 0
 10059  0019BE  C0B5  FFD9         	movff	_ACTCON_R,fsr2l
 10060  0019C2  C0B6  FFDA         	movff	_ACTCON_R+1,fsr2h
 10061  0019C6  0E90               	movlw	144
 10062  0019C8  6EDF               	movwf	indf2,c
 10063                           
 10064                           ;karate.c: 102: *ANSELC_R = 0;
 10065  0019CA  C0B9  FFD9         	movff	_ANSELC_R,fsr2l
 10066  0019CE  C0BA  FFDA         	movff	_ANSELC_R+1,fsr2h
 10067  0019D2  0E00               	movlw	0
 10068  0019D4  6EDF               	movwf	indf2,c
 10069                           
 10070                           ;karate.c: 103: *ANSELA_R = 0;
 10071  0019D6  C0B7  FFD9         	movff	_ANSELA_R,fsr2l
 10072  0019DA  C0B8  FFDA         	movff	_ANSELA_R+1,fsr2h
 10073  0019DE  0E00               	movlw	0
 10074  0019E0  6EDF               	movwf	indf2,c
 10075                           
 10076                           ;karate.c: 104: *IOCB_R = 0x10;
 10077  0019E2  C0BB  FFD9         	movff	_IOCB_R,fsr2l
 10078  0019E6  C0BC  FFDA         	movff	_IOCB_R+1,fsr2h
 10079  0019EA  0E10               	movlw	16
 10080  0019EC  6EDF               	movwf	indf2,c
 10081                           
 10082                           ;karate.c: 105: } else {
 10083  0019EE  D003               	goto	l5464
 10084  0019F0                     l5462:
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;karate.c: 106: ADCON1 = 0x0F;
 10088  0019F0  0E0F               	movlw	15
 10089  0019F2  6EC1               	movwf	4033,c	;volatile
 10090  0019F4  D000               	goto	l5464
 10091  0019F6                     l5464:
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;karate.c: 107: }
 10095                           ;karate.c: 109: DDRAbits.RA1 = 1;
 10096  0019F6  8292               	bsf	3986,1,c	;volatile
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;karate.c: 110: DDRBbits.RB2 = 1;
 10100  0019F8  8493               	bsf	3987,2,c	;volatile
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;karate.c: 111: DDRBbits.RB4 = 1;
 10104  0019FA  8893               	bsf	3987,4,c	;volatile
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;karate.c: 112: TRISCbits.TRISC6 = 1;
 10108  0019FC  8C94               	bsf	3988,6,c	;volatile
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;karate.c: 115: if (pic18_devid == 0x02E0) {
 10112  0019FE  0EE0               	movlw	224
 10113  001A00  0100               	movlb	0	; () banked
 10114  001A02  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10115  001A04  E10D               	bnz	l5476
 10116  001A06  0E02               	movlw	2
 10117  001A08  0100               	movlb	0	; () banked
 10118  001A0A  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 10119  001A0C  A4D8               	btfss	status,2,c
 10120  001A0E  D008               	goto	l5476
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;karate.c: 116: OpenSPI(0b00000010, 0b00000000, 0b00000000);
 10124  001A10  0E00               	movlw	0
 10125  001A12  6E23               	movwf	OpenSPI@bus_mode,c
 10126  001A14  0E00               	movlw	0
 10127  001A16  6E24               	movwf	OpenSPI@smp_phase,c
 10128  001A18  0E02               	movlw	2
 10129  001A1A  ECCF  F017         	call	_OpenSPI
 10130                           
 10131                           ;karate.c: 117: } else {
 10132  001A1E  D005               	goto	l5478
 10133  001A20                     l5476:
 10134                           
 10135                           ;karate.c: 118: SSPSTAT = 0x40;
 10136  001A20  0E40               	movlw	64
 10137  001A22  6EC7               	movwf	4039,c	;volatile
 10138                           
 10139                           ;karate.c: 119: SSPCON1 = 0x22;
 10140  001A24  0E22               	movlw	34
 10141  001A26  6EC6               	movwf	4038,c	;volatile
 10142  001A28  D000               	goto	l5478
 10143  001A2A                     l5478:
 10144                           
 10145                           ;karate.c: 120: }
 10146                           ;karate.c: 121: TRISBbits.TRISB1 = 0;
 10147  001A2A  9293               	bcf	3987,1,c	;volatile
 10148                           
 10149                           ;karate.c: 122: TRISBbits.TRISB0 = 1;
 10150  001A2C  8093               	bsf	3987,0,c	;volatile
 10151                           
 10152                           ;karate.c: 123: TRISCbits.TRISC7 = 0;
 10153  001A2E  9E94               	bcf	3988,7,c	;volatile
 10154                           
 10155                           ;karate.c: 124: TRISBbits.TRISB3=0; TRISCbits.TRISC0=0; TRISBbits.TRISB5=0; LATBbits.LAT
      +                          B3=0; LATCbits.LATC0=1; LATBbits.LATB5=0;;
 10156  001A30  9693               	bcf	3987,3,c	;volatile
 10157  001A32  9094               	bcf	3988,0,c	;volatile
 10158  001A34  9A93               	bcf	3987,5,c	;volatile
 10159  001A36  968A               	bcf	3978,3,c	;volatile
 10160  001A38  808B               	bsf	3979,0,c	;volatile
 10161  001A3A  9A8A               	bcf	3978,5,c	;volatile
 10162                           
 10163                           ;karate.c: 126: tlc5947_count_channels();
 10164  001A3C  EC42  F016         	call	_tlc5947_count_channels	;wreg free
 10165                           
 10166                           ;karate.c: 129: if (pic18_devid != 0x0090) {
 10167  001A40  0E90               	movlw	144
 10168  001A42  0100               	movlb	0	; () banked
 10169  001A44  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10170  001A46  0100               	movlb	0	; () banked
 10171  001A48  11F2               	iorwf	(_pic18_devid+1)& (0+255),w,b
 10172  001A4A  B4D8               	btfsc	status,2,c
 10173  001A4C  D009               	goto	l5504
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;karate.c: 130: T3CON = 0x77;
 10177  001A4E  0E77               	movlw	119
 10178  001A50  6EB1               	movwf	4017,c	;volatile
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;karate.c: 131: *T3GCON_R = 0x73;
 10182  001A52  C0C7  FFD9         	movff	_T3GCON_R,fsr2l
 10183  001A56  C0C8  FFDA         	movff	_T3GCON_R+1,fsr2h
 10184  001A5A  0E73               	movlw	115
 10185  001A5C  6EDF               	movwf	indf2,c
 10186                           
 10187                           ;karate.c: 132: } else {
 10188  001A5E  D003               	goto	l5506
 10189  001A60                     l5504:
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;karate.c: 133: T3CON = 0xD1;
 10193  001A60  0ED1               	movlw	209
 10194  001A62  6EB1               	movwf	4017,c	;volatile
 10195  001A64  D000               	goto	l5506
 10196  001A66                     l5506:
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;karate.c: 134: }
 10200                           ;karate.c: 135: IPR2bits.TMR3IP = 1;
 10201  001A66  82A2               	bsf	4002,1,c	;volatile
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;karate.c: 136: tlc5947_pwm_readback();
 10205  001A68  EC38  F014         	call	_tlc5947_pwm_readback	;wreg free
 10206                           
 10207                           ;karate.c: 137: PIE2 = 0x02;
 10208  001A6C  0E02               	movlw	2
 10209  001A6E  6EA0               	movwf	4000,c	;volatile
 10210                           
 10211                           ;karate.c: 139: tmr3h_cal = (uint8_t)((tlc_pwm_readback_value >> 8 & 0xFF)^0xFF);
 10212  001A70  504B               	movf	_tlc_pwm_readback_value+1,w,c
 10213  001A72  0AFF               	xorlw	255
 10214  001A74  0100               	movlb	0	; () banked
 10215  001A76  6FA1               	movwf	_tmr3h_cal& (0+255),b
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;karate.c: 140: tmr3l_cal = (uint8_t)((tlc_pwm_readback_value & 0xFF)^0xFF);
 10219  001A78  504A               	movf	_tlc_pwm_readback_value,w,c
 10220  001A7A  0AFF               	xorlw	255
 10221  001A7C  0100               	movlb	0	; () banked
 10222  001A7E  6FA2               	movwf	_tmr3l_cal& (0+255),b
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;karate.c: 144: ADCON0 = 0x01;
 10226  001A80  0E01               	movlw	1
 10227  001A82  6EC2               	movwf	4034,c	;volatile
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;karate.c: 145: ADCON1 = 0x0E;
 10231  001A84  0E0E               	movlw	14
 10232  001A86  6EC1               	movwf	4033,c	;volatile
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;karate.c: 146: ADCON2 = 0xBE;
 10236  001A88  0EBE               	movlw	190
 10237  001A8A  6EC0               	movwf	4032,c	;volatile
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;karate.c: 149: INTCONbits.INT0IE = 0;
 10241  001A8C  98F2               	bcf	intcon,4,c	;volatile
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;karate.c: 152: T2CON = 0xFF;
 10245  001A8E  68CA               	setf	4042,c	;volatile
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;karate.c: 153: PR2 = 234;
 10249  001A90  0EEA               	movlw	234
 10250  001A92  6ECB               	movwf	4043,c	;volatile
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;karate.c: 154: PIE1bits.TMR2IE = 0;
 10254  001A94  929D               	bcf	3997,1,c	;volatile
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;karate.c: 155: IPR1bits.TMR2IP = 0;
 10258  001A96  929F               	bcf	3999,1,c	;volatile
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;karate.c: 157: USBRegisterFix();
 10262  001A98  ECF0  F00E         	call	_USBRegisterFix	;wreg free
 10263                           
 10264                           ;karate.c: 158: USBDeviceInit();
 10265  001A9C  EC52  F00B         	call	_USBDeviceInit	;wreg free
 10266                           
 10267                           ;karate.c: 161: RCONbits.IPEN = 1;
 10268  001AA0  8ED0               	bsf	4048,7,c	;volatile
 10269                           
 10270                           ;karate.c: 162: INTCONbits.GIEL = 1;
 10271  001AA2  8CF2               	bsf	intcon,6,c	;volatile
 10272                           
 10273                           ;karate.c: 163: INTCONbits.GIEH = 1;
 10274  001AA4  8EF2               	bsf	intcon,7,c	;volatile
 10275  001AA6  0012               	return		;funcret
 10276  001AA8                     __end_of_InitializeSystem:
 10277                           	opt stack 0
 10278                           tblptru	equ	0xFF8
 10279                           tblptrh	equ	0xFF7
 10280                           tblptrl	equ	0xFF6
 10281                           tablat	equ	0xFF5
 10282                           prodh	equ	0xFF4
 10283                           prodl	equ	0xFF3
 10284                           intcon	equ	0xFF2
 10285                           postinc0	equ	0xFEE
 10286                           wreg	equ	0xFE8
 10287                           indf1	equ	0xFE7
 10288                           postdec1	equ	0xFE5
 10289                           fsr1h	equ	0xFE2
 10290                           fsr1l	equ	0xFE1
 10291                           indf2	equ	0xFDF
 10292                           postinc2	equ	0xFDE
 10293                           postdec2	equ	0xFDD
 10294                           plusw2	equ	0xFDB
 10295                           fsr2h	equ	0xFDA
 10296                           fsr2l	equ	0xFD9
 10297                           status	equ	0xFD8
 10298                           
 10299 ;; *************** function _tlc5947_pwm_readback *****************
 10300 ;; Defined at:
 10301 ;;		line 124 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;		None
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;  i               1   52[COMRAM] unsigned char 
 10306 ;; Return value:  Size  Location     Type
 10307 ;;		None               void
 10308 ;; Registers used:
 10309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10310 ;; Tracked objects:
 10311 ;;		On entry : 0/0
 10312 ;;		On exit  : 0/0
 10313 ;;		Unchanged: 0/0
 10314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10315 ;;      Params:         0       0       0       0       0       0       0       0       0
 10316 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10317 ;;      Temps:          6       0       0       0       0       0       0       0       0
 10318 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10319 ;;Total ram usage:        7 bytes
 10320 ;; Hardware stack levels used:    1
 10321 ;; Hardware stack levels required when called:    6
 10322 ;; This function calls:
 10323 ;;		_Delay10TCYx
 10324 ;;		___lwdiv
 10325 ;;		_tlc5947_latch
 10326 ;;		_tlc5947_setChannel
 10327 ;;		_tlc5947_update
 10328 ;; This function is called by:
 10329 ;;		_InitializeSystem
 10330 ;;		_ProcessCDC
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text42
 10335  002870                     __ptext42:
 10336                           	opt stack 0
 10337  002870                     _tlc5947_pwm_readback:
 10338                           	opt stack 22
 10339                           
 10340                           ;tlc5947.c: 131: uint8_t i;
 10341                           ;tlc5947.c: 134: tlc_request = -1;
 10342                           
 10343                           ;incstack = 0
 10344  002870  0100               	movlb	0	; () banked
 10345  002872  69A0               	setf	_tlc_request& (0+255),b
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;tlc5947.c: 137: tlc5947_setChannel(23, 190);
 10349  002874  0EBE               	movlw	190
 10350  002876  6E26               	movwf	tlc5947_setChannel@val,c
 10351  002878  0E17               	movlw	23
 10352  00287A  EC87  F00A         	call	_tlc5947_setChannel
 10353                           
 10354                           ;tlc5947.c: 138: tlc5947_update();
 10355  00287E  ECBE  F018         	call	_tlc5947_update	;wreg free
 10356                           
 10357                           ;tlc5947.c: 139: tlc5947_latch();
 10358  002882  EC49  F019         	call	_tlc5947_latch	;wreg free
 10359                           
 10360                           ;tlc5947.c: 141: INTCONbits.RBIF = 0;
 10361  002886  90F2               	bcf	intcon,0,c	;volatile
 10362                           
 10363                           ;tlc5947.c: 143: i = 0;
 10364  002888  0E00               	movlw	0
 10365  00288A  6E35               	movwf	tlc5947_pwm_readback@i,c
 10366  00288C  D000               	goto	l5012
 10367  00288E                     l5012:
 10368                           
 10369                           ;tlc5947.c: 145: if (INTCONbits.RBIF) {
 10370  00288E  A0F2               	btfss	intcon,0,c	;volatile
 10371  002890  D7FE               	goto	l5012
 10372                           
 10373                           ;tlc5947.c: 146: Delay10TCYx(2);
 10374  002892  0E02               	movlw	2
 10375  002894  ECE8  F019         	call	_Delay10TCYx
 10376                           
 10377                           ;tlc5947.c: 147: if (PORTBbits.RB4 == 0) {
 10378  002898  B881               	btfsc	3969,4,c	;volatile
 10379  00289A  D010               	goto	l5028
 10380                           
 10381                           ;tlc5947.c: 148: if (i == 0) {
 10382  00289C  5035               	movf	tlc5947_pwm_readback@i,w,c
 10383  00289E  A4D8               	btfss	status,2,c
 10384  0028A0  D005               	goto	l5022
 10385                           
 10386                           ;tlc5947.c: 149: TMR3H = 0x00;
 10387  0028A2  0E00               	movlw	0
 10388  0028A4  6EB3               	movwf	4019,c	;volatile
 10389                           
 10390                           ;tlc5947.c: 150: TMR3L = 0x00;
 10391  0028A6  0E00               	movlw	0
 10392  0028A8  6EB2               	movwf	4018,c	;volatile
 10393  0028AA  D000               	goto	l5022
 10394  0028AC                     l5022:
 10395                           
 10396                           ;tlc5947.c: 151: }
 10397                           ;tlc5947.c: 152: if (i == 8) {
 10398  0028AC  0E08               	movlw	8
 10399  0028AE  1835               	xorwf	tlc5947_pwm_readback@i,w,c
 10400  0028B0  B4D8               	btfsc	status,2,c
 10401  0028B2  D006               	goto	l824
 10402  0028B4  D001               	goto	l5026
 10403                           
 10404                           ;tlc5947.c: 153: break;
 10405  0028B6  D004               	goto	l824
 10406  0028B8                     l5026:
 10407                           
 10408                           ;tlc5947.c: 154: }
 10409                           ;tlc5947.c: 155: i++;
 10410  0028B8  2A35               	incf	tlc5947_pwm_readback@i,f,c
 10411  0028BA  D000               	goto	l5028
 10412  0028BC                     l5028:
 10413                           
 10414                           ;tlc5947.c: 156: }
 10415                           ;tlc5947.c: 157: INTCONbits.RBIF = 0;
 10416  0028BC  90F2               	bcf	intcon,0,c	;volatile
 10417  0028BE  D7E7               	goto	l5012
 10418  0028C0                     l824:
 10419                           
 10420                           ;tlc5947.c: 158: }
 10421                           ;tlc5947.c: 159: }
 10422                           ;tlc5947.c: 161: tlc_pwm_readback_value = TMR3L;
 10423  0028C0  CFB2 F04A          	movff	4018,_tlc_pwm_readback_value	;volatile
 10424  0028C4  6A4B               	clrf	_tlc_pwm_readback_value+1,c
 10425                           
 10426                           ;tlc5947.c: 162: tlc_pwm_readback_value += 256 * TMR3H;
 10427  0028C6  50B3               	movf	4019,w,c	;volatile
 10428  0028C8  264B               	addwf	_tlc_pwm_readback_value+1,f,c
 10429                           
 10430                           ;tlc5947.c: 164: pwr_delay = (tlc_pwm_readback_value - (2 * 40)) / 2 / 100;
 10431  0028CA  0EB0               	movlw	176
 10432  0028CC  6E2F               	movwf	??_tlc5947_pwm_readback& (0+255),c
 10433  0028CE  0EFF               	movlw	255
 10434  0028D0  6E30               	movwf	(??_tlc5947_pwm_readback+1)& (0+255),c
 10435  0028D2  C04A  F031         	movff	_tlc_pwm_readback_value,??_tlc5947_pwm_readback+2
 10436  0028D6  C04B  F032         	movff	_tlc_pwm_readback_value+1,??_tlc5947_pwm_readback+3
 10437  0028DA  502F               	movf	??_tlc5947_pwm_readback,w,c
 10438  0028DC  2631               	addwf	??_tlc5947_pwm_readback+2,f,c
 10439  0028DE  5030               	movf	??_tlc5947_pwm_readback+1,w,c
 10440  0028E0  2232               	addwfc	??_tlc5947_pwm_readback+3,f,c
 10441  0028E2  90D8               	bcf	status,0,c
 10442  0028E4  3032               	rrcf	??_tlc5947_pwm_readback+3,w,c
 10443  0028E6  6E33               	movwf	(??_tlc5947_pwm_readback+4)& (0+255),c
 10444  0028E8  3031               	rrcf	??_tlc5947_pwm_readback+2,w,c
 10445  0028EA  6E23               	movwf	___lwdiv@dividend,c
 10446  0028EC  C033  F024         	movff	??_tlc5947_pwm_readback+4,___lwdiv@dividend+1
 10447  0028F0  0E00               	movlw	0
 10448  0028F2  6E26               	movwf	___lwdiv@divisor+1,c
 10449  0028F4  0E64               	movlw	100
 10450  0028F6  6E25               	movwf	___lwdiv@divisor,c
 10451  0028F8  EC75  F017         	call	___lwdiv	;wreg free
 10452  0028FC  C023  F08E         	movff	?___lwdiv,_pwr_delay
 10453  002900  C024  F08F         	movff	?___lwdiv+1,_pwr_delay+1
 10454                           
 10455                           ;tlc5947.c: 167: tlc5947_setChannel(23, 0);
 10456  002904  0E00               	movlw	0
 10457  002906  6E26               	movwf	tlc5947_setChannel@val,c
 10458  002908  0E17               	movlw	23
 10459  00290A  EC87  F00A         	call	_tlc5947_setChannel
 10460                           
 10461                           ;tlc5947.c: 168: tlc5947_update();
 10462  00290E  ECBE  F018         	call	_tlc5947_update	;wreg free
 10463                           
 10464                           ;tlc5947.c: 169: tlc5947_latch();
 10465  002912  EC49  F019         	call	_tlc5947_latch	;wreg free
 10466                           
 10467                           ;tlc5947.c: 172: tlc_request = 0;
 10468  002916  0E00               	movlw	0
 10469  002918  0100               	movlb	0	; () banked
 10470  00291A  6FA0               	movwf	_tlc_request& (0+255),b
 10471                           
 10472                           ; BSR set to: 0
 10473  00291C  0012               	return		;funcret
 10474  00291E                     __end_of_tlc5947_pwm_readback:
 10475                           	opt stack 0
 10476                           tblptru	equ	0xFF8
 10477                           tblptrh	equ	0xFF7
 10478                           tblptrl	equ	0xFF6
 10479                           tablat	equ	0xFF5
 10480                           prodh	equ	0xFF4
 10481                           prodl	equ	0xFF3
 10482                           intcon	equ	0xFF2
 10483                           postinc0	equ	0xFEE
 10484                           wreg	equ	0xFE8
 10485                           indf1	equ	0xFE7
 10486                           postdec1	equ	0xFE5
 10487                           fsr1h	equ	0xFE2
 10488                           fsr1l	equ	0xFE1
 10489                           indf2	equ	0xFDF
 10490                           postinc2	equ	0xFDE
 10491                           postdec2	equ	0xFDD
 10492                           plusw2	equ	0xFDB
 10493                           fsr2h	equ	0xFDA
 10494                           fsr2l	equ	0xFD9
 10495                           status	equ	0xFD8
 10496                           
 10497 ;; *************** function _tlc5947_setChannel *****************
 10498 ;; Defined at:
 10499 ;;		line 43 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  ch              1    wreg     unsigned char 
 10502 ;;  val             1   37[COMRAM] unsigned char 
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;  ch              1   41[COMRAM] unsigned char 
 10505 ;;  col             2   42[COMRAM] unsigned int 
 10506 ;;  mpos            1   45[COMRAM] unsigned char 
 10507 ;;  pos             1   44[COMRAM] unsigned char 
 10508 ;; Return value:  Size  Location     Type
 10509 ;;		None               void
 10510 ;; Registers used:
 10511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10517 ;;      Params:         1       0       0       0       0       0       0       0       0
 10518 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10519 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10520 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10521 ;;Total ram usage:        9 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; Hardware stack levels required when called:    5
 10524 ;; This function calls:
 10525 ;;		_gamma_lookup
 10526 ;; This function is called by:
 10527 ;;		_ProcessIO
 10528 ;;		_tlc5947_pwm_readback
 10529 ;;		_ProcessCDC
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           	psect	text43
 10534  00150E                     __ptext43:
 10535                           	opt stack 0
 10536  00150E                     _tlc5947_setChannel:
 10537                           	opt stack 24
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;incstack = 0
 10541                           ;tlc5947_setChannel@ch stored from wreg
 10542  00150E  6E2A               	movwf	tlc5947_setChannel@ch,c
 10543                           
 10544                           ;tlc5947.c: 45: uint8_t pos = 0;
 10545  001510  0E00               	movlw	0
 10546  001512  6E2D               	movwf	tlc5947_setChannel@pos,c
 10547                           
 10548                           ;tlc5947.c: 46: uint8_t mpos = 0;
 10549  001514  0E00               	movlw	0
 10550  001516  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10551                           
 10552                           ;tlc5947.c: 47: uint16_t col = 0;
 10553  001518  0E00               	movlw	0
 10554  00151A  6E2C               	movwf	tlc5947_setChannel@col+1,c
 10555  00151C  0E00               	movlw	0
 10556  00151E  6E2B               	movwf	tlc5947_setChannel@col,c
 10557                           
 10558                           ;tlc5947.c: 50: if (ch >= tlc_nchannels) return;
 10559  001520  0100               	movlb	0	; () banked
 10560  001522  51DD               	movf	_tlc_nchannels& (0+255),w,b
 10561  001524  5C2A               	subwf	tlc5947_setChannel@ch,w,c
 10562  001526  B0D8               	btfsc	status,0,c
 10563  001528  D0BC               	goto	l801
 10564  00152A  D001               	goto	l4696
 10565                           
 10566                           ; BSR set to: 0
 10567  00152C  D0BA               	goto	l801
 10568  00152E                     l4696:
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;tlc5947.c: 52: col = ~gamma_lookup(val);
 10572  00152E  5026               	movf	tlc5947_setChannel@val,w,c
 10573  001530  ECBA  F019         	call	_gamma_lookup
 10574  001534  1C23               	comf	?_gamma_lookup,w,c
 10575  001536  6E2B               	movwf	tlc5947_setChannel@col,c
 10576  001538  1C24               	comf	?_gamma_lookup+1,w,c
 10577  00153A  6E2C               	movwf	tlc5947_setChannel@col+1,c
 10578                           
 10579                           ;tlc5947.c: 55: if (tlc_nchannels == 48) {
 10580  00153C  0E30               	movlw	48
 10581  00153E  0100               	movlb	0	; () banked
 10582  001540  19DD               	xorwf	_tlc_nchannels& (0+255),w,b
 10583  001542  A4D8               	btfss	status,2,c
 10584  001544  D009               	goto	l4706
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;tlc5947.c: 56: if (ch < 24) {
 10588  001546  0E18               	movlw	24
 10589  001548  602A               	cpfslt	tlc5947_setChannel@ch,c
 10590  00154A  D003               	goto	l4704
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;tlc5947.c: 57: ch+=24;
 10594  00154C  0E18               	movlw	24
 10595  00154E  262A               	addwf	tlc5947_setChannel@ch,f,c
 10596                           
 10597                           ;tlc5947.c: 58: } else {
 10598  001550  D003               	goto	l4706
 10599  001552                     l4704:
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;tlc5947.c: 59: ch-=24;
 10603  001552  0E18               	movlw	24
 10604  001554  5E2A               	subwf	tlc5947_setChannel@ch,f,c
 10605                           
 10606                           ; BSR set to: 0
 10607  001556  D000               	goto	l4706
 10608  001558                     l4706:
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;tlc5947.c: 60: }
 10612                           ;tlc5947.c: 61: }
 10613                           ;tlc5947.c: 63: pos = ch * 3;
 10614  001558  502A               	movf	tlc5947_setChannel@ch,w,c
 10615  00155A  0D03               	mullw	3
 10616  00155C  CFF3 F02D          	movff	prodl,tlc5947_setChannel@pos
 10617                           
 10618                           ; BSR set to: 0
 10619                           ;tlc5947.c: 66: mpos = pos >> 1;
 10620  001560  90D8               	bcf	status,0,c
 10621  001562  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10622  001564  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;tlc5947.c: 67: if (pos & 0x01) {
 10626  001566  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10627  001568  D013               	goto	l4714
 10628                           
 10629                           ; BSR set to: 0
 10630                           ;tlc5947.c: 68: tlc_memory[mpos] &= 0xF0;
 10631  00156A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10632  00156C  0D01               	mullw	1
 10633  00156E  0E80               	movlw	low _tlc_memory
 10634  001570  24F3               	addwf	prodl,w,c
 10635  001572  6ED9               	movwf	fsr2l,c
 10636  001574  0E01               	movlw	high _tlc_memory
 10637  001576  20F4               	addwfc	prodh,w,c
 10638  001578  6EDA               	movwf	fsr2h,c
 10639  00157A  0EF0               	movlw	240
 10640  00157C  16DF               	andwf	indf2,f,c
 10641                           
 10642                           ;tlc5947.c: 69: tlc_memory[mpos] |= ((col & 0xF00) >> 8);
 10643  00157E  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10644  001582  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10645  001586  C028  F027         	movff	??_tlc5947_setChannel+1,??_tlc5947_setChannel
 10646  00158A  6A28               	clrf	??_tlc5947_setChannel+1,c
 10647  00158C  0E0F               	movlw	15
 10648  00158E  D016               	goto	L22
 10649  001590                     l4714:
 10650                           
 10651                           ; BSR set to: 0
 10652                           ;tlc5947.c: 71: tlc_memory[mpos] &= 0x0F;
 10653  001590  502E               	movf	tlc5947_setChannel@mpos,w,c
 10654  001592  0D01               	mullw	1
 10655  001594  0E80               	movlw	low _tlc_memory
 10656  001596  24F3               	addwf	prodl,w,c
 10657  001598  6ED9               	movwf	fsr2l,c
 10658  00159A  0E01               	movlw	high _tlc_memory
 10659  00159C  20F4               	addwfc	prodh,w,c
 10660  00159E  6EDA               	movwf	fsr2h,c
 10661  0015A0  0E0F               	movlw	15
 10662  0015A2  16DF               	andwf	indf2,f,c
 10663                           
 10664                           ;tlc5947.c: 72: tlc_memory[mpos] |= ((col & 0xF00) >> 4);
 10665  0015A4  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10666  0015A8  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10667  0015AC  0E04               	movlw	4
 10668  0015AE  6E29               	movwf	(??_tlc5947_setChannel+2)& (0+255),c
 10669  0015B0                     u3615:
 10670  0015B0  90D8               	bcf	status,0,c
 10671  0015B2  3228               	rrcf	??_tlc5947_setChannel+1,f,c
 10672  0015B4  3227               	rrcf	??_tlc5947_setChannel,f,c
 10673  0015B6  2E29               	decfsz	(??_tlc5947_setChannel+2)& (0+255),f,c
 10674  0015B8  D7FB               	goto	u3615
 10675  0015BA  0EF0               	movlw	240
 10676  0015BC                     L22:
 10677  0015BC  1627               	andwf	??_tlc5947_setChannel,f,c
 10678  0015BE  502E               	movf	tlc5947_setChannel@mpos,w,c
 10679  0015C0  0D01               	mullw	1
 10680  0015C2  0E80               	movlw	low _tlc_memory
 10681  0015C4  24F3               	addwf	prodl,w,c
 10682  0015C6  6ED9               	movwf	fsr2l,c
 10683  0015C8  0E01               	movlw	high _tlc_memory
 10684  0015CA  20F4               	addwfc	prodh,w,c
 10685  0015CC  6EDA               	movwf	fsr2h,c
 10686  0015CE  5027               	movf	??_tlc5947_setChannel,w,c
 10687  0015D0  12DF               	iorwf	indf2,f,c
 10688  0015D2  D000               	goto	l4716
 10689  0015D4                     l4716:
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;tlc5947.c: 73: }
 10693                           ;tlc5947.c: 75: pos++;
 10694  0015D4  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10695                           
 10696                           ; BSR set to: 0
 10697                           ;tlc5947.c: 76: mpos = pos >> 1;
 10698  0015D6  90D8               	bcf	status,0,c
 10699  0015D8  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10700  0015DA  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;tlc5947.c: 77: if (pos & 0x01) {
 10704  0015DC  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10705  0015DE  D017               	goto	l4724
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;tlc5947.c: 78: tlc_memory[mpos] &= 0xF0;
 10709  0015E0  502E               	movf	tlc5947_setChannel@mpos,w,c
 10710  0015E2  0D01               	mullw	1
 10711  0015E4  0E80               	movlw	low _tlc_memory
 10712  0015E6  24F3               	addwf	prodl,w,c
 10713  0015E8  6ED9               	movwf	fsr2l,c
 10714  0015EA  0E01               	movlw	high _tlc_memory
 10715  0015EC  20F4               	addwfc	prodh,w,c
 10716  0015EE  6EDA               	movwf	fsr2h,c
 10717  0015F0  0EF0               	movlw	240
 10718  0015F2  16DF               	andwf	indf2,f,c
 10719                           
 10720                           ;tlc5947.c: 79: tlc_memory[mpos] |= ((col & 0x0F0) >> 4);
 10721  0015F4  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10722  0015F8  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10723  0015FC  0E04               	movlw	4
 10724  0015FE  6E29               	movwf	(??_tlc5947_setChannel+2)& (0+255),c
 10725  001600                     u3635:
 10726  001600  90D8               	bcf	status,0,c
 10727  001602  3228               	rrcf	??_tlc5947_setChannel+1,f,c
 10728  001604  3227               	rrcf	??_tlc5947_setChannel,f,c
 10729  001606  2E29               	decfsz	(??_tlc5947_setChannel+2)& (0+255),f,c
 10730  001608  D7FB               	goto	u3635
 10731  00160A  0E0F               	movlw	15
 10732  00160C  D00D               	goto	L23
 10733  00160E                     l4724:
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;tlc5947.c: 81: tlc_memory[mpos] &= 0x0F;
 10737  00160E  502E               	movf	tlc5947_setChannel@mpos,w,c
 10738  001610  0D01               	mullw	1
 10739  001612  0E80               	movlw	low _tlc_memory
 10740  001614  24F3               	addwf	prodl,w,c
 10741  001616  6ED9               	movwf	fsr2l,c
 10742  001618  0E01               	movlw	high _tlc_memory
 10743  00161A  20F4               	addwfc	prodh,w,c
 10744  00161C  6EDA               	movwf	fsr2h,c
 10745  00161E  0E0F               	movlw	15
 10746  001620  16DF               	andwf	indf2,f,c
 10747                           
 10748                           ;tlc5947.c: 82: tlc_memory[mpos] |= (col & 0x0F0);
 10749  001622  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10750  001626  0EF0               	movlw	240
 10751  001628                     L23:
 10752  001628  1627               	andwf	??_tlc5947_setChannel,f,c
 10753  00162A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10754  00162C  0D01               	mullw	1
 10755  00162E  0E80               	movlw	low _tlc_memory
 10756  001630  24F3               	addwf	prodl,w,c
 10757  001632  6ED9               	movwf	fsr2l,c
 10758  001634  0E01               	movlw	high _tlc_memory
 10759  001636  20F4               	addwfc	prodh,w,c
 10760  001638  6EDA               	movwf	fsr2h,c
 10761  00163A  5027               	movf	??_tlc5947_setChannel,w,c
 10762  00163C  12DF               	iorwf	indf2,f,c
 10763  00163E  D000               	goto	l4726
 10764  001640                     l4726:
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;tlc5947.c: 83: }
 10768                           ;tlc5947.c: 85: pos++;
 10769  001640  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10770                           
 10771                           ; BSR set to: 0
 10772                           ;tlc5947.c: 86: mpos = pos >> 1;
 10773  001642  90D8               	bcf	status,0,c
 10774  001644  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10775  001646  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;tlc5947.c: 87: if (pos & 0x01) {
 10779  001648  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10780  00164A  D00E               	goto	l4734
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;tlc5947.c: 88: tlc_memory[mpos] &= 0xF0;
 10784  00164C  502E               	movf	tlc5947_setChannel@mpos,w,c
 10785  00164E  0D01               	mullw	1
 10786  001650  0E80               	movlw	low _tlc_memory
 10787  001652  24F3               	addwf	prodl,w,c
 10788  001654  6ED9               	movwf	fsr2l,c
 10789  001656  0E01               	movlw	high _tlc_memory
 10790  001658  20F4               	addwfc	prodh,w,c
 10791  00165A  6EDA               	movwf	fsr2h,c
 10792  00165C  0EF0               	movlw	240
 10793  00165E  16DF               	andwf	indf2,f,c
 10794                           
 10795                           ;tlc5947.c: 89: tlc_memory[mpos] |= (col & 0x00F);
 10796  001660  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10797  001664  0E0F               	movlw	15
 10798  001666  D010               	goto	L24
 10799  001668                     l4734:
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;tlc5947.c: 91: tlc_memory[mpos] &= 0x0F;
 10803  001668  502E               	movf	tlc5947_setChannel@mpos,w,c
 10804  00166A  0D01               	mullw	1
 10805  00166C  0E80               	movlw	low _tlc_memory
 10806  00166E  24F3               	addwf	prodl,w,c
 10807  001670  6ED9               	movwf	fsr2l,c
 10808  001672  0E01               	movlw	high _tlc_memory
 10809  001674  20F4               	addwfc	prodh,w,c
 10810  001676  6EDA               	movwf	fsr2h,c
 10811  001678  0E0F               	movlw	15
 10812  00167A  16DF               	andwf	indf2,f,c
 10813                           
 10814                           ;tlc5947.c: 92: tlc_memory[mpos] |= ((col & 0x00F) << 4);
 10815  00167C  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10816  001680  0E0F               	movlw	15
 10817  001682  1627               	andwf	??_tlc5947_setChannel,f,c
 10818  001684  3A27               	swapf	??_tlc5947_setChannel,f,c
 10819  001686  0EF0               	movlw	240
 10820  001688                     L24:
 10821  001688  1627               	andwf	??_tlc5947_setChannel,f,c
 10822  00168A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10823  00168C  0D01               	mullw	1
 10824  00168E  0E80               	movlw	low _tlc_memory
 10825  001690  24F3               	addwf	prodl,w,c
 10826  001692  6ED9               	movwf	fsr2l,c
 10827  001694  0E01               	movlw	high _tlc_memory
 10828  001696  20F4               	addwfc	prodh,w,c
 10829  001698  6EDA               	movwf	fsr2h,c
 10830  00169A  5027               	movf	??_tlc5947_setChannel,w,c
 10831  00169C  12DF               	iorwf	indf2,f,c
 10832  00169E  D000               	goto	l4736
 10833  0016A0                     l4736:
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;tlc5947.c: 93: }
 10837                           ;tlc5947.c: 94: pos++;
 10838  0016A0  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10839  0016A2                     l801:
 10840                           
 10841                           ; BSR set to: 0
 10842  0016A2  0012               	return		;funcret
 10843  0016A4                     __end_of_tlc5947_setChannel:
 10844                           	opt stack 0
 10845                           tblptru	equ	0xFF8
 10846                           tblptrh	equ	0xFF7
 10847                           tblptrl	equ	0xFF6
 10848                           tablat	equ	0xFF5
 10849                           prodh	equ	0xFF4
 10850                           prodl	equ	0xFF3
 10851                           intcon	equ	0xFF2
 10852                           postinc0	equ	0xFEE
 10853                           wreg	equ	0xFE8
 10854                           indf1	equ	0xFE7
 10855                           postdec1	equ	0xFE5
 10856                           fsr1h	equ	0xFE2
 10857                           fsr1l	equ	0xFE1
 10858                           indf2	equ	0xFDF
 10859                           postinc2	equ	0xFDE
 10860                           postdec2	equ	0xFDD
 10861                           plusw2	equ	0xFDB
 10862                           fsr2h	equ	0xFDA
 10863                           fsr2l	equ	0xFD9
 10864                           status	equ	0xFD8
 10865                           
 10866 ;; *************** function _gamma_lookup *****************
 10867 ;; Defined at:
 10868 ;;		line 23 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/gamma.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;  c               1    wreg     unsigned char 
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;  c               1   36[COMRAM] unsigned char 
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  2   34[COMRAM] unsigned int 
 10875 ;; Registers used:
 10876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10882 ;;      Params:         2       0       0       0       0       0       0       0       0
 10883 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10885 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10886 ;;Total ram usage:        3 bytes
 10887 ;; Hardware stack levels used:    1
 10888 ;; Hardware stack levels required when called:    4
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_tlc5947_setChannel
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text44
 10897  003374                     __ptext44:
 10898                           	opt stack 0
 10899  003374                     _gamma_lookup:
 10900                           	opt stack 24
 10901                           
 10902                           ; BSR set to: 0
 10903                           ;incstack = 0
 10904                           ;gamma_lookup@c stored from wreg
 10905  003374  6E25               	movwf	gamma_lookup@c,c
 10906                           
 10907                           ;gamma.c: 25: return gamma_table[c];
 10908  003376  5025               	movf	gamma_lookup@c,w,c
 10909  003378  0D02               	mullw	2
 10910  00337A  0E80               	movlw	low _gamma_table
 10911  00337C  24F3               	addwf	prodl,w,c
 10912  00337E  6ED9               	movwf	fsr2l,c
 10913  003380  0E05               	movlw	high _gamma_table
 10914  003382  20F4               	addwfc	prodh,w,c
 10915  003384  6EDA               	movwf	fsr2h,c
 10916  003386  CFDE F023          	movff	postinc2,?_gamma_lookup
 10917  00338A  CFDD F024          	movff	postdec2,?_gamma_lookup+1
 10918  00338E  D000               	goto	l520
 10919  003390                     l520:
 10920  003390  0012               	return		;funcret
 10921  003392                     __end_of_gamma_lookup:
 10922                           	opt stack 0
 10923                           tblptru	equ	0xFF8
 10924                           tblptrh	equ	0xFF7
 10925                           tblptrl	equ	0xFF6
 10926                           tablat	equ	0xFF5
 10927                           prodh	equ	0xFF4
 10928                           prodl	equ	0xFF3
 10929                           intcon	equ	0xFF2
 10930                           postinc0	equ	0xFEE
 10931                           wreg	equ	0xFE8
 10932                           indf1	equ	0xFE7
 10933                           postdec1	equ	0xFE5
 10934                           fsr1h	equ	0xFE2
 10935                           fsr1l	equ	0xFE1
 10936                           indf2	equ	0xFDF
 10937                           postinc2	equ	0xFDE
 10938                           postdec2	equ	0xFDD
 10939                           plusw2	equ	0xFDB
 10940                           fsr2h	equ	0xFDA
 10941                           fsr2l	equ	0xFD9
 10942                           status	equ	0xFD8
 10943                           
 10944 ;; *************** function _tlc5947_latch *****************
 10945 ;; Defined at:
 10946 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;		None
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;		None
 10951 ;; Return value:  Size  Location     Type
 10952 ;;		None               void
 10953 ;; Registers used:
 10954 ;;		wreg, status,2, cstack
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10960 ;;      Params:         0       0       0       0       0       0       0       0       0
 10961 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10963 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10964 ;;Total ram usage:        0 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    5
 10967 ;; This function calls:
 10968 ;;		_Delay100TCYx
 10969 ;;		_Delay10TCYx
 10970 ;; This function is called by:
 10971 ;;		_tlc5947_pwm_readback
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text45
 10976  003292                     __ptext45:
 10977                           	opt stack 0
 10978  003292                     _tlc5947_latch:
 10979                           	opt stack 22
 10980                           
 10981                           ;tlc5947.c: 187: LATBbits.LATB5 = 1;;
 10982                           
 10983                           ;incstack = 0
 10984  003292  8A8A               	bsf	3978,5,c	;volatile
 10985                           
 10986                           ;tlc5947.c: 188: Delay100TCYx (pwr_delay);
 10987  003294  0100               	movlb	0	; () banked
 10988  003296  518E               	movf	_pwr_delay& (0+255),w,b
 10989  003298  ECF1  F019         	call	_Delay100TCYx
 10990                           
 10991                           ;tlc5947.c: 190: LATCbits.LATC0 = 1;;
 10992  00329C  808B               	bsf	3979,0,c	;volatile
 10993                           
 10994                           ;tlc5947.c: 191: LATBbits.LATB3 = 1;;
 10995  00329E  868A               	bsf	3978,3,c	;volatile
 10996                           
 10997                           ;tlc5947.c: 192: Delay10TCYx(40);
 10998  0032A0  0E28               	movlw	40
 10999  0032A2  ECE8  F019         	call	_Delay10TCYx
 11000                           
 11001                           ;tlc5947.c: 193: LATBbits.LATB3 = 0;;
 11002  0032A6  968A               	bcf	3978,3,c	;volatile
 11003                           
 11004                           ;tlc5947.c: 194: Delay10TCYx(40);
 11005  0032A8  0E28               	movlw	40
 11006  0032AA  ECE8  F019         	call	_Delay10TCYx
 11007                           
 11008                           ;tlc5947.c: 195: LATCbits.LATC0 = 0;;
 11009  0032AE  908B               	bcf	3979,0,c	;volatile
 11010                           
 11011                           ;tlc5947.c: 197: Delay100TCYx(pwr_delay);
 11012  0032B0  0100               	movlb	0	; () banked
 11013  0032B2  518E               	movf	_pwr_delay& (0+255),w,b
 11014  0032B4  ECF1  F019         	call	_Delay100TCYx
 11015                           
 11016                           ;tlc5947.c: 198: LATBbits.LATB5 = 0;;
 11017  0032B8  9A8A               	bcf	3978,5,c	;volatile
 11018  0032BA  0012               	return		;funcret
 11019  0032BC                     __end_of_tlc5947_latch:
 11020                           	opt stack 0
 11021                           tblptru	equ	0xFF8
 11022                           tblptrh	equ	0xFF7
 11023                           tblptrl	equ	0xFF6
 11024                           tablat	equ	0xFF5
 11025                           prodh	equ	0xFF4
 11026                           prodl	equ	0xFF3
 11027                           intcon	equ	0xFF2
 11028                           postinc0	equ	0xFEE
 11029                           wreg	equ	0xFE8
 11030                           indf1	equ	0xFE7
 11031                           postdec1	equ	0xFE5
 11032                           fsr1h	equ	0xFE2
 11033                           fsr1l	equ	0xFE1
 11034                           indf2	equ	0xFDF
 11035                           postinc2	equ	0xFDE
 11036                           postdec2	equ	0xFDD
 11037                           plusw2	equ	0xFDB
 11038                           fsr2h	equ	0xFDA
 11039                           fsr2l	equ	0xFD9
 11040                           status	equ	0xFD8
 11041                           
 11042 ;; *************** function _Delay10TCYx *****************
 11043 ;; Defined at:
 11044 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10tcyx.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  unit            1    wreg     unsigned char 
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;  unit            1   34[COMRAM] unsigned char 
 11049 ;; Return value:  Size  Location     Type
 11050 ;;		None               void
 11051 ;; Registers used:
 11052 ;;		wreg
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0
 11059 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11060 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11061 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11062 ;;Total ram usage:        1 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:    4
 11065 ;; This function calls:
 11066 ;;		Nothing
 11067 ;; This function is called by:
 11068 ;;		_tlc5947_pwm_readback
 11069 ;;		_tlc5947_latch
 11070 ;;		_ProcessCDC
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           	psect	text46
 11075  0033D0                     __ptext46:
 11076                           	opt stack 0
 11077  0033D0                     _Delay10TCYx:
 11078                           	opt stack 22
 11079                           
 11080                           ;incstack = 0
 11081                           ;Delay10TCYx@unit stored from wreg
 11082  0033D0  6E23               	movwf	Delay10TCYx@unit,c
 11083  0033D2  0E03               	movlw	3
 11084  0033D4                     u4887:
 11085  0033D4  2EE8               	decfsz	wreg,f,c
 11086  0033D6  D7FE               	goto	u4887
 11087  0033D8  F000               	nop	
 11088  0033DA  2E23               	decfsz	Delay10TCYx@unit,f,c
 11089  0033DC  D7FA               	goto	l4432
 11090  0033DE  D000               	goto	l1401
 11091  0033E0                     l1401:
 11092  0033E0  0012               	return		;funcret
 11093  0033E2                     __end_of_Delay10TCYx:
 11094                           	opt stack 0
 11095                           tblptru	equ	0xFF8
 11096                           tblptrh	equ	0xFF7
 11097                           tblptrl	equ	0xFF6
 11098                           tablat	equ	0xFF5
 11099                           prodh	equ	0xFF4
 11100                           prodl	equ	0xFF3
 11101                           intcon	equ	0xFF2
 11102                           postinc0	equ	0xFEE
 11103                           wreg	equ	0xFE8
 11104                           indf1	equ	0xFE7
 11105                           postdec1	equ	0xFE5
 11106                           fsr1h	equ	0xFE2
 11107                           fsr1l	equ	0xFE1
 11108                           indf2	equ	0xFDF
 11109                           postinc2	equ	0xFDE
 11110                           postdec2	equ	0xFDD
 11111                           plusw2	equ	0xFDB
 11112                           fsr2h	equ	0xFDA
 11113                           fsr2l	equ	0xFD9
 11114                           status	equ	0xFD8
 11115                           
 11116 ;; *************** function _Delay100TCYx *****************
 11117 ;; Defined at:
 11118 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  unit            1    wreg     unsigned char 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;  unit            1   34[COMRAM] unsigned char 
 11123 ;; Return value:  Size  Location     Type
 11124 ;;		None               void
 11125 ;; Registers used:
 11126 ;;		wreg
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11132 ;;      Params:         0       0       0       0       0       0       0       0       0
 11133 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11135 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11136 ;;Total ram usage:        1 bytes
 11137 ;; Hardware stack levels used:    1
 11138 ;; Hardware stack levels required when called:    4
 11139 ;; This function calls:
 11140 ;;		Nothing
 11141 ;; This function is called by:
 11142 ;;		_tlc5947_latch
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146                           	psect	text47
 11147  0033E2                     __ptext47:
 11148                           	opt stack 0
 11149  0033E2                     _Delay100TCYx:
 11150                           	opt stack 22
 11151                           
 11152                           ;incstack = 0
 11153                           ;Delay100TCYx@unit stored from wreg
 11154  0033E2  6E23               	movwf	Delay100TCYx@unit,c
 11155  0033E4  0E21               	movlw	33
 11156  0033E6                     u4897:
 11157  0033E6  2EE8               	decfsz	wreg,f,c
 11158  0033E8  D7FE               	goto	u4897
 11159  0033EA  F000               	nop	
 11160  0033EC  2E23               	decfsz	Delay100TCYx@unit,f,c
 11161  0033EE  D7FA               	goto	l4436
 11162  0033F0  D000               	goto	l1394
 11163  0033F2                     l1394:
 11164  0033F2  0012               	return		;funcret
 11165  0033F4                     __end_of_Delay100TCYx:
 11166                           	opt stack 0
 11167                           tblptru	equ	0xFF8
 11168                           tblptrh	equ	0xFF7
 11169                           tblptrl	equ	0xFF6
 11170                           tablat	equ	0xFF5
 11171                           prodh	equ	0xFF4
 11172                           prodl	equ	0xFF3
 11173                           intcon	equ	0xFF2
 11174                           postinc0	equ	0xFEE
 11175                           wreg	equ	0xFE8
 11176                           indf1	equ	0xFE7
 11177                           postdec1	equ	0xFE5
 11178                           fsr1h	equ	0xFE2
 11179                           fsr1l	equ	0xFE1
 11180                           indf2	equ	0xFDF
 11181                           postinc2	equ	0xFDE
 11182                           postdec2	equ	0xFDD
 11183                           plusw2	equ	0xFDB
 11184                           fsr2h	equ	0xFDA
 11185                           fsr2l	equ	0xFD9
 11186                           status	equ	0xFD8
 11187                           
 11188 ;; *************** function ___lwdiv *****************
 11189 ;; Defined at:
 11190 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  dividend        2   34[COMRAM] unsigned int 
 11193 ;;  divisor         2   36[COMRAM] unsigned int 
 11194 ;; Auto vars:     Size  Location     Type
 11195 ;;  quotient        2   38[COMRAM] unsigned int 
 11196 ;;  counter         1   40[COMRAM] unsigned char 
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  2   34[COMRAM] unsigned int 
 11199 ;; Registers used:
 11200 ;;		wreg, status,2, status,0
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11206 ;;      Params:         4       0       0       0       0       0       0       0       0
 11207 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11208 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11209 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11210 ;;Total ram usage:        7 bytes
 11211 ;; Hardware stack levels used:    1
 11212 ;; Hardware stack levels required when called:    4
 11213 ;; This function calls:
 11214 ;;		Nothing
 11215 ;; This function is called by:
 11216 ;;		_tlc5947_pwm_readback
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           	psect	text48
 11221  002EEA                     __ptext48:
 11222                           	opt stack 0
 11223  002EEA                     ___lwdiv:
 11224                           	opt stack 23
 11225                           
 11226                           ;incstack = 0
 11227  002EEA  0E00               	movlw	0
 11228  002EEC  6E28               	movwf	___lwdiv@quotient+1,c
 11229  002EEE  0E00               	movlw	0
 11230  002EF0  6E27               	movwf	___lwdiv@quotient,c
 11231  002EF2  5025               	movf	___lwdiv@divisor,w,c
 11232  002EF4  1026               	iorwf	___lwdiv@divisor+1,w,c
 11233  002EF6  B4D8               	btfsc	status,2,c
 11234  002EF8  D021               	goto	l1701
 11235  002EFA  0E01               	movlw	1
 11236  002EFC  6E29               	movwf	___lwdiv@counter,c
 11237  002EFE  D005               	goto	l4798
 11238  002F00                     l4796:
 11239  002F00  90D8               	bcf	status,0,c
 11240  002F02  3625               	rlcf	___lwdiv@divisor,f,c
 11241  002F04  3626               	rlcf	___lwdiv@divisor+1,f,c
 11242  002F06  2A29               	incf	___lwdiv@counter,f,c
 11243  002F08  D000               	goto	l4798
 11244  002F0A                     l4798:
 11245  002F0A  BE26               	btfsc	___lwdiv@divisor+1,7,c
 11246  002F0C  D002               	goto	l4800
 11247  002F0E  D7F8               	goto	l4796
 11248  002F10  D000               	goto	l4800
 11249  002F12                     l4800:
 11250  002F12  90D8               	bcf	status,0,c
 11251  002F14  3627               	rlcf	___lwdiv@quotient,f,c
 11252  002F16  3628               	rlcf	___lwdiv@quotient+1,f,c
 11253  002F18  5025               	movf	___lwdiv@divisor,w,c
 11254  002F1A  5C23               	subwf	___lwdiv@dividend,w,c
 11255  002F1C  5026               	movf	___lwdiv@divisor+1,w,c
 11256  002F1E  5824               	subwfb	___lwdiv@dividend+1,w,c
 11257  002F20  A0D8               	btfss	status,0,c
 11258  002F22  D006               	goto	l4808
 11259  002F24  5025               	movf	___lwdiv@divisor,w,c
 11260  002F26  5E23               	subwf	___lwdiv@dividend,f,c
 11261  002F28  5026               	movf	___lwdiv@divisor+1,w,c
 11262  002F2A  5A24               	subwfb	___lwdiv@dividend+1,f,c
 11263  002F2C  8027               	bsf	___lwdiv@quotient,0,c
 11264  002F2E  D000               	goto	l4808
 11265  002F30                     l4808:
 11266  002F30  90D8               	bcf	status,0,c
 11267  002F32  3226               	rrcf	___lwdiv@divisor+1,f,c
 11268  002F34  3225               	rrcf	___lwdiv@divisor,f,c
 11269  002F36  2E29               	decfsz	___lwdiv@counter,f,c
 11270  002F38  D7EC               	goto	l4800
 11271  002F3A  D000               	goto	l1701
 11272  002F3C                     l1701:
 11273  002F3C  C027  F023         	movff	___lwdiv@quotient,?___lwdiv
 11274  002F40  C028  F024         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11275  002F44  0012               	return		;funcret
 11276  002F46                     __end_of___lwdiv:
 11277                           	opt stack 0
 11278                           tblptru	equ	0xFF8
 11279                           tblptrh	equ	0xFF7
 11280                           tblptrl	equ	0xFF6
 11281                           tablat	equ	0xFF5
 11282                           prodh	equ	0xFF4
 11283                           prodl	equ	0xFF3
 11284                           intcon	equ	0xFF2
 11285                           postinc0	equ	0xFEE
 11286                           wreg	equ	0xFE8
 11287                           indf1	equ	0xFE7
 11288                           postdec1	equ	0xFE5
 11289                           fsr1h	equ	0xFE2
 11290                           fsr1l	equ	0xFE1
 11291                           indf2	equ	0xFDF
 11292                           postinc2	equ	0xFDE
 11293                           postdec2	equ	0xFDD
 11294                           plusw2	equ	0xFDB
 11295                           fsr2h	equ	0xFDA
 11296                           fsr2l	equ	0xFD9
 11297                           status	equ	0xFD8
 11298                           
 11299 ;; *************** function _tlc5947_count_channels *****************
 11300 ;; Defined at:
 11301 ;;		line 97 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11302 ;; Parameters:    Size  Location     Type
 11303 ;;		None
 11304 ;; Auto vars:     Size  Location     Type
 11305 ;;  pos             1   44[COMRAM] unsigned char 
 11306 ;;  data            1   43[COMRAM] unsigned char 
 11307 ;;  old_data        1   42[COMRAM] unsigned char 
 11308 ;; Return value:  Size  Location     Type
 11309 ;;		None               void
 11310 ;; Registers used:
 11311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11317 ;;      Params:         0       0       0       0       0       0       0       0       0
 11318 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11320 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11321 ;;Total ram usage:        3 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:    6
 11324 ;; This function calls:
 11325 ;;		_ReadSPI
 11326 ;;		_WriteSPI
 11327 ;;		___awdiv
 11328 ;;		_tlc5947_update
 11329 ;; This function is called by:
 11330 ;;		_InitializeSystem
 11331 ;;		_ProcessCDC
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335                           	psect	text49
 11336  002C84                     __ptext49:
 11337                           	opt stack 0
 11338  002C84                     _tlc5947_count_channels:
 11339                           	opt stack 22
 11340                           
 11341                           ;tlc5947.c: 99: uint8_t pos, data, old_data;
 11342                           ;tlc5947.c: 101: tlc_request = -1;
 11343                           
 11344                           ;incstack = 0
 11345  002C84  0100               	movlb	0	; () banked
 11346  002C86  69A0               	setf	_tlc_request& (0+255),b
 11347                           
 11348                           ; BSR set to: 0
 11349                           ;tlc5947.c: 104: tlc_nbytes = 72;
 11350  002C88  0E48               	movlw	72
 11351  002C8A  6E5F               	movwf	_tlc_nbytes,c
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;tlc5947.c: 107: WriteSPI(tcl5947_testbyte0);
 11355  002C8C  0100               	movlb	0	; () banked
 11356  002C8E  51DB               	movf	_tcl5947_testbyte0& (0+255),w,b
 11357  002C90  EC88  F019         	call	_WriteSPI
 11358                           
 11359                           ;tlc5947.c: 108: WriteSPI(tcl5947_testbyte1);
 11360  002C94  0100               	movlb	0	; () banked
 11361  002C96  51DC               	movf	_tcl5947_testbyte1& (0+255),w,b
 11362  002C98  EC88  F019         	call	_WriteSPI
 11363                           
 11364                           ;tlc5947.c: 111: for (pos = 1; pos <= 72; pos++) {
 11365  002C9C  0E01               	movlw	1
 11366  002C9E  6E2D               	movwf	tlc5947_count_channels@pos,c
 11367  002CA0                     l4980:
 11368  002CA0  0E48               	movlw	72
 11369  002CA2  642D               	cpfsgt	tlc5947_count_channels@pos,c
 11370  002CA4  D001               	goto	l4984
 11371  002CA6  D014               	goto	l4996
 11372  002CA8                     l4984:
 11373                           
 11374                           ;tlc5947.c: 112: data = ReadSPI();
 11375  002CA8  ECC9  F019         	call	_ReadSPI	;wreg free
 11376  002CAC  6E2C               	movwf	tlc5947_count_channels@data,c
 11377                           
 11378                           ;tlc5947.c: 113: if ((data == tcl5947_testbyte1) && (old_data == tcl5947_testbyte0)) {
 11379  002CAE  0100               	movlb	0	; () banked
 11380  002CB0  51DC               	movf	_tcl5947_testbyte1& (0+255),w,b
 11381  002CB2  182C               	xorwf	tlc5947_count_channels@data,w,c
 11382  002CB4  A4D8               	btfss	status,2,c
 11383  002CB6  D008               	goto	l815
 11384                           
 11385                           ; BSR set to: 0
 11386  002CB8  0100               	movlb	0	; () banked
 11387  002CBA  51DB               	movf	_tcl5947_testbyte0& (0+255),w,b
 11388  002CBC  182B               	xorwf	tlc5947_count_channels@old_data,w,c
 11389  002CBE  A4D8               	btfss	status,2,c
 11390  002CC0  D003               	goto	l815
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;tlc5947.c: 114: tlc_nbytes = pos;
 11394  002CC2  C02D  F05F         	movff	tlc5947_count_channels@pos,_tlc_nbytes
 11395                           
 11396                           ;tlc5947.c: 115: break;
 11397  002CC6  D004               	goto	l4996
 11398  002CC8                     l815:
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;tlc5947.c: 116: }
 11402                           ;tlc5947.c: 117: old_data = data;
 11403  002CC8  C02C  F02B         	movff	tlc5947_count_channels@data,tlc5947_count_channels@old_data
 11404                           
 11405                           ; BSR set to: 0
 11406  002CCC  2A2D               	incf	tlc5947_count_channels@pos,f,c
 11407  002CCE  D7E8               	goto	l4980
 11408  002CD0                     l4996:
 11409                           
 11410                           ;tlc5947.c: 118: }
 11411                           ;tlc5947.c: 119: tlc5947_update();
 11412  002CD0  ECBE  F018         	call	_tlc5947_update	;wreg free
 11413                           
 11414                           ;tlc5947.c: 120: tlc_nchannels = tlc_nbytes * 2 / 3;
 11415  002CD4  505F               	movf	_tlc_nbytes,w,c
 11416  002CD6  0D02               	mullw	2
 11417  002CD8  CFF3 F023          	movff	prodl,___awdiv@dividend
 11418  002CDC  CFF4 F024          	movff	prodh,___awdiv@dividend+1
 11419  002CE0  0E00               	movlw	0
 11420  002CE2  6E26               	movwf	___awdiv@divisor+1,c
 11421  002CE4  0E03               	movlw	3
 11422  002CE6  6E25               	movwf	___awdiv@divisor,c
 11423  002CE8  EC26  F015         	call	___awdiv	;wreg free
 11424  002CEC  5023               	movf	?___awdiv,w,c
 11425  002CEE  0100               	movlb	0	; () banked
 11426  002CF0  6FDD               	movwf	_tlc_nchannels& (0+255),b
 11427                           
 11428                           ; BSR set to: 0
 11429                           ;tlc5947.c: 121: tlc_request = 0;
 11430  002CF2  0E00               	movlw	0
 11431  002CF4  0100               	movlb	0	; () banked
 11432  002CF6  6FA0               	movwf	_tlc_request& (0+255),b
 11433                           
 11434                           ; BSR set to: 0
 11435  002CF8  0012               	return		;funcret
 11436  002CFA                     __end_of_tlc5947_count_channels:
 11437                           	opt stack 0
 11438                           tblptru	equ	0xFF8
 11439                           tblptrh	equ	0xFF7
 11440                           tblptrl	equ	0xFF6
 11441                           tablat	equ	0xFF5
 11442                           prodh	equ	0xFF4
 11443                           prodl	equ	0xFF3
 11444                           intcon	equ	0xFF2
 11445                           postinc0	equ	0xFEE
 11446                           wreg	equ	0xFE8
 11447                           indf1	equ	0xFE7
 11448                           postdec1	equ	0xFE5
 11449                           fsr1h	equ	0xFE2
 11450                           fsr1l	equ	0xFE1
 11451                           indf2	equ	0xFDF
 11452                           postinc2	equ	0xFDE
 11453                           postdec2	equ	0xFDD
 11454                           plusw2	equ	0xFDB
 11455                           fsr2h	equ	0xFDA
 11456                           fsr2l	equ	0xFD9
 11457                           status	equ	0xFD8
 11458                           
 11459 ;; *************** function _tlc5947_update *****************
 11460 ;; Defined at:
 11461 ;;		line 175 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;		None
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;  x               1   36[COMRAM] unsigned char 
 11466 ;; Return value:  Size  Location     Type
 11467 ;;		None               void
 11468 ;; Registers used:
 11469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11475 ;;      Params:         0       0       0       0       0       0       0       0       0
 11476 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11478 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11479 ;;Total ram usage:        1 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; Hardware stack levels required when called:    5
 11482 ;; This function calls:
 11483 ;;		_WriteSPI
 11484 ;; This function is called by:
 11485 ;;		_tlc5947_count_channels
 11486 ;;		_tlc5947_pwm_readback
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           	psect	text50
 11491  00317C                     __ptext50:
 11492                           	opt stack 0
 11493  00317C                     _tlc5947_update:
 11494                           	opt stack 22
 11495                           
 11496                           ;tlc5947.c: 177: uint8_t x;
 11497                           ;tlc5947.c: 179: for (x = 0; x < tlc_nbytes; x++) {
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;incstack = 0
 11501  00317C  0E00               	movlw	0
 11502  00317E  6E25               	movwf	tlc5947_update@x,c
 11503  003180  D00D               	goto	l4686
 11504  003182                     l4682:
 11505                           
 11506                           ;tlc5947.c: 180: WriteSPI(tlc_memory[x]);
 11507  003182  5025               	movf	tlc5947_update@x,w,c
 11508  003184  0D01               	mullw	1
 11509  003186  0E80               	movlw	low _tlc_memory
 11510  003188  24F3               	addwf	prodl,w,c
 11511  00318A  6ED9               	movwf	fsr2l,c
 11512  00318C  0E01               	movlw	high _tlc_memory
 11513  00318E  20F4               	addwfc	prodh,w,c
 11514  003190  6EDA               	movwf	fsr2h,c
 11515  003192  50DF               	movf	indf2,w,c
 11516  003194  EC88  F019         	call	_WriteSPI
 11517  003198  2A25               	incf	tlc5947_update@x,f,c
 11518  00319A  D000               	goto	l4686
 11519  00319C                     l4686:
 11520  00319C  505F               	movf	_tlc_nbytes,w,c
 11521  00319E  5C25               	subwf	tlc5947_update@x,w,c
 11522  0031A0  A0D8               	btfss	status,0,c
 11523  0031A2  D7EF               	goto	l4682
 11524                           
 11525                           ;tlc5947.c: 181: }
 11526                           ;tlc5947.c: 182: tlc_request = 0;
 11527  0031A4  0E00               	movlw	0
 11528  0031A6  0100               	movlb	0	; () banked
 11529  0031A8  6FA0               	movwf	_tlc_request& (0+255),b
 11530                           
 11531                           ; BSR set to: 0
 11532  0031AA  0012               	return		;funcret
 11533  0031AC                     __end_of_tlc5947_update:
 11534                           	opt stack 0
 11535                           tblptru	equ	0xFF8
 11536                           tblptrh	equ	0xFF7
 11537                           tblptrl	equ	0xFF6
 11538                           tablat	equ	0xFF5
 11539                           prodh	equ	0xFF4
 11540                           prodl	equ	0xFF3
 11541                           intcon	equ	0xFF2
 11542                           postinc0	equ	0xFEE
 11543                           wreg	equ	0xFE8
 11544                           indf1	equ	0xFE7
 11545                           postdec1	equ	0xFE5
 11546                           fsr1h	equ	0xFE2
 11547                           fsr1l	equ	0xFE1
 11548                           indf2	equ	0xFDF
 11549                           postinc2	equ	0xFDE
 11550                           postdec2	equ	0xFDD
 11551                           plusw2	equ	0xFDB
 11552                           fsr2h	equ	0xFDA
 11553                           fsr2l	equ	0xFD9
 11554                           status	equ	0xFD8
 11555                           
 11556 ;; *************** function _WriteSPI *****************
 11557 ;; Defined at:
 11558 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi_writ.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;  data_out        1    wreg     unsigned char 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;  data_out        1   35[COMRAM] unsigned char 
 11563 ;;  TempVar         1   34[COMRAM] unsigned char 
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      char 
 11566 ;; Registers used:
 11567 ;;		wreg
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0
 11574 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11575 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11576 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11577 ;;Total ram usage:        2 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:    4
 11580 ;; This function calls:
 11581 ;;		Nothing
 11582 ;; This function is called by:
 11583 ;;		_tlc5947_count_channels
 11584 ;;		_tlc5947_update
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text51
 11589  003310                     __ptext51:
 11590                           	opt stack 0
 11591  003310                     _WriteSPI:
 11592                           	opt stack 22
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;incstack = 0
 11596                           ;WriteSPI@data_out stored from wreg
 11597  003310  6E24               	movwf	WriteSPI@data_out,c
 11598  003312  CFC9 F023          	movff	4041,WriteSPI@TempVar	;volatile
 11599  003316  969E               	bcf	3998,3,c	;volatile
 11600  003318  9EC6               	bcf	4038,7,c	;volatile
 11601  00331A  C024  FFC9         	movff	WriteSPI@data_out,4041	;volatile
 11602  00331E  BEC6               	btfsc	4038,7,c	;volatile
 11603  003320  D007               	goto	l1162
 11604  003322  D002               	goto	l1164
 11605                           
 11606                           ;	Return value of _WriteSPI is never used
 11607  003324  D005               	goto	l1162
 11608  003326  D000               	goto	l1164
 11609  003328                     l1164:
 11610  003328  B69E               	btfsc	3998,3,c	;volatile
 11611  00332A  D002               	goto	l1162
 11612  00332C  D7FD               	goto	l1164
 11613  00332E  D000               	goto	l1162
 11614  003330                     l1162:
 11615  003330  0012               	return		;funcret
 11616  003332                     __end_of_WriteSPI:
 11617                           	opt stack 0
 11618                           tblptru	equ	0xFF8
 11619                           tblptrh	equ	0xFF7
 11620                           tblptrl	equ	0xFF6
 11621                           tablat	equ	0xFF5
 11622                           prodh	equ	0xFF4
 11623                           prodl	equ	0xFF3
 11624                           intcon	equ	0xFF2
 11625                           postinc0	equ	0xFEE
 11626                           wreg	equ	0xFE8
 11627                           indf1	equ	0xFE7
 11628                           postdec1	equ	0xFE5
 11629                           fsr1h	equ	0xFE2
 11630                           fsr1l	equ	0xFE1
 11631                           indf2	equ	0xFDF
 11632                           postinc2	equ	0xFDE
 11633                           postdec2	equ	0xFDD
 11634                           plusw2	equ	0xFDB
 11635                           fsr2h	equ	0xFDA
 11636                           fsr2l	equ	0xFD9
 11637                           status	equ	0xFD8
 11638                           
 11639 ;; *************** function ___awdiv *****************
 11640 ;; Defined at:
 11641 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;  dividend        2   34[COMRAM] int 
 11644 ;;  divisor         2   36[COMRAM] int 
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;  quotient        2   40[COMRAM] int 
 11647 ;;  sign            1   39[COMRAM] unsigned char 
 11648 ;;  counter         1   38[COMRAM] unsigned char 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  2   34[COMRAM] int 
 11651 ;; Registers used:
 11652 ;;		wreg, status,2, status,0
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11658 ;;      Params:         4       0       0       0       0       0       0       0       0
 11659 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11661 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11662 ;;Total ram usage:        8 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:    4
 11665 ;; This function calls:
 11666 ;;		Nothing
 11667 ;; This function is called by:
 11668 ;;		_tlc5947_count_channels
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           	psect	text52
 11673  002A4C                     __ptext52:
 11674                           	opt stack 0
 11675  002A4C                     ___awdiv:
 11676                           	opt stack 23
 11677                           
 11678                           ;incstack = 0
 11679  002A4C  0E00               	movlw	0
 11680  002A4E  6E28               	movwf	___awdiv@sign,c
 11681  002A50  AE26               	btfss	___awdiv@divisor+1,7,c
 11682  002A52  D007               	goto	l4754
 11683  002A54  6C25               	negf	___awdiv@divisor,c
 11684  002A56  1E26               	comf	___awdiv@divisor+1,f,c
 11685  002A58  B0D8               	btfsc	status,0,c
 11686  002A5A  2A26               	incf	___awdiv@divisor+1,f,c
 11687  002A5C  0E01               	movlw	1
 11688  002A5E  6E28               	movwf	___awdiv@sign,c
 11689  002A60  D000               	goto	l4754
 11690  002A62                     l4754:
 11691  002A62  AE24               	btfss	___awdiv@dividend+1,7,c
 11692  002A64  D007               	goto	l4760
 11693  002A66  6C23               	negf	___awdiv@dividend,c
 11694  002A68  1E24               	comf	___awdiv@dividend+1,f,c
 11695  002A6A  B0D8               	btfsc	status,0,c
 11696  002A6C  2A24               	incf	___awdiv@dividend+1,f,c
 11697  002A6E  0E01               	movlw	1
 11698  002A70  1A28               	xorwf	___awdiv@sign,f,c
 11699  002A72  D000               	goto	l4760
 11700  002A74                     l4760:
 11701  002A74  0E00               	movlw	0
 11702  002A76  6E2A               	movwf	___awdiv@quotient+1,c
 11703  002A78  0E00               	movlw	0
 11704  002A7A  6E29               	movwf	___awdiv@quotient,c
 11705  002A7C  5025               	movf	___awdiv@divisor,w,c
 11706  002A7E  1026               	iorwf	___awdiv@divisor+1,w,c
 11707  002A80  B4D8               	btfsc	status,2,c
 11708  002A82  D021               	goto	l4782
 11709  002A84  0E01               	movlw	1
 11710  002A86  6E27               	movwf	___awdiv@counter,c
 11711  002A88  D005               	goto	l4768
 11712  002A8A                     l4766:
 11713  002A8A  90D8               	bcf	status,0,c
 11714  002A8C  3625               	rlcf	___awdiv@divisor,f,c
 11715  002A8E  3626               	rlcf	___awdiv@divisor+1,f,c
 11716  002A90  2A27               	incf	___awdiv@counter,f,c
 11717  002A92  D000               	goto	l4768
 11718  002A94                     l4768:
 11719  002A94  BE26               	btfsc	___awdiv@divisor+1,7,c
 11720  002A96  D002               	goto	l4770
 11721  002A98  D7F8               	goto	l4766
 11722  002A9A  D000               	goto	l4770
 11723  002A9C                     l4770:
 11724  002A9C  90D8               	bcf	status,0,c
 11725  002A9E  3629               	rlcf	___awdiv@quotient,f,c
 11726  002AA0  362A               	rlcf	___awdiv@quotient+1,f,c
 11727  002AA2  5025               	movf	___awdiv@divisor,w,c
 11728  002AA4  5C23               	subwf	___awdiv@dividend,w,c
 11729  002AA6  5026               	movf	___awdiv@divisor+1,w,c
 11730  002AA8  5824               	subwfb	___awdiv@dividend+1,w,c
 11731  002AAA  A0D8               	btfss	status,0,c
 11732  002AAC  D006               	goto	l4778
 11733  002AAE  5025               	movf	___awdiv@divisor,w,c
 11734  002AB0  5E23               	subwf	___awdiv@dividend,f,c
 11735  002AB2  5026               	movf	___awdiv@divisor+1,w,c
 11736  002AB4  5A24               	subwfb	___awdiv@dividend+1,f,c
 11737  002AB6  8029               	bsf	___awdiv@quotient,0,c
 11738  002AB8  D000               	goto	l4778
 11739  002ABA                     l4778:
 11740  002ABA  90D8               	bcf	status,0,c
 11741  002ABC  3226               	rrcf	___awdiv@divisor+1,f,c
 11742  002ABE  3225               	rrcf	___awdiv@divisor,f,c
 11743  002AC0  2E27               	decfsz	___awdiv@counter,f,c
 11744  002AC2  D7EC               	goto	l4770
 11745  002AC4  D000               	goto	l4782
 11746  002AC6                     l4782:
 11747  002AC6  5028               	movf	___awdiv@sign,w,c
 11748  002AC8  B4D8               	btfsc	status,2,c
 11749  002ACA  D005               	goto	l4786
 11750  002ACC  6C29               	negf	___awdiv@quotient,c
 11751  002ACE  1E2A               	comf	___awdiv@quotient+1,f,c
 11752  002AD0  B0D8               	btfsc	status,0,c
 11753  002AD2  2A2A               	incf	___awdiv@quotient+1,f,c
 11754  002AD4  D000               	goto	l4786
 11755  002AD6                     l4786:
 11756  002AD6  C029  F023         	movff	___awdiv@quotient,?___awdiv
 11757  002ADA  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
 11758  002ADE  D000               	goto	l1362
 11759  002AE0                     l1362:
 11760  002AE0  0012               	return		;funcret
 11761  002AE2                     __end_of___awdiv:
 11762                           	opt stack 0
 11763                           tblptru	equ	0xFF8
 11764                           tblptrh	equ	0xFF7
 11765                           tblptrl	equ	0xFF6
 11766                           tablat	equ	0xFF5
 11767                           prodh	equ	0xFF4
 11768                           prodl	equ	0xFF3
 11769                           intcon	equ	0xFF2
 11770                           postinc0	equ	0xFEE
 11771                           wreg	equ	0xFE8
 11772                           indf1	equ	0xFE7
 11773                           postdec1	equ	0xFE5
 11774                           fsr1h	equ	0xFE2
 11775                           fsr1l	equ	0xFE1
 11776                           indf2	equ	0xFDF
 11777                           postinc2	equ	0xFDE
 11778                           postdec2	equ	0xFDD
 11779                           plusw2	equ	0xFDB
 11780                           fsr2h	equ	0xFDA
 11781                           fsr2l	equ	0xFD9
 11782                           status	equ	0xFD8
 11783                           
 11784 ;; *************** function _ReadSPI *****************
 11785 ;; Defined at:
 11786 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi_read.c"
 11787 ;; Parameters:    Size  Location     Type
 11788 ;;		None
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;  TempVar         1   34[COMRAM] unsigned char 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  1    wreg      unsigned char 
 11793 ;; Registers used:
 11794 ;;		wreg, status,2
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11800 ;;      Params:         0       0       0       0       0       0       0       0       0
 11801 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11803 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11804 ;;Total ram usage:        1 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; Hardware stack levels required when called:    4
 11807 ;; This function calls:
 11808 ;;		Nothing
 11809 ;; This function is called by:
 11810 ;;		_tlc5947_count_channels
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814                           	psect	text53
 11815  003392                     __ptext53:
 11816                           	opt stack 0
 11817  003392                     _ReadSPI:
 11818                           	opt stack 23
 11819                           
 11820                           ;incstack = 0
 11821  003392  CFC9 F023          	movff	4041,ReadSPI@TempVar	;volatile
 11822  003396  969E               	bcf	3998,3,c	;volatile
 11823  003398  0E00               	movlw	0
 11824  00339A  6EC9               	movwf	4041,c	;volatile
 11825  00339C  D000               	goto	l1147
 11826  00339E                     l1147:
 11827  00339E  A69E               	btfss	3998,3,c	;volatile
 11828  0033A0  D7FE               	goto	l1147
 11829  0033A2  50C9               	movf	4041,w,c	;volatile
 11830  0033A4  D000               	goto	l1150
 11831  0033A6                     l1150:
 11832  0033A6  0012               	return		;funcret
 11833  0033A8                     __end_of_ReadSPI:
 11834                           	opt stack 0
 11835                           tblptru	equ	0xFF8
 11836                           tblptrh	equ	0xFF7
 11837                           tblptrl	equ	0xFF6
 11838                           tablat	equ	0xFF5
 11839                           prodh	equ	0xFF4
 11840                           prodl	equ	0xFF3
 11841                           intcon	equ	0xFF2
 11842                           postinc0	equ	0xFEE
 11843                           wreg	equ	0xFE8
 11844                           indf1	equ	0xFE7
 11845                           postdec1	equ	0xFE5
 11846                           fsr1h	equ	0xFE2
 11847                           fsr1l	equ	0xFE1
 11848                           indf2	equ	0xFDF
 11849                           postinc2	equ	0xFDE
 11850                           postdec2	equ	0xFDD
 11851                           plusw2	equ	0xFDB
 11852                           fsr2h	equ	0xFDA
 11853                           fsr2l	equ	0xFD9
 11854                           status	equ	0xFD8
 11855                           
 11856 ;; *************** function _readDeviceID *****************
 11857 ;; Defined at:
 11858 ;;		line 166 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;		None
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;  devID2          1   37[COMRAM] unsigned char 
 11863 ;;  devID1          1   36[COMRAM] unsigned char 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;		None               void
 11866 ;; Registers used:
 11867 ;;		wreg, status,2, status,0
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11873 ;;      Params:         0       0       0       0       0       0       0       0       0
 11874 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11875 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11876 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11877 ;;Total ram usage:        5 bytes
 11878 ;; Hardware stack levels used:    1
 11879 ;; Hardware stack levels required when called:    4
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_InitializeSystem
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text54
 11888  002D66                     __ptext54:
 11889                           	opt stack 0
 11890  002D66                     _readDeviceID:
 11891                           	opt stack 25
 11892                           
 11893                           ;karate.c: 168: uint8_t devID1, devID2;
 11894                           ;karate.c: 170: TBLPTRU = 0x3F;
 11895                           
 11896                           ;incstack = 0
 11897  002D66  0E3F               	movlw	63
 11898  002D68  6EF8               	movwf	tblptru,c	;volatile
 11899                           
 11900                           ;karate.c: 171: TBLPTRH = 0xFF;
 11901  002D6A  68F7               	setf	tblptrh,c	;volatile
 11902                           
 11903                           ;karate.c: 172: TBLPTRL = 0xFE;
 11904  002D6C  0EFE               	movlw	254
 11905  002D6E  6EF6               	movwf	tblptrl,c	;volatile
 11906  002D70  0008               	tblrd		*	;# 
 11907                           
 11908                           ;karate.c: 174: devID1 = TABLAT;
 11909  002D72  CFF5 F025          	movff	tablat,readDeviceID@devID1	;volatile
 11910                           
 11911                           ;karate.c: 176: TBLPTRL = 0xFF;
 11912  002D76  68F6               	setf	tblptrl,c	;volatile
 11913  002D78  0008               	tblrd		*	;# 
 11914                           
 11915                           ;karate.c: 178: devID2 = TABLAT;
 11916  002D7A  CFF5 F026          	movff	tablat,readDeviceID@devID2	;volatile
 11917                           
 11918                           ;karate.c: 180: pic18_devid = ((uint16_t)devID2 << 3);
 11919  002D7E  5026               	movf	readDeviceID@devID2,w,c
 11920  002D80  6E23               	movwf	??_readDeviceID& (0+255),c
 11921  002D82  6A24               	clrf	(??_readDeviceID+1)& (0+255),c
 11922  002D84  90D8               	bcf	status,0,c
 11923  002D86  3623               	rlcf	??_readDeviceID,f,c
 11924  002D88  3624               	rlcf	??_readDeviceID+1,f,c
 11925  002D8A  90D8               	bcf	status,0,c
 11926  002D8C  3623               	rlcf	??_readDeviceID,f,c
 11927  002D8E  3624               	rlcf	??_readDeviceID+1,f,c
 11928  002D90  90D8               	bcf	status,0,c
 11929  002D92  3623               	rlcf	??_readDeviceID,f,c
 11930  002D94  3624               	rlcf	??_readDeviceID+1,f,c
 11931  002D96  C023  F0F1         	movff	??_readDeviceID,_pic18_devid
 11932  002D9A  C024  F0F2         	movff	??_readDeviceID+1,_pic18_devid+1
 11933                           
 11934                           ;karate.c: 181: pic18_devid += ((devID1 && 0xE0) >> 5);
 11935  002D9E  0E00               	movlw	0
 11936  002DA0  6E27               	movwf	_readDeviceID$2783,c
 11937  002DA2  5025               	movf	readDeviceID@devID1,w,c
 11938  002DA4  B4D8               	btfsc	status,2,c
 11939  002DA6  D003               	goto	l5148
 11940  002DA8  0E01               	movlw	1
 11941  002DAA  6E27               	movwf	_readDeviceID$2783,c
 11942  002DAC  D000               	goto	l5148
 11943  002DAE                     l5148:
 11944  002DAE  C027  F023         	movff	_readDeviceID$2783,??_readDeviceID
 11945  002DB2  0E05               	movlw	5
 11946  002DB4  6E24               	movwf	(??_readDeviceID+1)& (0+255),c
 11947  002DB6                     u4275:
 11948  002DB6  90D8               	bcf	status,0,c
 11949  002DB8  3223               	rrcf	??_readDeviceID,f,c
 11950  002DBA  2E24               	decfsz	(??_readDeviceID+1)& (0+255),f,c
 11951  002DBC  D7FC               	goto	u4275
 11952  002DBE  5023               	movf	??_readDeviceID,w,c
 11953  002DC0  0100               	movlb	0	; () banked
 11954  002DC2  27F1               	addwf	_pic18_devid& (0+255),f,b
 11955  002DC4  0E00               	movlw	0
 11956  002DC6  23F2               	addwfc	(_pic18_devid+1)& (0+255),f,b
 11957                           
 11958                           ; BSR set to: 0
 11959  002DC8  0012               	return		;funcret
 11960  002DCA                     __end_of_readDeviceID:
 11961                           	opt stack 0
 11962                           tblptru	equ	0xFF8
 11963                           tblptrh	equ	0xFF7
 11964                           tblptrl	equ	0xFF6
 11965                           tablat	equ	0xFF5
 11966                           prodh	equ	0xFF4
 11967                           prodl	equ	0xFF3
 11968                           intcon	equ	0xFF2
 11969                           postinc0	equ	0xFEE
 11970                           wreg	equ	0xFE8
 11971                           indf1	equ	0xFE7
 11972                           postdec1	equ	0xFE5
 11973                           fsr1h	equ	0xFE2
 11974                           fsr1l	equ	0xFE1
 11975                           indf2	equ	0xFDF
 11976                           postinc2	equ	0xFDE
 11977                           postdec2	equ	0xFDD
 11978                           plusw2	equ	0xFDB
 11979                           fsr2h	equ	0xFDA
 11980                           fsr2l	equ	0xFD9
 11981                           status	equ	0xFD8
 11982                           
 11983 ;; *************** function _USBRegisterFix *****************
 11984 ;; Defined at:
 11985 ;;		line 38 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;		None
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;		None
 11990 ;; Return value:  Size  Location     Type
 11991 ;;		None               void
 11992 ;; Registers used:
 11993 ;;		wreg, status,2, status,0
 11994 ;; Tracked objects:
 11995 ;;		On entry : 0/0
 11996 ;;		On exit  : 0/0
 11997 ;;		Unchanged: 0/0
 11998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11999 ;;      Params:         0       0       0       0       0       0       0       0       0
 12000 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12002 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12003 ;;Total ram usage:        0 bytes
 12004 ;; Hardware stack levels used:    1
 12005 ;; Hardware stack levels required when called:    4
 12006 ;; This function calls:
 12007 ;;		Nothing
 12008 ;; This function is called by:
 12009 ;;		_InitializeSystem
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           	psect	text55
 12014  001DE0                     __ptext55:
 12015                           	opt stack 0
 12016  001DE0                     _USBRegisterFix:
 12017                           	opt stack 25
 12018                           
 12019                           ;usb_hal_fixes.c: 39: if (pic18_devid == 0x02E0) {
 12020                           
 12021                           ; BSR set to: 0
 12022                           ;incstack = 0
 12023  001DE0  0EE0               	movlw	224
 12024  001DE2  0100               	movlb	0	; () banked
 12025  001DE4  19F1               	xorwf	_pic18_devid& (0+255),w,b
 12026  001DE6  E13B               	bnz	l5172
 12027  001DE8  0E02               	movlw	2
 12028  001DEA  0100               	movlb	0	; () banked
 12029  001DEC  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 12030  001DEE  A4D8               	btfss	status,2,c
 12031  001DF0  D036               	goto	l5172
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;usb_hal_fixes.c: 41: U1ADDR_R = (unsigned char*)0xF63;
 12035  001DF2  0E63               	movlw	99
 12036  001DF4  0100               	movlb	0	; () banked
 12037  001DF6  6FC9               	movwf	_U1ADDR_R& (0+255),b
 12038  001DF8  0E0F               	movlw	15
 12039  001DFA  0100               	movlb	0	; () banked
 12040  001DFC  6FCA               	movwf	(_U1ADDR_R+1)& (0+255),b
 12041                           
 12042                           ;usb_hal_fixes.c: 42: U1IE_R = (unsigned char*)0xF64;
 12043  001DFE  0E64               	movlw	100
 12044  001E00  0100               	movlb	0	; () banked
 12045  001E02  6FD5               	movwf	_U1IE_R& (0+255),b
 12046  001E04  0E0F               	movlw	15
 12047  001E06  0100               	movlb	0	; () banked
 12048  001E08  6FD6               	movwf	(_U1IE_R+1)& (0+255),b
 12049                           
 12050                           ;usb_hal_fixes.c: 43: U1IR_R = (unsigned char*)0xF65;
 12051  001E0A  0E65               	movlw	101
 12052  001E0C  0100               	movlb	0	; () banked
 12053  001E0E  6FD7               	movwf	_U1IR_R& (0+255),b
 12054  001E10  0E0F               	movlw	15
 12055  001E12  0100               	movlb	0	; () banked
 12056  001E14  6FD8               	movwf	(_U1IR_R+1)& (0+255),b
 12057                           
 12058                           ;usb_hal_fixes.c: 44: U1EIR_R = (unsigned char*)0xF67;
 12059  001E16  0E67               	movlw	103
 12060  001E18  0100               	movlb	0	; () banked
 12061  001E1A  6FD1               	movwf	_U1EIR_R& (0+255),b
 12062  001E1C  0E0F               	movlw	15
 12063  001E1E  0100               	movlb	0	; () banked
 12064  001E20  6FD2               	movwf	(_U1EIR_R+1)& (0+255),b
 12065                           
 12066                           ;usb_hal_fixes.c: 45: U1EIE_R = (unsigned char*)0xF66;
 12067  001E22  0E66               	movlw	102
 12068  001E24  0100               	movlb	0	; () banked
 12069  001E26  6FCF               	movwf	_U1EIE_R& (0+255),b
 12070  001E28  0E0F               	movlw	15
 12071  001E2A  0100               	movlb	0	; () banked
 12072  001E2C  6FD0               	movwf	(_U1EIE_R+1)& (0+255),b
 12073                           
 12074                           ;usb_hal_fixes.c: 46: U1CON_R = (unsigned char*)0xF60;
 12075  001E2E  0E60               	movlw	96
 12076  001E30  0100               	movlb	0	; () banked
 12077  001E32  6FCD               	movwf	_U1CON_R& (0+255),b
 12078  001E34  0E0F               	movlw	15
 12079  001E36  0100               	movlb	0	; () banked
 12080  001E38  6FCE               	movwf	(_U1CON_R+1)& (0+255),b
 12081                           
 12082                           ;usb_hal_fixes.c: 47: U1EP0_R = (unsigned char*)0xF6A;
 12083  001E3A  0E6A               	movlw	106
 12084  001E3C  6E5D               	movwf	_U1EP0_R,c
 12085  001E3E  0E0F               	movlw	15
 12086  001E40  6E5E               	movwf	_U1EP0_R+1,c
 12087                           
 12088                           ;usb_hal_fixes.c: 48: U1EP1_R = (unsigned char*)0xF6B;
 12089  001E42  0E6B               	movlw	107
 12090  001E44  0100               	movlb	0	; () banked
 12091  001E46  6FD3               	movwf	_U1EP1_R& (0+255),b
 12092  001E48  0E0F               	movlw	15
 12093  001E4A  0100               	movlb	0	; () banked
 12094  001E4C  6FD4               	movwf	(_U1EP1_R+1)& (0+255),b
 12095                           
 12096                           ;usb_hal_fixes.c: 49: U1CNFG1_R = (unsigned char*)0xF62;
 12097  001E4E  0E62               	movlw	98
 12098  001E50  0100               	movlb	0	; () banked
 12099  001E52  6FCB               	movwf	_U1CNFG1_R& (0+255),b
 12100  001E54  0E0F               	movlw	15
 12101  001E56  0100               	movlb	0	; () banked
 12102  001E58  6FCC               	movwf	(_U1CNFG1_R+1)& (0+255),b
 12103                           
 12104                           ;usb_hal_fixes.c: 50: U1STAT_R = (unsigned char*)0xF61;
 12105  001E5A  0E61               	movlw	97
 12106  001E5C  D035               	goto	L25
 12107  001E5E                     l5172:
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;usb_hal_fixes.c: 53: U1ADDR_R = (unsigned char*)0xF6E;
 12111  001E5E  0E6E               	movlw	110
 12112  001E60  0100               	movlb	0	; () banked
 12113  001E62  6FC9               	movwf	_U1ADDR_R& (0+255),b
 12114  001E64  0E0F               	movlw	15
 12115  001E66  0100               	movlb	0	; () banked
 12116  001E68  6FCA               	movwf	(_U1ADDR_R+1)& (0+255),b
 12117                           
 12118                           ;usb_hal_fixes.c: 54: U1IE_R = (unsigned char*)0xF69;
 12119  001E6A  0E69               	movlw	105
 12120  001E6C  0100               	movlb	0	; () banked
 12121  001E6E  6FD5               	movwf	_U1IE_R& (0+255),b
 12122  001E70  0E0F               	movlw	15
 12123  001E72  0100               	movlb	0	; () banked
 12124  001E74  6FD6               	movwf	(_U1IE_R+1)& (0+255),b
 12125                           
 12126                           ;usb_hal_fixes.c: 55: U1IR_R = (unsigned char*)0xF68;
 12127  001E76  0E68               	movlw	104
 12128  001E78  0100               	movlb	0	; () banked
 12129  001E7A  6FD7               	movwf	_U1IR_R& (0+255),b
 12130  001E7C  0E0F               	movlw	15
 12131  001E7E  0100               	movlb	0	; () banked
 12132  001E80  6FD8               	movwf	(_U1IR_R+1)& (0+255),b
 12133                           
 12134                           ;usb_hal_fixes.c: 56: U1EIR_R = (unsigned char*)0xF6A;
 12135  001E82  0E6A               	movlw	106
 12136  001E84  0100               	movlb	0	; () banked
 12137  001E86  6FD1               	movwf	_U1EIR_R& (0+255),b
 12138  001E88  0E0F               	movlw	15
 12139  001E8A  0100               	movlb	0	; () banked
 12140  001E8C  6FD2               	movwf	(_U1EIR_R+1)& (0+255),b
 12141                           
 12142                           ;usb_hal_fixes.c: 57: U1EIE_R = (unsigned char*)0xF6B;
 12143  001E8E  0E6B               	movlw	107
 12144  001E90  0100               	movlb	0	; () banked
 12145  001E92  6FCF               	movwf	_U1EIE_R& (0+255),b
 12146  001E94  0E0F               	movlw	15
 12147  001E96  0100               	movlb	0	; () banked
 12148  001E98  6FD0               	movwf	(_U1EIE_R+1)& (0+255),b
 12149                           
 12150                           ;usb_hal_fixes.c: 58: U1CON_R = (unsigned char*)0xF6D;
 12151  001E9A  0E6D               	movlw	109
 12152  001E9C  0100               	movlb	0	; () banked
 12153  001E9E  6FCD               	movwf	_U1CON_R& (0+255),b
 12154  001EA0  0E0F               	movlw	15
 12155  001EA2  0100               	movlb	0	; () banked
 12156  001EA4  6FCE               	movwf	(_U1CON_R+1)& (0+255),b
 12157                           
 12158                           ;usb_hal_fixes.c: 59: U1EP0_R = (unsigned char*)0xF70;
 12159  001EA6  0E70               	movlw	112
 12160  001EA8  6E5D               	movwf	_U1EP0_R,c
 12161  001EAA  0E0F               	movlw	15
 12162  001EAC  6E5E               	movwf	_U1EP0_R+1,c
 12163                           
 12164                           ;usb_hal_fixes.c: 60: U1EP1_R = (unsigned char*)0xF71;
 12165  001EAE  0E71               	movlw	113
 12166  001EB0  0100               	movlb	0	; () banked
 12167  001EB2  6FD3               	movwf	_U1EP1_R& (0+255),b
 12168  001EB4  0E0F               	movlw	15
 12169  001EB6  0100               	movlb	0	; () banked
 12170  001EB8  6FD4               	movwf	(_U1EP1_R+1)& (0+255),b
 12171                           
 12172                           ;usb_hal_fixes.c: 61: U1CNFG1_R = (unsigned char*)0xF6F;
 12173  001EBA  0E6F               	movlw	111
 12174  001EBC  0100               	movlb	0	; () banked
 12175  001EBE  6FCB               	movwf	_U1CNFG1_R& (0+255),b
 12176  001EC0  0E0F               	movlw	15
 12177  001EC2  0100               	movlb	0	; () banked
 12178  001EC4  6FCC               	movwf	(_U1CNFG1_R+1)& (0+255),b
 12179                           
 12180                           ;usb_hal_fixes.c: 62: U1STAT_R = (unsigned char*)0xF6C;
 12181  001EC6  0E6C               	movlw	108
 12182  001EC8                     L25:
 12183  001EC8  0100               	movlb	0	; () banked
 12184  001ECA  6FD9               	movwf	_U1STAT_R& (0+255),b
 12185  001ECC  0E0F               	movlw	15
 12186  001ECE  0100               	movlb	0	; () banked
 12187  001ED0  6FDA               	movwf	(_U1STAT_R+1)& (0+255),b
 12188  001ED2  D000               	goto	l1060
 12189  001ED4                     l1060:
 12190                           
 12191                           ; BSR set to: 0
 12192  001ED4  0012               	return		;funcret
 12193  001ED6                     __end_of_USBRegisterFix:
 12194                           	opt stack 0
 12195                           tblptru	equ	0xFF8
 12196                           tblptrh	equ	0xFF7
 12197                           tblptrl	equ	0xFF6
 12198                           tablat	equ	0xFF5
 12199                           prodh	equ	0xFF4
 12200                           prodl	equ	0xFF3
 12201                           intcon	equ	0xFF2
 12202                           postinc0	equ	0xFEE
 12203                           wreg	equ	0xFE8
 12204                           indf1	equ	0xFE7
 12205                           postdec1	equ	0xFE5
 12206                           fsr1h	equ	0xFE2
 12207                           fsr1l	equ	0xFE1
 12208                           indf2	equ	0xFDF
 12209                           postinc2	equ	0xFDE
 12210                           postdec2	equ	0xFDD
 12211                           plusw2	equ	0xFDB
 12212                           fsr2h	equ	0xFDA
 12213                           fsr2l	equ	0xFD9
 12214                           status	equ	0xFD8
 12215                           
 12216 ;; *************** function _USBDeviceInit *****************
 12217 ;; Defined at:
 12218 ;;		line 298 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;		None
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;  i               1   42[COMRAM] unsigned char 
 12223 ;; Return value:  Size  Location     Type
 12224 ;;		None               void
 12225 ;; Registers used:
 12226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12232 ;;      Params:         0       0       0       0       0       0       0       0       0
 12233 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12234 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12235 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12236 ;;Total ram usage:        1 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:    5
 12239 ;; This function calls:
 12240 ;;		_USBDisableInterrupts
 12241 ;;		_memset
 12242 ;; This function is called by:
 12243 ;;		_USBDeviceTasks
 12244 ;;		_InitializeSystem
 12245 ;; This function uses a non-reentrant model
 12246 ;;
 12247                           
 12248                           	psect	text56
 12249  0016A4                     __ptext56:
 12250                           	opt stack 0
 12251  0016A4                     _USBDeviceInit:
 12252                           	opt stack 23
 12253                           
 12254                           ;usb_device.c: 300: uint8_t i;
 12255                           ;usb_device.c: 302: USBDisableInterrupts();
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;incstack = 0
 12259  0016A4  EC1C  F019         	call	_USBDisableInterrupts	;wreg free
 12260                           
 12261                           ;usb_device.c: 305: {*U1EIR_R = 0;};
 12262  0016A8  C0D1  FFD9         	movff	_U1EIR_R,fsr2l
 12263  0016AC  C0D2  FFDA         	movff	_U1EIR_R+1,fsr2h
 12264  0016B0  0E00               	movlw	0
 12265  0016B2  6EDF               	movwf	indf2,c
 12266                           
 12267                           ;usb_device.c: 308: {*U1IR_R = 0;};
 12268  0016B4  C0D7  FFD9         	movff	_U1IR_R,fsr2l
 12269  0016B8  C0D8  FFDA         	movff	_U1IR_R+1,fsr2h
 12270  0016BC  0E00               	movlw	0
 12271  0016BE  6EDF               	movwf	indf2,c
 12272                           
 12273                           ;usb_device.c: 311: *U1EP0_R = 0;
 12274  0016C0  C05D  FFD9         	movff	_U1EP0_R,fsr2l
 12275  0016C4  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
 12276  0016C8  0E00               	movlw	0
 12277  0016CA  6EDF               	movwf	indf2,c
 12278                           
 12279                           ;usb_device.c: 313: memset((void*)&*U1EP1_R,0x00,(2));;
 12280  0016CC  C0D3  F023         	movff	_U1EP1_R,memset@p1
 12281  0016D0  C0D4  F024         	movff	_U1EP1_R+1,memset@p1+1
 12282  0016D4  0E00               	movlw	0
 12283  0016D6  6E26               	movwf	memset@c+1,c
 12284  0016D8  0E00               	movlw	0
 12285  0016DA  6E25               	movwf	memset@c,c
 12286  0016DC  0E00               	movlw	0
 12287  0016DE  6E28               	movwf	memset@n+1,c
 12288  0016E0  0E02               	movlw	2
 12289  0016E2  6E27               	movwf	memset@n,c
 12290  0016E4  EC05  F019         	call	_memset	;wreg free
 12291                           
 12292                           ;usb_device.c: 315: { *U1CNFG1_R = 0x10 | 0x00 | 0x04 | 0x02; *U1EIE_R = 0x9F; UIE = 0x3
      +                          9 | 0x40 | 0x02; };
 12293  0016E8  C0CB  FFD9         	movff	_U1CNFG1_R,fsr2l
 12294  0016EC  C0CC  FFDA         	movff	_U1CNFG1_R+1,fsr2h
 12295  0016F0  0E16               	movlw	22
 12296  0016F2  6EDF               	movwf	indf2,c
 12297  0016F4  C0CF  FFD9         	movff	_U1EIE_R,fsr2l
 12298  0016F8  C0D0  FFDA         	movff	_U1EIE_R+1,fsr2h
 12299  0016FC  0E9F               	movlw	159
 12300  0016FE  6EDF               	movwf	indf2,c
 12301  001700  0E7B               	movlw	123
 12302  001702  6E69               	movwf	3945,c	;volatile
 12303                           
 12304                           ;usb_device.c: 318: ;
 12305                           ;usb_device.c: 321: ;
 12306                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12307  001704  0E00               	movlw	0
 12308  001706  6E2B               	movwf	USBDeviceInit@i,c
 12309  001708  D00E               	goto	l4462
 12310  00170A  D010               	goto	l132
 12311  00170C                     l4458:
 12312                           
 12313                           ;usb_device.c: 325: {
 12314                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 12315  00170C  502B               	movf	USBDeviceInit@i,w,c
 12316  00170E  0D04               	mullw	4
 12317  001710  0E00               	movlw	0
 12318  001712  24F3               	addwf	prodl,w,c
 12319  001714  6ED9               	movwf	fsr2l,c
 12320  001716  0E04               	movlw	4
 12321  001718  20F4               	addwfc	prodh,w,c
 12322  00171A  6EDA               	movwf	fsr2h,c
 12323  00171C  6ADE               	clrf	postinc2,c
 12324  00171E  6ADE               	clrf	postinc2,c
 12325  001720  6ADE               	clrf	postinc2,c
 12326  001722  6ADD               	clrf	postdec2,c
 12327  001724  2A2B               	incf	USBDeviceInit@i,f,c
 12328  001726                     l4462:
 12329  001726  0E0B               	movlw	11
 12330  001728  642B               	cpfsgt	USBDeviceInit@i,c
 12331  00172A  D7F0               	goto	l4458
 12332  00172C                     l132:
 12333                           
 12334                           ;usb_device.c: 327: }
 12335                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 12336  00172C  8C6D               	bsf	3949,6,c	;volatile
 12337                           
 12338                           ;usb_device.c: 333: *U1ADDR_R = 0x00;
 12339  00172E  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
 12340  001732  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
 12341  001736  0E00               	movlw	0
 12342  001738  6EDF               	movwf	indf2,c
 12343                           
 12344                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 12345  00173A  986D               	bcf	3949,4,c	;volatile
 12346                           
 12347                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 12348  00173C  9C6D               	bcf	3949,6,c	;volatile
 12349                           
 12350                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 12351  00173E  D00C               	goto	l4478
 12352  001740                     l4470:
 12353                           
 12354                           ;usb_device.c: 343: {
 12355                           ;usb_device.c: 344: (UIR &= 0xF7);
 12356  001740  9668               	bcf	3944,3,c	;volatile
 12357                           
 12358                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 12359  001742  0E00               	movlw	0
 12360  001744  6E59               	movwf	_inPipes+3,c
 12361                           
 12362                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 12363  001746  0E00               	movlw	0
 12364  001748  0100               	movlb	0	; () banked
 12365  00174A  6F6D               	movwf	(_outPipes+3)& (0+255),b
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 12369  00174C  0E00               	movlw	0
 12370  00174E  0100               	movlb	0	; () banked
 12371  001750  6F6F               	movwf	(_outPipes+5)& (0+255),b
 12372  001752  0E00               	movlw	0
 12373  001754  6F6E               	movwf	(_outPipes+4)& (0+255),b
 12374  001756  D000               	goto	l4478
 12375  001758                     l4478:
 12376  001758  B668               	btfsc	3944,3,c	;volatile
 12377  00175A  D7F2               	goto	l4470
 12378                           
 12379                           ;usb_device.c: 349: }
 12380                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 12381  00175C  0E01               	movlw	1
 12382  00175E  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12383                           
 12384                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 12385  001760  0E01               	movlw	1
 12386  001762  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12387                           
 12388                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 12389  001764  0E00               	movlw	0
 12390  001766  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12391                           
 12392                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 12393  001768  0E00               	movlw	0
 12394  00176A  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12395                           
 12396                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 12397  00176C  0E00               	movlw	0
 12398  00176E  0100               	movlb	0	; () banked
 12399  001770  6F96               	movwf	_USBBusIsSuspended& (0+255),b
 12400                           
 12401                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 12402  001772  0E00               	movlw	0
 12403  001774  6E2B               	movwf	USBDeviceInit@i,c
 12404  001776                     l4482:
 12405                           
 12406                           ; BSR set to: 0
 12407  001776  0E02               	movlw	2
 12408  001778  642B               	cpfsgt	USBDeviceInit@i,c
 12409  00177A  D001               	goto	l4486
 12410                           
 12411                           ; BSR set to: 0
 12412  00177C  D02E               	goto	l4492
 12413  00177E                     l4486:
 12414                           
 12415                           ;usb_device.c: 363: {
 12416                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 12417  00177E  502B               	movf	USBDeviceInit@i,w,c
 12418  001780  0D02               	mullw	2
 12419  001782  0E3E               	movlw	low _pBDTEntryIn
 12420  001784  24F3               	addwf	prodl,w,c
 12421  001786  6ED9               	movwf	fsr2l,c
 12422  001788  0E00               	movlw	high _pBDTEntryIn
 12423  00178A  20F4               	addwfc	prodh,w,c
 12424  00178C  6EDA               	movwf	fsr2h,c
 12425  00178E  0E00               	movlw	0
 12426  001790  6EDE               	movwf	postinc2,c
 12427  001792  0E00               	movlw	0
 12428  001794  6EDD               	movwf	postdec2,c
 12429                           
 12430                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 12431  001796  502B               	movf	USBDeviceInit@i,w,c
 12432  001798  0D02               	mullw	2
 12433  00179A  0E72               	movlw	low _pBDTEntryOut
 12434  00179C  24F3               	addwf	prodl,w,c
 12435  00179E  6ED9               	movwf	fsr2l,c
 12436  0017A0  0E00               	movlw	high _pBDTEntryOut
 12437  0017A2  20F4               	addwfc	prodh,w,c
 12438  0017A4  6EDA               	movwf	fsr2h,c
 12439  0017A6  0E00               	movlw	0
 12440  0017A8  6EDE               	movwf	postinc2,c
 12441  0017AA  0E00               	movlw	0
 12442  0017AC  6EDD               	movwf	postdec2,c
 12443                           
 12444                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 12445  0017AE  502B               	movf	USBDeviceInit@i,w,c
 12446  0017B0  0D01               	mullw	1
 12447  0017B2  0E7C               	movlw	low _ep_data_in
 12448  0017B4  24F3               	addwf	prodl,w,c
 12449  0017B6  6ED9               	movwf	fsr2l,c
 12450  0017B8  0E00               	movlw	high _ep_data_in
 12451  0017BA  20F4               	addwfc	prodh,w,c
 12452  0017BC  6EDA               	movwf	fsr2h,c
 12453  0017BE  0E00               	movlw	0
 12454  0017C0  6EDF               	movwf	indf2,c
 12455                           
 12456                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 12457  0017C2  502B               	movf	USBDeviceInit@i,w,c
 12458  0017C4  0D01               	mullw	1
 12459  0017C6  0E7F               	movlw	low _ep_data_out
 12460  0017C8  24F3               	addwf	prodl,w,c
 12461  0017CA  6ED9               	movwf	fsr2l,c
 12462  0017CC  0E00               	movlw	high _ep_data_out
 12463  0017CE  20F4               	addwfc	prodh,w,c
 12464  0017D0  6EDA               	movwf	fsr2h,c
 12465  0017D2  0E00               	movlw	0
 12466  0017D4  6EDF               	movwf	indf2,c
 12467  0017D6  2A2B               	incf	USBDeviceInit@i,f,c
 12468  0017D8  D7CE               	goto	l4482
 12469  0017DA                     l4492:
 12470                           
 12471                           ;usb_device.c: 368: }
 12472                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12473  0017DA  0E08               	movlw	8
 12474  0017DC  6E3E               	movwf	_pBDTEntryIn,c
 12475  0017DE  0E04               	movlw	4
 12476  0017E0  6E3F               	movwf	_pBDTEntryIn+1,c
 12477                           
 12478                           ;usb_device.c: 373: *U1EP0_R = 0x06|0x10;
 12479  0017E2  C05D  FFD9         	movff	_U1EP0_R,fsr2l
 12480  0017E6  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
 12481  0017EA  0E16               	movlw	22
 12482  0017EC  6EDF               	movwf	indf2,c
 12483                           
 12484                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12485  0017EE  0E04               	movlw	4
 12486  0017F0  0104               	movlb	4	; () banked
 12487  0017F2  6F03               	movwf	3,b	;volatile
 12488  0017F4  0E30               	movlw	48
 12489  0017F6  6F02               	movwf	2,b	;volatile
 12490                           
 12491                           ; BSR set to: 4
 12492                           ;usb_device.c: 376: BDT[0].CNT = 8;
 12493  0017F8  0E08               	movlw	8
 12494  0017FA  0104               	movlb	4	; () banked
 12495  0017FC  6F01               	movwf	1,b	;volatile
 12496                           
 12497                           ; BSR set to: 4
 12498                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 12499  0017FE  0E04               	movlw	4
 12500  001800  0104               	movlb	4	; () banked
 12501  001802  6F00               	movwf	0,b	;volatile
 12502                           
 12503                           ; BSR set to: 4
 12504                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 12505  001804  0104               	movlb	4	; () banked
 12506  001806  8F00               	bsf	0,7,b	;volatile
 12507                           
 12508                           ; BSR set to: 4
 12509                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 12510  001808  0E00               	movlw	0
 12511  00180A  6E5C               	movwf	_USBActiveConfiguration,c
 12512                           
 12513                           ; BSR set to: 4
 12514                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 12515  00180C  0E00               	movlw	0
 12516  00180E  0100               	movlb	0	; () banked
 12517  001810  6F97               	movwf	_USBDeviceState& (0+255),b
 12518                           
 12519                           ; BSR set to: 0
 12520  001812  0012               	return		;funcret
 12521  001814                     __end_of_USBDeviceInit:
 12522                           	opt stack 0
 12523                           tblptru	equ	0xFF8
 12524                           tblptrh	equ	0xFF7
 12525                           tblptrl	equ	0xFF6
 12526                           tablat	equ	0xFF5
 12527                           prodh	equ	0xFF4
 12528                           prodl	equ	0xFF3
 12529                           intcon	equ	0xFF2
 12530                           postinc0	equ	0xFEE
 12531                           wreg	equ	0xFE8
 12532                           indf1	equ	0xFE7
 12533                           postdec1	equ	0xFE5
 12534                           fsr1h	equ	0xFE2
 12535                           fsr1l	equ	0xFE1
 12536                           indf2	equ	0xFDF
 12537                           postinc2	equ	0xFDE
 12538                           postdec2	equ	0xFDD
 12539                           plusw2	equ	0xFDB
 12540                           fsr2h	equ	0xFDA
 12541                           fsr2l	equ	0xFD9
 12542                           status	equ	0xFD8
 12543                           
 12544 ;; *************** function _memset *****************
 12545 ;; Defined at:
 12546 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;  p1              2   34[COMRAM] PTR void 
 12549 ;;		 -> UEP1(1), RAM(2047), USBAlternateInterface(2), BDT(48), 
 12550 ;;  c               2   36[COMRAM] int 
 12551 ;;  n               2   38[COMRAM] unsigned int 
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;  p               2   40[COMRAM] PTR unsigned char 
 12554 ;;		 -> UEP1(1), RAM(2047), USBAlternateInterface(2), BDT(48), 
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  2   34[COMRAM] PTR void 
 12557 ;; Registers used:
 12558 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12564 ;;      Params:         6       0       0       0       0       0       0       0       0
 12565 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12566 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12567 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12568 ;;Total ram usage:        8 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; Hardware stack levels required when called:    4
 12571 ;; This function calls:
 12572 ;;		Nothing
 12573 ;; This function is called by:
 12574 ;;		_USBDeviceInit
 12575 ;;		_USBStdSetCfgHandler
 12576 ;; This function uses a non-reentrant model
 12577 ;;
 12578                           
 12579                           	psect	text57
 12580  00320A                     __ptext57:
 12581                           	opt stack 0
 12582  00320A                     _memset:
 12583                           	opt stack 23
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;incstack = 0
 12587  00320A  C023  F029         	movff	memset@p1,memset@p
 12588  00320E  C024  F02A         	movff	memset@p1+1,memset@p+1
 12589  003212  D009               	goto	l3898
 12590  003214                     l3894:
 12591  003214  C029  FFD9         	movff	memset@p,fsr2l
 12592  003218  C02A  FFDA         	movff	memset@p+1,fsr2h
 12593  00321C  C025  FFDF         	movff	memset@c,indf2
 12594  003220  4A29               	infsnz	memset@p,f,c
 12595  003222  2A2A               	incf	memset@p+1,f,c
 12596  003224  D000               	goto	l3898
 12597  003226                     l3898:
 12598  003226  0627               	decf	memset@n,f,c
 12599  003228  A0D8               	btfss	status,0,c
 12600  00322A  0628               	decf	memset@n+1,f,c
 12601  00322C  2827               	incf	memset@n,w,c
 12602  00322E  E1F2               	bnz	l3894
 12603  003230  2828               	incf	memset@n+1,w,c
 12604  003232  A4D8               	btfss	status,2,c
 12605  003234  D7EF               	goto	l3894
 12606                           
 12607                           ;	Return value of _memset is never used
 12608  003236  0012               	return		;funcret
 12609  003238                     __end_of_memset:
 12610                           	opt stack 0
 12611                           tblptru	equ	0xFF8
 12612                           tblptrh	equ	0xFF7
 12613                           tblptrl	equ	0xFF6
 12614                           tablat	equ	0xFF5
 12615                           prodh	equ	0xFF4
 12616                           prodl	equ	0xFF3
 12617                           intcon	equ	0xFF2
 12618                           postinc0	equ	0xFEE
 12619                           wreg	equ	0xFE8
 12620                           indf1	equ	0xFE7
 12621                           postdec1	equ	0xFE5
 12622                           fsr1h	equ	0xFE2
 12623                           fsr1l	equ	0xFE1
 12624                           indf2	equ	0xFDF
 12625                           postinc2	equ	0xFDE
 12626                           postdec2	equ	0xFDD
 12627                           plusw2	equ	0xFDB
 12628                           fsr2h	equ	0xFDA
 12629                           fsr2l	equ	0xFD9
 12630                           status	equ	0xFD8
 12631                           
 12632 ;; *************** function _USBDisableInterrupts *****************
 12633 ;; Defined at:
 12634 ;;		line 31 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;		None
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;		None
 12639 ;; Return value:  Size  Location     Type
 12640 ;;		None               void
 12641 ;; Registers used:
 12642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12648 ;;      Params:         0       0       0       0       0       0       0       0       0
 12649 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12651 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12652 ;;Total ram usage:        0 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:    4
 12655 ;; This function calls:
 12656 ;;		Nothing
 12657 ;; This function is called by:
 12658 ;;		_USBDeviceInit
 12659 ;; This function uses a non-reentrant model
 12660 ;;
 12661                           
 12662                           	psect	text58
 12663  003238                     __ptext58:
 12664                           	opt stack 0
 12665  003238                     _USBDisableInterrupts:
 12666                           	opt stack 23
 12667                           
 12668                           ;usb_hal_fixes.c: 32: if (pic18_devid == 0x02E0) {
 12669                           
 12670                           ;incstack = 0
 12671  003238  0EE0               	movlw	224
 12672  00323A  0100               	movlb	0	; () banked
 12673  00323C  19F1               	xorwf	_pic18_devid& (0+255),w,b
 12674  00323E  E10B               	bnz	l4336
 12675  003240  0E02               	movlw	2
 12676  003242  0100               	movlb	0	; () banked
 12677  003244  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 12678  003246  A4D8               	btfss	status,2,c
 12679  003248  D006               	goto	l4336
 12680                           
 12681                           ; BSR set to: 0
 12682                           ;usb_hal_fixes.c: 33: *PIE3_R &= 0b11111011;
 12683  00324A  C0C1  FFD9         	movff	_PIE3_R,fsr2l
 12684  00324E  C0C2  FFDA         	movff	_PIE3_R+1,fsr2h
 12685  003252  0EFB               	movlw	251
 12686  003254  D005               	goto	L26
 12687  003256                     l4336:
 12688                           
 12689                           ; BSR set to: 0
 12690                           ;usb_hal_fixes.c: 35: *PIR2_R &= 0b11011111;
 12691  003256  C0C3  FFD9         	movff	_PIR2_R,fsr2l
 12692  00325A  C0C4  FFDA         	movff	_PIR2_R+1,fsr2h
 12693  00325E  0EDF               	movlw	223
 12694  003260                     L26:
 12695  003260  16DF               	andwf	indf2,f,c
 12696  003262  D000               	goto	l1055
 12697  003264                     l1055:
 12698                           
 12699                           ; BSR set to: 0
 12700  003264  0012               	return		;funcret
 12701  003266                     __end_of_USBDisableInterrupts:
 12702                           	opt stack 0
 12703                           tblptru	equ	0xFF8
 12704                           tblptrh	equ	0xFF7
 12705                           tblptrl	equ	0xFF6
 12706                           tablat	equ	0xFF5
 12707                           prodh	equ	0xFF4
 12708                           prodl	equ	0xFF3
 12709                           intcon	equ	0xFF2
 12710                           postinc0	equ	0xFEE
 12711                           wreg	equ	0xFE8
 12712                           indf1	equ	0xFE7
 12713                           postdec1	equ	0xFE5
 12714                           fsr1h	equ	0xFE2
 12715                           fsr1l	equ	0xFE1
 12716                           indf2	equ	0xFDF
 12717                           postinc2	equ	0xFDE
 12718                           postdec2	equ	0xFDD
 12719                           plusw2	equ	0xFDB
 12720                           fsr2h	equ	0xFDA
 12721                           fsr2l	equ	0xFD9
 12722                           status	equ	0xFD8
 12723                           
 12724 ;; *************** function _OpenSPI *****************
 12725 ;; Defined at:
 12726 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi_open.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  sync_mode       1    wreg     unsigned char 
 12729 ;;  bus_mode        1   34[COMRAM] unsigned char 
 12730 ;;  smp_phase       1   35[COMRAM] unsigned char 
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;  sync_mode       1   36[COMRAM] unsigned char 
 12733 ;; Return value:  Size  Location     Type
 12734 ;;		None               void
 12735 ;; Registers used:
 12736 ;;		wreg, status,2, status,0
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12742 ;;      Params:         2       0       0       0       0       0       0       0       0
 12743 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12745 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12746 ;;Total ram usage:        3 bytes
 12747 ;; Hardware stack levels used:    1
 12748 ;; Hardware stack levels required when called:    4
 12749 ;; This function calls:
 12750 ;;		Nothing
 12751 ;; This function is called by:
 12752 ;;		_InitializeSystem
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text59
 12757  002F9E                     __ptext59:
 12758                           	opt stack 0
 12759  002F9E                     _OpenSPI:
 12760                           	opt stack 25
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;incstack = 0
 12764                           ;OpenSPI@sync_mode stored from wreg
 12765  002F9E  6E25               	movwf	OpenSPI@sync_mode,c
 12766  002FA0  0E3F               	movlw	63
 12767  002FA2  16C7               	andwf	4039,f,c	;volatile
 12768  002FA4  0E00               	movlw	0
 12769  002FA6  6EC6               	movwf	4038,c	;volatile
 12770  002FA8  5025               	movf	OpenSPI@sync_mode,w,c
 12771  002FAA  12C6               	iorwf	4038,f,c	;volatile
 12772  002FAC  5024               	movf	OpenSPI@smp_phase,w,c
 12773  002FAE  12C7               	iorwf	4039,f,c	;volatile
 12774  002FB0  D005               	goto	l5160
 12775  002FB2                     l1130:
 12776  002FB2  8CC7               	bsf	4039,6,c	;volatile
 12777  002FB4  D013               	goto	l5164
 12778  002FB6                     l1132:
 12779  002FB6  8CC7               	bsf	4039,6,c	;volatile
 12780  002FB8                     l1133:
 12781  002FB8  88C6               	bsf	4038,4,c	;volatile
 12782  002FBA  D010               	goto	l5164
 12783  002FBC                     l5160:
 12784  002FBC  5023               	movf	OpenSPI@bus_mode,w,c
 12785                           
 12786                           ; Switch size 1, requested type "space"
 12787                           ; Number of cases is 3, Range of values is 0 to 3
 12788                           ; switch strategies available:
 12789                           ; Name         Instructions Cycles
 12790                           ; simple_byte           10     6 (average)
 12791                           ;	Chosen strategy is simple_byte
 12792  002FBE  0A00               	xorlw	0	; case 0
 12793  002FC0  B4D8               	btfsc	status,2,c
 12794  002FC2  D7F7               	goto	l1130
 12795  002FC4  0A02               	xorlw	2	; case 2
 12796  002FC6  B4D8               	btfsc	status,2,c
 12797  002FC8  D7F6               	goto	l1132
 12798  002FCA  0A01               	xorlw	1	; case 3
 12799  002FCC  B4D8               	btfsc	status,2,c
 12800  002FCE  D7F4               	goto	l1133
 12801  002FD0  D005               	goto	l5164
 12802  002FD2                     l1136:
 12803  002FD2  8A92               	bsf	3986,5,c	;volatile
 12804  002FD4                     l1138:
 12805  002FD4  8293               	bsf	3987,1,c	;volatile
 12806  002FD6  D00A               	goto	l1137
 12807  002FD8                     l1139:
 12808  002FD8  9293               	bcf	3987,1,c	;volatile
 12809  002FDA  D008               	goto	l1137
 12810  002FDC                     l5164:
 12811  002FDC  5025               	movf	OpenSPI@sync_mode,w,c
 12812                           
 12813                           ; Switch size 1, requested type "space"
 12814                           ; Number of cases is 2, Range of values is 4 to 5
 12815                           ; switch strategies available:
 12816                           ; Name         Instructions Cycles
 12817                           ; simple_byte            7     4 (average)
 12818                           ;	Chosen strategy is simple_byte
 12819  002FDE  0A04               	xorlw	4	; case 4
 12820  002FE0  B4D8               	btfsc	status,2,c
 12821  002FE2  D7F7               	goto	l1136
 12822  002FE4  0A01               	xorlw	1	; case 5
 12823  002FE6  B4D8               	btfsc	status,2,c
 12824  002FE8  D7F5               	goto	l1138
 12825  002FEA  D7F6               	goto	l1139
 12826  002FEC                     l1137:
 12827  002FEC  8093               	bsf	3987,0,c	;volatile
 12828  002FEE  9E94               	bcf	3988,7,c	;volatile
 12829  002FF0  8AC6               	bsf	4038,5,c	;volatile
 12830  002FF2  0012               	return		;funcret
 12831  002FF4                     __end_of_OpenSPI:
 12832                           	opt stack 0
 12833                           tblptru	equ	0xFF8
 12834                           tblptrh	equ	0xFF7
 12835                           tblptrl	equ	0xFF6
 12836                           tablat	equ	0xFF5
 12837                           prodh	equ	0xFF4
 12838                           prodl	equ	0xFF3
 12839                           intcon	equ	0xFF2
 12840                           postinc0	equ	0xFEE
 12841                           wreg	equ	0xFE8
 12842                           indf1	equ	0xFE7
 12843                           postdec1	equ	0xFE5
 12844                           fsr1h	equ	0xFE2
 12845                           fsr1l	equ	0xFE1
 12846                           indf2	equ	0xFDF
 12847                           postinc2	equ	0xFDE
 12848                           postdec2	equ	0xFDD
 12849                           plusw2	equ	0xFDB
 12850                           fsr2h	equ	0xFDA
 12851                           fsr2l	equ	0xFD9
 12852                           status	equ	0xFD8
 12853                           
 12854 ;; *************** function _LowPriorityISRCode *****************
 12855 ;; Defined at:
 12856 ;;		line 66 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;		None
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;		None               void
 12863 ;; Registers used:
 12864 ;;		None
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12872 ;;      Temps:         17       0       0       0       0       0       0       0       0
 12873 ;;      Totals:        17       0       0       0       0       0       0       0       0
 12874 ;;Total ram usage:       17 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    3
 12877 ;; This function calls:
 12878 ;;		Nothing
 12879 ;; This function is called by:
 12880 ;;		Interrupt level 1
 12881 ;; This function uses a non-reentrant model
 12882 ;;
 12883                           
 12884                           	psect	intcodelo
 12885  000818                     __pintcodelo:
 12886                           	opt stack 0
 12887  000818                     _LowPriorityISRCode:
 12888                           	opt stack 16
 12889                           
 12890                           ;incstack = 0
 12891  000818  CFD8 F001          	movff	status,??_LowPriorityISRCode
 12892  00081C  CFE8 F002          	movff	wreg,??_LowPriorityISRCode+1
 12893  000820  CFE0 F003          	movff	bsr,??_LowPriorityISRCode+2
 12894  000824  CFFA F004          	movff	pclath,??_LowPriorityISRCode+3
 12895  000828  CFFB F005          	movff	pclatu,??_LowPriorityISRCode+4
 12896  00082C  CFE9 F006          	movff	fsr0l,??_LowPriorityISRCode+5
 12897  000830  CFEA F007          	movff	fsr0h,??_LowPriorityISRCode+6
 12898  000834  CFE1 F008          	movff	fsr1l,??_LowPriorityISRCode+7
 12899  000838  CFE2 F009          	movff	fsr1h,??_LowPriorityISRCode+8
 12900  00083C  CFD9 F00A          	movff	fsr2l,??_LowPriorityISRCode+9
 12901  000840  CFDA F00B          	movff	fsr2h,??_LowPriorityISRCode+10
 12902  000844  CFF3 F00C          	movff	prodl,??_LowPriorityISRCode+11
 12903  000848  CFF4 F00D          	movff	prodh,??_LowPriorityISRCode+12
 12904  00084C  CFF6 F00E          	movff	tblptrl,??_LowPriorityISRCode+13
 12905  000850  CFF7 F00F          	movff	tblptrh,??_LowPriorityISRCode+14
 12906  000854  CFF8 F010          	movff	tblptru,??_LowPriorityISRCode+15
 12907  000858  CFF5 F011          	movff	tablat,??_LowPriorityISRCode+16
 12908                           
 12909                           ;karate.c: 68: if (PIR1bits.TMR2IF) {
 12910  00085C  A29E               	btfss	3998,1,c	;volatile
 12911  00085E  D002               	goto	i1l686
 12912                           
 12913                           ;karate.c: 70: PIR1bits.TMR2IF = 0;
 12914  000860  929E               	bcf	3998,1,c	;volatile
 12915  000862  D000               	goto	i1l686
 12916  000864                     i1l686:
 12917  000864  C011  FFF5         	movff	??_LowPriorityISRCode+16,tablat
 12918  000868  C010  FFF8         	movff	??_LowPriorityISRCode+15,tblptru
 12919  00086C  C00F  FFF7         	movff	??_LowPriorityISRCode+14,tblptrh
 12920  000870  C00E  FFF6         	movff	??_LowPriorityISRCode+13,tblptrl
 12921  000874  C00D  FFF4         	movff	??_LowPriorityISRCode+12,prodh
 12922  000878  C00C  FFF3         	movff	??_LowPriorityISRCode+11,prodl
 12923  00087C  C00B  FFDA         	movff	??_LowPriorityISRCode+10,fsr2h
 12924  000880  C00A  FFD9         	movff	??_LowPriorityISRCode+9,fsr2l
 12925  000884  C009  FFE2         	movff	??_LowPriorityISRCode+8,fsr1h
 12926  000888  C008  FFE1         	movff	??_LowPriorityISRCode+7,fsr1l
 12927  00088C  C007  FFEA         	movff	??_LowPriorityISRCode+6,fsr0h
 12928  000890  C006  FFE9         	movff	??_LowPriorityISRCode+5,fsr0l
 12929  000894  C005  FFFB         	movff	??_LowPriorityISRCode+4,pclatu
 12930  000898  C004  FFFA         	movff	??_LowPriorityISRCode+3,pclath
 12931  00089C  C003  FFE0         	movff	??_LowPriorityISRCode+2,bsr
 12932  0008A0  C002  FFE8         	movff	??_LowPriorityISRCode+1,wreg
 12933  0008A4  C001  FFD8         	movff	??_LowPriorityISRCode,status
 12934  0008A8  0010               	retfie	
 12935  0008AA                     __end_of_LowPriorityISRCode:
 12936                           	opt stack 0
 12937                           pclatu	equ	0xFFB
 12938                           pclath	equ	0xFFA
 12939                           tblptru	equ	0xFF8
 12940                           tblptrh	equ	0xFF7
 12941                           tblptrl	equ	0xFF6
 12942                           tablat	equ	0xFF5
 12943                           prodh	equ	0xFF4
 12944                           prodl	equ	0xFF3
 12945                           intcon	equ	0xFF2
 12946                           postinc0	equ	0xFEE
 12947                           fsr0h	equ	0xFEA
 12948                           fsr0l	equ	0xFE9
 12949                           wreg	equ	0xFE8
 12950                           indf1	equ	0xFE7
 12951                           postdec1	equ	0xFE5
 12952                           fsr1h	equ	0xFE2
 12953                           fsr1l	equ	0xFE1
 12954                           bsr	equ	0xFE0
 12955                           indf2	equ	0xFDF
 12956                           postinc2	equ	0xFDE
 12957                           postdec2	equ	0xFDD
 12958                           plusw2	equ	0xFDB
 12959                           fsr2h	equ	0xFDA
 12960                           fsr2l	equ	0xFD9
 12961                           status	equ	0xFD8
 12962                           
 12963 ;; *************** function _HighPriorityISRCode *****************
 12964 ;; Defined at:
 12965 ;;		line 45 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 12966 ;; Parameters:    Size  Location     Type
 12967 ;;		None
 12968 ;; Auto vars:     Size  Location     Type
 12969 ;;		None
 12970 ;; Return value:  Size  Location     Type
 12971 ;;		None               void
 12972 ;; Registers used:
 12973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12974 ;; Tracked objects:
 12975 ;;		On entry : 0/0
 12976 ;;		On exit  : 0/0
 12977 ;;		Unchanged: 0/0
 12978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12979 ;;      Params:         0       0       0       0       0       0       0       0       0
 12980 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12981 ;;      Temps:         14       0       0       0       0       0       0       0       0
 12982 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12983 ;;Total ram usage:       14 bytes
 12984 ;; Hardware stack levels used:    1
 12985 ;; Hardware stack levels required when called:    2
 12986 ;; This function calls:
 12987 ;;		i2_tlc5947_latch
 12988 ;;		i2_tlc5947_update
 12989 ;; This function is called by:
 12990 ;;		Interrupt level 2
 12991 ;; This function uses a non-reentrant model
 12992 ;;
 12993                           
 12994                           	psect	intcode
 12995  000808                     __pintcode:
 12996                           	opt stack 0
 12997  000808                     _HighPriorityISRCode:
 12998                           	opt stack 16
 12999                           
 13000                           ;incstack = 0
 13001  000808  CFFA F015          	movff	pclath,??_HighPriorityISRCode
 13002  00080C  CFFB F016          	movff	pclatu,??_HighPriorityISRCode+1
 13003  000810  CFE9 F017          	movff	fsr0l,??_HighPriorityISRCode+2
 13004  000814  ED71  F015         	call	int_func,f	;refresh shadow registers
 13005                           pclatu	equ	0xFFB
 13006                           pclath	equ	0xFFA
 13007                           tblptru	equ	0xFF8
 13008                           tblptrh	equ	0xFF7
 13009                           tblptrl	equ	0xFF6
 13010                           tablat	equ	0xFF5
 13011                           prodh	equ	0xFF4
 13012                           prodl	equ	0xFF3
 13013                           intcon	equ	0xFF2
 13014                           postinc0	equ	0xFEE
 13015                           fsr0h	equ	0xFEA
 13016                           fsr0l	equ	0xFE9
 13017                           wreg	equ	0xFE8
 13018                           indf1	equ	0xFE7
 13019                           postdec1	equ	0xFE5
 13020                           fsr1h	equ	0xFE2
 13021                           fsr1l	equ	0xFE1
 13022                           bsr	equ	0xFE0
 13023                           indf2	equ	0xFDF
 13024                           postinc2	equ	0xFDE
 13025                           postdec2	equ	0xFDD
 13026                           plusw2	equ	0xFDB
 13027                           fsr2h	equ	0xFDA
 13028                           fsr2l	equ	0xFD9
 13029                           status	equ	0xFD8
 13030                           
 13031                           	psect	intcode_body
 13032  002AE2                     __pintcode_body:
 13033                           	opt stack 16
 13034  002AE2                     int_func:
 13035                           	opt stack 16
 13036  002AE2  0006               	pop		; remove dummy address from shadow register refresh
 13037  002AE4  CFEA F018          	movff	fsr0h,??_HighPriorityISRCode+3
 13038  002AE8  CFE1 F019          	movff	fsr1l,??_HighPriorityISRCode+4
 13039  002AEC  CFE2 F01A          	movff	fsr1h,??_HighPriorityISRCode+5
 13040  002AF0  CFD9 F01B          	movff	fsr2l,??_HighPriorityISRCode+6
 13041  002AF4  CFDA F01C          	movff	fsr2h,??_HighPriorityISRCode+7
 13042  002AF8  CFF3 F01D          	movff	prodl,??_HighPriorityISRCode+8
 13043  002AFC  CFF4 F01E          	movff	prodh,??_HighPriorityISRCode+9
 13044  002B00  CFF6 F01F          	movff	tblptrl,??_HighPriorityISRCode+10
 13045  002B04  CFF7 F020          	movff	tblptrh,??_HighPriorityISRCode+11
 13046  002B08  CFF8 F021          	movff	tblptru,??_HighPriorityISRCode+12
 13047  002B0C  CFF5 F022          	movff	tablat,??_HighPriorityISRCode+13
 13048                           
 13049                           ;karate.c: 47: if (PIR2bits.TMR3IF) {
 13050  002B10  A2A1               	btfss	4001,1,c	;volatile
 13051  002B12  D012               	goto	i2l682
 13052                           
 13053                           ;karate.c: 49: TMR3H = tmr3h_cal;
 13054  002B14  C0A1  FFB3         	movff	_tmr3h_cal,4019	;volatile
 13055                           
 13056                           ;karate.c: 50: TMR3L = tmr3l_cal;
 13057  002B18  C0A2  FFB2         	movff	_tmr3l_cal,4018	;volatile
 13058                           
 13059                           ;karate.c: 53: if (tlc_request >= 0) {
 13060  002B1C  0100               	movlb	0	; () banked
 13061  002B1E  BFA0               	btfsc	_tlc_request& (0+255),7,b
 13062  002B20  D009               	goto	i2l5684
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;karate.c: 54: tlc5947_latch();
 13066  002B22  EC5E  F019         	call	i2_tlc5947_latch	;wreg free
 13067                           
 13068                           ;karate.c: 57: if (tlc_request == 1) {
 13069  002B26  0100               	movlb	0	; () banked
 13070  002B28  05A0               	decf	_tlc_request& (0+255),w,b
 13071  002B2A  A4D8               	btfss	status,2,c
 13072  002B2C  D003               	goto	i2l5684
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;karate.c: 58: tlc5947_update();
 13076  002B2E  ECD6  F018         	call	i2_tlc5947_update	;wreg free
 13077  002B32  D000               	goto	i2l5684
 13078  002B34                     i2l5684:
 13079                           
 13080                           ;karate.c: 59: }
 13081                           ;karate.c: 60: }
 13082                           ;karate.c: 62: PIR2bits.TMR3IF = 0;
 13083  002B34  92A1               	bcf	4001,1,c	;volatile
 13084  002B36  D000               	goto	i2l682
 13085  002B38                     i2l682:
 13086  002B38  C022  FFF5         	movff	??_HighPriorityISRCode+13,tablat
 13087  002B3C  C021  FFF8         	movff	??_HighPriorityISRCode+12,tblptru
 13088  002B40  C020  FFF7         	movff	??_HighPriorityISRCode+11,tblptrh
 13089  002B44  C01F  FFF6         	movff	??_HighPriorityISRCode+10,tblptrl
 13090  002B48  C01E  FFF4         	movff	??_HighPriorityISRCode+9,prodh
 13091  002B4C  C01D  FFF3         	movff	??_HighPriorityISRCode+8,prodl
 13092  002B50  C01C  FFDA         	movff	??_HighPriorityISRCode+7,fsr2h
 13093  002B54  C01B  FFD9         	movff	??_HighPriorityISRCode+6,fsr2l
 13094  002B58  C01A  FFE2         	movff	??_HighPriorityISRCode+5,fsr1h
 13095  002B5C  C019  FFE1         	movff	??_HighPriorityISRCode+4,fsr1l
 13096  002B60  C018  FFEA         	movff	??_HighPriorityISRCode+3,fsr0h
 13097  002B64  C017  FFE9         	movff	??_HighPriorityISRCode+2,fsr0l
 13098  002B68  C016  FFFB         	movff	??_HighPriorityISRCode+1,pclatu
 13099  002B6C  C015  FFFA         	movff	??_HighPriorityISRCode,pclath
 13100  002B70  0011               	retfie		f
 13101  002B72                     __end_of_HighPriorityISRCode:
 13102                           	opt stack 0
 13103                           pclatu	equ	0xFFB
 13104                           pclath	equ	0xFFA
 13105                           tblptru	equ	0xFF8
 13106                           tblptrh	equ	0xFF7
 13107                           tblptrl	equ	0xFF6
 13108                           tablat	equ	0xFF5
 13109                           prodh	equ	0xFF4
 13110                           prodl	equ	0xFF3
 13111                           intcon	equ	0xFF2
 13112                           postinc0	equ	0xFEE
 13113                           fsr0h	equ	0xFEA
 13114                           fsr0l	equ	0xFE9
 13115                           wreg	equ	0xFE8
 13116                           indf1	equ	0xFE7
 13117                           postdec1	equ	0xFE5
 13118                           fsr1h	equ	0xFE2
 13119                           fsr1l	equ	0xFE1
 13120                           bsr	equ	0xFE0
 13121                           indf2	equ	0xFDF
 13122                           postinc2	equ	0xFDE
 13123                           postdec2	equ	0xFDD
 13124                           plusw2	equ	0xFDB
 13125                           fsr2h	equ	0xFDA
 13126                           fsr2l	equ	0xFD9
 13127                           status	equ	0xFD8
 13128                           
 13129 ;; *************** function i2_tlc5947_update *****************
 13130 ;; Defined at:
 13131 ;;		line 175 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 13132 ;; Parameters:    Size  Location     Type
 13133 ;;		None
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;  tlc5947_upda    1   19[COMRAM] unsigned char 
 13136 ;; Return value:  Size  Location     Type
 13137 ;;		None               void
 13138 ;; Registers used:
 13139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13140 ;; Tracked objects:
 13141 ;;		On entry : 0/0
 13142 ;;		On exit  : 0/0
 13143 ;;		Unchanged: 0/0
 13144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13145 ;;      Params:         0       0       0       0       0       0       0       0       0
 13146 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13147 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13148 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13149 ;;Total ram usage:        1 bytes
 13150 ;; Hardware stack levels used:    1
 13151 ;; Hardware stack levels required when called:    1
 13152 ;; This function calls:
 13153 ;;		i2_WriteSPI
 13154 ;; This function is called by:
 13155 ;;		_HighPriorityISRCode
 13156 ;; This function uses a non-reentrant model
 13157 ;;
 13158                           
 13159                           	psect	text62
 13160  0031AC                     __ptext62:
 13161                           	opt stack 0
 13162  0031AC                     i2_tlc5947_update:
 13163                           	opt stack 16
 13164                           
 13165                           ;tlc5947.c: 177: uint8_t x;
 13166                           ;tlc5947.c: 179: for (x = 0; x < tlc_nbytes; x++) {
 13167                           
 13168                           ;incstack = 0
 13169  0031AC  0E00               	movlw	0
 13170  0031AE  6E14               	movwf	i2tlc5947_update@x,c
 13171  0031B0  D00D               	goto	i2l5584
 13172  0031B2                     i2l5580:
 13173                           
 13174                           ;tlc5947.c: 180: WriteSPI(tlc_memory[x]);
 13175  0031B2  5014               	movf	i2tlc5947_update@x,w,c
 13176  0031B4  0D01               	mullw	1
 13177  0031B6  0E80               	movlw	low _tlc_memory
 13178  0031B8  24F3               	addwf	prodl,w,c
 13179  0031BA  6ED9               	movwf	fsr2l,c
 13180  0031BC  0E01               	movlw	high _tlc_memory
 13181  0031BE  20F4               	addwfc	prodh,w,c
 13182  0031C0  6EDA               	movwf	fsr2h,c
 13183  0031C2  50DF               	movf	indf2,w,c
 13184  0031C4  EC99  F019         	call	i2_WriteSPI
 13185  0031C8  2A14               	incf	i2tlc5947_update@x,f,c
 13186  0031CA  D000               	goto	i2l5584
 13187  0031CC                     i2l5584:
 13188  0031CC  505F               	movf	_tlc_nbytes,w,c
 13189  0031CE  5C14               	subwf	i2tlc5947_update@x,w,c
 13190  0031D0  A0D8               	btfss	status,0,c
 13191  0031D2  D7EF               	goto	i2l5580
 13192                           
 13193                           ;tlc5947.c: 181: }
 13194                           ;tlc5947.c: 182: tlc_request = 0;
 13195  0031D4  0E00               	movlw	0
 13196  0031D6  0100               	movlb	0	; () banked
 13197  0031D8  6FA0               	movwf	_tlc_request& (0+255),b
 13198                           
 13199                           ; BSR set to: 0
 13200  0031DA  0012               	return		;funcret
 13201  0031DC                     __end_ofi2_tlc5947_update:
 13202                           	opt stack 0
 13203                           pclatu	equ	0xFFB
 13204                           pclath	equ	0xFFA
 13205                           tblptru	equ	0xFF8
 13206                           tblptrh	equ	0xFF7
 13207                           tblptrl	equ	0xFF6
 13208                           tablat	equ	0xFF5
 13209                           prodh	equ	0xFF4
 13210                           prodl	equ	0xFF3
 13211                           intcon	equ	0xFF2
 13212                           postinc0	equ	0xFEE
 13213                           fsr0h	equ	0xFEA
 13214                           fsr0l	equ	0xFE9
 13215                           wreg	equ	0xFE8
 13216                           indf1	equ	0xFE7
 13217                           postdec1	equ	0xFE5
 13218                           fsr1h	equ	0xFE2
 13219                           fsr1l	equ	0xFE1
 13220                           bsr	equ	0xFE0
 13221                           indf2	equ	0xFDF
 13222                           postinc2	equ	0xFDE
 13223                           postdec2	equ	0xFDD
 13224                           plusw2	equ	0xFDB
 13225                           fsr2h	equ	0xFDA
 13226                           fsr2l	equ	0xFD9
 13227                           status	equ	0xFD8
 13228                           
 13229 ;; *************** function i2_WriteSPI *****************
 13230 ;; Defined at:
 13231 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi_writ.c"
 13232 ;; Parameters:    Size  Location     Type
 13233 ;;  data_out        1    wreg     unsigned char 
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;  data_out        1   18[COMRAM] unsigned char 
 13236 ;;  WriteSPI        1   17[COMRAM] unsigned char 
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      char 
 13239 ;; Registers used:
 13240 ;;		wreg
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0
 13247 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13248 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13249 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13250 ;;Total ram usage:        2 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; This function calls:
 13253 ;;		Nothing
 13254 ;; This function is called by:
 13255 ;;		i2_tlc5947_update
 13256 ;; This function uses a non-reentrant model
 13257 ;;
 13258                           
 13259                           	psect	text63
 13260  003332                     __ptext63:
 13261                           	opt stack 0
 13262  003332                     i2_WriteSPI:
 13263                           	opt stack 16
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;incstack = 0
 13267                           ;i2WriteSPI@data_out stored from wreg
 13268  003332  6E13               	movwf	i2WriteSPI@data_out,c
 13269  003334  CFC9 F012          	movff	4041,i2WriteSPI@TempVar	;volatile
 13270  003338  969E               	bcf	3998,3,c	;volatile
 13271  00333A  9EC6               	bcf	4038,7,c	;volatile
 13272  00333C  C013  FFC9         	movff	i2WriteSPI@data_out,4041	;volatile
 13273  003340  BEC6               	btfsc	4038,7,c	;volatile
 13274  003342  D007               	goto	i2l1162
 13275  003344  D002               	goto	i2l1164
 13276                           
 13277                           ;	Return value of i2_WriteSPI is never used
 13278  003346  D005               	goto	i2l1162
 13279  003348  D000               	goto	i2l1164
 13280  00334A                     i2l1164:
 13281  00334A  B69E               	btfsc	3998,3,c	;volatile
 13282  00334C  D002               	goto	i2l1162
 13283  00334E  D7FD               	goto	i2l1164
 13284  003350  D000               	goto	i2l1162
 13285  003352                     i2l1162:
 13286  003352  0012               	return		;funcret
 13287  003354                     __end_ofi2_WriteSPI:
 13288                           	opt stack 0
 13289                           pclatu	equ	0xFFB
 13290                           pclath	equ	0xFFA
 13291                           tblptru	equ	0xFF8
 13292                           tblptrh	equ	0xFF7
 13293                           tblptrl	equ	0xFF6
 13294                           tablat	equ	0xFF5
 13295                           prodh	equ	0xFF4
 13296                           prodl	equ	0xFF3
 13297                           intcon	equ	0xFF2
 13298                           postinc0	equ	0xFEE
 13299                           fsr0h	equ	0xFEA
 13300                           fsr0l	equ	0xFE9
 13301                           wreg	equ	0xFE8
 13302                           indf1	equ	0xFE7
 13303                           postdec1	equ	0xFE5
 13304                           fsr1h	equ	0xFE2
 13305                           fsr1l	equ	0xFE1
 13306                           bsr	equ	0xFE0
 13307                           indf2	equ	0xFDF
 13308                           postinc2	equ	0xFDE
 13309                           postdec2	equ	0xFDD
 13310                           plusw2	equ	0xFDB
 13311                           fsr2h	equ	0xFDA
 13312                           fsr2l	equ	0xFD9
 13313                           status	equ	0xFD8
 13314                           
 13315 ;; *************** function i2_tlc5947_latch *****************
 13316 ;; Defined at:
 13317 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 13318 ;; Parameters:    Size  Location     Type
 13319 ;;		None
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;		None
 13322 ;; Return value:  Size  Location     Type
 13323 ;;		None               void
 13324 ;; Registers used:
 13325 ;;		wreg, status,2, cstack
 13326 ;; Tracked objects:
 13327 ;;		On entry : 0/0
 13328 ;;		On exit  : 0/0
 13329 ;;		Unchanged: 0/0
 13330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13331 ;;      Params:         0       0       0       0       0       0       0       0       0
 13332 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13333 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13334 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13335 ;;Total ram usage:        0 bytes
 13336 ;; Hardware stack levels used:    1
 13337 ;; Hardware stack levels required when called:    1
 13338 ;; This function calls:
 13339 ;;		i2_Delay100TCYx
 13340 ;;		i2_Delay10TCYx
 13341 ;; This function is called by:
 13342 ;;		_HighPriorityISRCode
 13343 ;; This function uses a non-reentrant model
 13344 ;;
 13345                           
 13346                           	psect	text64
 13347  0032BC                     __ptext64:
 13348                           	opt stack 0
 13349  0032BC                     i2_tlc5947_latch:
 13350                           	opt stack 16
 13351                           
 13352                           ;tlc5947.c: 187: LATBbits.LATB5 = 1;;
 13353                           
 13354                           ;incstack = 0
 13355  0032BC  8A8A               	bsf	3978,5,c	;volatile
 13356                           
 13357                           ;tlc5947.c: 188: Delay100TCYx (pwr_delay);
 13358  0032BE  0100               	movlb	0	; () banked
 13359  0032C0  518E               	movf	_pwr_delay& (0+255),w,b
 13360  0032C2  EC03  F01A         	call	i2_Delay100TCYx
 13361                           
 13362                           ;tlc5947.c: 190: LATCbits.LATC0 = 1;;
 13363  0032C6  808B               	bsf	3979,0,c	;volatile
 13364                           
 13365                           ;tlc5947.c: 191: LATBbits.LATB3 = 1;;
 13366  0032C8  868A               	bsf	3978,3,c	;volatile
 13367                           
 13368                           ;tlc5947.c: 192: Delay10TCYx(40);
 13369  0032CA  0E28               	movlw	40
 13370  0032CC  ECFA  F019         	call	i2_Delay10TCYx
 13371                           
 13372                           ;tlc5947.c: 193: LATBbits.LATB3 = 0;;
 13373  0032D0  968A               	bcf	3978,3,c	;volatile
 13374                           
 13375                           ;tlc5947.c: 194: Delay10TCYx(40);
 13376  0032D2  0E28               	movlw	40
 13377  0032D4  ECFA  F019         	call	i2_Delay10TCYx
 13378                           
 13379                           ;tlc5947.c: 195: LATCbits.LATC0 = 0;;
 13380  0032D8  908B               	bcf	3979,0,c	;volatile
 13381                           
 13382                           ;tlc5947.c: 197: Delay100TCYx(pwr_delay);
 13383  0032DA  0100               	movlb	0	; () banked
 13384  0032DC  518E               	movf	_pwr_delay& (0+255),w,b
 13385  0032DE  EC03  F01A         	call	i2_Delay100TCYx
 13386                           
 13387                           ;tlc5947.c: 198: LATBbits.LATB5 = 0;;
 13388  0032E2  9A8A               	bcf	3978,5,c	;volatile
 13389  0032E4  0012               	return		;funcret
 13390  0032E6                     __end_ofi2_tlc5947_latch:
 13391                           	opt stack 0
 13392                           pclatu	equ	0xFFB
 13393                           pclath	equ	0xFFA
 13394                           tblptru	equ	0xFF8
 13395                           tblptrh	equ	0xFF7
 13396                           tblptrl	equ	0xFF6
 13397                           tablat	equ	0xFF5
 13398                           prodh	equ	0xFF4
 13399                           prodl	equ	0xFF3
 13400                           intcon	equ	0xFF2
 13401                           postinc0	equ	0xFEE
 13402                           fsr0h	equ	0xFEA
 13403                           fsr0l	equ	0xFE9
 13404                           wreg	equ	0xFE8
 13405                           indf1	equ	0xFE7
 13406                           postdec1	equ	0xFE5
 13407                           fsr1h	equ	0xFE2
 13408                           fsr1l	equ	0xFE1
 13409                           bsr	equ	0xFE0
 13410                           indf2	equ	0xFDF
 13411                           postinc2	equ	0xFDE
 13412                           postdec2	equ	0xFDD
 13413                           plusw2	equ	0xFDB
 13414                           fsr2h	equ	0xFDA
 13415                           fsr2l	equ	0xFD9
 13416                           status	equ	0xFD8
 13417                           
 13418 ;; *************** function i2_Delay10TCYx *****************
 13419 ;; Defined at:
 13420 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10tcyx.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;  unit            1    wreg     unsigned char 
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;  unit            1   17[COMRAM] unsigned char 
 13425 ;; Return value:  Size  Location     Type
 13426 ;;		None               void
 13427 ;; Registers used:
 13428 ;;		wreg
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13434 ;;      Params:         0       0       0       0       0       0       0       0       0
 13435 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13437 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13438 ;;Total ram usage:        1 bytes
 13439 ;; Hardware stack levels used:    1
 13440 ;; This function calls:
 13441 ;;		Nothing
 13442 ;; This function is called by:
 13443 ;;		i2_tlc5947_latch
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447                           	psect	text65
 13448  0033F4                     __ptext65:
 13449                           	opt stack 0
 13450  0033F4                     i2_Delay10TCYx:
 13451                           	opt stack 16
 13452                           
 13453                           ;incstack = 0
 13454                           ;i2Delay10TCYx@unit stored from wreg
 13455  0033F4  6E12               	movwf	i2Delay10TCYx@unit,c
 13456  0033F6  0E03               	movlw	3
 13457  0033F8                     i2u490_47:
 13458  0033F8  2EE8               	decfsz	wreg,f,c
 13459  0033FA  D7FE               	goto	i2u490_47
 13460  0033FC  F000               	nop	
 13461  0033FE  2E12               	decfsz	i2Delay10TCYx@unit,f,c
 13462  003400  D7FA               	goto	i2l5434
 13463  003402  D000               	goto	i2l1401
 13464  003404                     i2l1401:
 13465  003404  0012               	return		;funcret
 13466  003406                     __end_ofi2_Delay10TCYx:
 13467                           	opt stack 0
 13468                           pclatu	equ	0xFFB
 13469                           pclath	equ	0xFFA
 13470                           tblptru	equ	0xFF8
 13471                           tblptrh	equ	0xFF7
 13472                           tblptrl	equ	0xFF6
 13473                           tablat	equ	0xFF5
 13474                           prodh	equ	0xFF4
 13475                           prodl	equ	0xFF3
 13476                           intcon	equ	0xFF2
 13477                           postinc0	equ	0xFEE
 13478                           fsr0h	equ	0xFEA
 13479                           fsr0l	equ	0xFE9
 13480                           wreg	equ	0xFE8
 13481                           indf1	equ	0xFE7
 13482                           postdec1	equ	0xFE5
 13483                           fsr1h	equ	0xFE2
 13484                           fsr1l	equ	0xFE1
 13485                           bsr	equ	0xFE0
 13486                           indf2	equ	0xFDF
 13487                           postinc2	equ	0xFDE
 13488                           postdec2	equ	0xFDD
 13489                           plusw2	equ	0xFDB
 13490                           fsr2h	equ	0xFDA
 13491                           fsr2l	equ	0xFD9
 13492                           status	equ	0xFD8
 13493                           
 13494 ;; *************** function i2_Delay100TCYx *****************
 13495 ;; Defined at:
 13496 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  unit            1    wreg     unsigned char 
 13499 ;; Auto vars:     Size  Location     Type
 13500 ;;  unit            1   17[COMRAM] unsigned char 
 13501 ;; Return value:  Size  Location     Type
 13502 ;;		None               void
 13503 ;; Registers used:
 13504 ;;		wreg
 13505 ;; Tracked objects:
 13506 ;;		On entry : 0/0
 13507 ;;		On exit  : 0/0
 13508 ;;		Unchanged: 0/0
 13509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13510 ;;      Params:         0       0       0       0       0       0       0       0       0
 13511 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13512 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13513 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13514 ;;Total ram usage:        1 bytes
 13515 ;; Hardware stack levels used:    1
 13516 ;; This function calls:
 13517 ;;		Nothing
 13518 ;; This function is called by:
 13519 ;;		i2_tlc5947_latch
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           	psect	text66
 13524  003406                     __ptext66:
 13525                           	opt stack 0
 13526  003406                     i2_Delay100TCYx:
 13527                           	opt stack 16
 13528                           
 13529                           ;incstack = 0
 13530                           ;i2Delay100TCYx@unit stored from wreg
 13531  003406  6E12               	movwf	i2Delay100TCYx@unit,c
 13532  003408  0E21               	movlw	33
 13533  00340A                     i2u491_47:
 13534  00340A  2EE8               	decfsz	wreg,f,c
 13535  00340C  D7FE               	goto	i2u491_47
 13536  00340E  F000               	nop	
 13537  003410  2E12               	decfsz	i2Delay100TCYx@unit,f,c
 13538  003412  D7FA               	goto	i2l5430
 13539  003414  D000               	goto	i2l1394
 13540  003416                     i2l1394:
 13541  003416  0012               	return		;funcret
 13542  003418                     __end_ofi2_Delay100TCYx:
 13543                           	opt stack 0
 13544                           pclatu	equ	0xFFB
 13545                           pclath	equ	0xFFA
 13546                           tblptru	equ	0xFF8
 13547                           tblptrh	equ	0xFF7
 13548                           tblptrl	equ	0xFF6
 13549                           tablat	equ	0xFF5
 13550                           prodh	equ	0xFF4
 13551                           prodl	equ	0xFF3
 13552                           intcon	equ	0xFF2
 13553                           postinc0	equ	0xFEE
 13554                           fsr0h	equ	0xFEA
 13555                           fsr0l	equ	0xFE9
 13556                           wreg	equ	0xFE8
 13557                           indf1	equ	0xFE7
 13558                           postdec1	equ	0xFE5
 13559                           fsr1h	equ	0xFE2
 13560                           fsr1l	equ	0xFE1
 13561                           bsr	equ	0xFE0
 13562                           indf2	equ	0xFDF
 13563                           postinc2	equ	0xFDE
 13564                           postdec2	equ	0xFDD
 13565                           plusw2	equ	0xFDB
 13566                           fsr2h	equ	0xFDA
 13567                           fsr2l	equ	0xFD9
 13568                           status	equ	0xFD8
 13569                           pclatu	equ	0xFFB
 13570                           pclath	equ	0xFFA
 13571                           tblptru	equ	0xFF8
 13572                           tblptrh	equ	0xFF7
 13573                           tblptrl	equ	0xFF6
 13574                           tablat	equ	0xFF5
 13575                           prodh	equ	0xFF4
 13576                           prodl	equ	0xFF3
 13577                           intcon	equ	0xFF2
 13578                           postinc0	equ	0xFEE
 13579                           fsr0h	equ	0xFEA
 13580                           fsr0l	equ	0xFE9
 13581                           wreg	equ	0xFE8
 13582                           indf1	equ	0xFE7
 13583                           postdec1	equ	0xFE5
 13584                           fsr1h	equ	0xFE2
 13585                           fsr1l	equ	0xFE1
 13586                           bsr	equ	0xFE0
 13587                           indf2	equ	0xFDF
 13588                           postinc2	equ	0xFDE
 13589                           postdec2	equ	0xFDD
 13590                           plusw2	equ	0xFDB
 13591                           fsr2h	equ	0xFDA
 13592                           fsr2l	equ	0xFD9
 13593                           status	equ	0xFD8
 13594                           
 13595                           	psect	rparam
 13596  0000                     pclatu	equ	0xFFB
 13597                           pclath	equ	0xFFA
 13598                           tblptru	equ	0xFF8
 13599                           tblptrh	equ	0xFF7
 13600                           tblptrl	equ	0xFF6
 13601                           tablat	equ	0xFF5
 13602                           prodh	equ	0xFF4
 13603                           prodl	equ	0xFF3
 13604                           intcon	equ	0xFF2
 13605                           postinc0	equ	0xFEE
 13606                           fsr0h	equ	0xFEA
 13607                           fsr0l	equ	0xFE9
 13608                           wreg	equ	0xFE8
 13609                           indf1	equ	0xFE7
 13610                           postdec1	equ	0xFE5
 13611                           fsr1h	equ	0xFE2
 13612                           fsr1l	equ	0xFE1
 13613                           bsr	equ	0xFE0
 13614                           indf2	equ	0xFDF
 13615                           postinc2	equ	0xFDE
 13616                           postdec2	equ	0xFDD
 13617                           plusw2	equ	0xFDB
 13618                           fsr2h	equ	0xFDA
 13619                           fsr2l	equ	0xFD9
 13620                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    171
    Data        649
    BSS         372
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      95
    BANK0           160     19     147
    BANK1           256      0     221
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 2047
		 -> UEP1(SFR[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP1(SFR[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    PIR3_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIE3_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIR2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIE2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    IOCB_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ANSELA_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ANSELC_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ACTCON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    OSCCON2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    T3GCON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> CDCBufferOut(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> CDCBufferIn(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1278_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1278_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1278_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1278_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR[1]), RAM(DATA[2047]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 38
		 -> sd003(CODE[10]), sd002(CODE[24]), sd001(CODE[38]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR[1]), RAM(DATA[2047]), 

    U1STAT_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> USTAT(SFR[1]), RAM(DATA[2047]), 

    U1IE_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), UIE(SFR[1]), 

    U1CON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UCON(SFR[1]), RAM(DATA[2047]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    U1ADDR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UADDR(SFR[1]), RAM(DATA[2047]), 

    U1EIE_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEIE(SFR[1]), RAM(DATA[2047]), 

    U1CNFG1_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UCFG(SFR[1]), RAM(DATA[2047]), 

    sp__memset	PTR void  size(2) Largest target is 2047
		 -> UEP1(SFR[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    U1EP1_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEP1(SFR[1]), RAM(DATA[2047]), 

    U1EP0_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR[1]), RAM(DATA[2047]), 

    U1IR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), UIR(SFR[1]), 

    U1EIR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEIR(SFR[1]), RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    _getsUSBUSART->_USBTransferOnePacket
    _comm_send_rply->_CDCTxService
    _comm_send_dat->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _InitializeSystem->_tlc5947_pwm_readback
    _tlc5947_pwm_readback->_tlc5947_setChannel
    _tlc5947_setChannel->_gamma_lookup
    _tlc5947_latch->_Delay100TCYx
    _tlc5947_latch->_Delay10TCYx
    _tlc5947_count_channels->___awdiv
    _tlc5947_update->_WriteSPI
    _USBDeviceInit->_memset

Critical Paths under _HighPriorityISRCode in COMRAM

    _HighPriorityISRCode->i2_tlc5947_update
    i2_tlc5947_update->i2_WriteSPI
    i2_tlc5947_latch->i2_Delay100TCYx
    i2_tlc5947_latch->i2_Delay10TCYx

Critical Paths under _LowPriorityISRCode in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ProcessIO
    _ProcessIO->_ProcessCDC
    _ProcessCDC->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _HighPriorityISRCode in BANK0

    None.

Critical Paths under _LowPriorityISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriorityISRCode in BANK1

    None.

Critical Paths under _LowPriorityISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriorityISRCode in BANK2

    None.

Critical Paths under _LowPriorityISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriorityISRCode in BANK3

    None.

Critical Paths under _LowPriorityISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriorityISRCode in BANK4

    None.

Critical Paths under _LowPriorityISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriorityISRCode in BANK5

    None.

Critical Paths under _LowPriorityISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriorityISRCode in BANK6

    None.

Critical Paths under _LowPriorityISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriorityISRCode in BANK7

    None.

Critical Paths under _LowPriorityISRCode in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   97590
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            1     1      0   93297
                                             18 BANK0      1     1      0
                     _BlinkUSBStatus
                       _CDCTxService
                         _ProcessCDC
                    _SwitchIsPressed
                     _USBDeviceTasks
                 _tlc5947_setChannel
 ---------------------------------------------------------------------------------
 (2) _SwitchIsPressed                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ProcessCDC                                          15    15      0   50888
                                              3 BANK0     15    15      0
                            _BusyADC
                           _Busy_eep
                         _ConvertADC
                        _Delay10TCYx
                            _ReadADC
                         _Read_b_eep
                     _USBDeviceTasks
                        _Write_b_eep
                      _comm_send_dat
                     _comm_send_rply
                       _getsUSBUSART
             _tlc5947_count_channels
               _tlc5947_pwm_readback
                 _tlc5947_setChannel
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1936
                                             41 COMRAM     6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _comm_send_rply                                       1     1      0    2250
                                             46 COMRAM     1     1      0
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _comm_send_dat                                        2     2      0    2386
                                             46 COMRAM     2     2      0
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     400
                                             34 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         5     5      0    1828
                                             41 COMRAM     5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Write_b_eep                                          4     1      3     246
                                             34 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       1     1      0   39128
                                              2 BANK0      1     1      0
               _USBClearUSBInterrupt
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   22440
                                             60 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               0     0      0   22143
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   0     0      0   16959
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  1     1      0    6346
                                             54 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               3     3      0      46
                                             34 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  2     2      0       0
                                             34 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              6     6      0    5475
                                             54 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5092
                                             46 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            0     0      0    2400
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                 7     3      4    1667
                                             34 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    4     3      1     733
                                             42 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 8     7      1     400
                                             34 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  2     2      0     114
                                             34 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  1     1      0     115
                                             35 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  1     1      0      92
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBClearUSBInterrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Read_b_eep                                           2     0      2     111
                                             34 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             34 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BlinkUSBStatus                                       1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0    4293
                            _OpenSPI
                      _USBDeviceInit
                     _USBRegisterFix
                       _readDeviceID
             _tlc5947_count_channels
               _tlc5947_pwm_readback
 ---------------------------------------------------------------------------------
 (3) _tlc5947_pwm_readback                                 7     7      0    1884
                                             46 COMRAM     7     7      0
                        _Delay10TCYx
                            ___lwdiv
                      _tlc5947_latch
                 _tlc5947_setChannel
                     _tlc5947_update
 ---------------------------------------------------------------------------------
 (2) _tlc5947_setChannel                                   9     8      1    1363
                                             37 COMRAM     9     8      1
                       _gamma_lookup
 ---------------------------------------------------------------------------------
 (3) _gamma_lookup                                         3     1      2      22
                                             34 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _tlc5947_latch                                        0     0      0      44
                       _Delay100TCYx
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay10TCYx                                          1     1      0      22
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Delay100TCYx                                         1     1      0      22
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     340
                                             34 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tlc5947_count_channels                               3     3      0     707
                                             42 COMRAM     3     3      0
                            _ReadSPI
                           _WriteSPI
                            ___awdiv
                     _tlc5947_update
 ---------------------------------------------------------------------------------
 (4) _tlc5947_update                                       1     1      0      69
                                             36 COMRAM     1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (5) _WriteSPI                                             2     2      0      23
                                             34 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     478
                                             34 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              1     1      0       1
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _readDeviceID                                         5     5      0      70
                                             34 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBRegisterFix                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1366
                                             42 COMRAM     1     1      0
               _USBDisableInterrupts
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1164
                                             34 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _USBDisableInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              3     1      2     266
                                             34 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _LowPriorityISRCode                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HighPriorityISRCode                                14    14      0     113
                                             20 COMRAM    14    14      0
                    i2_tlc5947_latch
                   i2_tlc5947_update
 ---------------------------------------------------------------------------------
 (14) i2_tlc5947_update                                    1     1      0      69
                                             19 COMRAM     1     1      0
                         i2_WriteSPI
 ---------------------------------------------------------------------------------
 (15) i2_WriteSPI                                          2     2      0      23
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_tlc5947_latch                                     0     0      0      44
                     i2_Delay100TCYx
                      i2_Delay10TCYx
 ---------------------------------------------------------------------------------
 (15) i2_Delay10TCYx                                       1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_Delay100TCYx                                      1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _OpenSPI
     _USBDeviceInit
       _USBDisableInterrupts
       _memset
     _USBRegisterFix
     _readDeviceID
     _tlc5947_count_channels
       _ReadSPI
       _WriteSPI
       ___awdiv
       _tlc5947_update
         _WriteSPI
     _tlc5947_pwm_readback
       _Delay10TCYx
       ___lwdiv
       _tlc5947_latch
         _Delay100TCYx
         _Delay10TCYx
       _tlc5947_setChannel
         _gamma_lookup
       _tlc5947_update
         _WriteSPI
   _ProcessIO
     _BlinkUSBStatus
     _CDCTxService
       _USBTransferOnePacket
     _ProcessCDC
       _BusyADC
       _Busy_eep
       _ConvertADC
       _Delay10TCYx
       _ReadADC
       _Read_b_eep
       _USBDeviceTasks
         _USBClearUSBInterrupt
         _USBCtrlEPAllowStatusStage
         _USBCtrlEPService
           _USBCtrlTrfInHandler
             _USBCtrlTrfTxService
           _USBCtrlTrfOutHandler
             _USBCtrlTrfRxService
               _USBCtrlEPAllowStatusStage
           _USBCtrlTrfSetupHandler
             _USBCheckStdRequest
               _USBStdFeatureReqHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBStdGetDscHandler
               _USBStdGetStatusHandler
               _USBStdSetCfgHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
                 _memset
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBCtrlEPServiceComplete
               _USBCtrlEPAllowDataStage
                 _USBCtrlTrfTxService
               _USBCtrlEPAllowStatusStage
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
         _USBDeviceInit
           _USBDisableInterrupts
           _memset
         _USBStallHandler
         _USBSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBWakeFromSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _Write_b_eep
       _comm_send_dat
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _comm_send_rply
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _getsUSBUSART
         _USBTransferOnePacket
       _tlc5947_count_channels
         _ReadSPI
         _WriteSPI
         ___awdiv
         _tlc5947_update
           _WriteSPI
       _tlc5947_pwm_readback
         _Delay10TCYx
         ___lwdiv
         _tlc5947_latch
           _Delay100TCYx
           _Delay10TCYx
         _tlc5947_setChannel
           _gamma_lookup
         _tlc5947_update
           _WriteSPI
       _tlc5947_setChannel
         _gamma_lookup
     _SwitchIsPressed
     _USBDeviceTasks
       _USBClearUSBInterrupt
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
         _USBDisableInterrupts
         _memset
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _tlc5947_setChannel
       _gamma_lookup

 _LowPriorityISRCode (ROOT)

 _HighPriorityISRCode (ROOT)
   i2_tlc5947_latch
     i2_Delay100TCYx
     i2_Delay10TCYx
   i2_tlc5947_update
     i2_WriteSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0     200      23       50.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      DD       7       86.3%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      93       5       91.9%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     24F      16        0.0%
DATA                 0      0     44F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jun 25 21:01:00 2016

           __size_of_USBDisableInterrupts 002E                              _update_count 0092  
                              _USB_SD_Ptr 0901                  __size_of_SwitchIsPressed 002C  
                          _BlinkUSBStatus 3046                               _SSPSTATbits 000FC7  
                            ___awdiv@sign 0028                               __CFG_BOR$ON 000000  
                                      bsr 000FE0                             _USBDeviceInit 16A4  
                             __CFG_BORV$3 000000                             _tlc5947_latch 3292  
                      __size_of_CDCInitEP 006C                              __CFG_CP0$OFF 000000  
                              i2_WriteSPI 3332                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                          ?_comm_send_dat 0001      USER_USB_CALLBACK_EVENT_HANDLER@event 002F  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0031                                       l132 172C  
                                     l204 29B4                                       l212 1D60  
                                     l222 1DDE                                       l150 11BE  
                                     l142 130C                                       l161 1280  
                                     l250 1CE2                                       l237 225C  
                                     l333 2640                                       l325 262E  
                                     l421 24C0                                       l309 2338  
                                     l430 2494               __end_of_USBStdGetDscHandler 1BCC  
                                     l319 2E2A                                       l271 1BCA  
                                     l159 126C                                       l520 3390  
                                     l248 1CD2                                       l280 27E2  
                                     l257 217E                                       l337 20A0  
                                     l354 0E82                                       l179 2580  
                                     l275 27C8                                       l339 1FD6  
                                     l428 2458                                       l348 2024  
                                     l373 1052                                       l285 286E  
                                     l198 2400                                       l278 285A  
                                     l279 27DE                                       l455 27B8  
                                     l801 16A2                                       l377 10EA  
                                     l481 1968                                       l721 1F0C  
                                     l482 1860                                       l459 3372  
                                     l715 3290                                       l732 308C  
                                     l734 3090                                       l718 1EEC  
                                     l815 2CC8                                       l487 18A8  
                                     l824 28C0                                       l912 2B7E  
                                     l728 1FC0                                       l922 2BFA  
                                     _BDT 000400                                       l749 2E8A  
                                     l909 3044                                       l928 0E54  
                                     l988 0DBC                              __CFG_CPB$OFF 000000  
                                     _PR2 000FCB                              __CFG_CPD$OFF 000000  
                                     _UIE 000F69                                       _UIR 000F68  
                              _USBSuspend 3148                      __size_of_Write_b_eep 003A  
                    USBStdSetCfgHandler@i 0037                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 10EC  
                          _USBDeviceState 0097                   __size_of_USBRegisterFix 00F6  
                   ??_USBCtrlTrfRxService 0023                            _tlc5947_update 317C  
                          ??_getsUSBUSART 002D                  USBEnableEndpoint@options 002B  
                            __CFG_LVP$OFF 000000                  __size_ofi2_tlc5947_latch 002A  
                            __CFG_WDT$OFF 000000                           ?_comm_send_rply 0001  
                                    l1130 2FB2                                      l1050 3208  
                                    l1132 2FB6                                      l1060 1ED4  
                                    l1133 2FB8                                      l1109 3136  
                                    l1150 33A6                                      l1055 3264  
                                    l1136 2FD2                                      l1137 2FEC  
                                    l1401 33E0                                      l1065 3434  
                                    l1138 2FD4                                      l1162 3330  
                                    l1082 3438                                      l1139 2FD8  
                                    l1147 339E                                      l1164 3328  
                                    l1077 3426                                      l1096 33CE  
                                    l1362 2AE0                                      l4010 2982  
                                    l4100 2822                                      l1701 2F3C  
                                    l4030 20EA                                      l4006 2968  
                                    l1394 33F2                                      l4026 20E2  
                                    l5012 288E                                      l4140 0EF8  
                                    l4060 1AB8                                      l4108 2842  
                                    l4052 215A                                      l4036 2116  
                                    l4300 1FE0                                      l4212 1D0A  
              USBConfigureEndpoint@handle 0029                                      l5022 28AC  
                                    l4142 0F36                                      l4126 0E7A  
                                    l4310 1FF8                                      l4302 1FE6  
                                    l4152 0F5E                                      l4080 1BA4  
                                    l4072 1B4E                                      l4064 1ACA  
                                    l4320 201E                                      l4312 1FFC  
                                    l4304 1FEC                                      l4224 1D76  
                                    l4232 1D8A                                      l4208 1D00  
                                    l5026 28B8                                      l4410 261E  
                                    l4402 25FC                                      l4162 0FB2  
                                    l4154 0F80                                      l4146 0F3E  
                                    l4082 1BAA                                      l4074 1B54  
                                    l4314 2004                                      l4306 1FF4  
                                    l4330 205C                                      l5050 3018  
                                    l5202 09DA                                      l5028 28BC  
                                    l4404 260A                                      l4260 1C00  
                                    l4180 103E                                      l4164 0FD0  
                                    l4148 0F42                                      l4092 27D0  
                                    l4316 200A                                      l5052 301E  
                                    l5220 0A72                                      l4190 108C  
                                    l4086 1BB0                                      l4326 203E  
                                    l5160 2FBC                                      l4336 3256  
                                    l4432 33D2                                      l4512 31FA  
                                    l4416 263A                                      l4256 1BF0  
                                    l4168 0FEA                                      l4600 183E  
                                    l5080 2BCE                                      l5072 2B9E  
                                    l5320 0C4E                                      l5232 0AA4  
                                    l5216 0A54                                      l4282 1C94  
                                    l4266 1C26                                      l3802 30A4  
                                    l4194 10B6                                      l4178 1030  
                                    l4098 2800                                      l4522 3104  
                                    l4602 1848                                      l5082 2BD4  
                                    l5058 303C                                      l5330 0C6E  
                                    l5306 0C1E                                      l5242 0ACE  
                                    l5164 2FDC                                      l5172 1E5E  
                                    l5148 2DAE                                      l4436 33E4  
                                    l4276 1C76                                      l4196 10C4  
                                    l4188 106E                                      l4524 3108  
                                    l4612 186A                                      l5076 2BBE  
                                    l5404 0DC2                                      l5340 0CA4  
                                    l5332 0C76                                      l5308 0C26  
                                    l5260 0B3E                                      l5252 0AF8  
                                    l5244 0AD8                                      l5228 0A94  
                                    l5412 0DDA                                      l4470 1740  
                                    l4462 1726                                      l4390 25C2  
                                    l4278 1C84                                      l3806 30B4  
                                    l3822 2504                                      l3814 24D8  
                                    l3902 2E30                                      l4606 1854  
                                    l5078 2BC2                                      l5406 0DCA  
                                    l5350 0CCE                                      l5318 0C46  
                                    l5414 0E3C                                      l4800 2F12  
                                    l4704 1552                                      l5504 1A60  
                                    l4392 25CA                                      l4376 2E22  
                                    l4368 2DD8                                      l3816 24F2  
                                    l3904 2E36                                      l4632 18D2  
                                    l4640 18F6                                      l4624 18AE  
                                    l5088 2BF2                                      l5408 0DD2  
                                    l5360 0CFA                                      l5272 0B74  
                                    l5248 0AEE                                      l5416 0E44  
                                    l5184 328C                                      l4482 1776  
                                    l4458 170C                                      l4714 1590  
                                    l4706 1558                                      l5506 1A66  
                                    l3834 2560                                      l4546 2F8C  
                                    l4642 1902                                      l4650 1926  
                                    l4618 1896                                      l5338 0C9C  
                                    l5266 0B52                                      l5418 0E4C  
                                    l4492 17DA                                      l4724 160E  
                                    l4716 15D4                                      l3932 21AA  
                                    l3836 2576                                      l3844 2412  
                                    l3908 2E3C                                      l4564 22B8  
                                    l4580 2320                                      l4548 2F9A  
                                    l4900 1230                                      l4660 1948  
                                    l4652 1930                                      l5348 0CC6  
                                    l5276 0BAA                                      l5284 0BCA  
                                    l5268 0B5A                                      l4486 177E  
                                    l4478 1758                                      l4734 1668  
                                    l4726 1640                                      l5462 19F0  
                                    l3942 21D6                                      l3950 220E  
                                    l3870 247E                                      l3862 244E  
                                    l3854 243A                                      l4582 2326  
                                    l4822 1114                                      l5382 0D54  
                                    l5374 0D32                                      l5366 0D12  
                                    l5358 0CF2                                      l5286 0BD2  
                                    l5550 1EF0                                      l4760 2A74  
                                    l4808 2F30                                      l4736 16A0  
                                    l5464 19F6                                      l3952 221A  
                                    l3960 2252                                      l3928 219E  
                                    l3792 2A18                                      l3848 2424  
                                    l4576 2306                                      l4568 22C0  
                                    l4832 1162                                      l5384 0D5C  
                                    l5376 0D3A                                      l5368 0D1A  
                                    l5296 0BFC                                      l4770 2A9C  
                                    l4754 2A62                                      l4682 3182  
                                    l5458 19B0                                      l3794 2A32  
                                    l4930 12B8                                      l4658 1942  
                                    l5298 0C04                                      l5562 1F8E  
                                    l5570 1FA8                                      l5476 1A20  
                                    l4932 12D0                                      l4916 1276  
                                    l4908 125E                                      l4828 1152  
                                    l4836 1178                                      l3894 3214  
                                    l4766 2A8A                                      l4782 2AC6  
                                    l4686 319C                                      l5478 1A2A  
                                    l3878 249C                                      l5734 2E54  
                                    l4942 1308                                      l4870 11D2  
                                    l4950 2726                                      l5574 1FB8  
                                    l5558 1F1A                                      l4768 2A94  
                                    l4696 152E                                      l3976 2380  
                                    l5736 2E84                                      l4936 12E0  
                                    l4856 11B4                                      l4848 11A6  
                                    l4960 2764                                      l4952 2730  
                                    l3898 3226                                      l4786 2AD6  
                                    l4778 2ABA                                      l4938 1300  
                                    l4890 1216                                      l4980 2CA0  
                                    l4796 2F00                                      l4884 1206  
                                    l4964 278C                                      l5692 33B2  
                                    l4798 2F0A                                      l4894 1224  
                                    l4878 11E0                                      l4958 275E  
                                    l4984 2CA8                                      l4968 27B4  
                                    l5688 33AE                                      l4996 2CD0  
                                    _DDRA 000F92                                      _DDRB 000F93  
                                    _DDRC 000F94                                      _DDRD 000F95  
                                    _DDRE 000F96                                      _LATC 000F8B  
                                    u4030 271C                                      u2610 21FE  
                                    u4220 3430                                      u2630 2242  
                                    u4038 271E                                      u3440 1834  
                                    _PIE2 000FA0                                      u2617 21F4  
                                    u4401 0A3E                                      u4330 306E  
                                    u4340 3080                                      u4332 3070  
                                    u2637 2238                                      u4342 3082  
                                    u3615 15B0                                      u4255 3142  
                                    u2760 1B1C                                      u4256 3144  
                                    u3448 1836                                      u2770 1B4A  
                                    u4290 326E                                      u4275 2DB6  
                                    u3635 1600                                      u2790 1B9A  
                                    u2767 1B12                                      u4296 3270  
                                    u2777 1B40                                      u2797 1B90  
                   ??_USBCtrlTrfTxService 0023                                      u4887 33D4  
                                    _UCFG 000F6F                                      u4897 33E6  
                                    _UEP0 000F70                                      _UEP1 000F71  
                                    _UEIE 000F6B                                      _UEIR 000F6A  
                                    _UCON 000F6D                           _CDCDataInHandle 0088  
  USBStdFeatureReqHandler@current_ep_data 003A                                      _pDst 008C  
                                    _main 33A8                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 0078                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                                      start 08AA  
                           __CFG_IESO$OFF 000000                             __CFG_ICPRT$ON 000000  
                   ?_USBClearUSBInterrupt 0001                __end_of_USBCheckStdRequest 20A2  
                  ??_USBCtrlTrfOutHandler 0025                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000010                           __end_of_BusyADC 3436  
               ??_USBStdFeatureReqHandler 0037                    __end_of_BlinkUSBStatus 3092  
                         __end_of_ReadADC 3428                           __end_of_ReadSPI 33A8  
                             _Delay10TCYx 33D0                  ??_USBStdGetStatusHandler 0023  
                         __end_of_OpenSPI 2FF4                            ?_USBDeviceInit 0001  
                          ?_tlc5947_latch 0001                             __CFG_PLLDIV$5 000000  
                                   ?_main 0001                             _USB_In_Buffer 0200  
                         __end_of___awdiv 2AE2                                     _EEADR 000FA9  
                   __size_of_Delay100TCYx 0012         __size_of_USBCtrlEPServiceComplete 00FC  
                         ___awdiv@divisor 0025                    __end_of_USBDeviceTasks 130E  
                                   _T2CON 000FCA                                     _T3CON 000FB1  
               ?_USBCtrlEPServiceComplete 0001                           __end_of___lwdiv 2F46  
                                   i1l686 0864                                     i2l682 2B38  
                                   _UADDR 000F6E                           ___awdiv@counter 0027  
                       i2Delay10TCYx@unit 0012                            __pidataBIGRAMl 130E  
                                   _TMR3H 000FB3                                     _TMR3L 000FB2  
                           __CFG_USBDIV$2 000000                                     _TRISC 000F94  
                                   _USTAT 000F6C                             __CFG_PWRT$OFF 000000  
                  __end_of_tlc5947_update 31AC                             __CFG_WRT0$OFF 000000  
      __size_of_USBCtrlEPAllowStatusStage 00C8                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000           __end_of_USBCtrlEPAllowDataStage 29B6  
                                   _sd000 09A8                                     _sd001 094E  
                                   _sd002 0974                                     _sd003 099E  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            Read_b_eep@badd 0023  
                          __CFG_EBTRB$OFF 000000                    Write_b_eep@GIE_BIT_VAL 0026  
                __end_ofi2_tlc5947_update 31DC                                _ConvertADC 343E  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 2D66                                     status 000FD8  
                         putUSBUSART@data 0023                      __end_of_gamma_lookup 3392  
            __size_of_USBStdSetCfgHandler 00DE                           __initialization 2642  
                         ?_BlinkUSBStatus 0001                              _Delay100TCYx 33E2  
                            __end_of_main 33BC                     _control_signal_bitmap 009A  
                              _Read_b_eep 33BC                            _pattern_number 009E  
                           ?_readDeviceID 0001                          __end_of_Busy_eep 343E  
                         ??_comm_send_dat 002F                   __size_ofi2_Delay100TCYx 0012  
               __size_of_USBCtrlEPService 00DC                               ?i2_WriteSPI 0001  
             __size_of_LowPriorityISRCode 0092                                    ??_main 003E  
               __size_of_InitializeSystem 013E                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                         ??_SwitchIsPressed 0023  
                             ?_USBSuspend 0001                              _CDCBufferOut 0140  
                         ?_tlc5947_update 0001                           __CFG_CCP2MX$OFF 000000  
                            _cdc_mem_type 0099                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                        _CDCDataOutHandle 0044                         _getsUSBUSART$1641 002E  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 0023                           getsUSBUSART@len 002C  
                        __end_of_WriteSPI 3332                                    _U1IE_R 00D5  
                                  _IOCB_R 00BB                     __size_of_CDCTxService 0156  
                                  _U1IR_R 00D7                                    i2l1401 3404  
                                  i2l1162 3352                                    i2l1164 334A  
                                  i2l1394 3416                                    i2l5430 3408  
                                  _PIE2_R 00BF                                    i2l5434 33F6  
                                  _PIE3_R 00C1                                    i2l5580 31B2  
                                  i2l5584 31CC                                    i2l5684 2B34  
                                  _TABLAT 000FF5                                    _PIR2_R 00C3  
                                  _PIR3_R 00C5                                    _OSCCON 000FD3  
                           CDCTxService@i 002D                                    _SSPBUF 000FC9  
                               ??_BusyADC 0023                                 ??_ReadADC 0025  
                       ??i2_tlc5947_latch 0013                                 ??_ReadSPI 0023  
                          __CFG_VREGEN$ON 000000                    ??_USBClearUSBInterrupt 0023  
                               ??_OpenSPI 0025                         _shortPacketStatus 0055  
                          __CFG_XINST$OFF 000000                           USBDeviceTasks@i 00E0  
             USBStdFeatureReqHandler@pUEP 0038                  USBTransferOnePacket@data 0024  
              USBCtrlTrfInHandler@lastDTS 0024                           ??_USBDeviceInit 002B  
                         ??_tlc5947_latch 0024                              ?_putUSBUSART 0023  
                          ??_readDeviceID 0023                                 ??___awdiv 0027  
                          __CFG_STVREN$ON 000000                     __end_ofi2_Delay10TCYx 3406  
                    __end_of_getsUSBUSART 27BA                                 ??___lwdiv 0027  
                       _USBEnableEndpoint 3092           __size_of_USBStdGetStatusHandler 00B6  
                                  _memset 320A                                    clear_0 2648  
                                  clear_1 2654                                    clear_2 2660  
                                  clear_3 266C                          ___awdiv@quotient 0029  
                              _ProcessCDC 09AE                                ProcessIO@x 00F0  
                      ?_USBEnableEndpoint 002B                           WriteSPI@TempVar 0023  
           __size_of_USBTransferOnePacket 00C0                              __pdataCOMRAM 005D  
                      __size_of_ProcessIO 00EC                              _CDCTxService 1814  
                            _txmiss_count 0090                              __mediumconst 0000  
                         tlc5947_update@x 0025                            _USBRegisterFix 1DE0  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 002C  
                 ?_tlc5947_count_channels 0001                               _CtrlTrfData 000438  
                             ?_ConvertADC 0001                      _controlTransferState 0054  
              __end_of_tlc5947_setChannel 16A4                                __accesstop 0060  
                 __end_of__initialization 26F4                           __CFG_PBADEN$OFF 000000  
                     __size_ofi2_WriteSPI 0022                             ___rparam_used 000001  
                __size_of_USBStallHandler 0058                       __size_of_USBSuspend 0034  
            __size_of_HighPriorityISRCode 236A              __end_of_tlc5947_pwm_readback 291E  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 30D2  
                           __end_of_sd000 09AC                             __end_of_sd001 0974  
                           __end_of_sd002 098C                             __end_of_sd003 09A8  
                            __pidataBANK0 32E6                              __pidataBANK1 2E8C  
        __size_of_USBCtrlEPAllowDataStage 0098                               ?_Read_b_eep 0023  
           __size_of_USBConfigureEndpoint 0096               __end_of_USBCtrlTrfInHandler 2642  
                 ProcessCDC@boot_request0 00EB                   ProcessCDC@boot_request1 00EC  
                  __end_of_USBRegisterFix 1ED6                          ??_comm_send_rply 002F  
                       _CDCTxService$1689 002B                                _cdc_notice 0060  
          __end_of_tlc5947_count_channels 2CFA                                _cdc_rx_len 0051  
                              _cdc_tx_len 0053              __end_of_USBDisableInterrupts 3266  
                ??_USBCtrlTrfSetupHandler 003D                            _USB_Out_Buffer 0240  
                  _USBStdGetStatusHandler 27BA                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                   __size_of_gamma_lookup 001E                                 ?_Busy_eep 0001  
             __size_of_USBWakeFromSuspend 003C                               _pBDTEntryIn 003E  
                       __end_of_ProcessIO 1FC2          __end_of_USBCtrlEPServiceComplete 1DE0  
             __size_of_USBCheckCDCRequest 00C0                      USBCtrlTrfRxService@i 0023  
                            ?_Delay10TCYx 0001                            i2_Delay100TCYx 3406  
                                 ?_memset 0023                                _device_dsc 098C  
                     __size_of_ConvertADC 0004                               ?_ProcessCDC 0001  
                        _USBCtrlEPService 225E                             ??_Write_b_eep 0026  
                               ?_WriteSPI 0001                                _ep_data_in 007C  
                        _InitializeSystem 196A                                   _U1EP0_R 005D  
                                 _U1EP1_R 00D3                                   _U1EIE_R 00CF  
             __end_of_USBCtrlTrfRxService 1CE4                                   _U1EIR_R 00D1  
                                 _U1CON_R 00CD                        _USBCheckStdRequest 1FC2  
                       _configDescriptor1 090B                           ?_USBRegisterFix 0001  
                  _tlc_pwm_readback_value 004A               __end_of_USBCtrlTrfTxService 225E  
                     _USBStdSetCfgHandler 20A2                            comm_send_dat@i 002F  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                            _gamma_lookup 3374                                   _TBLPTRU 000FF8  
                                 _OSCTUNE 000F9B                                   _SSPCON1 000FC6  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 0124  
                                 _UIEbits 000F69                                   _SSPSTAT 000FC7  
                    __end_of_readDeviceID 2DCA                                   _UIRbits 000F68  
                       ?i2_tlc5947_update 0001                       __size_of_Read_b_eep 0014  
                           _cdc_trf_state 0052                                ??_Busy_eep 0023  
                      ??i2_tlc5947_update 0014                                   _BusyADC 3428  
                        ??_BlinkUSBStatus 0023                                   _ReadADC 3418  
                                 _ReadSPI 3392                                   _pCDCDst 0082  
                                 _pCDCSrc 0085                     __size_of_getsUSBUSART 00BC  
                                 _OpenSPI 2F9E                                   __Hparam 0000  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 2CFA  
                                 __Lparam 0000                           _SwitchIsPressed 3266  
              __size_of_USBEnableEndpoint 0040                    __end_ofi2_Delay100TCYx 3418  
                       _green_led_counter 009C                      ??_USBCheckStdRequest 003D  
           __size_of_USBCtrlTrfOutHandler 0062                                   ___awdiv 2A4C  
                        ??_USBDeviceTasks 003E                                   ___lwdiv 2EEA  
                       ??_USBStallHandler 0023                              __psmallconst 0900  
                    __size_of_putUSBUSART 0020                                   __pcinit 2642  
                      getsUSBUSART@buffer 002A                          ??_tlc5947_update 0025  
                         __size_of_memset 002E                           Delay10TCYx@unit 0023  
                            ??i2_WriteSPI 0012                 __end_of_configDescriptor1 094E  
                                 __ramtop 0800                                 _U1CNFG1_R 00CB  
                              ??_WriteSPI 0023                                   __ptext0 33A8  
                                 __ptext1 1ED6                                   __ptext2 3266  
                                 __ptext3 09AE                                   __ptext4 26FE  
                                 __ptext5 2FF4                                   __ptext6 2B72  
                                 __ptext7 3354                                   __ptext8 1814  
                                 __ptext9 310E                                   _inPipes 0056  
             _USBDeferOUTDataStagePackets 004D                              ??_USBSuspend 0037  
                                 _old_sw2 009D                           i2_tlc5947_latch 32BC  
                     __end_of_Write_b_eep 3148                            ProcessCDC@csum 00E5  
                      __end_of_USB_CD_Ptr 090B                      _tlc5947_pwm_readback 2870  
         __size_of_USBCtrlTrfSetupHandler 0088                            __pintcode_body 2AE2  
                    end_of_initialization 26F4                              _getsUSBUSART 26FE  
                      __end_of_USB_SD_Ptr 0909                             __pdataBIGRAMl 0580  
                     _pBDTEntryEP0OutNext 0048                                   memset@c 0025  
                                 memset@n 0027                                   memset@p 0029  
                           __Lmediumconst 0000                                   int_func 2AE2  
                     __size_of_ProcessCDC 04A8           _dummy_encapsulated_cmd_response 00A3  
                ?_USBStdFeatureReqHandler 0001                        __end_ofi2_WriteSPI 3354  
                   ??_USBStdSetCfgHandler 0037                                 _OSCCON2_R 00BD  
                              ?_CDCInitEP 0001                          comm_send_dat@len 0030  
                      __end_of_USBSuspend 317C                   _USBCtrlEPAllowDataStage 291E  
                    _USBDisableInterrupts 3238                                _tlc_memory 0180  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _tlc_nbytes 005F                          WriteSPI@data_out 0024  
                         ?i2_Delay100TCYx 0001                                   postinc0 000FEE  
                                 postinc2 000FDE                __end_of_LowPriorityISRCode 08AA  
                _USBCtrlEPServiceComplete 1CE4                _USBStatusStageEnabledFlag1 004F  
              _USBStatusStageEnabledFlag2 0050                        USBEnableEndpoint@p 002C  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                   __end_of_comm_send_dat 2BFC                                 _PORTCbits 000F82  
                        comm_send_rply@cc 002F            tlc5947_count_channels@old_data 002B  
                     _HighPriorityISRCode 0808                                 _TRISAbits 000F92  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                      _BothEP0OutUOWNsSet 0094                     ?_tlc5947_pwm_readback 0001  
               USBConfigureEndpoint@EPNum 0028                              ??_ConvertADC 0023  
              ?_USBCtrlEPAllowStatusStage 0001       USER_USB_CALLBACK_EVENT_HANDLER@size 0033  
                               _USTATcopy 00B4                   __end_of_SwitchIsPressed 3292  
            __end_of_USBTransferOnePacket 2582                      ?_HighPriorityISRCode 0001  
                       putUSBUSART@length 0025             __size_of_USBClearUSBInterrupt 002E  
                   ?_USBDisableInterrupts 0001                          Delay100TCYx@unit 0023  
                  _USBCtrlTrfSetupHandler 2BFC                        _tlc5947_setChannel 150E  
                            ??_Read_b_eep 0025                     __end_of_USBDeviceInit 1814  
                   __end_of_tlc5947_latch 32BC                         _readDeviceID$2783 0027  
                    __size_of_Delay10TCYx 0012                             __pidataCOMRAM 3442  
                 __end_ofi2_tlc5947_latch 32E6                        __end_of_ConvertADC 3442  
                             _Write_b_eep 310E                 tlc5947_count_channels@pos 002D  
                          __end_of_memset 3238                          OpenSPI@smp_phase 0024  
                     ?_tlc5947_setChannel 0026                         _USBBusIsSuspended 0096  
                   __size_of_readDeviceID 0064                       start_initialization 2642  
                 ?_USBStdGetStatusHandler 0001                            ReadSPI@TempVar 0023  
           USBCtrlTrfRxService@byteToRead 0024                    tlc5947_setChannel@mpos 002E  
                             _cdc_data_rx 000540                               _cdc_data_tx 000500  
            __end_of_USBConfigureEndpoint 2A4C                          OpenSPI@sync_mode 0025  
         __end_of_USBStdFeatureReqHandler 10EC                    __size_ofi2_Delay10TCYx 0012  
       __end_of_USBCtrlEPAllowStatusStage 2402                               _CDCBufferIn 0100  
                __end_of_USBCtrlEPService 233A                        __end_of_Read_b_eep 33D0  
                    ??_tlc5947_setChannel 0027                  __end_of_InitializeSystem 1AA8  
               ??_USBCtrlEPAllowDataStage 0024                         __size_of_Busy_eep 0008  
                   ??_HighPriorityISRCode 0015                               ??_CDCInitEP 002F  
                          USBDeviceInit@i 002B                    _pBDTEntryEP0OutCurrent 0046  
                 USBTransferOnePacket@dir 0023                   USBTransferOnePacket@len 0026  
                     _USBStdGetDscHandler 1AA8                                 _ProcessIO 1ED6  
                        ??_USBRegisterFix 0023                               __pdataBANK0 00B5  
                             __pdataBANK1 0180                              _readDeviceID 2D66  
                        __CFG_LPT1OSC$OFF 000000                                  ??_memset 0029  
                            ??_ProcessCDC 00E1                    _USBActiveConfiguration 005C  
          __end_of_USBStdGetStatusHandler 2870                         __size_of_WriteSPI 0022  
                             __pbssCOMRAM 003E                    ??_tlc5947_pwm_readback 002F  
                           __pcstackBANK0 00DE              __size_of_USBCtrlTrfInHandler 00C0  
                    ?_USBStdGetDscHandler 0001                __end_of_USBWakeFromSuspend 310E  
                        ?_SwitchIsPressed 0001                           _USBStallHandler 2F46  
                            _pBDTEntryOut 0072                                  ?_BusyADC 0001  
                                ?_ReadADC 0023                __end_of_USBCheckCDCRequest 24C2  
                      __end_of_ProcessCDC 0E56                                  ?_ReadSPI 0001  
                               __pnvBANK0 00F1                    ??_USBDisableInterrupts 0023  
                                ?_OpenSPI 0023                          ___lwdiv@dividend 0023  
                           ?_Delay100TCYx 0001                                 __pintcode 0808  
                               _pic18_rev 009F                                  ?___awdiv 0023  
                              ?_ProcessIO 0001                 __size_ofi2_tlc5947_update 0030  
                                ?___lwdiv 0023                             i2_Delay10TCYx 33F4  
                             __pintcodelo 0818                               _gamma_table 0580  
                        ?i2_tlc5947_latch 0001                                 _led_count 008A  
                             _pic18_devid 00F1                      _USBTransferOnePacket 24C2  
                             __smallconst 0900                tlc5947_count_channels@data 002C  
                                _ACTCON_R 00B5              __end_of_USBCtrlTrfOutHandler 2E2C  
                   ??_USBStdGetDscHandler 0023                               _ep_data_out 007F  
                                _ANSELA_R 00B7                                  _ANSELC_R 00B9  
                        ___lwdiv@quotient 0027                                  _DDRAbits 000F92  
                                _DDRBbits 000F93                                  _U1ADDR_R 00C9  
            __size_of_USBCtrlTrfRxService 0118             USBConfigureEndpoint@direction 0023  
                                _T3GCON_R 00C7              __size_of_USBCtrlTrfTxService 00DE  
                           ProcessCDC@cmd 00EA                             ProcessCDC@len 00EF  
                 __size_of_comm_send_rply 0052                                  _U1STAT_R 00D9  
                                _LATBbits 000F8A                                  _LATCbits 000F8B  
              ??_USBCtrlEPServiceComplete 0024                          ??i2_Delay100TCYx 0012  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                 _tmr3h_cal 00A1  
                               _tmr3l_cal 00A2                            ??_Delay100TCYx 0023  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u490_47 33F8                                  i2u491_47 340A  
               USBCtrlEPService@setup_cnt 003D                             gamma_lookup@c 0025  
                                _RCONbits 000FD0                             ??_putUSBUSART 0026  
                        __CFG_WDTPS$32768 000000                _USBDeferINDataStagePackets 004C  
             __size_of_USBCheckStdRequest 00E0                            ?i2_Delay10TCYx 0001  
                                _UCONbits 000F6D                      _USBConfigureEndpoint 29B6  
                ??_tlc5947_count_channels 002B                             _tlc_nchannels 00DD  
        __size_of_USBStdFeatureReqHandler 0296                           OpenSPI@bus_mode 0023  
                              _ADCON0bits 000FC2                     ?_USBTransferOnePacket 0023  
                               _pwr_delay 008E                           Write_b_eep@badd 0023  
                         Write_b_eep@bdat 0025                             ?_CDCTxService 0001  
                            _RemoteWakeup 0095                        _LowPriorityISRCode 0818  
                 __end_of_USBStallHandler 2F9E                                 copy_data0 2686  
                               copy_data1 26AA                                 copy_data2 26CA  
             ??_USBCtrlEPAllowStatusStage 0023               __end_of_USBStdSetCfgHandler 2180  
                   tlc5947_setChannel@col 002B                     tlc5947_setChannel@val 0026  
                   tlc5947_setChannel@pos 002D                       ?_LowPriorityISRCode 0001  
                                _Busy_eep 3436                        __end_of_device_dsc 099E  
                              _EECON1bits 000FA6                          __size_of_BusyADC 000E  
                 ?_USBCtrlTrfSetupHandler 0001                          __size_of_ReadADC 0010  
                 USBStdGetStatusHandler@p 0024                          __size_of_ReadSPI 0016  
                                __Hrparam 0000                                  __Lrparam 0000  
                        __size_of_OpenSPI 0056                    USBTransferOnePacket@ep 0027  
                                _SetupPkt 000430                               ??_ProcessIO 003E  
                   ?_USBConfigureEndpoint 0023                          __size_of___awdiv 0096  
                 __size_of_BlinkUSBStatus 004C                          __size_of___lwdiv 005C  
                    ??_LowPriorityISRCode 0001                                  _WriteSPI 3310  
                            ?_Write_b_eep 0023                       __end_of_putUSBUSART 3374  
                      i2WriteSPI@data_out 0013                               _line_coding 00AB  
                          ??_CDCTxService 002A              __end_of_USBClearUSBInterrupt 320A  
                 __size_of_USBDeviceTasks 0222                           ___lwdiv@divisor 0025  
                         ___lwdiv@counter 0029                                  __ptext10 10EC  
                                __ptext11 30D2                                  __ptext20 27BA  
                                __ptext12 3148                                  __ptext21 1AA8  
                                __ptext13 2F46                                  __ptext30 1BCC  
                                __ptext22 0E56                                  __ptext14 225E  
                                __ptext31 233A                                  __ptext23 2E2C  
                                __ptext15 2BFC                                  __ptext40 3046  
                                __ptext32 2582                                  __ptext24 2402  
                                __ptext16 1CE4                                  __ptext41 196A  
                                __ptext33 2180                                  __ptext25 2CFA  
                                __ptext17 291E                                  __ptext50 317C  
                                __ptext42 2870                                  __ptext34 31DC  
                                __ptext26 24C2                                  __ptext18 1FC2  
                                __ptext51 3310                                  __ptext43 150E  
                                __ptext35 33BC                                  __ptext27 3092  
                                __ptext19 20A2                                  __ptext52 2A4C  
                                __ptext44 3374                                  __ptext36 3418  
                                __ptext28 29B6                                  __ptext53 3392  
                                __ptext45 3292                                  __ptext37 343E  
                                __ptext29 2DCA                                  __ptext62 31AC  
                                __ptext54 2D66                                  __ptext46 33D0  
                                __ptext38 3436                                  __ptext63 3332  
                                __ptext55 1DE0                                  __ptext47 33E2  
                                __ptext39 3428                                  __ptext64 32BC  
                                __ptext56 16A4                                  __ptext48 2EEA  
                                __ptext65 33F4                                  __ptext57 320A  
                                __ptext49 2C84                                  __ptext66 3406  
                                __ptext58 3238                                  __ptext59 2F9E  
                 __size_of_tlc5947_update 0030            __end_of_USBCtrlTrfSetupHandler 2C84  
                           __size_of_main 0014                         ?_USBCtrlEPService 0001  
                  __size_of_comm_send_dat 008A                         ?_InitializeSystem 0001  
                            ProcessCDC@_c 00E6                              ProcessCDC@_x 00EE  
                            ProcessCDC@_y 00E8                        ??_USBCtrlEPService 00DE  
                       _tcl5947_testbyte0 00DB                         _tcl5947_testbyte1 00DC  
                     _USBCtrlTrfInHandler 2582                        ??_InitializeSystem 0036  
                         ??i2_Delay10TCYx 0012                             ??_Delay10TCYx 0023  
                                _outPipes 006A                      _USBCtrlTrfOutHandler 2DCA  
                        i2_tlc5947_update 31AC                 _USBCtrlEPAllowStatusStage 233A  
                  ??_USBTransferOnePacket 0027           __size_of_tlc5947_count_channels 0076  
                   __CFG_CPUDIV$OSC1_PLL2 000000                        i2Delay100TCYx@unit 0012  
                    tlc5947_setChannel@ch 002A                 _USBDeferStatusStagePacket 004E  
                CDCTxService@byte_to_send 002E                                _INTCONbits 000FF2  
                   tlc5947_pwm_readback@i 0035                         i2WriteSPI@TempVar 0012  
                    ?_USBCtrlTrfInHandler 0001                             ?_gamma_lookup 0023  
           USBCtrlTrfTxService@byteToSend 0023                      __end_of_Delay100TCYx 33F4  
                                memset@p1 0023                        readDeviceID@devID1 0025  
                      readDeviceID@devID2 0026                          ?_USBStallHandler 0001  
                       i2tlc5947_update@x 0014                  USBStdFeatureReqHandler@p 003B  
                                intlevel1 0000                                  intlevel2 0000  
             __end_of_HighPriorityISRCode 2B72                    __size_of_USBDeviceInit 0170  
                          _comm_send_rply 2FF4                    __size_of_tlc5947_latch 002A  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 2E8C  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0060  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0035          ?_USER_USB_CALLBACK_EVENT_HANDLER 002F  
         _USER_USB_CALLBACK_EVENT_HANDLER 2E2C               __size_of_tlc5947_setChannel 0196  
                  ??_USBConfigureEndpoint 0024                     ?_USBCtrlTrfOutHandler 0001  
                             _putUSBUSART 3354                       _USBCtrlTrfRxService 1BCC  
                      _USBWakeFromSuspend 30D2                   _USBStdFeatureReqHandler 0E56  
                             _tlc_request 00A0                        _USBCheckCDCRequest 2402  
                     _USBCtrlTrfTxService 2180                       __end_of_Delay10TCYx 33E2  
                           _comm_send_dat 2B72                       ?_USBWakeFromSuspend 0001  
                          ??_gamma_lookup 0025                     ??_USBCtrlTrfInHandler 0024  
                   _USBAlternateInterface 00B2                              _test_pattern 01C8  
                      ProcessCDC@checksum 00E7                       ?_USBCheckCDCRequest 0001  
                             _SSPCON1bits 000FC6                       USBEnableEndpoint@ep 002E  
                         _endpoint_number 009B             __size_of_tlc5947_pwm_readback 00AE  
                    ?_USBCtrlTrfRxService 0001                    __end_of_comm_send_rply 3046  
                           ?_getsUSBUSART 002A                        __CFG_FOSC$HSPLL_HS 000000  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
                  _tlc5947_count_channels 2C84              _USBStatusStageTimeoutCounter 0098  
                    ??_USBWakeFromSuspend 0037                USBTransferOnePacket@handle 0028  
                    __end_of_CDCTxService 196A                      ??_USBCheckCDCRequest 0023  
                              _USB_CD_Ptr 0909                        ProcessCDC@numBytes 00ED  
                    _USBClearUSBInterrupt 31DC  
