

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jun 25 21:00:35 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1
     7                           	psect	idataBIGRAMl,global,class=CODE,delta=1
     8                           	psect	idataBANK0,global,class=CODE,delta=1
     9                           	psect	idataBANK1,global,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
    11                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBIGRAMl,global,class=BIGRAM,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    93                           	dabs	1,0x400,48,_BDT
    94                           	dabs	1,0x500,64,_cdc_data_tx
    95                           	dabs	1,0x438,8,_CtrlTrfData
    96                           	dabs	1,0x430,8,_SetupPkt
    97                           	dabs	1,0x540,64,_cdc_data_rx
    98  0000                     
    99                           	psect	eeprom_data
   100  F00000  34 00 00 00 00 00 00 00 	db	52,0,0,0,0,0,0,0	;# 
   101  0000                     
   102                           	psect	idataCOMRAM
   103  00337E                     __pidataCOMRAM:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _U1EP0_R
   107  00337E  6A                 	db	106
   108  00337F  0F                 	db	15
   109                           
   110                           ;initializer for _tlc_nbytes
   111  003380  48                 	db	72
   112                           
   113                           	psect	idataBIGRAMl
   114  00120E                     __pidataBIGRAMl:
   115                           	opt stack 0
   116                           
   117                           ;initializer for _gamma_table
   118  00120E  0000               	dw	0
   119  001210  0000               	dw	0
   120  001212  0000               	dw	0
   121  001214  0000               	dw	0
   122  001216  0000               	dw	0
   123  001218  0000               	dw	0
   124  00121A  0000               	dw	0
   125  00121C  0001               	dw	1
   126  00121E  0001               	dw	1
   127  001220  0001               	dw	1
   128  001222  0001               	dw	1
   129  001224  0002               	dw	2
   130  001226  0002               	dw	2
   131  001228  0002               	dw	2
   132  00122A  0003               	dw	3
   133  00122C  0003               	dw	3
   134  00122E  0004               	dw	4
   135  001230  0005               	dw	5
   136  001232  0005               	dw	5
   137  001234  0006               	dw	6
   138  001236  0007               	dw	7
   139  001238  0008               	dw	8
   140  00123A  0009               	dw	9
   141  00123C  000A               	dw	10
   142  00123E  000B               	dw	11
   143  001240  000C               	dw	12
   144  001242  000E               	dw	14
   145  001244  000F               	dw	15
   146  001246  0010               	dw	16
   147  001248  0012               	dw	18
   148  00124A  0013               	dw	19
   149  00124C  0015               	dw	21
   150  00124E  0017               	dw	23
   151  001250  0019               	dw	25
   152  001252  001B               	dw	27
   153  001254  001D               	dw	29
   154  001256  001F               	dw	31
   155  001258  0021               	dw	33
   156  00125A  0023               	dw	35
   157  00125C  0025               	dw	37
   158  00125E  0028               	dw	40
   159  001260  002A               	dw	42
   160  001262  002D               	dw	45
   161  001264  0030               	dw	48
   162  001266  0033               	dw	51
   163  001268  0036               	dw	54
   164  00126A  0039               	dw	57
   165  00126C  003C               	dw	60
   166  00126E  003F               	dw	63
   167  001270  0042               	dw	66
   168  001272  0046               	dw	70
   169  001274  0049               	dw	73
   170  001276  004D               	dw	77
   171  001278  0051               	dw	81
   172  00127A  0055               	dw	85
   173  00127C  0058               	dw	88
   174  00127E  005D               	dw	93
   175  001280  0061               	dw	97
   176  001282  0065               	dw	101
   177  001284  0069               	dw	105
   178  001286  006E               	dw	110
   179  001288  0073               	dw	115
   180  00128A  0077               	dw	119
   181  00128C  007C               	dw	124
   182  00128E  0081               	dw	129
   183  001290  0086               	dw	134
   184  001292  008C               	dw	140
   185  001294  0091               	dw	145
   186  001296  0096               	dw	150
   187  001298  009C               	dw	156
   188  00129A  00A2               	dw	162
   189  00129C  00A8               	dw	168
   190  00129E  00AD               	dw	173
   191  0012A0  00B4               	dw	180
   192  0012A2  00BA               	dw	186
   193  0012A4  00C0               	dw	192
   194  0012A6  00C7               	dw	199
   195  0012A8  00CD               	dw	205
   196  0012AA  00D4               	dw	212
   197  0012AC  00DB               	dw	219
   198  0012AE  00E2               	dw	226
   199  0012B0  00E9               	dw	233
   200  0012B2  00F0               	dw	240
   201  0012B4  00F8               	dw	248
   202  0012B6  00FF               	dw	255
   203  0012B8  0107               	dw	263
   204  0012BA  010E               	dw	270
   205  0012BC  0116               	dw	278
   206  0012BE  011E               	dw	286
   207  0012C0  0127               	dw	295
   208  0012C2  012F               	dw	303
   209  0012C4  0138               	dw	312
   210  0012C6  0140               	dw	320
   211  0012C8  0149               	dw	329
   212  0012CA  0152               	dw	338
   213  0012CC  015B               	dw	347
   214  0012CE  0164               	dw	356
   215  0012D0  016D               	dw	365
   216  0012D2  0177               	dw	375
   217  0012D4  0181               	dw	385
   218  0012D6  018A               	dw	394
   219  0012D8  0194               	dw	404
   220  0012DA  019E               	dw	414
   221  0012DC  01A9               	dw	425
   222  0012DE  01B3               	dw	435
   223  0012E0  01BE               	dw	446
   224  0012E2  01C8               	dw	456
   225  0012E4  01D3               	dw	467
   226  0012E6  01DE               	dw	478
   227  0012E8  01E9               	dw	489
   228  0012EA  01F4               	dw	500
   229  0012EC  0200               	dw	512
   230  0012EE  020C               	dw	524
   231  0012F0  0217               	dw	535
   232  0012F2  0223               	dw	547
   233  0012F4  022F               	dw	559
   234  0012F6  023C               	dw	572
   235  0012F8  0248               	dw	584
   236  0012FA  0254               	dw	596
   237  0012FC  0261               	dw	609
   238  0012FE  026E               	dw	622
   239  001300  027B               	dw	635
   240  001302  0288               	dw	648
   241  001304  0296               	dw	662
   242  001306  02A3               	dw	675
   243  001308  02B1               	dw	689
   244  00130A  02BF               	dw	703
   245  00130C  02CD               	dw	717
   246  00130E  02DB               	dw	731
   247  001310  02E9               	dw	745
   248  001312  02F8               	dw	760
   249  001314  0307               	dw	775
   250  001316  0315               	dw	789
   251  001318  0325               	dw	805
   252  00131A  0334               	dw	820
   253  00131C  0343               	dw	835
   254  00131E  0353               	dw	851
   255  001320  0362               	dw	866
   256  001322  0372               	dw	882
   257  001324  0382               	dw	898
   258  001326  0393               	dw	915
   259  001328  03A3               	dw	931
   260  00132A  03B4               	dw	948
   261  00132C  03C4               	dw	964
   262  00132E  03D5               	dw	981
   263  001330  03E6               	dw	998
   264  001332  03F8               	dw	1016
   265  001334  0409               	dw	1033
   266  001336  041B               	dw	1051
   267  001338  042D               	dw	1069
   268  00133A  043F               	dw	1087
   269  00133C  0451               	dw	1105
   270  00133E  0463               	dw	1123
   271  001340  0476               	dw	1142
   272  001342  0489               	dw	1161
   273  001344  049C               	dw	1180
   274  001346  04AF               	dw	1199
   275  001348  04C2               	dw	1218
   276  00134A  04D6               	dw	1238
   277  00134C  04E9               	dw	1257
   278  00134E  04FD               	dw	1277
   279  001350  0511               	dw	1297
   280  001352  0525               	dw	1317
   281  001354  053A               	dw	1338
   282  001356  054E               	dw	1358
   283  001358  0563               	dw	1379
   284  00135A  0578               	dw	1400
   285  00135C  058D               	dw	1421
   286  00135E  05A3               	dw	1443
   287  001360  05B8               	dw	1464
   288  001362  05CE               	dw	1486
   289  001364  05E4               	dw	1508
   290  001366  05FA               	dw	1530
   291  001368  0610               	dw	1552
   292  00136A  0627               	dw	1575
   293  00136C  063E               	dw	1598
   294  00136E  0655               	dw	1621
   295  001370  066C               	dw	1644
   296  001372  0683               	dw	1667
   297  001374  069B               	dw	1691
   298  001376  06B2               	dw	1714
   299  001378  06CA               	dw	1738
   300  00137A  06E2               	dw	1762
   301  00137C  06FB               	dw	1787
   302  00137E  0713               	dw	1811
   303  001380  072C               	dw	1836
   304  001382  0745               	dw	1861
   305  001384  075E               	dw	1886
   306  001386  0777               	dw	1911
   307  001388  0791               	dw	1937
   308  00138A  07AA               	dw	1962
   309  00138C  07C4               	dw	1988
   310  00138E  07DE               	dw	2014
   311  001390  07F9               	dw	2041
   312  001392  0813               	dw	2067
   313  001394  082E               	dw	2094
   314  001396  0849               	dw	2121
   315  001398  0864               	dw	2148
   316  00139A  0880               	dw	2176
   317  00139C  089B               	dw	2203
   318  00139E  08B7               	dw	2231
   319  0013A0  08D3               	dw	2259
   320  0013A2  08EF               	dw	2287
   321  0013A4  090B               	dw	2315
   322  0013A6  0928               	dw	2344
   323  0013A8  0945               	dw	2373
   324  0013AA  0962               	dw	2402
   325  0013AC  097F               	dw	2431
   326  0013AE  099D               	dw	2461
   327  0013B0  09BA               	dw	2490
   328  0013B2  09D8               	dw	2520
   329  0013B4  09F6               	dw	2550
   330  0013B6  0A15               	dw	2581
   331  0013B8  0A33               	dw	2611
   332  0013BA  0A52               	dw	2642
   333  0013BC  0A71               	dw	2673
   334  0013BE  0A90               	dw	2704
   335  0013C0  0AB0               	dw	2736
   336  0013C2  0ACF               	dw	2767
   337  0013C4  0AEF               	dw	2799
   338  0013C6  0B0F               	dw	2831
   339  0013C8  0B2F               	dw	2863
   340  0013CA  0B50               	dw	2896
   341  0013CC  0B71               	dw	2929
   342  0013CE  0B92               	dw	2962
   343  0013D0  0BB3               	dw	2995
   344  0013D2  0BD4               	dw	3028
   345  0013D4  0BF6               	dw	3062
   346  0013D6  0C18               	dw	3096
   347  0013D8  0C3A               	dw	3130
   348  0013DA  0C5C               	dw	3164
   349  0013DC  0C7E               	dw	3198
   350  0013DE  0CA1               	dw	3233
   351  0013E0  0CC4               	dw	3268
   352  0013E2  0CE7               	dw	3303
   353  0013E4  0D0B               	dw	3339
   354  0013E6  0D2E               	dw	3374
   355  0013E8  0D52               	dw	3410
   356  0013EA  0D76               	dw	3446
   357  0013EC  0D9B               	dw	3483
   358  0013EE  0DBF               	dw	3519
   359  0013F0  0DE4               	dw	3556
   360  0013F2  0E09               	dw	3593
   361  0013F4  0E2E               	dw	3630
   362  0013F6  0E54               	dw	3668
   363  0013F8  0E79               	dw	3705
   364  0013FA  0E9F               	dw	3743
   365  0013FC  0EC5               	dw	3781
   366  0013FE  0EEC               	dw	3820
   367  001400  0F12               	dw	3858
   368  001402  0F39               	dw	3897
   369  001404  0F60               	dw	3936
   370  001406  0F88               	dw	3976
   371  001408  0FAF               	dw	4015
   372  00140A  0FD7               	dw	4055
   373  00140C  0FFF               	dw	4095
   374                           
   375                           	psect	idataBANK0
   376  003222                     __pidataBANK0:
   377                           	opt stack 0
   378                           
   379                           ;initializer for _ACTCON_R
   380  003222  B5                 	db	181
   381  003223  0F                 	db	15
   382                           
   383                           ;initializer for _ANSELA_R
   384  003224  5B                 	db	91
   385  003225  0F                 	db	15
   386                           
   387                           ;initializer for _ANSELC_R
   388  003226  5D                 	db	93
   389  003227  0F                 	db	15
   390                           
   391                           ;initializer for _IOCB_R
   392  003228  86                 	db	134
   393  003229  0F                 	db	15
   394                           
   395                           ;initializer for _OSCCON2_R
   396  00322A  D2                 	db	210
   397  00322B  0F                 	db	15
   398                           
   399                           ;initializer for _PIE2_R
   400  00322C  A0                 	db	160
   401  00322D  0F                 	db	15
   402                           
   403                           ;initializer for _PIE3_R
   404  00322E  A3                 	db	163
   405  00322F  0F                 	db	15
   406                           
   407                           ;initializer for _PIR2_R
   408  003230  A1                 	db	161
   409  003231  0F                 	db	15
   410                           
   411                           ;initializer for _PIR3_R
   412  003232  A4                 	db	164
   413  003233  0F                 	db	15
   414                           
   415                           ;initializer for _T3GCON_R
   416  003234  B4                 	db	180
   417  003235  0F                 	db	15
   418                           
   419                           ;initializer for _U1ADDR_R
   420  003236  63                 	db	99
   421  003237  0F                 	db	15
   422                           
   423                           ;initializer for _U1CNFG1_R
   424  003238  62                 	db	98
   425  003239  0F                 	db	15
   426                           
   427                           ;initializer for _U1CON_R
   428  00323A  60                 	db	96
   429  00323B  0F                 	db	15
   430                           
   431                           ;initializer for _U1EIE_R
   432  00323C  66                 	db	102
   433  00323D  0F                 	db	15
   434                           
   435                           ;initializer for _U1EIR_R
   436  00323E  67                 	db	103
   437  00323F  0F                 	db	15
   438                           
   439                           ;initializer for _U1EP1_R
   440  003240  6B                 	db	107
   441  003241  0F                 	db	15
   442                           
   443                           ;initializer for _U1IE_R
   444  003242  64                 	db	100
   445  003243  0F                 	db	15
   446                           
   447                           ;initializer for _U1IR_R
   448  003244  65                 	db	101
   449  003245  0F                 	db	15
   450                           
   451                           ;initializer for _U1STAT_R
   452  003246  61                 	db	97
   453  003247  0F                 	db	15
   454                           
   455                           ;initializer for _tcl5947_testbyte0
   456  003248  23                 	db	35
   457                           
   458                           ;initializer for _tcl5947_testbyte1
   459  003249  42                 	db	66
   460                           
   461                           ;initializer for _tlc_nchannels
   462  00324A  30                 	db	48
   463                           
   464                           	psect	idataBANK1
   465  002DC4                     __pidataBANK1:
   466                           	opt stack 0
   467                           
   468                           ;initializer for _tlc_memory
   469  002DC4  FF                 	db	255
   470  002DC5  FF                 	db	255
   471  002DC6  FF                 	db	255
   472  002DC7  FF                 	db	255
   473  002DC8  FF                 	db	255
   474  002DC9  FF                 	db	255
   475  002DCA  FF                 	db	255
   476  002DCB  FF                 	db	255
   477  002DCC  FF                 	db	255
   478  002DCD  FF                 	db	255
   479  002DCE  FF                 	db	255
   480  002DCF  FF                 	db	255
   481  002DD0  FF                 	db	255
   482  002DD1  FF                 	db	255
   483  002DD2  FF                 	db	255
   484  002DD3  FF                 	db	255
   485  002DD4  FF                 	db	255
   486  002DD5  FF                 	db	255
   487  002DD6  FF                 	db	255
   488  002DD7  FF                 	db	255
   489  002DD8  FF                 	db	255
   490  002DD9  FF                 	db	255
   491  002DDA  FF                 	db	255
   492  002DDB  FF                 	db	255
   493  002DDC  FF                 	db	255
   494  002DDD  FF                 	db	255
   495  002DDE  FF                 	db	255
   496  002DDF  FF                 	db	255
   497  002DE0  FF                 	db	255
   498  002DE1  FF                 	db	255
   499  002DE2  FF                 	db	255
   500  002DE3  FF                 	db	255
   501  002DE4  FF                 	db	255
   502  002DE5  FF                 	db	255
   503  002DE6  FF                 	db	255
   504  002DE7  FF                 	db	255
   505  002DE8  FF                 	db	255
   506  002DE9  FF                 	db	255
   507  002DEA  FF                 	db	255
   508  002DEB  FF                 	db	255
   509  002DEC  FF                 	db	255
   510  002DED  FF                 	db	255
   511  002DEE  FF                 	db	255
   512  002DEF  FF                 	db	255
   513  002DF0  FF                 	db	255
   514  002DF1  FF                 	db	255
   515  002DF2  FF                 	db	255
   516  002DF3  FF                 	db	255
   517  002DF4  FF                 	db	255
   518  002DF5  FF                 	db	255
   519  002DF6  FF                 	db	255
   520  002DF7  FF                 	db	255
   521  002DF8  FF                 	db	255
   522  002DF9  FF                 	db	255
   523  002DFA  FF                 	db	255
   524  002DFB  FF                 	db	255
   525  002DFC  FF                 	db	255
   526  002DFD  FF                 	db	255
   527  002DFE  FF                 	db	255
   528  002DFF  FF                 	db	255
   529  002E00  FF                 	db	255
   530  002E01  FF                 	db	255
   531  002E02  FF                 	db	255
   532  002E03  FF                 	db	255
   533  002E04  FF                 	db	255
   534  002E05  FF                 	db	255
   535  002E06  FF                 	db	255
   536  002E07  FF                 	db	255
   537  002E08  FF                 	db	255
   538  002E09  FF                 	db	255
   539  002E0A  FF                 	db	255
   540  002E0B  FF                 	db	255
   541                           
   542                           ;initializer for _test_pattern
   543  002E0C  FF                 	db	255
   544  002E0D  00                 	db	0
   545  002E0E  00                 	db	0
   546  002E0F  00                 	db	0
   547  002E10  FF                 	db	255
   548  002E11  00                 	db	0
   549  002E12  00                 	db	0
   550  002E13  00                 	db	0
   551  002E14  FF                 	db	255
   552  002E15  FF                 	db	255
   553  002E16  00                 	db	0
   554  002E17  FF                 	db	255
   555  002E18  00                 	db	0
   556  002E19  FF                 	db	255
   557  002E1A  FF                 	db	255
   558  002E1B  FF                 	db	255
   559  002E1C  FF                 	db	255
   560  002E1D  00                 	db	0
   561  002E1E  FF                 	db	255
   562  002E1F  FF                 	db	255
   563  002E20  FF                 	db	255
   564                           
   565                           	psect	smallconst
   566  000800                     __psmallconst:
   567                           	opt stack 0
   568  000800  00                 	db	0
   569  000801                     _USB_SD_Ptr:
   570                           	opt stack 0
   571  000801  A8                 	db	low _sd000
   572  000802  08                 	db	high _sd000
   573  000803  4E                 	db	low _sd001
   574  000804  08                 	db	high _sd001
   575  000805  74                 	db	low _sd002
   576  000806  08                 	db	high _sd002
   577  000807  9E                 	db	low _sd003
   578  000808  08                 	db	high _sd003
   579  000809                     __end_of_USB_SD_Ptr:
   580                           	opt stack 0
   581  000809                     _USB_CD_Ptr:
   582                           	opt stack 0
   583  000809  0B                 	db	low _configDescriptor1
   584  00080A  08                 	db	high _configDescriptor1
   585  00080B                     __end_of_USB_CD_Ptr:
   586                           	opt stack 0
   587  00080B                     _configDescriptor1:
   588                           	opt stack 0
   589  00080B  09                 	db	9
   590  00080C  02                 	db	2
   591  00080D  43                 	db	67
   592  00080E  00                 	db	0
   593  00080F  02                 	db	2
   594  000810  01                 	db	1
   595  000811  00                 	db	0
   596  000812  C0                 	db	192
   597  000813  32                 	db	50
   598  000814  09                 	db	9
   599  000815  04                 	db	4
   600  000816  00                 	db	0
   601  000817  00                 	db	0
   602  000818  01                 	db	1
   603  000819  02                 	db	2
   604  00081A  02                 	db	2
   605  00081B  01                 	db	1
   606  00081C  00                 	db	0
   607  00081D  05                 	db	5
   608  00081E  24                 	db	36
   609  00081F  00                 	db	0
   610  000820  10                 	db	16
   611  000821  01                 	db	1
   612  000822  04                 	db	4
   613  000823  24                 	db	36
   614  000824  02                 	db	2
   615  000825  02                 	db	2
   616  000826  05                 	db	5
   617  000827  24                 	db	36
   618  000828  06                 	db	6
   619  000829  00                 	db	0
   620  00082A  01                 	db	1
   621  00082B  05                 	db	5
   622  00082C  24                 	db	36
   623  00082D  01                 	db	1
   624  00082E  00                 	db	0
   625  00082F  01                 	db	1
   626  000830  07                 	db	7
   627  000831  05                 	db	5
   628  000832  81                 	db	129
   629  000833  03                 	db	3
   630  000834  08                 	db	8
   631  000835  00                 	db	0
   632  000836  02                 	db	2
   633  000837  09                 	db	9
   634  000838  04                 	db	4
   635  000839  01                 	db	1
   636  00083A  00                 	db	0
   637  00083B  02                 	db	2
   638  00083C  0A                 	db	10
   639  00083D  00                 	db	0
   640  00083E  00                 	db	0
   641  00083F  00                 	db	0
   642  000840  07                 	db	7
   643  000841  05                 	db	5
   644  000842  02                 	db	2
   645  000843  02                 	db	2
   646  000844  40                 	db	64
   647  000845  00                 	db	0
   648  000846  00                 	db	0
   649  000847  07                 	db	7
   650  000848  05                 	db	5
   651  000849  82                 	db	130
   652  00084A  02                 	db	2
   653  00084B  40                 	db	64
   654  00084C  00                 	db	0
   655  00084D  00                 	db	0
   656  00084E                     __end_of_configDescriptor1:
   657                           	opt stack 0
   658  00084E                     _sd001:
   659                           	opt stack 0
   660  00084E  26                 	db	38
   661  00084F  03                 	db	3
   662  000850  0063               	dw	99
   663  000852  0040               	dw	64
   664  000854  0072               	dw	114
   665  000856  0073               	dw	115
   666  000858  0074               	dw	116
   667  00085A  0065               	dw	101
   668  00085C  006E               	dw	110
   669  00085E  0070               	dw	112
   670  000860  0072               	dw	114
   671  000862  0065               	dw	101
   672  000864  0073               	dw	115
   673  000866  0073               	dw	115
   674  000868  0065               	dw	101
   675  00086A  0072               	dw	114
   676  00086C  002E               	dw	46
   677  00086E  0064               	dw	100
   678  000870  0065               	dw	101
   679  000872  00                 	db	0
   680  000873  00                 	db	0
   681  000874                     __end_of_sd001:
   682                           	opt stack 0
   683  000874                     _sd002:
   684                           	opt stack 0
   685  000874  18                 	db	24
   686  000875  03                 	db	3
   687  000876  004B               	dw	75
   688  000878  0061               	dw	97
   689  00087A  0072               	dw	114
   690  00087C  0061               	dw	97
   691  00087E  0074               	dw	116
   692  000880  0065               	dw	101
   693  000882  006C               	dw	108
   694  000884  0069               	dw	105
   695  000886  0067               	dw	103
   696  000888  0068               	dw	104
   697  00088A  0074               	dw	116
   698  00088C                     __end_of_sd002:
   699                           	opt stack 0
   700  00088C                     _device_dsc:
   701                           	opt stack 0
   702  00088C  12                 	db	18
   703  00088D  01                 	db	1
   704  00088E  0200               	dw	512
   705  000890  02                 	db	2
   706  000891  00                 	db	0
   707  000892  00                 	db	0
   708  000893  08                 	db	8
   709  000894  04D8               	dw	1240
   710  000896  000A               	dw	10
   711  000898  0100               	dw	256
   712  00089A  01                 	db	1
   713  00089B  02                 	db	2
   714  00089C  03                 	db	3
   715  00089D  01                 	db	1
   716  00089E                     __end_of_device_dsc:
   717                           	opt stack 0
   718  00089E                     _sd003:
   719                           	opt stack 0
   720  00089E  18                 	db	24
   721  00089F  03                 	db	3
   722  0008A0  0032               	dw	50
   723  0008A2  0033               	dw	51
   724  0008A4  0061               	dw	97
   725  0008A6  0066               	dw	102
   726  0008A8                     __end_of_sd003:
   727                           	opt stack 0
   728  0008A8                     _sd000:
   729                           	opt stack 0
   730  0008A8  04                 	db	4
   731  0008A9  03                 	db	3
   732  0008AA  0409               	dw	1033
   733  0008AC                     __end_of_sd000:
   734                           	opt stack 0
   735  0008AC  00                 	db	0	; dummy byte at the end
   736  0000                     
   737                           	psect	nvBANK0
   738  0000F1                     __pnvBANK0:
   739                           	opt stack 0
   740  0000F1                     _pic18_devid:
   741                           	opt stack 0
   742  0000F1                     	ds	2
   743  0000                     _ADCON0	set	4034
   744  0000                     _ADCON0bits	set	4034
   745  0000                     _ADCON1	set	4033
   746  0000                     _ADCON2	set	4032
   747  0000                     _ADRESH	set	4036
   748  0000                     _ADRESL	set	4035
   749  0000                     _DDRA	set	3986
   750  0000                     _DDRAbits	set	3986
   751  0000                     _DDRB	set	3987
   752  0000                     _DDRBbits	set	3987
   753  0000                     _DDRC	set	3988
   754  0000                     _DDRD	set	3989
   755  0000                     _DDRE	set	3990
   756  0000                     _EEADR	set	4009
   757  0000                     _EECON1bits	set	4006
   758  0000                     _EECON2	set	4007
   759  0000                     _EEDATA	set	4008
   760  0000                     _INTCONbits	set	4082
   761  0000                     _IPR1bits	set	3999
   762  0000                     _IPR2bits	set	4002
   763  0000                     _LATBbits	set	3978
   764  0000                     _LATC	set	3979
   765  0000                     _LATCbits	set	3979
   766  0000                     _OSCCON	set	4051
   767  0000                     _OSCTUNE	set	3995
   768  0000                     _PIE1bits	set	3997
   769  0000                     _PIE2	set	4000
   770  0000                     _PIR1bits	set	3998
   771  0000                     _PIR2bits	set	4001
   772  0000                     _PORTAbits	set	3968
   773  0000                     _PORTBbits	set	3969
   774  0000                     _PORTCbits	set	3970
   775  0000                     _PR2	set	4027
   776  0000                     _RCONbits	set	4048
   777  0000                     _SSP1BUF	set	4041
   778  0000                     _SSP1CON1	set	4038
   779  0000                     _SSP1CON1bits	set	4038
   780  0000                     _SSP1STAT	set	4039
   781  0000                     _SSP1STATbits	set	4039
   782  0000                     _SSPCON1	set	4038
   783  0000                     _SSPSTAT	set	4039
   784  0000                     _T2CON	set	4026
   785  0000                     _T3CON	set	4017
   786  0000                     _TABLAT	set	4085
   787  0000                     _TBLPTRH	set	4087
   788  0000                     _TBLPTRL	set	4086
   789  0000                     _TBLPTRU	set	4088
   790  0000                     _TMR3H	set	4019
   791  0000                     _TMR3L	set	4018
   792  0000                     _TRISAbits	set	3986
   793  0000                     _TRISBbits	set	3987
   794  0000                     _TRISC	set	3988
   795  0000                     _TRISCbits	set	3988
   796  0000                     _UCONbits	set	3936
   797  0000                     _UIEbits	set	3940
   798  0000                     _UIRbits	set	3941
   799  0000                     _UADDR	set	3939
   800  0000                     _UCFG	set	3938
   801  0000                     _UCON	set	3936
   802  0000                     _UEIE	set	3942
   803  0000                     _UEIR	set	3943
   804  0000                     _UEP0	set	3946
   805  0000                     _UEP1	set	3947
   806  0000                     _UIE	set	3940
   807  0000                     _UIR	set	3941
   808  0000                     _USTAT	set	3937
   809                           
   810                           ; #config settings
   811  0000                     
   812                           	psect	cinit
   813  002578                     __pcinit:
   814                           	opt stack 0
   815  002578                     start_initialization:
   816                           	opt stack 0
   817  002578                     __initialization:
   818                           	opt stack 0
   819                           
   820                           ; Clear objects allocated to BANK2 (128 bytes)
   821  002578  EE02  F000         	lfsr	0,__pbssBANK2
   822  00257C  0E80               	movlw	128
   823  00257E                     clear_0:
   824  00257E  6AEE               	clrf	postinc0,c
   825  002580  06E8               	decf	wreg,f,c
   826  002582  E1FD               	bnz	clear_0
   827                           
   828                           ; Clear objects allocated to BANK1 (128 bytes)
   829  002584  EE01  F000         	lfsr	0,__pbssBANK1
   830  002588  0E80               	movlw	128
   831  00258A                     clear_1:
   832  00258A  6AEE               	clrf	postinc0,c
   833  00258C  06E8               	decf	wreg,f,c
   834  00258E  E1FD               	bnz	clear_1
   835                           
   836                           ; Clear objects allocated to BANK0 (85 bytes)
   837  002590  EE00  F060         	lfsr	0,__pbssBANK0
   838  002594  0E55               	movlw	85
   839  002596                     clear_2:
   840  002596  6AEE               	clrf	postinc0,c
   841  002598  06E8               	decf	wreg,f,c
   842  00259A  E1FD               	bnz	clear_2
   843                           
   844                           ; Clear objects allocated to COMRAM (31 bytes)
   845  00259C  EE00  F03E         	lfsr	0,__pbssCOMRAM
   846  0025A0  0E1F               	movlw	31
   847  0025A2                     clear_3:
   848  0025A2  6AEE               	clrf	postinc0,c
   849  0025A4  06E8               	decf	wreg,f,c
   850  0025A6  E1FD               	bnz	clear_3
   851                           
   852                           ; Initialize objects allocated to BIGRAMl (512 bytes)
   853                           ; load TBLPTR registers with __pidataBIGRAMl
   854  0025A8  0E0E               	movlw	low __pidataBIGRAMl
   855  0025AA  6EF6               	movwf	tblptrl,c
   856  0025AC  0E12               	movlw	high __pidataBIGRAMl
   857  0025AE  6EF7               	movwf	tblptrh,c
   858  0025B0  0E00               	movlw	low (__pidataBIGRAMl shr (0+16))
   859  0025B2  6EF8               	movwf	tblptru,c
   860  0025B4  EE05  F080         	lfsr	0,__pdataBIGRAMl
   861  0025B8  EE12 F000          	lfsr	1,512
   862  0025BC                     copy_data0:
   863  0025BC  0009               	tblrd		*+
   864  0025BE  CFF5 FFEE          	movff	tablat,postinc0
   865  0025C2  50E5               	movf	postdec1,w,c
   866  0025C4  50E1               	movf	fsr1l,w,c
   867  0025C6  E1FA               	bnz	copy_data0
   868  0025C8  50E2               	movf	fsr1h,w,c
   869  0025CA  E1F8               	bnz	copy_data0
   870                           
   871                           ; Initialize objects allocated to BANK1 (93 bytes)
   872                           ; load TBLPTR registers with __pidataBANK1
   873  0025CC  0EC4               	movlw	low __pidataBANK1
   874  0025CE  6EF6               	movwf	tblptrl,c
   875  0025D0  0E2D               	movlw	high __pidataBANK1
   876  0025D2  6EF7               	movwf	tblptrh,c
   877  0025D4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   878  0025D6  6EF8               	movwf	tblptru,c
   879  0025D8  EE01  F080         	lfsr	0,__pdataBANK1
   880  0025DC  EE10 F05D          	lfsr	1,93
   881  0025E0                     copy_data1:
   882  0025E0  0009               	tblrd		*+
   883  0025E2  CFF5 FFEE          	movff	tablat,postinc0
   884  0025E6  50E5               	movf	postdec1,w,c
   885  0025E8  50E1               	movf	fsr1l,w,c
   886  0025EA  E1FA               	bnz	copy_data1
   887                           
   888                           ; Initialize objects allocated to BANK0 (41 bytes)
   889                           ; load TBLPTR registers with __pidataBANK0
   890  0025EC  0E22               	movlw	low __pidataBANK0
   891  0025EE  6EF6               	movwf	tblptrl,c
   892  0025F0  0E32               	movlw	high __pidataBANK0
   893  0025F2  6EF7               	movwf	tblptrh,c
   894  0025F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   895  0025F6  6EF8               	movwf	tblptru,c
   896  0025F8  EE00  F0B5         	lfsr	0,__pdataBANK0
   897  0025FC  EE10 F029          	lfsr	1,41
   898  002600                     copy_data2:
   899  002600  0009               	tblrd		*+
   900  002602  CFF5 FFEE          	movff	tablat,postinc0
   901  002606  50E5               	movf	postdec1,w,c
   902  002608  50E1               	movf	fsr1l,w,c
   903  00260A  E1FA               	bnz	copy_data2
   904                           
   905                           ; Initialize objects allocated to COMRAM (3 bytes)
   906                           ; load TBLPTR registers with __pidataCOMRAM
   907  00260C  0E7E               	movlw	low __pidataCOMRAM
   908  00260E  6EF6               	movwf	tblptrl,c
   909  002610  0E33               	movlw	high __pidataCOMRAM
   910  002612  6EF7               	movwf	tblptrh,c
   911  002614  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   912  002616  6EF8               	movwf	tblptru,c
   913  002618  0009               	tblrd		*+	;fetch initializer
   914  00261A  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   915  00261E  0009               	tblrd		*+	;fetch initializer
   916  002620  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   917  002624  0009               	tblrd		*+	;fetch initializer
   918  002626  CFF5 F05F          	movff	tablat,__pdataCOMRAM+2
   919  00262A                     end_of_initialization:
   920                           	opt stack 0
   921  00262A                     __end_of__initialization:
   922                           	opt stack 0
   923  00262A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   924  00262C  6EF8               	movwf	tblptru,c
   925  00262E  0100               	movlb	0
   926  002630  EF72  F019         	goto	_main	;jump to C main() function
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           postdec1	equ	0xFE5
   934                           fsr1h	equ	0xFE2
   935                           fsr1l	equ	0xFE1
   936                           
   937                           	psect	bssCOMRAM
   938  00003E                     __pbssCOMRAM:
   939                           	opt stack 0
   940  00003E                     _pBDTEntryIn:
   941                           	opt stack 0
   942  00003E                     	ds	6
   943  000044                     _CDCDataOutHandle:
   944                           	opt stack 0
   945  000044                     	ds	2
   946  000046                     _pBDTEntryEP0OutCurrent:
   947                           	opt stack 0
   948  000046                     	ds	2
   949  000048                     _pBDTEntryEP0OutNext:
   950                           	opt stack 0
   951  000048                     	ds	2
   952  00004A                     _tlc_pwm_readback_value:
   953                           	opt stack 0
   954  00004A                     	ds	2
   955  00004C                     _USBDeferINDataStagePackets:
   956                           	opt stack 0
   957  00004C                     	ds	1
   958  00004D                     _USBDeferOUTDataStagePackets:
   959                           	opt stack 0
   960  00004D                     	ds	1
   961  00004E                     _USBDeferStatusStagePacket:
   962                           	opt stack 0
   963  00004E                     	ds	1
   964  00004F                     _USBStatusStageEnabledFlag1:
   965                           	opt stack 0
   966  00004F                     	ds	1
   967  000050                     _USBStatusStageEnabledFlag2:
   968                           	opt stack 0
   969  000050                     	ds	1
   970  000051                     _cdc_rx_len:
   971                           	opt stack 0
   972  000051                     	ds	1
   973  000052                     _cdc_trf_state:
   974                           	opt stack 0
   975  000052                     	ds	1
   976  000053                     _cdc_tx_len:
   977                           	opt stack 0
   978  000053                     	ds	1
   979  000054                     _controlTransferState:
   980                           	opt stack 0
   981  000054                     	ds	1
   982  000055                     _shortPacketStatus:
   983                           	opt stack 0
   984  000055                     	ds	1
   985  000056                     _inPipes:
   986                           	opt stack 0
   987  000056                     	ds	6
   988  00005C                     _USBActiveConfiguration:
   989                           	opt stack 0
   990  00005C                     	ds	1
   991                           tblptru	equ	0xFF8
   992                           tblptrh	equ	0xFF7
   993                           tblptrl	equ	0xFF6
   994                           tablat	equ	0xFF5
   995                           postinc0	equ	0xFEE
   996                           wreg	equ	0xFE8
   997                           postdec1	equ	0xFE5
   998                           fsr1h	equ	0xFE2
   999                           fsr1l	equ	0xFE1
  1000                           
  1001                           	psect	dataCOMRAM
  1002  00005D                     __pdataCOMRAM:
  1003                           	opt stack 0
  1004  00005D                     _U1EP0_R:
  1005                           	opt stack 0
  1006  00005D                     	ds	2
  1007  00005F                     _tlc_nbytes:
  1008                           	opt stack 0
  1009  00005F                     	ds	1
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           postinc0	equ	0xFEE
  1015                           wreg	equ	0xFE8
  1016                           postdec1	equ	0xFE5
  1017                           fsr1h	equ	0xFE2
  1018                           fsr1l	equ	0xFE1
  1019                           
  1020                           	psect	bssBANK0
  1021  000060                     __pbssBANK0:
  1022                           	opt stack 0
  1023  000060                     _cdc_notice:
  1024                           	opt stack 0
  1025  000060                     	ds	10
  1026  00006A                     _outPipes:
  1027                           	opt stack 0
  1028  00006A                     	ds	8
  1029  000072                     _pBDTEntryOut:
  1030                           	opt stack 0
  1031  000072                     	ds	6
  1032  000078                     _BaudRateGen:
  1033                           	opt stack 0
  1034  000078                     	ds	4
  1035  00007C                     _ep_data_in:
  1036                           	opt stack 0
  1037  00007C                     	ds	3
  1038  00007F                     _ep_data_out:
  1039                           	opt stack 0
  1040  00007F                     	ds	3
  1041  000082                     _pCDCDst:
  1042                           	opt stack 0
  1043  000082                     	ds	3
  1044  000085                     _pCDCSrc:
  1045                           	opt stack 0
  1046  000085                     	ds	3
  1047  000088                     _CDCDataInHandle:
  1048                           	opt stack 0
  1049  000088                     	ds	2
  1050  00008A                     _led_count:
  1051                           	opt stack 0
  1052  00008A                     	ds	2
  1053  00008C                     _pDst:
  1054                           	opt stack 0
  1055  00008C                     	ds	2
  1056  00008E                     _pwr_delay:
  1057                           	opt stack 0
  1058  00008E                     	ds	2
  1059  000090                     _txmiss_count:
  1060                           	opt stack 0
  1061  000090                     	ds	2
  1062  000092                     _update_count:
  1063                           	opt stack 0
  1064  000092                     	ds	2
  1065  000094                     _BothEP0OutUOWNsSet:
  1066                           	opt stack 0
  1067  000094                     	ds	1
  1068  000095                     _RemoteWakeup:
  1069                           	opt stack 0
  1070  000095                     	ds	1
  1071  000096                     _USBBusIsSuspended:
  1072                           	opt stack 0
  1073  000096                     	ds	1
  1074  000097                     _USBDeviceState:
  1075                           	opt stack 0
  1076  000097                     	ds	1
  1077  000098                     _USBStatusStageTimeoutCounter:
  1078                           	opt stack 0
  1079  000098                     	ds	1
  1080  000099                     _cdc_mem_type:
  1081                           	opt stack 0
  1082  000099                     	ds	1
  1083  00009A                     _control_signal_bitmap:
  1084                           	opt stack 0
  1085  00009A                     	ds	1
  1086  00009B                     _endpoint_number:
  1087                           	opt stack 0
  1088  00009B                     	ds	1
  1089  00009C                     _green_led_counter:
  1090                           	opt stack 0
  1091  00009C                     	ds	1
  1092  00009D                     _old_sw2:
  1093                           	opt stack 0
  1094  00009D                     	ds	1
  1095  00009E                     _pattern_number:
  1096                           	opt stack 0
  1097  00009E                     	ds	1
  1098  00009F                     _pic18_rev:
  1099                           	opt stack 0
  1100  00009F                     	ds	1
  1101  0000A0                     _tlc_request:
  1102                           	opt stack 0
  1103  0000A0                     	ds	1
  1104  0000A1                     _tmr3h_cal:
  1105                           	opt stack 0
  1106  0000A1                     	ds	1
  1107  0000A2                     _tmr3l_cal:
  1108                           	opt stack 0
  1109  0000A2                     	ds	1
  1110  0000A3                     _dummy_encapsulated_cmd_response:
  1111                           	opt stack 0
  1112  0000A3                     	ds	8
  1113  0000AB                     _line_coding:
  1114                           	opt stack 0
  1115  0000AB                     	ds	7
  1116  0000B2                     _USBAlternateInterface:
  1117                           	opt stack 0
  1118  0000B2                     	ds	2
  1119  0000B4                     _USTATcopy:
  1120                           	opt stack 0
  1121  0000B4                     	ds	1
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           postdec1	equ	0xFE5
  1129                           fsr1h	equ	0xFE2
  1130                           fsr1l	equ	0xFE1
  1131                           
  1132                           	psect	dataBANK0
  1133  0000B5                     __pdataBANK0:
  1134                           	opt stack 0
  1135  0000B5                     _ACTCON_R:
  1136                           	opt stack 0
  1137  0000B5                     	ds	2
  1138  0000B7                     _ANSELA_R:
  1139                           	opt stack 0
  1140  0000B7                     	ds	2
  1141  0000B9                     _ANSELC_R:
  1142                           	opt stack 0
  1143  0000B9                     	ds	2
  1144  0000BB                     _IOCB_R:
  1145                           	opt stack 0
  1146  0000BB                     	ds	2
  1147  0000BD                     _OSCCON2_R:
  1148                           	opt stack 0
  1149  0000BD                     	ds	2
  1150  0000BF                     _PIE2_R:
  1151                           	opt stack 0
  1152  0000BF                     	ds	2
  1153  0000C1                     _PIE3_R:
  1154                           	opt stack 0
  1155  0000C1                     	ds	2
  1156  0000C3                     _PIR2_R:
  1157                           	opt stack 0
  1158  0000C3                     	ds	2
  1159  0000C5                     _PIR3_R:
  1160                           	opt stack 0
  1161  0000C5                     	ds	2
  1162  0000C7                     _T3GCON_R:
  1163                           	opt stack 0
  1164  0000C7                     	ds	2
  1165  0000C9                     _U1ADDR_R:
  1166                           	opt stack 0
  1167  0000C9                     	ds	2
  1168  0000CB                     _U1CNFG1_R:
  1169                           	opt stack 0
  1170  0000CB                     	ds	2
  1171  0000CD                     _U1CON_R:
  1172                           	opt stack 0
  1173  0000CD                     	ds	2
  1174  0000CF                     _U1EIE_R:
  1175                           	opt stack 0
  1176  0000CF                     	ds	2
  1177  0000D1                     _U1EIR_R:
  1178                           	opt stack 0
  1179  0000D1                     	ds	2
  1180  0000D3                     _U1EP1_R:
  1181                           	opt stack 0
  1182  0000D3                     	ds	2
  1183  0000D5                     _U1IE_R:
  1184                           	opt stack 0
  1185  0000D5                     	ds	2
  1186  0000D7                     _U1IR_R:
  1187                           	opt stack 0
  1188  0000D7                     	ds	2
  1189  0000D9                     _U1STAT_R:
  1190                           	opt stack 0
  1191  0000D9                     	ds	2
  1192  0000DB                     _tcl5947_testbyte0:
  1193                           	opt stack 0
  1194  0000DB                     	ds	1
  1195  0000DC                     _tcl5947_testbyte1:
  1196                           	opt stack 0
  1197  0000DC                     	ds	1
  1198  0000DD                     _tlc_nchannels:
  1199                           	opt stack 0
  1200  0000DD                     	ds	1
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           fsr1h	equ	0xFE2
  1209                           fsr1l	equ	0xFE1
  1210                           
  1211                           	psect	bssBANK1
  1212  000100                     __pbssBANK1:
  1213                           	opt stack 0
  1214  000100                     _CDCBufferIn:
  1215                           	opt stack 0
  1216  000100                     	ds	64
  1217  000140                     _CDCBufferOut:
  1218                           	opt stack 0
  1219  000140                     	ds	64
  1220                           tblptru	equ	0xFF8
  1221                           tblptrh	equ	0xFF7
  1222                           tblptrl	equ	0xFF6
  1223                           tablat	equ	0xFF5
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           postdec1	equ	0xFE5
  1227                           fsr1h	equ	0xFE2
  1228                           fsr1l	equ	0xFE1
  1229                           
  1230                           	psect	dataBANK1
  1231  000180                     __pdataBANK1:
  1232                           	opt stack 0
  1233  000180                     _tlc_memory:
  1234                           	opt stack 0
  1235  000180                     	ds	72
  1236  0001C8                     _test_pattern:
  1237                           	opt stack 0
  1238  0001C8                     	ds	21
  1239                           tblptru	equ	0xFF8
  1240                           tblptrh	equ	0xFF7
  1241                           tblptrl	equ	0xFF6
  1242                           tablat	equ	0xFF5
  1243                           postinc0	equ	0xFEE
  1244                           wreg	equ	0xFE8
  1245                           postdec1	equ	0xFE5
  1246                           fsr1h	equ	0xFE2
  1247                           fsr1l	equ	0xFE1
  1248                           
  1249                           	psect	bssBANK2
  1250  000200                     __pbssBANK2:
  1251                           	opt stack 0
  1252  000200                     _USB_In_Buffer:
  1253                           	opt stack 0
  1254  000200                     	ds	64
  1255  000240                     _USB_Out_Buffer:
  1256                           	opt stack 0
  1257  000240                     	ds	64
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           postdec1	equ	0xFE5
  1265                           fsr1h	equ	0xFE2
  1266                           fsr1l	equ	0xFE1
  1267                           
  1268                           	psect	dataBIGRAMl
  1269  000580                     __pdataBIGRAMl:
  1270                           	opt stack 0
  1271  000580                     _gamma_table:
  1272                           	opt stack 0
  1273  000580                     	ds	512
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1h	equ	0xFE2
  1282                           fsr1l	equ	0xFE1
  1283                           
  1284                           	psect	cstackBANK0
  1285  0000DE                     __pcstackBANK0:
  1286                           	opt stack 0
  1287  0000DE                     ??_USBCtrlEPService:
  1288                           
  1289                           ; 0 bytes @ 0x0
  1290  0000DE                     	ds	2
  1291  0000E0                     USBDeviceTasks@i:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x2
  1295  0000E0                     	ds	1
  1296  0000E1                     ??_ProcessCDC:
  1297                           
  1298                           ; 0 bytes @ 0x3
  1299  0000E1                     	ds	4
  1300  0000E5                     ProcessCDC@csum:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x7
  1304  0000E5                     	ds	1
  1305  0000E6                     ProcessCDC@_c:
  1306                           	opt stack 0
  1307                           
  1308                           ; 1 bytes @ 0x8
  1309  0000E6                     	ds	1
  1310  0000E7                     ProcessCDC@checksum:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x9
  1314  0000E7                     	ds	1
  1315  0000E8                     ProcessCDC@_y:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0xA
  1319  0000E8                     	ds	2
  1320  0000EA                     ProcessCDC@cmd:
  1321                           	opt stack 0
  1322                           
  1323                           ; 1 bytes @ 0xC
  1324  0000EA                     	ds	1
  1325  0000EB                     ProcessCDC@boot_request0:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0xD
  1329  0000EB                     	ds	1
  1330  0000EC                     ProcessCDC@boot_request1:
  1331                           	opt stack 0
  1332                           
  1333                           ; 1 bytes @ 0xE
  1334  0000EC                     	ds	1
  1335  0000ED                     ProcessCDC@numBytes:
  1336                           	opt stack 0
  1337                           
  1338                           ; 1 bytes @ 0xF
  1339  0000ED                     	ds	1
  1340  0000EE                     ProcessCDC@_x:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x10
  1344  0000EE                     	ds	1
  1345  0000EF                     ProcessCDC@len:
  1346                           	opt stack 0
  1347                           
  1348                           ; 1 bytes @ 0x11
  1349  0000EF                     	ds	1
  1350  0000F0                     ProcessIO@x:
  1351                           	opt stack 0
  1352                           
  1353                           ; 1 bytes @ 0x12
  1354  0000F0                     	ds	1
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           fsr1h	equ	0xFE2
  1363                           fsr1l	equ	0xFE1
  1364                           
  1365                           	psect	cstackCOMRAM
  1366  000001                     __pcstackCOMRAM:
  1367                           	opt stack 0
  1368  000001                     ??_LowPriorityISRCode:
  1369  000001                     
  1370                           ; 1 bytes @ 0x0
  1371  000001                     	ds	17
  1372  000012                     i2WriteSPI1@TempVar:
  1373                           	opt stack 0
  1374  000012                     i2Delay100TCYx@unit:
  1375                           	opt stack 0
  1376  000012                     i2Delay10TCYx@unit:
  1377                           	opt stack 0
  1378                           
  1379                           ; 1 bytes @ 0x11
  1380  000012                     	ds	1
  1381  000013                     i2WriteSPI1@data_out:
  1382                           	opt stack 0
  1383                           
  1384                           ; 1 bytes @ 0x12
  1385  000013                     	ds	1
  1386  000014                     i2tlc5947_update@x:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0x13
  1390  000014                     	ds	1
  1391  000015                     ??_HighPriorityISRCode:
  1392                           
  1393                           ; 0 bytes @ 0x14
  1394  000015                     	ds	14
  1395  000023                     ??_readDeviceID:
  1396  000023                     ??_BlinkUSBStatus:
  1397  000023                     ??_USBStdGetDscHandler:
  1398  000023                     ??_USBStdGetStatusHandler:
  1399  000023                     ?_ReadADC:
  1400                           	opt stack 0
  1401  000023                     ?_USBTransferOnePacket:
  1402                           	opt stack 0
  1403  000023                     ?_gamma_lookup:
  1404                           	opt stack 0
  1405  000023                     ?___awdiv:
  1406                           	opt stack 0
  1407  000023                     ?___lwdiv:
  1408                           	opt stack 0
  1409  000023                     USBTransferOnePacket@dir:
  1410                           	opt stack 0
  1411  000023                     USBConfigureEndpoint@direction:
  1412                           	opt stack 0
  1413  000023                     USBCtrlTrfTxService@byteToSend:
  1414                           	opt stack 0
  1415  000023                     USBCtrlTrfRxService@i:
  1416                           	opt stack 0
  1417  000023                     OpenSPI1@bus_mode:
  1418                           	opt stack 0
  1419  000023                     ReadSPI1@TempVar:
  1420                           	opt stack 0
  1421  000023                     WriteSPI1@TempVar:
  1422                           	opt stack 0
  1423  000023                     Delay100TCYx@unit:
  1424                           	opt stack 0
  1425  000023                     Delay10TCYx@unit:
  1426                           	opt stack 0
  1427  000023                     putUSBUSART@data:
  1428                           	opt stack 0
  1429  000023                     Read_b_eep@badd:
  1430                           	opt stack 0
  1431  000023                     Write_b_eep@badd:
  1432                           	opt stack 0
  1433  000023                     ___awdiv@dividend:
  1434                           	opt stack 0
  1435  000023                     ___lwdiv@dividend:
  1436                           	opt stack 0
  1437  000023                     memset@p1:
  1438                           	opt stack 0
  1439                           
  1440                           ; 2 bytes @ 0x22
  1441  000023                     	ds	1
  1442  000024                     ??_USBConfigureEndpoint:
  1443  000024                     USBCtrlTrfRxService@byteToRead:
  1444                           	opt stack 0
  1445  000024                     USBCtrlTrfInHandler@lastDTS:
  1446                           	opt stack 0
  1447  000024                     OpenSPI1@smp_phase:
  1448                           	opt stack 0
  1449  000024                     WriteSPI1@data_out:
  1450                           	opt stack 0
  1451  000024                     USBTransferOnePacket@data:
  1452                           	opt stack 0
  1453  000024                     USBStdGetStatusHandler@p:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x23
  1457  000024                     	ds	1
  1458  000025                     ??_ReadADC:
  1459  000025                     putUSBUSART@length:
  1460                           	opt stack 0
  1461  000025                     gamma_lookup@c:
  1462                           	opt stack 0
  1463  000025                     readDeviceID@devID1:
  1464                           	opt stack 0
  1465  000025                     tlc5947_update@x:
  1466                           	opt stack 0
  1467  000025                     Write_b_eep@bdat:
  1468                           	opt stack 0
  1469  000025                     OpenSPI1@sync_mode:
  1470                           	opt stack 0
  1471  000025                     ___awdiv@divisor:
  1472                           	opt stack 0
  1473  000025                     ___lwdiv@divisor:
  1474                           	opt stack 0
  1475  000025                     memset@c:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x24
  1479  000025                     	ds	1
  1480  000026                     USBTransferOnePacket@len:
  1481                           	opt stack 0
  1482  000026                     readDeviceID@devID2:
  1483                           	opt stack 0
  1484  000026                     tlc5947_setChannel@val:
  1485                           	opt stack 0
  1486  000026                     Write_b_eep@GIE_BIT_VAL:
  1487                           	opt stack 0
  1488                           
  1489                           ; 1 bytes @ 0x25
  1490  000026                     	ds	1
  1491  000027                     ??_tlc5947_setChannel:
  1492  000027                     USBTransferOnePacket@ep:
  1493                           	opt stack 0
  1494  000027                     _readDeviceID$2794:
  1495                           	opt stack 0
  1496  000027                     ___awdiv@counter:
  1497                           	opt stack 0
  1498  000027                     ___lwdiv@quotient:
  1499                           	opt stack 0
  1500  000027                     memset@n:
  1501                           	opt stack 0
  1502                           
  1503                           ; 2 bytes @ 0x26
  1504  000027                     	ds	1
  1505  000028                     USBConfigureEndpoint@EPNum:
  1506                           	opt stack 0
  1507  000028                     ___awdiv@sign:
  1508                           	opt stack 0
  1509  000028                     USBTransferOnePacket@handle:
  1510                           	opt stack 0
  1511                           
  1512                           ; 2 bytes @ 0x27
  1513  000028                     	ds	1
  1514  000029                     ___lwdiv@counter:
  1515                           	opt stack 0
  1516  000029                     USBConfigureEndpoint@handle:
  1517                           	opt stack 0
  1518  000029                     ___awdiv@quotient:
  1519                           	opt stack 0
  1520  000029                     memset@p:
  1521                           	opt stack 0
  1522                           
  1523                           ; 2 bytes @ 0x28
  1524  000029                     	ds	1
  1525  00002A                     ??_CDCTxService:
  1526  00002A                     tlc5947_setChannel@ch:
  1527                           	opt stack 0
  1528  00002A                     getsUSBUSART@buffer:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x29
  1532  00002A                     	ds	1
  1533  00002B                     USBDeviceInit@i:
  1534                           	opt stack 0
  1535  00002B                     USBEnableEndpoint@options:
  1536                           	opt stack 0
  1537  00002B                     tlc5947_count_channels@old_data:
  1538                           	opt stack 0
  1539  00002B                     _CDCTxService$1695:
  1540                           	opt stack 0
  1541  00002B                     tlc5947_setChannel@col:
  1542                           	opt stack 0
  1543                           
  1544                           ; 2 bytes @ 0x2A
  1545  00002B                     	ds	1
  1546  00002C                     getsUSBUSART@len:
  1547                           	opt stack 0
  1548  00002C                     tlc5947_count_channels@data:
  1549                           	opt stack 0
  1550  00002C                     USBEnableEndpoint@p:
  1551                           	opt stack 0
  1552                           
  1553                           ; 2 bytes @ 0x2B
  1554  00002C                     	ds	1
  1555  00002D                     ??_getsUSBUSART:
  1556  00002D                     CDCTxService@i:
  1557                           	opt stack 0
  1558  00002D                     tlc5947_setChannel@pos:
  1559                           	opt stack 0
  1560  00002D                     tlc5947_count_channels@pos:
  1561                           	opt stack 0
  1562                           
  1563                           ; 1 bytes @ 0x2C
  1564  00002D                     	ds	1
  1565  00002E                     USBEnableEndpoint@ep:
  1566                           	opt stack 0
  1567  00002E                     CDCTxService@byte_to_send:
  1568                           	opt stack 0
  1569  00002E                     tlc5947_setChannel@mpos:
  1570                           	opt stack 0
  1571  00002E                     _getsUSBUSART$1647:
  1572                           	opt stack 0
  1573                           
  1574                           ; 2 bytes @ 0x2D
  1575  00002E                     	ds	1
  1576  00002F                     ??_tlc5947_pwm_readback:
  1577  00002F                     comm_send_rply@cc:
  1578                           	opt stack 0
  1579  00002F                     comm_send_dat@i:
  1580                           	opt stack 0
  1581  00002F                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0x2E
  1585  00002F                     	ds	1
  1586  000030                     comm_send_dat@len:
  1587                           	opt stack 0
  1588                           
  1589                           ; 1 bytes @ 0x2F
  1590  000030                     	ds	1
  1591  000031                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1592                           	opt stack 0
  1593                           
  1594                           ; 2 bytes @ 0x30
  1595  000031                     	ds	2
  1596  000033                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1597                           	opt stack 0
  1598                           
  1599                           ; 2 bytes @ 0x32
  1600  000033                     	ds	2
  1601  000035                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1602  000035                     tlc5947_pwm_readback@i:
  1603                           	opt stack 0
  1604                           
  1605                           ; 1 bytes @ 0x34
  1606  000035                     	ds	1
  1607  000036                     
  1608                           ; 0 bytes @ 0x35
  1609  000036                     	ds	1
  1610  000037                     ??_USBStdFeatureReqHandler:
  1611  000037                     USBStdSetCfgHandler@i:
  1612                           	opt stack 0
  1613                           
  1614                           ; 1 bytes @ 0x36
  1615  000037                     	ds	1
  1616  000038                     USBStdFeatureReqHandler@pUEP:
  1617                           	opt stack 0
  1618                           
  1619                           ; 2 bytes @ 0x37
  1620  000038                     	ds	2
  1621  00003A                     USBStdFeatureReqHandler@current_ep_data:
  1622                           	opt stack 0
  1623                           
  1624                           ; 1 bytes @ 0x39
  1625  00003A                     	ds	1
  1626  00003B                     USBStdFeatureReqHandler@p:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x3A
  1630  00003B                     	ds	2
  1631  00003D                     USBCtrlEPService@setup_cnt:
  1632                           	opt stack 0
  1633                           
  1634                           ; 1 bytes @ 0x3C
  1635  00003D                     	ds	1
  1636  00003E                     tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           postdec1	equ	0xFE5
  1643                           fsr1h	equ	0xFE2
  1644                           fsr1l	equ	0xFE1
  1645                           
  1646                           ; 0 bytes @ 0x3D
  1647 ;;
  1648 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1649 ;;
  1650 ;; *************** function _main *****************
  1651 ;; Defined at:
  1652 ;;		line 74 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;		None               void
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels required when called:   15
  1672 ;; This function calls:
  1673 ;;		_InitializeSystem
  1674 ;;		_ProcessIO
  1675 ;; This function is called by:
  1676 ;;		Startup code after reset
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text0
  1681  0032E4                     __ptext0:
  1682                           	opt stack 0
  1683  0032E4                     _main:
  1684                           	opt stack 16
  1685                           
  1686                           ;karate.c: 76: InitializeSystem();
  1687                           
  1688                           ;incstack = 0
  1689  0032E4  EC35  F00C         	call	_InitializeSystem	;wreg free
  1690  0032E8  D000               	goto	l5686
  1691  0032EA                     l5686:
  1692                           
  1693                           ;karate.c: 79: if(PORTCbits.RC6 && (USBDeviceState == DETACHED_STATE)) {
  1694  0032EA  5082               	movf	3970,w,c	;volatile
  1695  0032EC  D000               	goto	l5690
  1696  0032EE                     l5690:
  1697                           
  1698                           ;karate.c: 81: }
  1699                           ;karate.c: 83: ProcessIO();
  1700  0032EE  ECF5  F00E         	call	_ProcessIO	;wreg free
  1701  0032F2  D7FB               	goto	l5686
  1702  0032F4  EF55  F000         	goto	start
  1703  0032F8                     __end_of_main:
  1704                           	opt stack 0
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           postdec1	equ	0xFE5
  1712                           fsr1h	equ	0xFE2
  1713                           fsr1l	equ	0xFE1
  1714                           
  1715 ;; *************** function _ProcessIO *****************
  1716 ;; Defined at:
  1717 ;;		line 214 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  x               1   18[BANK0 ] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;		None               void
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0
  1732 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1734 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1735 ;;Total ram usage:        1 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:   14
  1738 ;; This function calls:
  1739 ;;		_BlinkUSBStatus
  1740 ;;		_CDCTxService
  1741 ;;		_ProcessCDC
  1742 ;;		_SwitchIsPressed
  1743 ;;		_USBDeviceTasks
  1744 ;;		_tlc5947_setChannel
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text1
  1751  001DEA                     __ptext1:
  1752                           	opt stack 0
  1753  001DEA                     _ProcessIO:
  1754                           	opt stack 16
  1755                           
  1756                           ;karate.c: 216: unsigned char x;
  1757                           ;karate.c: 219: USBDeviceTasks();
  1758                           
  1759                           ;incstack = 0
  1760  001DEA  ECF6  F007         	call	_USBDeviceTasks	;wreg free
  1761                           
  1762                           ;karate.c: 222: BlinkUSBStatus();
  1763  001DEE  ECBF  F017         	call	_BlinkUSBStatus	;wreg free
  1764                           
  1765                           ;karate.c: 225: if (green_led_counter > 0) {
  1766  001DF2  0100               	movlb	0	; () banked
  1767  001DF4  519C               	movf	_green_led_counter& (0+255),w,b
  1768  001DF6  B4D8               	btfsc	status,2,c
  1769  001DF8  D003               	goto	l718
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;karate.c: 226: green_led_counter--;
  1773  001DFA  0100               	movlb	0	; () banked
  1774  001DFC  079C               	decf	_green_led_counter& (0+255),f,b
  1775                           
  1776                           ;karate.c: 227: } else {
  1777  001DFE  D002               	goto	l5548
  1778  001E00                     l718:
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;karate.c: 228: LATCbits.LATC2 = 0;;
  1782  001E00  948B               	bcf	3979,2,c	;volatile
  1783  001E02  D000               	goto	l5548
  1784  001E04                     l5548:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;karate.c: 229: }
  1788                           ;karate.c: 232: if (SwitchIsPressed()) {
  1789  001E04  ECD1  F018         	call	_SwitchIsPressed	;wreg free
  1790  001E08  0900               	iorlw	0
  1791  001E0A  B4D8               	btfsc	status,2,c
  1792  001E0C  D057               	goto	l5568
  1793                           
  1794                           ;karate.c: 233: pattern_number++;
  1795  001E0E  0100               	movlb	0	; () banked
  1796  001E10  2B9E               	incf	_pattern_number& (0+255),f,b
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;karate.c: 234: if (pattern_number > 6) {
  1800  001E12  0E06               	movlw	6
  1801  001E14  0100               	movlb	0	; () banked
  1802  001E16  659E               	cpfsgt	_pattern_number& (0+255),b
  1803  001E18  D003               	goto	l721
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;karate.c: 235: pattern_number = 0;
  1807  001E1A  0E00               	movlw	0
  1808  001E1C  0100               	movlb	0	; () banked
  1809  001E1E  6F9E               	movwf	_pattern_number& (0+255),b
  1810  001E20                     l721:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;karate.c: 236: }
  1814                           ;karate.c: 238: tlc_request = 0;
  1815  001E20  0E00               	movlw	0
  1816  001E22  0100               	movlb	0	; () banked
  1817  001E24  6FA0               	movwf	_tlc_request& (0+255),b
  1818                           
  1819                           ;karate.c: 239: for (x=0; x < tlc_nchannels; x+=3) {
  1820  001E26  0E00               	movlw	0
  1821  001E28  0100               	movlb	0	; () banked
  1822  001E2A  6FF0               	movwf	ProcessIO@x& (0+255),b
  1823  001E2C  D03A               	goto	l5560
  1824  001E2E                     l5556:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;karate.c: 240: tlc5947_setChannel(x+0, test_pattern[0 + pattern_number*3]);
  1828  001E2E  0100               	movlb	0	; () banked
  1829  001E30  519E               	movf	_pattern_number& (0+255),w,b
  1830  001E32  0D03               	mullw	3
  1831  001E34  0EC8               	movlw	low _test_pattern
  1832  001E36  24F3               	addwf	prodl,w,c
  1833  001E38  6ED9               	movwf	fsr2l,c
  1834  001E3A  0E01               	movlw	high _test_pattern
  1835  001E3C  20F4               	addwfc	prodh,w,c
  1836  001E3E  6EDA               	movwf	fsr2h,c
  1837  001E40  50DF               	movf	indf2,w,c
  1838  001E42  6E26               	movwf	tlc5947_setChannel@val,c
  1839  001E44  0100               	movlb	0	; () banked
  1840  001E46  51F0               	movf	ProcessIO@x& (0+255),w,b
  1841  001E48  EC07  F00A         	call	_tlc5947_setChannel
  1842                           
  1843                           ;karate.c: 241: tlc5947_setChannel(x+1, test_pattern[1 + pattern_number*3]);
  1844  001E4C  0100               	movlb	0	; () banked
  1845  001E4E  519E               	movf	_pattern_number& (0+255),w,b
  1846  001E50  0D03               	mullw	3
  1847  001E52  0E01               	movlw	1
  1848  001E54  26F3               	addwf	prodl,f,c
  1849  001E56  0E00               	movlw	0
  1850  001E58  22F4               	addwfc	prodh,f,c
  1851  001E5A  0EC8               	movlw	low _test_pattern
  1852  001E5C  24F3               	addwf	prodl,w,c
  1853  001E5E  6ED9               	movwf	fsr2l,c
  1854  001E60  0E01               	movlw	high _test_pattern
  1855  001E62  20F4               	addwfc	prodh,w,c
  1856  001E64  6EDA               	movwf	fsr2h,c
  1857  001E66  50DF               	movf	indf2,w,c
  1858  001E68  6E26               	movwf	tlc5947_setChannel@val,c
  1859  001E6A  0100               	movlb	0	; () banked
  1860  001E6C  29F0               	incf	ProcessIO@x& (0+255),w,b
  1861  001E6E  EC07  F00A         	call	_tlc5947_setChannel
  1862                           
  1863                           ;karate.c: 242: tlc5947_setChannel(x+2, test_pattern[2 + pattern_number*3]);
  1864  001E72  0100               	movlb	0	; () banked
  1865  001E74  519E               	movf	_pattern_number& (0+255),w,b
  1866  001E76  0D03               	mullw	3
  1867  001E78  0E02               	movlw	2
  1868  001E7A  26F3               	addwf	prodl,f,c
  1869  001E7C  0E00               	movlw	0
  1870  001E7E  22F4               	addwfc	prodh,f,c
  1871  001E80  0EC8               	movlw	low _test_pattern
  1872  001E82  24F3               	addwf	prodl,w,c
  1873  001E84  6ED9               	movwf	fsr2l,c
  1874  001E86  0E01               	movlw	high _test_pattern
  1875  001E88  20F4               	addwfc	prodh,w,c
  1876  001E8A  6EDA               	movwf	fsr2h,c
  1877  001E8C  50DF               	movf	indf2,w,c
  1878  001E8E  6E26               	movwf	tlc5947_setChannel@val,c
  1879  001E90  0100               	movlb	0	; () banked
  1880  001E92  51F0               	movf	ProcessIO@x& (0+255),w,b
  1881  001E94  0F02               	addlw	2
  1882  001E96  EC07  F00A         	call	_tlc5947_setChannel
  1883  001E9A  0E03               	movlw	3
  1884  001E9C  0100               	movlb	0	; () banked
  1885  001E9E  27F0               	addwf	ProcessIO@x& (0+255),f,b
  1886  001EA0  D000               	goto	l5560
  1887  001EA2                     l5560:
  1888                           
  1889                           ; BSR set to: 0
  1890  001EA2  0100               	movlb	0	; () banked
  1891  001EA4  51DD               	movf	_tlc_nchannels& (0+255),w,b
  1892  001EA6  0100               	movlb	0	; () banked
  1893  001EA8  5DF0               	subwf	ProcessIO@x& (0+255),w,b
  1894  001EAA  A0D8               	btfss	status,0,c
  1895  001EAC  D7C0               	goto	l5556
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;karate.c: 243: }
  1899                           ;karate.c: 244: tlc_request = 1;
  1900                           
  1901                           ; BSR set to: 0
  1902  001EAE  0E01               	movlw	1
  1903  001EB0  0100               	movlb	0	; () banked
  1904  001EB2  6FA0               	movwf	_tlc_request& (0+255),b
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;karate.c: 247: LATCbits.LATC2 = 1;;
  1908  001EB4  848B               	bsf	3979,2,c	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;karate.c: 248: green_led_counter = 255;
  1912  001EB6  0100               	movlb	0	; () banked
  1913  001EB8  699C               	setf	_green_led_counter& (0+255),b
  1914  001EBA  D000               	goto	l5568
  1915  001EBC                     l5568:
  1916                           
  1917                           ;karate.c: 249: }
  1918                           ;karate.c: 252: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  1919  001EBC  0E1F               	movlw	31
  1920  001EBE  0100               	movlb	0	; () banked
  1921  001EC0  6597               	cpfsgt	_USBDeviceState& (0+255),b
  1922  001EC2  0012               	return	
  1923                           
  1924                           ; BSR set to: 0
  1925  001EC4  B260               	btfsc	3936,1,c	;volatile
  1926  001EC6  0012               	return	
  1927  001EC8  D001               	goto	l5572
  1928                           
  1929                           ; BSR set to: 0
  1930  001ECA  0012               	return	
  1931  001ECC                     l5572:
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;karate.c: 255: ProcessCDC();
  1935  001ECC  EC57  F004         	call	_ProcessCDC	;wreg free
  1936                           
  1937                           ;karate.c: 256: CDCTxService();
  1938  001ED0  EC8A  F00B         	call	_CDCTxService	;wreg free
  1939  001ED4  0012               	return		;funcret
  1940  001ED6                     __end_of_ProcessIO:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           prodh	equ	0xFF4
  1947                           prodl	equ	0xFF3
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           indf2	equ	0xFDF
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _SwitchIsPressed *****************
  1959 ;; Defined at:
  1960 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      unsigned char 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    4
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_ProcessIO
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text2
  1989  0031A2                     __ptext2:
  1990                           	opt stack 0
  1991  0031A2                     _SwitchIsPressed:
  1992                           	opt stack 25
  1993                           
  1994                           ;karate.c: 187: if(PORTAbits.RA1 != old_sw2) {
  1995                           
  1996                           ;incstack = 0
  1997  0031A2  A280               	btfss	3968,1,c	;volatile
  1998  0031A4  D002               	goto	u4290
  1999  0031A6  0E01               	movlw	1
  2000  0031A8  D001               	goto	u4296
  2001  0031AA                     u4290:
  2002  0031AA  0E00               	movlw	0
  2003  0031AC                     u4296:
  2004  0031AC  0100               	movlb	0	; () banked
  2005  0031AE  199D               	xorwf	_old_sw2& (0+255),w,b
  2006  0031B0  B4D8               	btfsc	status,2,c
  2007  0031B2  D00A               	goto	l5182
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;karate.c: 188: old_sw2 = PORTAbits.RA1;
  2011  0031B4  0E00               	movlw	0
  2012  0031B6  B280               	btfsc	3968,1,c	;volatile
  2013  0031B8  0E01               	movlw	1
  2014  0031BA  0100               	movlb	0	; () banked
  2015  0031BC  6F9D               	movwf	_old_sw2& (0+255),b
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;karate.c: 189: if(PORTAbits.RA1 == 0) {
  2019  0031BE  B280               	btfsc	3968,1,c	;volatile
  2020  0031C0  D003               	goto	l5182
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;karate.c: 190: return 1;
  2024  0031C2  0E01               	movlw	1
  2025                           
  2026                           ; BSR set to: 0
  2027  0031C4  0012               	return	
  2028                           
  2029                           ; BSR set to: 0
  2030  0031C6  D000               	goto	l5182
  2031  0031C8                     l5182:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;karate.c: 191: }
  2035                           ;karate.c: 192: }
  2036                           ;karate.c: 193: return 0;
  2037  0031C8  0E00               	movlw	0
  2038  0031CA  0012               	return	
  2039                           
  2040                           ; BSR set to: 0
  2041                           
  2042                           ; BSR set to: 0
  2043  0031CC  0012               	return		;funcret
  2044  0031CE                     __end_of_SwitchIsPressed:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           prodh	equ	0xFF4
  2051                           prodl	equ	0xFF3
  2052                           postinc0	equ	0xFEE
  2053                           wreg	equ	0xFE8
  2054                           postdec1	equ	0xFE5
  2055                           fsr1h	equ	0xFE2
  2056                           fsr1l	equ	0xFE1
  2057                           indf2	equ	0xFDF
  2058                           fsr2h	equ	0xFDA
  2059                           fsr2l	equ	0xFD9
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _ProcessCDC *****************
  2063 ;; Defined at:
  2064 ;;		line 67 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  _y              2   10[BANK0 ] unsigned int 
  2069 ;;  len             1   17[BANK0 ] unsigned char 
  2070 ;;  _x              1   16[BANK0 ] unsigned char 
  2071 ;;  numBytes        1   15[BANK0 ] unsigned char 
  2072 ;;  boot_request    1   14[BANK0 ] unsigned char 
  2073 ;;  boot_request    1   13[BANK0 ] unsigned char 
  2074 ;;  cmd             1   12[BANK0 ] unsigned char 
  2075 ;;  checksum        1    9[BANK0 ] unsigned char 
  2076 ;;  _c              1    8[BANK0 ] unsigned char 
  2077 ;;  csum            1    7[BANK0 ] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0
  2088 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2089 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2090 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2091 ;;Total ram usage:       15 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:   13
  2094 ;; This function calls:
  2095 ;;		_BusyADC
  2096 ;;		_Busy_eep
  2097 ;;		_ConvertADC
  2098 ;;		_Delay10TCYx
  2099 ;;		_ReadADC
  2100 ;;		_Read_b_eep
  2101 ;;		_USBDeviceTasks
  2102 ;;		_Write_b_eep
  2103 ;;		_comm_send_dat
  2104 ;;		_comm_send_rply
  2105 ;;		_getsUSBUSART
  2106 ;;		_tlc5947_count_channels
  2107 ;;		_tlc5947_pwm_readback
  2108 ;;		_tlc5947_setChannel
  2109 ;; This function is called by:
  2110 ;;		_ProcessIO
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text3
  2115  0008AE                     __ptext3:
  2116                           	opt stack 0
  2117  0008AE                     _ProcessCDC:
  2118                           	opt stack 16
  2119                           
  2120                           ;comm.c: 69: unsigned char numBytes, len, cmd, csum;
  2121                           ;comm.c: 70: unsigned char _x,_c = 0;
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;incstack = 0
  2125  0008AE  0E00               	movlw	0
  2126  0008B0  0100               	movlb	0	; () banked
  2127  0008B2  6FE6               	movwf	ProcessCDC@_c& (0+255),b
  2128                           
  2129                           ;comm.c: 71: unsigned int _y = 0;
  2130  0008B4  0E00               	movlw	0
  2131  0008B6  0100               	movlb	0	; () banked
  2132  0008B8  6FE9               	movwf	(ProcessCDC@_y+1)& (0+255),b
  2133  0008BA  0E00               	movlw	0
  2134  0008BC  6FE8               	movwf	ProcessCDC@_y& (0+255),b
  2135                           
  2136                           ;comm.c: 73: unsigned char checksum;
  2137                           ;comm.c: 74: unsigned char boot_request0 = 0x23;
  2138  0008BE  0E23               	movlw	35
  2139  0008C0  0100               	movlb	0	; () banked
  2140  0008C2  6FEB               	movwf	ProcessCDC@boot_request0& (0+255),b
  2141                           
  2142                           ;comm.c: 75: unsigned char boot_request1 = 0x42;
  2143  0008C4  0E42               	movlw	66
  2144  0008C6  0100               	movlb	0	; () banked
  2145  0008C8  6FEC               	movwf	ProcessCDC@boot_request1& (0+255),b
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;comm.c: 78: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2149  0008CA  0E1F               	movlw	31
  2150  0008CC  0100               	movlb	0	; () banked
  2151  0008CE  6597               	cpfsgt	_USBDeviceState& (0+255),b
  2152  0008D0  0012               	return	
  2153                           
  2154                           ; BSR set to: 0
  2155  0008D2  B260               	btfsc	3936,1,c	;volatile
  2156  0008D4  0012               	return	
  2157  0008D6  D001               	goto	l5200
  2158                           
  2159                           ; BSR set to: 0
  2160  0008D8  0012               	return	
  2161  0008DA                     l5200:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;comm.c: 81: numBytes = getsUSBUSART(CDCBufferIn, 64);
  2165  0008DA  0E00               	movlw	low _CDCBufferIn
  2166  0008DC  6E2A               	movwf	getsUSBUSART@buffer,c
  2167  0008DE  0E01               	movlw	high _CDCBufferIn
  2168  0008E0  6E2B               	movwf	getsUSBUSART@buffer+1,c
  2169  0008E2  0E40               	movlw	64
  2170  0008E4  6E2C               	movwf	getsUSBUSART@len,c
  2171  0008E6  EC1A  F013         	call	_getsUSBUSART	;wreg free
  2172  0008EA  0100               	movlb	0	; () banked
  2173  0008EC  6FED               	movwf	ProcessCDC@numBytes& (0+255),b
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;comm.c: 84: if ((numBytes >= 0x04) && (CDCBufferIn[0x00] == 0xAA)) {
  2177  0008EE  0E03               	movlw	3
  2178  0008F0  0100               	movlb	0	; () banked
  2179  0008F2  65ED               	cpfsgt	ProcessCDC@numBytes& (0+255),b
  2180  0008F4  D22B               	goto	l5416
  2181                           
  2182                           ; BSR set to: 0
  2183  0008F6  0EAA               	movlw	170
  2184  0008F8  0101               	movlb	1	; () banked
  2185  0008FA  1900               	xorwf	_CDCBufferIn& (0+255),w,b
  2186  0008FC  A4D8               	btfss	status,2,c
  2187  0008FE  D226               	goto	l5416
  2188                           
  2189                           ; BSR set to: 1
  2190                           ;comm.c: 85: len = CDCBufferIn[0x03];
  2191  000900  C103  F0EF         	movff	_CDCBufferIn+3,ProcessCDC@len
  2192                           
  2193                           ;comm.c: 86: cmd = CDCBufferIn[0x01];
  2194  000904  C101  F0EA         	movff	_CDCBufferIn+1,ProcessCDC@cmd
  2195                           
  2196                           ;comm.c: 87: csum = CDCBufferIn[0x02];
  2197  000908  C102  F0E5         	movff	_CDCBufferIn+2,ProcessCDC@csum
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;comm.c: 88: if ((len + 0x04) == numBytes) {
  2201  00090C  0100               	movlb	0	; () banked
  2202  00090E  51ED               	movf	ProcessCDC@numBytes& (0+255),w,b
  2203  000910  0100               	movlb	0	; () banked
  2204  000912  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2205  000914  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2206  000916  0100               	movlb	0	; () banked
  2207  000918  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2208  00091A  0100               	movlb	0	; () banked
  2209  00091C  6FE3               	movwf	(??_ProcessCDC+2)& (0+255),b
  2210  00091E  6BE4               	clrf	(??_ProcessCDC+3)& (0+255),b
  2211  000920  0E04               	movlw	4
  2212  000922  0100               	movlb	0	; () banked
  2213  000924  27E3               	addwf	(??_ProcessCDC+2)& (0+255),f,b
  2214  000926  0E00               	movlw	0
  2215  000928  23E4               	addwfc	(??_ProcessCDC+3)& (0+255),f,b
  2216  00092A  0100               	movlb	0	; () banked
  2217  00092C  51E1               	movf	??_ProcessCDC& (0+255),w,b
  2218  00092E  0100               	movlb	0	; () banked
  2219  000930  19E3               	xorwf	(??_ProcessCDC+2)& (0+255),w,b
  2220  000932  E105               	bnz	u4401
  2221  000934  0100               	movlb	0	; () banked
  2222  000936  51E2               	movf	(??_ProcessCDC+1)& (0+255),w,b
  2223  000938  0100               	movlb	0	; () banked
  2224  00093A  19E4               	xorwf	(??_ProcessCDC+3)& (0+255),w,b
  2225  00093C  A4D8               	btfss	status,2,c
  2226  00093E                     u4401:
  2227  00093E  D202               	goto	l5414
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;comm.c: 91: checksum= CDCBufferIn[0x00] ^ CDCBufferIn[0x01];
  2231  000940  0101               	movlb	1	; () banked
  2232  000942  5101               	movf	(_CDCBufferIn+1)& (0+255),w,b
  2233  000944  0101               	movlb	1	; () banked
  2234  000946  1900               	xorwf	_CDCBufferIn& (0+255),w,b
  2235  000948  0100               	movlb	0	; () banked
  2236  00094A  6FE7               	movwf	ProcessCDC@checksum& (0+255),b
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;comm.c: 92: for (_x = 0x03; _x < numBytes; _x++) {
  2240  00094C  0E03               	movlw	3
  2241  00094E  0100               	movlb	0	; () banked
  2242  000950  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2243  000952  D00F               	goto	l5218
  2244  000954                     l5214:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;comm.c: 93: checksum ^= CDCBufferIn[_x];
  2248  000954  0100               	movlb	0	; () banked
  2249  000956  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2250  000958  0D01               	mullw	1
  2251  00095A  0E00               	movlw	low _CDCBufferIn
  2252  00095C  24F3               	addwf	prodl,w,c
  2253  00095E  6ED9               	movwf	fsr2l,c
  2254  000960  0E01               	movlw	high _CDCBufferIn
  2255  000962  20F4               	addwfc	prodh,w,c
  2256  000964  6EDA               	movwf	fsr2h,c
  2257  000966  50DF               	movf	indf2,w,c
  2258  000968  0100               	movlb	0	; () banked
  2259  00096A  1BE7               	xorwf	ProcessCDC@checksum& (0+255),f,b
  2260                           
  2261                           ; BSR set to: 0
  2262  00096C  0100               	movlb	0	; () banked
  2263  00096E  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2264  000970  D000               	goto	l5218
  2265  000972                     l5218:
  2266                           
  2267                           ; BSR set to: 0
  2268  000972  0100               	movlb	0	; () banked
  2269  000974  51ED               	movf	ProcessCDC@numBytes& (0+255),w,b
  2270  000976  0100               	movlb	0	; () banked
  2271  000978  5DEE               	subwf	ProcessCDC@_x& (0+255),w,b
  2272  00097A  A0D8               	btfss	status,0,c
  2273  00097C  D7EB               	goto	l5214
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;comm.c: 94: }
  2277                           ;comm.c: 95: if (csum == checksum) {
  2278                           
  2279                           ; BSR set to: 0
  2280  00097E  0100               	movlb	0	; () banked
  2281  000980  51E7               	movf	ProcessCDC@checksum& (0+255),w,b
  2282  000982  0100               	movlb	0	; () banked
  2283  000984  19E5               	xorwf	ProcessCDC@csum& (0+255),w,b
  2284  000986  A4D8               	btfss	status,2,c
  2285  000988  D1D9               	goto	l5412
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;comm.c: 96: LATCbits.LATC2 = 1;;
  2289  00098A  848B               	bsf	3979,2,c	;volatile
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;comm.c: 97: green_led_counter = 128;
  2293  00098C  0E80               	movlw	128
  2294  00098E  0100               	movlb	0	; () banked
  2295  000990  6F9C               	movwf	_green_led_counter& (0+255),b
  2296                           
  2297                           ;comm.c: 99: switch (cmd) {
  2298  000992  D1A3               	goto	l5410
  2299  000994                     l5226:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;comm.c: 101: if (len == 0) {
  2303  000994  0100               	movlb	0	; () banked
  2304  000996  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2305  000998  0100               	movlb	0	; () banked
  2306  00099A  A4D8               	btfss	status,2,c
  2307  00099C  D018               	goto	l5240
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;comm.c: 102: ConvertADC();
  2311  00099E  ECBD  F019         	call	_ConvertADC	;wreg free
  2312                           
  2313                           ;comm.c: 103: while (BusyADC());
  2314  0009A2  D000               	goto	l5230
  2315  0009A4                     l5230:
  2316  0009A4  ECB2  F019         	call	_BusyADC	;wreg free
  2317  0009A8  0900               	iorlw	0
  2318  0009AA  A4D8               	btfss	status,2,c
  2319  0009AC  D7FB               	goto	l5230
  2320                           
  2321                           ;comm.c: 104: _y = ReadADC();
  2322  0009AE  ECAA  F019         	call	_ReadADC	;wreg free
  2323  0009B2  C023  F0E8         	movff	?_ReadADC,ProcessCDC@_y
  2324  0009B6  C024  F0E9         	movff	?_ReadADC+1,ProcessCDC@_y+1
  2325                           
  2326                           ;comm.c: 105: CDCBufferOut[0x04 + 0] = (unsigned char)(_y & 0xFF);
  2327  0009BA  C0E8  F144         	movff	ProcessCDC@_y,_CDCBufferOut+4
  2328                           
  2329                           ;comm.c: 106: CDCBufferOut[0x04 + 1] = (unsigned char)(_y>>8 & 0xFF);
  2330  0009BE  0100               	movlb	0	; () banked
  2331  0009C0  51E9               	movf	(ProcessCDC@_y+1)& (0+255),w,b
  2332  0009C2  0101               	movlb	1	; () banked
  2333  0009C4  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;comm.c: 107: comm_send_dat(2);
  2337  0009C6  0E02               	movlw	2
  2338  0009C8  EC55  F015         	call	_comm_send_dat
  2339                           
  2340                           ;comm.c: 108: } else {
  2341  0009CC  0012               	return	
  2342  0009CE                     l5240:
  2343                           
  2344                           ;comm.c: 109: comm_send_rply(0x03);
  2345  0009CE  0E03               	movlw	3
  2346  0009D0  EC96  F017         	call	_comm_send_rply
  2347                           
  2348                           ;comm.c: 110: }
  2349                           ;comm.c: 111: break;
  2350  0009D4  0012               	return	
  2351                           
  2352                           ;comm.c: 113: case 0x20:
  2353  0009D6  D000               	goto	l5242
  2354  0009D8                     l5242:
  2355                           
  2356                           ;comm.c: 114: case 0x21:
  2357                           ;comm.c: 115: if (len == 32) {
  2358  0009D8  0E20               	movlw	32
  2359  0009DA  0100               	movlb	0	; () banked
  2360  0009DC  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2361  0009DE  A4D8               	btfss	status,2,c
  2362  0009E0  D038               	goto	l5264
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;comm.c: 116: tlc_request = 0;
  2366  0009E2  0E00               	movlw	0
  2367  0009E4  0100               	movlb	0	; () banked
  2368  0009E6  6FA0               	movwf	_tlc_request& (0+255),b
  2369                           
  2370                           ;comm.c: 117: for (_x=0; _x<32; _x++) {
  2371  0009E8  0E00               	movlw	0
  2372  0009EA  0100               	movlb	0	; () banked
  2373  0009EC  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2374  0009EE                     l5246:
  2375                           
  2376                           ; BSR set to: 0
  2377  0009EE  0E1F               	movlw	31
  2378  0009F0  0100               	movlb	0	; () banked
  2379  0009F2  65EE               	cpfsgt	ProcessCDC@_x& (0+255),b
  2380  0009F4  D001               	goto	l5250
  2381                           
  2382                           ; BSR set to: 0
  2383  0009F6  D023               	goto	l5258
  2384  0009F8                     l5250:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;comm.c: 118: _c = _x + (cmd - 0x20) * 32;
  2388  0009F8  0100               	movlb	0	; () banked
  2389  0009FA  39EA               	swapf	ProcessCDC@cmd& (0+255),w,b
  2390  0009FC  46E8               	rlncf	wreg,f,c
  2391  0009FE  0BE0               	andlw	224
  2392  000A00  0100               	movlb	0	; () banked
  2393  000A02  25EE               	addwf	ProcessCDC@_x& (0+255),w,b
  2394  000A04  0100               	movlb	0	; () banked
  2395  000A06  6FE6               	movwf	ProcessCDC@_c& (0+255),b
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;comm.c: 119: tlc5947_setChannel(_c, CDCBufferIn[0x04 + _x]);
  2399  000A08  0100               	movlb	0	; () banked
  2400  000A0A  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2401  000A0C  0100               	movlb	0	; () banked
  2402  000A0E  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2403  000A10  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2404  000A12  0E04               	movlw	4
  2405  000A14  0100               	movlb	0	; () banked
  2406  000A16  27E1               	addwf	??_ProcessCDC& (0+255),f,b
  2407  000A18  0E00               	movlw	0
  2408  000A1A  23E2               	addwfc	(??_ProcessCDC+1)& (0+255),f,b
  2409  000A1C  0E00               	movlw	low _CDCBufferIn
  2410  000A1E  0100               	movlb	0	; () banked
  2411  000A20  25E1               	addwf	??_ProcessCDC& (0+255),w,b
  2412  000A22  6ED9               	movwf	fsr2l,c
  2413  000A24  0E01               	movlw	high _CDCBufferIn
  2414  000A26  0100               	movlb	0	; () banked
  2415  000A28  21E2               	addwfc	(??_ProcessCDC+1)& (0+255),w,b
  2416  000A2A  6EDA               	movwf	fsr2h,c
  2417  000A2C  50DF               	movf	indf2,w,c
  2418  000A2E  6E26               	movwf	tlc5947_setChannel@val,c
  2419  000A30  0100               	movlb	0	; () banked
  2420  000A32  51E6               	movf	ProcessCDC@_c& (0+255),w,b
  2421  000A34  EC07  F00A         	call	_tlc5947_setChannel
  2422  000A38  0100               	movlb	0	; () banked
  2423  000A3A  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2424  000A3C  D7D8               	goto	l5246
  2425  000A3E                     l5258:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;comm.c: 120: }
  2429                           ;comm.c: 121: tlc_request = 1;
  2430  000A3E  0E01               	movlw	1
  2431  000A40  0100               	movlb	0	; () banked
  2432  000A42  6FA0               	movwf	_tlc_request& (0+255),b
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;comm.c: 122: update_count++;
  2436  000A44  0100               	movlb	0	; () banked
  2437  000A46  4B92               	infsnz	_update_count& (0+255),f,b
  2438  000A48  2B93               	incf	(_update_count+1)& (0+255),f,b
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;comm.c: 124: comm_send_rply(0x01);
  2442  000A4A  0E01               	movlw	1
  2443  000A4C  EC96  F017         	call	_comm_send_rply
  2444                           
  2445                           ;comm.c: 125: } else {
  2446  000A50  0012               	return	
  2447  000A52                     l5264:
  2448                           
  2449                           ;comm.c: 126: comm_send_rply(0x03);
  2450  000A52  0E03               	movlw	3
  2451  000A54  EC96  F017         	call	_comm_send_rply
  2452                           
  2453                           ;comm.c: 127: }
  2454                           ;comm.c: 128: break;
  2455  000A58  0012               	return	
  2456  000A5A                     l5266:
  2457                           
  2458                           ;comm.c: 132: if (len == tlc_nchannels) {
  2459  000A5A  0100               	movlb	0	; () banked
  2460  000A5C  51DD               	movf	_tlc_nchannels& (0+255),w,b
  2461  000A5E  0100               	movlb	0	; () banked
  2462  000A60  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2463  000A62  A4D8               	btfss	status,2,c
  2464  000A64  D032               	goto	l5282
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;comm.c: 133: tlc_request = 0;
  2468  000A66  0E00               	movlw	0
  2469  000A68  0100               	movlb	0	; () banked
  2470  000A6A  6FA0               	movwf	_tlc_request& (0+255),b
  2471                           
  2472                           ;comm.c: 134: for (_x = 0; _x < tlc_nchannels; _x++) {
  2473  000A6C  0E00               	movlw	0
  2474  000A6E  0100               	movlb	0	; () banked
  2475  000A70  6FEE               	movwf	ProcessCDC@_x& (0+255),b
  2476  000A72  D01B               	goto	l5274
  2477  000A74                     l5270:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;comm.c: 135: tlc5947_setChannel(_x, CDCBufferIn[0x04 + _x]);
  2481  000A74  0100               	movlb	0	; () banked
  2482  000A76  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2483  000A78  0100               	movlb	0	; () banked
  2484  000A7A  6FE1               	movwf	??_ProcessCDC& (0+255),b
  2485  000A7C  6BE2               	clrf	(??_ProcessCDC+1)& (0+255),b
  2486  000A7E  0E04               	movlw	4
  2487  000A80  0100               	movlb	0	; () banked
  2488  000A82  27E1               	addwf	??_ProcessCDC& (0+255),f,b
  2489  000A84  0E00               	movlw	0
  2490  000A86  23E2               	addwfc	(??_ProcessCDC+1)& (0+255),f,b
  2491  000A88  0E00               	movlw	low _CDCBufferIn
  2492  000A8A  0100               	movlb	0	; () banked
  2493  000A8C  25E1               	addwf	??_ProcessCDC& (0+255),w,b
  2494  000A8E  6ED9               	movwf	fsr2l,c
  2495  000A90  0E01               	movlw	high _CDCBufferIn
  2496  000A92  0100               	movlb	0	; () banked
  2497  000A94  21E2               	addwfc	(??_ProcessCDC+1)& (0+255),w,b
  2498  000A96  6EDA               	movwf	fsr2h,c
  2499  000A98  50DF               	movf	indf2,w,c
  2500  000A9A  6E26               	movwf	tlc5947_setChannel@val,c
  2501  000A9C  0100               	movlb	0	; () banked
  2502  000A9E  51EE               	movf	ProcessCDC@_x& (0+255),w,b
  2503  000AA0  EC07  F00A         	call	_tlc5947_setChannel
  2504  000AA4  0100               	movlb	0	; () banked
  2505  000AA6  2BEE               	incf	ProcessCDC@_x& (0+255),f,b
  2506  000AA8  D000               	goto	l5274
  2507  000AAA                     l5274:
  2508                           
  2509                           ; BSR set to: 0
  2510  000AAA  0100               	movlb	0	; () banked
  2511  000AAC  51DD               	movf	_tlc_nchannels& (0+255),w,b
  2512  000AAE  0100               	movlb	0	; () banked
  2513  000AB0  5DEE               	subwf	ProcessCDC@_x& (0+255),w,b
  2514  000AB2  A0D8               	btfss	status,0,c
  2515  000AB4  D7DF               	goto	l5270
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;comm.c: 136: }
  2519                           ;comm.c: 137: tlc_request = 1;
  2520                           
  2521                           ; BSR set to: 0
  2522  000AB6  0E01               	movlw	1
  2523  000AB8  0100               	movlb	0	; () banked
  2524  000ABA  6FA0               	movwf	_tlc_request& (0+255),b
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;comm.c: 138: update_count++;
  2528  000ABC  0100               	movlb	0	; () banked
  2529  000ABE  4B92               	infsnz	_update_count& (0+255),f,b
  2530  000AC0  2B93               	incf	(_update_count+1)& (0+255),f,b
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;comm.c: 139: comm_send_rply(0x01);
  2534  000AC2  0E01               	movlw	1
  2535  000AC4  EC96  F017         	call	_comm_send_rply
  2536                           
  2537                           ;comm.c: 140: } else {
  2538  000AC8  0012               	return	
  2539  000ACA                     l5282:
  2540                           
  2541                           ;comm.c: 141: comm_send_rply(0x03);
  2542  000ACA  0E03               	movlw	3
  2543  000ACC  EC96  F017         	call	_comm_send_rply
  2544                           
  2545                           ;comm.c: 142: }
  2546                           ;comm.c: 143: break;
  2547  000AD0  0012               	return	
  2548  000AD2                     l5284:
  2549                           
  2550                           ;comm.c: 147: if (len == 2) {
  2551  000AD2  0E02               	movlw	2
  2552  000AD4  0100               	movlb	0	; () banked
  2553  000AD6  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2554  000AD8  A4D8               	btfss	status,2,c
  2555  000ADA  D010               	goto	l5294
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;comm.c: 148: tlc_request = 0;
  2559  000ADC  0E00               	movlw	0
  2560  000ADE  0100               	movlb	0	; () banked
  2561  000AE0  6FA0               	movwf	_tlc_request& (0+255),b
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;comm.c: 149: tlc5947_setChannel(CDCBufferIn[0x04], CDCBufferIn[0x04 + 1]);
  2565  000AE2  C105  F026         	movff	_CDCBufferIn+5,tlc5947_setChannel@val
  2566  000AE6  0101               	movlb	1	; () banked
  2567  000AE8  5104               	movf	(_CDCBufferIn+4)& (0+255),w,b
  2568  000AEA  EC07  F00A         	call	_tlc5947_setChannel
  2569                           
  2570                           ;comm.c: 150: tlc_request = 1;
  2571  000AEE  0E01               	movlw	1
  2572  000AF0  0100               	movlb	0	; () banked
  2573  000AF2  6FA0               	movwf	_tlc_request& (0+255),b
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;comm.c: 151: comm_send_rply(0x01);
  2577  000AF4  0E01               	movlw	1
  2578  000AF6  EC96  F017         	call	_comm_send_rply
  2579                           
  2580                           ;comm.c: 152: } else {
  2581  000AFA  0012               	return	
  2582  000AFC                     l5294:
  2583                           
  2584                           ;comm.c: 153: comm_send_rply(0x03);
  2585  000AFC  0E03               	movlw	3
  2586  000AFE  EC96  F017         	call	_comm_send_rply
  2587                           
  2588                           ;comm.c: 154: }
  2589                           ;comm.c: 155: break;
  2590  000B02  0012               	return	
  2591  000B04                     l5296:
  2592                           
  2593                           ;comm.c: 159: if (len == 0) {
  2594  000B04  0100               	movlb	0	; () banked
  2595  000B06  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2596  000B08  0100               	movlb	0	; () banked
  2597  000B0A  A4D8               	btfss	status,2,c
  2598  000B0C  D008               	goto	l5304
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;comm.c: 160: tlc5947_count_channels();
  2602  000B0E  ECDE  F015         	call	_tlc5947_count_channels	;wreg free
  2603                           
  2604                           ;comm.c: 161: CDCBufferOut[0x04 + 0] = tlc_nbytes;
  2605  000B12  C05F  F144         	movff	_tlc_nbytes,_CDCBufferOut+4
  2606                           
  2607                           ;comm.c: 162: comm_send_dat(1);
  2608  000B16  0E01               	movlw	1
  2609  000B18  EC55  F015         	call	_comm_send_dat
  2610                           
  2611                           ;comm.c: 163: } else {
  2612  000B1C  0012               	return	
  2613  000B1E                     l5304:
  2614                           
  2615                           ;comm.c: 164: comm_send_rply(0x03);
  2616  000B1E  0E03               	movlw	3
  2617  000B20  EC96  F017         	call	_comm_send_rply
  2618                           
  2619                           ;comm.c: 165: }
  2620                           ;comm.c: 166: break;
  2621  000B24  0012               	return	
  2622  000B26                     l5306:
  2623                           
  2624                           ;comm.c: 169: if (len == 0) {
  2625  000B26  0100               	movlb	0	; () banked
  2626  000B28  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2627  000B2A  0100               	movlb	0	; () banked
  2628  000B2C  A4D8               	btfss	status,2,c
  2629  000B2E  D00B               	goto	l5316
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;comm.c: 170: tlc5947_count_channels();
  2633  000B30  ECDE  F015         	call	_tlc5947_count_channels	;wreg free
  2634                           
  2635                           ;comm.c: 171: CDCBufferOut[0x04 + 0] = tlc_nchannels;
  2636  000B34  C0DD  F144         	movff	_tlc_nchannels,_CDCBufferOut+4
  2637                           
  2638                           ;comm.c: 172: CDCBufferOut[0x04 + 1] = 0;
  2639  000B38  0E00               	movlw	0
  2640  000B3A  0101               	movlb	1	; () banked
  2641  000B3C  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2642                           
  2643                           ; BSR set to: 1
  2644                           ;comm.c: 173: comm_send_dat(2);
  2645  000B3E  0E02               	movlw	2
  2646  000B40  EC55  F015         	call	_comm_send_dat
  2647                           
  2648                           ;comm.c: 174: } else {
  2649  000B44  0012               	return	
  2650  000B46                     l5316:
  2651                           
  2652                           ;comm.c: 175: comm_send_rply(0x03);
  2653  000B46  0E03               	movlw	3
  2654  000B48  EC96  F017         	call	_comm_send_rply
  2655                           
  2656                           ;comm.c: 176: }
  2657                           ;comm.c: 177: break;
  2658  000B4C  0012               	return	
  2659  000B4E                     l5318:
  2660                           
  2661                           ;comm.c: 180: if (len == 0) {
  2662  000B4E  0100               	movlb	0	; () banked
  2663  000B50  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2664  000B52  0100               	movlb	0	; () banked
  2665  000B54  A4D8               	btfss	status,2,c
  2666  000B56  D00B               	goto	l5328
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;comm.c: 181: tlc5947_pwm_readback();
  2670  000B58  ECD3  F013         	call	_tlc5947_pwm_readback	;wreg free
  2671                           
  2672                           ;comm.c: 182: CDCBufferOut[0x04 + 0] = (unsigned char)(tlc_pwm_readback_value & 0xFF);
  2673  000B5C  C04A  F144         	movff	_tlc_pwm_readback_value,_CDCBufferOut+4
  2674                           
  2675                           ;comm.c: 183: CDCBufferOut[0x04 + 1] = (unsigned char)(tlc_pwm_readback_value>>8 & 0xFF)
      +                          ;
  2676  000B60  504B               	movf	_tlc_pwm_readback_value+1,w,c
  2677  000B62  0101               	movlb	1	; () banked
  2678  000B64  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2679                           
  2680                           ; BSR set to: 1
  2681                           ;comm.c: 184: comm_send_dat(2);
  2682  000B66  0E02               	movlw	2
  2683  000B68  EC55  F015         	call	_comm_send_dat
  2684                           
  2685                           ;comm.c: 185: } else {
  2686  000B6C  0012               	return	
  2687  000B6E                     l5328:
  2688                           
  2689                           ;comm.c: 186: comm_send_rply(0x03);
  2690  000B6E  0E03               	movlw	3
  2691  000B70  EC96  F017         	call	_comm_send_rply
  2692                           
  2693                           ;comm.c: 187: }
  2694                           ;comm.c: 188: break;
  2695  000B74  0012               	return	
  2696  000B76                     l5330:
  2697                           
  2698                           ;comm.c: 191: if (len == 2) {
  2699  000B76  0E02               	movlw	2
  2700  000B78  0100               	movlb	0	; () banked
  2701  000B7A  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2702  000B7C  A4D8               	btfss	status,2,c
  2703  000B7E  D00E               	goto	l5336
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;comm.c: 192: tmr3l_cal = CDCBufferIn[0x04 + 0]^0xFF;
  2707  000B80  0101               	movlb	1	; () banked
  2708  000B82  5104               	movf	(_CDCBufferIn+4)& (0+255),w,b
  2709  000B84  0AFF               	xorlw	255
  2710  000B86  0100               	movlb	0	; () banked
  2711  000B88  6FA2               	movwf	_tmr3l_cal& (0+255),b
  2712                           
  2713                           ;comm.c: 193: tmr3h_cal = CDCBufferIn[0x04 + 1]^0xFF;
  2714  000B8A  0101               	movlb	1	; () banked
  2715  000B8C  5105               	movf	(_CDCBufferIn+5)& (0+255),w,b
  2716  000B8E  0AFF               	xorlw	255
  2717  000B90  0100               	movlb	0	; () banked
  2718  000B92  6FA1               	movwf	_tmr3h_cal& (0+255),b
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;comm.c: 194: comm_send_rply(0x01);
  2722  000B94  0E01               	movlw	1
  2723  000B96  EC96  F017         	call	_comm_send_rply
  2724                           
  2725                           ;comm.c: 195: } else {
  2726  000B9A  0012               	return	
  2727  000B9C                     l5336:
  2728                           
  2729                           ;comm.c: 196: comm_send_rply(0x03);
  2730  000B9C  0E03               	movlw	3
  2731  000B9E  EC96  F017         	call	_comm_send_rply
  2732                           
  2733                           ;comm.c: 197: }
  2734                           ;comm.c: 198: break;
  2735  000BA2  0012               	return	
  2736  000BA4                     l5338:
  2737                           
  2738                           ;comm.c: 201: if (len == 1) {
  2739  000BA4  0100               	movlb	0	; () banked
  2740  000BA6  05EF               	decf	ProcessCDC@len& (0+255),w,b
  2741  000BA8  A4D8               	btfss	status,2,c
  2742  000BAA  D00D               	goto	l5346
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;comm.c: 202: Busy_eep();
  2746  000BAC  ECB9  F019         	call	_Busy_eep	;wreg free
  2747                           
  2748                           ;comm.c: 203: CDCBufferOut[0x04] = Read_b_eep(CDCBufferIn[0x04]);
  2749  000BB0  C104  F023         	movff	_CDCBufferIn+4,Read_b_eep@badd
  2750  000BB4  6A24               	clrf	Read_b_eep@badd+1,c
  2751  000BB6  EC7C  F019         	call	_Read_b_eep	;wreg free
  2752  000BBA  0101               	movlb	1	; () banked
  2753  000BBC  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2754                           
  2755                           ; BSR set to: 1
  2756                           ;comm.c: 204: comm_send_dat(1);
  2757  000BBE  0E01               	movlw	1
  2758  000BC0  EC55  F015         	call	_comm_send_dat
  2759                           
  2760                           ;comm.c: 205: } else {
  2761  000BC4  0012               	return	
  2762  000BC6                     l5346:
  2763                           
  2764                           ;comm.c: 206: comm_send_rply(0x03);
  2765  000BC6  0E03               	movlw	3
  2766  000BC8  EC96  F017         	call	_comm_send_rply
  2767                           
  2768                           ;comm.c: 207: }
  2769                           ;comm.c: 208: break;
  2770  000BCC  0012               	return	
  2771  000BCE                     l5348:
  2772                           
  2773                           ;comm.c: 211: if (len == 2) {
  2774  000BCE  0E02               	movlw	2
  2775  000BD0  0100               	movlb	0	; () banked
  2776  000BD2  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2777  000BD4  A4D8               	btfss	status,2,c
  2778  000BD6  D00D               	goto	l5356
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;comm.c: 212: Busy_eep();
  2782  000BD8  ECB9  F019         	call	_Busy_eep	;wreg free
  2783                           
  2784                           ;comm.c: 213: Write_b_eep(CDCBufferIn[0x04], CDCBufferIn[0x04+1]);
  2785  000BDC  C104  F023         	movff	_CDCBufferIn+4,Write_b_eep@badd
  2786  000BE0  6A24               	clrf	Write_b_eep@badd+1,c
  2787  000BE2  C105  F025         	movff	_CDCBufferIn+5,Write_b_eep@bdat
  2788  000BE6  EC23  F018         	call	_Write_b_eep	;wreg free
  2789                           
  2790                           ;comm.c: 214: comm_send_rply(0x01);
  2791  000BEA  0E01               	movlw	1
  2792  000BEC  EC96  F017         	call	_comm_send_rply
  2793                           
  2794                           ;comm.c: 215: } else {
  2795  000BF0  0012               	return	
  2796  000BF2                     l5356:
  2797                           
  2798                           ;comm.c: 216: comm_send_rply(0x03);
  2799  000BF2  0E03               	movlw	3
  2800  000BF4  EC96  F017         	call	_comm_send_rply
  2801                           
  2802                           ;comm.c: 217: }
  2803                           ;comm.c: 218: break;
  2804  000BF8  0012               	return	
  2805  000BFA                     l5358:
  2806                           
  2807                           ;comm.c: 221: if (len == 0) {
  2808  000BFA  0100               	movlb	0	; () banked
  2809  000BFC  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2810  000BFE  0100               	movlb	0	; () banked
  2811  000C00  A4D8               	btfss	status,2,c
  2812  000C02  D007               	goto	l5364
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;comm.c: 222: CDCBufferOut[0x04] = 0x34;
  2816  000C04  0E34               	movlw	52
  2817  000C06  0101               	movlb	1	; () banked
  2818  000C08  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;comm.c: 223: comm_send_dat(1);
  2822  000C0A  0E01               	movlw	1
  2823  000C0C  EC55  F015         	call	_comm_send_dat
  2824                           
  2825                           ;comm.c: 224: } else {
  2826  000C10  0012               	return	
  2827  000C12                     l5364:
  2828                           
  2829                           ;comm.c: 225: comm_send_rply(0x03);
  2830  000C12  0E03               	movlw	3
  2831  000C14  EC96  F017         	call	_comm_send_rply
  2832                           
  2833                           ;comm.c: 226: }
  2834                           ;comm.c: 227: break;
  2835  000C18  0012               	return	
  2836  000C1A                     l5366:
  2837                           
  2838                           ;comm.c: 230: if (len == 0) {
  2839  000C1A  0100               	movlb	0	; () banked
  2840  000C1C  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2841  000C1E  0100               	movlb	0	; () banked
  2842  000C20  A4D8               	btfss	status,2,c
  2843  000C22  D007               	goto	l5372
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;comm.c: 231: CDCBufferOut[0x04] = 0x01;
  2847  000C24  0E01               	movlw	1
  2848  000C26  0101               	movlb	1	; () banked
  2849  000C28  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2850                           
  2851                           ; BSR set to: 1
  2852                           ;comm.c: 232: comm_send_dat(1);
  2853  000C2A  0E01               	movlw	1
  2854  000C2C  EC55  F015         	call	_comm_send_dat
  2855                           
  2856                           ;comm.c: 233: } else {
  2857  000C30  0012               	return	
  2858  000C32                     l5372:
  2859                           
  2860                           ;comm.c: 234: comm_send_rply(0x03);
  2861  000C32  0E03               	movlw	3
  2862  000C34  EC96  F017         	call	_comm_send_rply
  2863                           
  2864                           ;comm.c: 235: }
  2865                           ;comm.c: 236: break;
  2866  000C38  0012               	return	
  2867  000C3A                     l5374:
  2868                           
  2869                           ;comm.c: 239: if (len == 0) {
  2870  000C3A  0100               	movlb	0	; () banked
  2871  000C3C  51EF               	movf	ProcessCDC@len& (0+255),w,b
  2872  000C3E  0100               	movlb	0	; () banked
  2873  000C40  A4D8               	btfss	status,2,c
  2874  000C42  D008               	goto	l5380
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;comm.c: 240: CDCBufferOut[0x04 + 0] = boot_request0;
  2878  000C44  C0EB  F144         	movff	ProcessCDC@boot_request0,_CDCBufferOut+4
  2879                           
  2880                           ;comm.c: 241: CDCBufferOut[0x04 + 1] = boot_request1;
  2881  000C48  C0EC  F145         	movff	ProcessCDC@boot_request1,_CDCBufferOut+5
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;comm.c: 242: comm_send_dat(2);
  2885  000C4C  0E02               	movlw	2
  2886  000C4E  EC55  F015         	call	_comm_send_dat
  2887                           
  2888                           ;comm.c: 243: } else {
  2889  000C52  0012               	return	
  2890  000C54                     l5380:
  2891                           
  2892                           ;comm.c: 244: comm_send_rply(0x03);
  2893  000C54  0E03               	movlw	3
  2894  000C56  EC96  F017         	call	_comm_send_rply
  2895                           
  2896                           ;comm.c: 245: }
  2897                           ;comm.c: 246: break;
  2898  000C5A  0012               	return	
  2899  000C5C                     l5382:
  2900                           
  2901                           ;comm.c: 249: if (len == 2) {
  2902  000C5C  0E02               	movlw	2
  2903  000C5E  0100               	movlb	0	; () banked
  2904  000C60  19EF               	xorwf	ProcessCDC@len& (0+255),w,b
  2905  000C62  A4D8               	btfss	status,2,c
  2906  000C64  D032               	goto	l5404
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;comm.c: 250: if ((CDCBufferIn[0x04] == boot_request0) && (CDCBufferIn[0x04 + 1] == boot
      +                          _request1)) {
  2910  000C66  0100               	movlb	0	; () banked
  2911  000C68  51EB               	movf	ProcessCDC@boot_request0& (0+255),w,b
  2912  000C6A  0101               	movlb	1	; () banked
  2913  000C6C  1904               	xorwf	(_CDCBufferIn+4)& (0+255),w,b
  2914  000C6E  A4D8               	btfss	status,2,c
  2915  000C70  D028               	goto	l5402
  2916                           
  2917                           ; BSR set to: 1
  2918  000C72  0100               	movlb	0	; () banked
  2919  000C74  51EC               	movf	ProcessCDC@boot_request1& (0+255),w,b
  2920  000C76  0101               	movlb	1	; () banked
  2921  000C78  1905               	xorwf	(_CDCBufferIn+5)& (0+255),w,b
  2922  000C7A  A4D8               	btfss	status,2,c
  2923  000C7C  D022               	goto	l5402
  2924                           
  2925                           ; BSR set to: 1
  2926                           ;comm.c: 251: INTCONbits.GIE = 0;
  2927  000C7E  9EF2               	bcf	intcon,7,c	;volatile
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;comm.c: 252: *U1CON_R = 0; *U1IE_R = 0; USBDeviceState = DETACHED_STATE;;
  2931  000C80  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  2932  000C84  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  2933  000C88  0E00               	movlw	0
  2934  000C8A  6EDF               	movwf	indf2,c
  2935  000C8C  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  2936  000C90  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  2937  000C94  0E00               	movlw	0
  2938  000C96  6EDF               	movwf	indf2,c
  2939                           
  2940                           ; BSR set to: 1
  2941  000C98  0E00               	movlw	0
  2942  000C9A  0100               	movlb	0	; () banked
  2943  000C9C  6F97               	movwf	_USBDeviceState& (0+255),b
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;comm.c: 253: USBDeviceTasks();
  2947  000C9E  ECF6  F007         	call	_USBDeviceTasks	;wreg free
  2948                           
  2949                           ;comm.c: 254: Delay10TCYx(18);
  2950  000CA2  0E12               	movlw	18
  2951  000CA4  EC86  F019         	call	_Delay10TCYx
  2952                           
  2953                           ;comm.c: 255: if (pic18_devid != 0x0090) {
  2954  000CA8  0E90               	movlw	144
  2955  000CAA  0100               	movlb	0	; () banked
  2956  000CAC  19F1               	xorwf	_pic18_devid& (0+255),w,b
  2957  000CAE  0100               	movlb	0	; () banked
  2958  000CB0  11F2               	iorwf	(_pic18_devid+1)& (0+255),w,b
  2959  000CB2  B4D8               	btfsc	status,2,c
  2960  000CB4  D003               	goto	l988
  2961                           
  2962                           ; BSR set to: 0
  2963  000CB6  EF9E F003          	goto	1852	;# 
  2964                           
  2965                           ;comm.c: 257: } else {
  2966  000CBA  0012               	return	
  2967  000CBC                     l988:
  2968                           
  2969                           ; BSR set to: 0
  2970  000CBC  EF92 F003          	goto	1828	;# 
  2971                           
  2972                           ;comm.c: 259: }
  2973                           ;comm.c: 260: } else {
  2974  000CC0  0012               	return	
  2975  000CC2                     l5402:
  2976                           
  2977                           ;comm.c: 262: comm_send_rply(0x02);
  2978  000CC2  0E02               	movlw	2
  2979  000CC4  EC96  F017         	call	_comm_send_rply
  2980                           
  2981                           ;comm.c: 263: }
  2982                           ;comm.c: 264: } else {
  2983  000CC8  0012               	return	
  2984  000CCA                     l5404:
  2985                           
  2986                           ;comm.c: 265: comm_send_rply(0x03);
  2987  000CCA  0E03               	movlw	3
  2988  000CCC  EC96  F017         	call	_comm_send_rply
  2989                           
  2990                           ;comm.c: 266: }
  2991                           ;comm.c: 267: break;
  2992  000CD0  0012               	return	
  2993  000CD2                     l5406:
  2994                           
  2995                           ;comm.c: 271: comm_send_rply(0xFF);
  2996  000CD2  0EFF               	movlw	255
  2997  000CD4  EC96  F017         	call	_comm_send_rply
  2998                           
  2999                           ;comm.c: 273: }
  3000                           
  3001                           ;comm.c: 272: break;
  3002  000CD8  0012               	return	
  3003  000CDA                     l5410:
  3004  000CDA  0100               	movlb	0	; () banked
  3005  000CDC  51EA               	movf	ProcessCDC@cmd& (0+255),w,b
  3006                           
  3007                           ; Switch size 1, requested type "space"
  3008                           ; Number of cases is 15, Range of values is 1 to 129
  3009                           ; switch strategies available:
  3010                           ; Name         Instructions Cycles
  3011                           ; simple_byte           46    24 (average)
  3012                           ;	Chosen strategy is simple_byte
  3013  000CDE  0A01               	xorlw	1	; case 1
  3014  000CE0  B4D8               	btfsc	status,2,c
  3015  000CE2  D78B               	goto	l5358
  3016  000CE4  0A03               	xorlw	3	; case 2
  3017  000CE6  B4D8               	btfsc	status,2,c
  3018  000CE8  D798               	goto	l5366
  3019  000CEA  0A13               	xorlw	19	; case 17
  3020  000CEC  B4D8               	btfsc	status,2,c
  3021  000CEE  D6F1               	goto	l5284
  3022  000CF0  0A03               	xorlw	3	; case 18
  3023  000CF2  B4D8               	btfsc	status,2,c
  3024  000CF4  D6B2               	goto	l5266
  3025  000CF6  0A01               	xorlw	1	; case 19
  3026  000CF8  B4D8               	btfsc	status,2,c
  3027  000CFA  D704               	goto	l5296
  3028  000CFC  0A07               	xorlw	7	; case 20
  3029  000CFE  B4D8               	btfsc	status,2,c
  3030  000D00  D726               	goto	l5318
  3031  000D02  0A01               	xorlw	1	; case 21
  3032  000D04  B4D8               	btfsc	status,2,c
  3033  000D06  D737               	goto	l5330
  3034  000D08  0A35               	xorlw	53	; case 32
  3035  000D0A  B4D8               	btfsc	status,2,c
  3036  000D0C  D665               	goto	l5242
  3037  000D0E  0A01               	xorlw	1	; case 33
  3038  000D10  B4D8               	btfsc	status,2,c
  3039  000D12  D662               	goto	l5242
  3040  000D14  0A11               	xorlw	17	; case 48
  3041  000D16  B4D8               	btfsc	status,2,c
  3042  000D18  D706               	goto	l5306
  3043  000D1A  0A70               	xorlw	112	; case 64
  3044  000D1C  B4D8               	btfsc	status,2,c
  3045  000D1E  D63A               	goto	l5226
  3046  000D20  0A10               	xorlw	16	; case 80
  3047  000D22  B4D8               	btfsc	status,2,c
  3048  000D24  D73F               	goto	l5338
  3049  000D26  0A01               	xorlw	1	; case 81
  3050  000D28  B4D8               	btfsc	status,2,c
  3051  000D2A  D751               	goto	l5348
  3052  000D2C  0AD1               	xorlw	209	; case 128
  3053  000D2E  B4D8               	btfsc	status,2,c
  3054  000D30  D784               	goto	l5374
  3055  000D32  0A01               	xorlw	1	; case 129
  3056  000D34  B4D8               	btfsc	status,2,c
  3057  000D36  D792               	goto	l5382
  3058  000D38  D7CC               	goto	l5406
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;comm.c: 274: } else {
  3062  000D3A  0012               	return	
  3063  000D3C                     l5412:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;comm.c: 276: comm_send_rply(0x04);
  3067  000D3C  0E04               	movlw	4
  3068  000D3E  EC96  F017         	call	_comm_send_rply
  3069                           
  3070                           ;comm.c: 277: }
  3071                           ;comm.c: 278: } else {
  3072  000D42  0012               	return	
  3073  000D44                     l5414:
  3074                           
  3075                           ;comm.c: 280: comm_send_rply(0x03);
  3076  000D44  0E03               	movlw	3
  3077  000D46  EC96  F017         	call	_comm_send_rply
  3078                           
  3079                           ;comm.c: 281: }
  3080                           ;comm.c: 283: } else {
  3081  000D4A  0012               	return	
  3082  000D4C                     l5416:
  3083                           
  3084                           ;comm.c: 285: len = 0;
  3085  000D4C  0E00               	movlw	0
  3086  000D4E  0100               	movlb	0	; () banked
  3087  000D50  6FEF               	movwf	ProcessCDC@len& (0+255),b
  3088  000D52  0012               	return	
  3089                           
  3090                           ; BSR set to: 0
  3091  000D54  0012               	return		;funcret
  3092  000D56                     __end_of_ProcessCDC:
  3093                           	opt stack 0
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           prodh	equ	0xFF4
  3099                           prodl	equ	0xFF3
  3100                           intcon	equ	0xFF2
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1h	equ	0xFE2
  3105                           fsr1l	equ	0xFE1
  3106                           indf2	equ	0xFDF
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8
  3110                           
  3111 ;; *************** function _getsUSBUSART *****************
  3112 ;; Defined at:
  3113 ;;		line 542 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  buffer          2   41[COMRAM] PTR unsigned char 
  3116 ;;		 -> CDCBufferIn(64), 
  3117 ;;  len             1   43[COMRAM] unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      unsigned char 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3129 ;;      Params:         3       0       0       0       0       0       0       0       0
  3130 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3131 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3132 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3133 ;;Total ram usage:        6 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    5
  3136 ;; This function calls:
  3137 ;;		_USBTransferOnePacket
  3138 ;; This function is called by:
  3139 ;;		_ProcessCDC
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text4
  3144  002634                     __ptext4:
  3145                           	opt stack 0
  3146  002634                     _getsUSBUSART:
  3147                           	opt stack 23
  3148                           
  3149                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  3150                           
  3151                           ;incstack = 0
  3152  002634  0E00               	movlw	0
  3153  002636  6E51               	movwf	_cdc_rx_len,c
  3154                           
  3155                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  3156  002638  5044               	movf	_CDCDataOutHandle,w,c
  3157  00263A  1045               	iorwf	_CDCDataOutHandle+1,w,c
  3158  00263C  B4D8               	btfsc	status,2,c
  3159  00263E  D00E               	goto	l4948
  3160  002640  C044  FFD9         	movff	_CDCDataOutHandle,fsr2l
  3161  002644  C045  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  3162  002648  AEDF               	btfss	indf2,7,c
  3163  00264A  D003               	goto	u4030
  3164  00264C  6A2D               	clrf	??_getsUSBUSART& (0+255),c
  3165  00264E  2A2D               	incf	??_getsUSBUSART& (0+255),f,c
  3166  002650  D001               	goto	u4038
  3167  002652                     u4030:
  3168  002652  6A2D               	clrf	??_getsUSBUSART& (0+255),c
  3169  002654                     u4038:
  3170  002654  502D               	movf	??_getsUSBUSART,w,c
  3171  002656  6E2E               	movwf	_getsUSBUSART$1647,c
  3172  002658  6A2F               	clrf	_getsUSBUSART$1647+1,c
  3173  00265A  D005               	goto	l4950
  3174  00265C                     l4948:
  3175  00265C  0E00               	movlw	0
  3176  00265E  6E2F               	movwf	_getsUSBUSART$1647+1,c
  3177  002660  0E00               	movlw	0
  3178  002662  6E2E               	movwf	_getsUSBUSART$1647,c
  3179  002664  D000               	goto	l4950
  3180  002666                     l4950:
  3181  002666  502E               	movf	_getsUSBUSART$1647,w,c
  3182  002668  102F               	iorwf	_getsUSBUSART$1647+1,w,c
  3183  00266A  A4D8               	btfss	status,2,c
  3184  00266C  D03E               	goto	l4966
  3185                           
  3186                           ;usb_device_cdc.c: 547: {
  3187                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3188  00266E  EE20 F001          	lfsr	2,1
  3189  002672  5044               	movf	_CDCDataOutHandle,w,c
  3190  002674  26D9               	addwf	fsr2l,f,c
  3191  002676  5045               	movf	_CDCDataOutHandle+1,w,c
  3192  002678  22DA               	addwfc	fsr2h,f,c
  3193  00267A  502C               	movf	getsUSBUSART@len,w,c
  3194  00267C  5CDE               	subwf	postinc2,w,c
  3195  00267E  B0D8               	btfsc	status,0,c
  3196  002680  D009               	goto	l4956
  3197                           
  3198                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3199  002682  EE20 F001          	lfsr	2,1
  3200  002686  5044               	movf	_CDCDataOutHandle,w,c
  3201  002688  26D9               	addwf	fsr2l,f,c
  3202  00268A  5045               	movf	_CDCDataOutHandle+1,w,c
  3203  00268C  22DA               	addwfc	fsr2h,f,c
  3204  00268E  50DF               	movf	indf2,w,c
  3205  002690  6E2C               	movwf	getsUSBUSART@len,c
  3206  002692  D000               	goto	l4956
  3207  002694                     l4956:
  3208                           
  3209                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3210  002694  0E00               	movlw	0
  3211  002696  6E51               	movwf	_cdc_rx_len,c
  3212  002698  D014               	goto	l4962
  3213  00269A                     l4958:
  3214                           
  3215                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3216  00269A  5051               	movf	_cdc_rx_len,w,c
  3217  00269C  0D01               	mullw	1
  3218  00269E  0E40               	movlw	64
  3219  0026A0  24F3               	addwf	prodl,w,c
  3220  0026A2  6ED9               	movwf	fsr2l,c
  3221  0026A4  0E05               	movlw	5
  3222  0026A6  20F4               	addwfc	prodh,w,c
  3223  0026A8  6EDA               	movwf	fsr2h,c
  3224  0026AA  5051               	movf	_cdc_rx_len,w,c
  3225  0026AC  0D01               	mullw	1
  3226  0026AE  50F3               	movf	prodl,w,c
  3227  0026B0  242A               	addwf	getsUSBUSART@buffer,w,c
  3228  0026B2  6EE1               	movwf	fsr1l,c
  3229  0026B4  50F4               	movf	prodh,w,c
  3230  0026B6  202B               	addwfc	getsUSBUSART@buffer+1,w,c
  3231  0026B8  6EE2               	movwf	fsr1h,c
  3232  0026BA  CFDF FFE7          	movff	indf2,indf1
  3233  0026BE  2A51               	incf	_cdc_rx_len,f,c
  3234  0026C0  D000               	goto	l4962
  3235  0026C2                     l4962:
  3236  0026C2  502C               	movf	getsUSBUSART@len,w,c
  3237  0026C4  5C51               	subwf	_cdc_rx_len,w,c
  3238  0026C6  A0D8               	btfss	status,0,c
  3239  0026C8  D7E8               	goto	l4958
  3240                           
  3241                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3242  0026CA  0E00               	movlw	0
  3243  0026CC  6E23               	movwf	USBTransferOnePacket@dir,c
  3244  0026CE  0E40               	movlw	64
  3245  0026D0  6E24               	movwf	USBTransferOnePacket@data,c
  3246  0026D2  0E05               	movlw	5
  3247  0026D4  6E25               	movwf	USBTransferOnePacket@data+1,c
  3248  0026D6  0E40               	movlw	64
  3249  0026D8  6E26               	movwf	USBTransferOnePacket@len,c
  3250  0026DA  0E02               	movlw	2
  3251  0026DC  EC5C  F012         	call	_USBTransferOnePacket
  3252  0026E0  C023  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  3253  0026E4  C024  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  3254  0026E8  D000               	goto	l4966
  3255  0026EA                     l4966:
  3256                           
  3257                           ;usb_device_cdc.c: 567: }
  3258                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  3259  0026EA  5051               	movf	_cdc_rx_len,w,c
  3260  0026EC  0012               	return	
  3261  0026EE  0012               	return		;funcret
  3262  0026F0                     __end_of_getsUSBUSART:
  3263                           	opt stack 0
  3264                           tblptru	equ	0xFF8
  3265                           tblptrh	equ	0xFF7
  3266                           tblptrl	equ	0xFF6
  3267                           tablat	equ	0xFF5
  3268                           prodh	equ	0xFF4
  3269                           prodl	equ	0xFF3
  3270                           intcon	equ	0xFF2
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           indf1	equ	0xFE7
  3274                           postdec1	equ	0xFE5
  3275                           fsr1h	equ	0xFE2
  3276                           fsr1l	equ	0xFE1
  3277                           indf2	equ	0xFDF
  3278                           postinc2	equ	0xFDE
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _comm_send_rply *****************
  3284 ;; Defined at:
  3285 ;;		line 20 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  cc              1    wreg     unsigned char 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  cc              1   46[COMRAM] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;		None               void
  3292 ;; Registers used:
  3293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3299 ;;      Params:         0       0       0       0       0       0       0       0       0
  3300 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3302 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3303 ;;Total ram usage:        1 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    6
  3306 ;; This function calls:
  3307 ;;		_CDCTxService
  3308 ;;		_putUSBUSART
  3309 ;; This function is called by:
  3310 ;;		_ProcessCDC
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text5
  3315  002F2C                     __ptext5:
  3316                           	opt stack 0
  3317  002F2C                     _comm_send_rply:
  3318                           	opt stack 22
  3319                           
  3320                           ;incstack = 0
  3321                           ;comm_send_rply@cc stored from wreg
  3322  002F2C  6E2F               	movwf	comm_send_rply@cc,c
  3323                           
  3324                           ;comm.c: 22: CDCBufferOut[0x00] = 0x55;
  3325  002F2E  0E55               	movlw	85
  3326  002F30  0101               	movlb	1	; () banked
  3327  002F32  6F40               	movwf	_CDCBufferOut& (0+255),b
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;comm.c: 23: CDCBufferOut[0x01] = cc;
  3331  002F34  C02F  F141         	movff	comm_send_rply@cc,_CDCBufferOut+1
  3332                           
  3333                           ; BSR set to: 1
  3334                           ;comm.c: 24: CDCBufferOut[0x03] = 0x00;
  3335  002F38  0E00               	movlw	0
  3336  002F3A  0101               	movlb	1	; () banked
  3337  002F3C  6F43               	movwf	(_CDCBufferOut+3)& (0+255),b
  3338                           
  3339                           ; BSR set to: 1
  3340                           ;comm.c: 25: CDCBufferOut[0x02] = CDCBufferOut[0x00] ^ CDCBufferOut[0x01] ^ CDCBufferOut
      +                          [0x03];
  3341  002F3E  0101               	movlb	1	; () banked
  3342  002F40  5141               	movf	(_CDCBufferOut+1)& (0+255),w,b
  3343  002F42  0101               	movlb	1	; () banked
  3344  002F44  1943               	xorwf	(_CDCBufferOut+3)& (0+255),w,b
  3345  002F46  0101               	movlb	1	; () banked
  3346  002F48  1940               	xorwf	_CDCBufferOut& (0+255),w,b
  3347  002F4A  0101               	movlb	1	; () banked
  3348  002F4C  6F42               	movwf	(_CDCBufferOut+2)& (0+255),b
  3349                           
  3350                           ;comm.c: 27: while (!(cdc_trf_state == 0)) CDCTxService();
  3351  002F4E  D003               	goto	l5050
  3352  002F50                     l5048:
  3353  002F50  EC8A  F00B         	call	_CDCTxService	;wreg free
  3354  002F54  D000               	goto	l5050
  3355  002F56                     l5050:
  3356  002F56  5052               	movf	_cdc_trf_state,w,c
  3357  002F58  A4D8               	btfss	status,2,c
  3358  002F5A  D7FA               	goto	l5048
  3359                           
  3360                           ;comm.c: 29: if((cdc_trf_state == 0)) {
  3361  002F5C  5052               	movf	_cdc_trf_state,w,c
  3362  002F5E  A4D8               	btfss	status,2,c
  3363  002F60  D009               	goto	l5056
  3364                           
  3365                           ;comm.c: 30: putUSBUSART(CDCBufferOut, 4);
  3366  002F62  0E40               	movlw	low _CDCBufferOut
  3367  002F64  6E23               	movwf	putUSBUSART@data,c
  3368  002F66  0E01               	movlw	high _CDCBufferOut
  3369  002F68  6E24               	movwf	putUSBUSART@data+1,c
  3370  002F6A  0E04               	movlw	4
  3371  002F6C  6E25               	movwf	putUSBUSART@length,c
  3372  002F6E  EC48  F019         	call	_putUSBUSART	;wreg free
  3373                           
  3374                           ;comm.c: 31: } else {
  3375  002F72  0012               	return	
  3376  002F74                     l5056:
  3377                           
  3378                           ;comm.c: 32: txmiss_count++;
  3379  002F74  0100               	movlb	0	; () banked
  3380  002F76  4B90               	infsnz	_txmiss_count& (0+255),f,b
  3381  002F78  2B91               	incf	(_txmiss_count+1)& (0+255),f,b
  3382  002F7A  0012               	return	
  3383                           
  3384                           ; BSR set to: 0
  3385  002F7C  0012               	return		;funcret
  3386  002F7E                     __end_of_comm_send_rply:
  3387                           	opt stack 0
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           prodh	equ	0xFF4
  3393                           prodl	equ	0xFF3
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           indf1	equ	0xFE7
  3398                           postdec1	equ	0xFE5
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           postinc2	equ	0xFDE
  3403                           fsr2h	equ	0xFDA
  3404                           fsr2l	equ	0xFD9
  3405                           status	equ	0xFD8
  3406                           
  3407 ;; *************** function _comm_send_dat *****************
  3408 ;; Defined at:
  3409 ;;		line 36 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  len             1    wreg     unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  len             1   47[COMRAM] unsigned char 
  3414 ;;  i               1   46[COMRAM] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;		None               void
  3417 ;; Registers used:
  3418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0
  3425 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3427 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3428 ;;Total ram usage:        2 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    6
  3431 ;; This function calls:
  3432 ;;		_CDCTxService
  3433 ;;		_putUSBUSART
  3434 ;; This function is called by:
  3435 ;;		_ProcessCDC
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text6
  3440  002AAA                     __ptext6:
  3441                           	opt stack 0
  3442  002AAA                     _comm_send_dat:
  3443                           	opt stack 22
  3444                           
  3445                           ;incstack = 0
  3446                           ;comm_send_dat@len stored from wreg
  3447  002AAA  6E30               	movwf	comm_send_dat@len,c
  3448                           
  3449                           ;comm.c: 38: unsigned char i;
  3450                           ;comm.c: 39: if (len >60) {
  3451  002AAC  0E3C               	movlw	60
  3452  002AAE  6430               	cpfsgt	comm_send_dat@len,c
  3453  002AB0  D002               	goto	l912
  3454                           
  3455                           ;comm.c: 40: len = 60;
  3456  002AB2  0E3C               	movlw	60
  3457  002AB4  6E30               	movwf	comm_send_dat@len,c
  3458  002AB6                     l912:
  3459                           
  3460                           ;comm.c: 41: }
  3461                           ;comm.c: 43: CDCBufferOut[0x00] = 0x55;
  3462  002AB6  0E55               	movlw	85
  3463  002AB8  0101               	movlb	1	; () banked
  3464  002ABA  6F40               	movwf	_CDCBufferOut& (0+255),b
  3465                           
  3466                           ;comm.c: 44: CDCBufferOut[0x01] = 0x20;
  3467  002ABC  0E20               	movlw	32
  3468  002ABE  0101               	movlb	1	; () banked
  3469  002AC0  6F41               	movwf	(_CDCBufferOut+1)& (0+255),b
  3470                           
  3471                           ; BSR set to: 1
  3472                           ;comm.c: 45: CDCBufferOut[0x03] = len;
  3473  002AC2  C030  F143         	movff	comm_send_dat@len,_CDCBufferOut+3
  3474                           
  3475                           ; BSR set to: 1
  3476                           ;comm.c: 47: len+=4;
  3477  002AC6  0E04               	movlw	4
  3478  002AC8  2630               	addwf	comm_send_dat@len,f,c
  3479                           
  3480                           ; BSR set to: 1
  3481                           ;comm.c: 49: CDCBufferOut[0x02] = 0;
  3482  002ACA  0E00               	movlw	0
  3483  002ACC  0101               	movlb	1	; () banked
  3484  002ACE  6F42               	movwf	(_CDCBufferOut+2)& (0+255),b
  3485                           
  3486                           ; BSR set to: 1
  3487                           ;comm.c: 50: for (i = 0 ; i < len; i++) {
  3488  002AD0  0E00               	movlw	0
  3489  002AD2  6E2F               	movwf	comm_send_dat@i,c
  3490  002AD4  D012               	goto	l5076
  3491  002AD6                     l5070:
  3492                           
  3493                           ;comm.c: 51: if (i != 0x02) {
  3494  002AD6  0E02               	movlw	2
  3495  002AD8  182F               	xorwf	comm_send_dat@i,w,c
  3496  002ADA  B4D8               	btfsc	status,2,c
  3497  002ADC  D00C               	goto	l5074
  3498                           
  3499                           ;comm.c: 52: CDCBufferOut[0x02] ^= CDCBufferOut[i];
  3500  002ADE  502F               	movf	comm_send_dat@i,w,c
  3501  002AE0  0D01               	mullw	1
  3502  002AE2  0E40               	movlw	low _CDCBufferOut
  3503  002AE4  24F3               	addwf	prodl,w,c
  3504  002AE6  6ED9               	movwf	fsr2l,c
  3505  002AE8  0E01               	movlw	high _CDCBufferOut
  3506  002AEA  20F4               	addwfc	prodh,w,c
  3507  002AEC  6EDA               	movwf	fsr2h,c
  3508  002AEE  50DF               	movf	indf2,w,c
  3509  002AF0  0101               	movlb	1	; () banked
  3510  002AF2  1B42               	xorwf	(_CDCBufferOut+2)& (0+255),f,b
  3511  002AF4  D000               	goto	l5074
  3512  002AF6                     l5074:
  3513  002AF6  2A2F               	incf	comm_send_dat@i,f,c
  3514  002AF8  D000               	goto	l5076
  3515  002AFA                     l5076:
  3516  002AFA  5030               	movf	comm_send_dat@len,w,c
  3517  002AFC  5C2F               	subwf	comm_send_dat@i,w,c
  3518  002AFE  B0D8               	btfsc	status,0,c
  3519  002B00  D005               	goto	l5080
  3520  002B02  D7E9               	goto	l5070
  3521                           
  3522                           ;comm.c: 53: }
  3523                           ;comm.c: 54: }
  3524                           ;comm.c: 56: while (!(cdc_trf_state == 0)) CDCTxService();
  3525  002B04  D003               	goto	l5080
  3526  002B06                     l5078:
  3527  002B06  EC8A  F00B         	call	_CDCTxService	;wreg free
  3528  002B0A  D000               	goto	l5080
  3529  002B0C                     l5080:
  3530  002B0C  5052               	movf	_cdc_trf_state,w,c
  3531  002B0E  A4D8               	btfss	status,2,c
  3532  002B10  D7FA               	goto	l5078
  3533                           
  3534                           ;comm.c: 58: if((cdc_trf_state == 0)) {
  3535  002B12  5052               	movf	_cdc_trf_state,w,c
  3536  002B14  A4D8               	btfss	status,2,c
  3537  002B16  D009               	goto	l5086
  3538                           
  3539                           ;comm.c: 59: putUSBUSART(CDCBufferOut, len);
  3540  002B18  0E40               	movlw	low _CDCBufferOut
  3541  002B1A  6E23               	movwf	putUSBUSART@data,c
  3542  002B1C  0E01               	movlw	high _CDCBufferOut
  3543  002B1E  6E24               	movwf	putUSBUSART@data+1,c
  3544  002B20  C030  F025         	movff	comm_send_dat@len,putUSBUSART@length
  3545  002B24  EC48  F019         	call	_putUSBUSART	;wreg free
  3546                           
  3547                           ;comm.c: 60: } else {
  3548  002B28  0012               	return	
  3549  002B2A                     l5086:
  3550                           
  3551                           ;comm.c: 61: txmiss_count++;
  3552  002B2A  0100               	movlb	0	; () banked
  3553  002B2C  4B90               	infsnz	_txmiss_count& (0+255),f,b
  3554  002B2E  2B91               	incf	(_txmiss_count+1)& (0+255),f,b
  3555  002B30  0012               	return	
  3556                           
  3557                           ; BSR set to: 0
  3558  002B32  0012               	return		;funcret
  3559  002B34                     __end_of_comm_send_dat:
  3560                           	opt stack 0
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           prodh	equ	0xFF4
  3566                           prodl	equ	0xFF3
  3567                           intcon	equ	0xFF2
  3568                           postinc0	equ	0xFEE
  3569                           wreg	equ	0xFE8
  3570                           indf1	equ	0xFE7
  3571                           postdec1	equ	0xFE5
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           indf2	equ	0xFDF
  3575                           postinc2	equ	0xFDE
  3576                           fsr2h	equ	0xFDA
  3577                           fsr2l	equ	0xFD9
  3578                           status	equ	0xFD8
  3579                           
  3580 ;; *************** function _putUSBUSART *****************
  3581 ;; Defined at:
  3582 ;;		line 613 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  data            2   34[COMRAM] PTR unsigned char 
  3585 ;;		 -> CDCBufferOut(64), 
  3586 ;;  length          1   36[COMRAM] unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;		None               void
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3598 ;;      Params:         3       0       0       0       0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3601 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3602 ;;Total ram usage:        3 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    4
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_comm_send_rply
  3609 ;;		_comm_send_dat
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text7
  3614  003290                     __ptext7:
  3615                           	opt stack 0
  3616  003290                     _putUSBUSART:
  3617                           	opt stack 23
  3618                           
  3619                           ;usb_device_cdc.c: 638: ;
  3620                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  3621                           
  3622                           ;incstack = 0
  3623  003290  5052               	movf	_cdc_trf_state,w,c
  3624  003292  A4D8               	btfss	status,2,c
  3625  003294  0012               	return	
  3626                           
  3627                           ;usb_device_cdc.c: 640: {
  3628                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3629  003296  C023  F085         	movff	putUSBUSART@data,_pCDCSrc
  3630  00329A  C024  F086         	movff	putUSBUSART@data+1,_pCDCSrc+1
  3631  00329E  C025  F053         	movff	putUSBUSART@length,_cdc_tx_len
  3632  0032A2  0E01               	movlw	1
  3633  0032A4  0100               	movlb	0	; () banked
  3634  0032A6  6F99               	movwf	_cdc_mem_type& (0+255),b
  3635                           
  3636                           ; BSR set to: 0
  3637  0032A8  0E01               	movlw	1
  3638  0032AA  6E52               	movwf	_cdc_trf_state,c
  3639  0032AC  0012               	return	
  3640                           
  3641                           ; BSR set to: 0
  3642  0032AE  0012               	return		;funcret
  3643  0032B0                     __end_of_putUSBUSART:
  3644                           	opt stack 0
  3645                           tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           prodh	equ	0xFF4
  3650                           prodl	equ	0xFF3
  3651                           intcon	equ	0xFF2
  3652                           postinc0	equ	0xFEE
  3653                           wreg	equ	0xFE8
  3654                           indf1	equ	0xFE7
  3655                           postdec1	equ	0xFE5
  3656                           fsr1h	equ	0xFE2
  3657                           fsr1l	equ	0xFE1
  3658                           indf2	equ	0xFDF
  3659                           postinc2	equ	0xFDE
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function _CDCTxService *****************
  3665 ;; Defined at:
  3666 ;;		line 893 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  byte_to_send    1   45[COMRAM] unsigned char 
  3671 ;;  i               1   44[COMRAM] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;		None               void
  3674 ;; Registers used:
  3675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0
  3682 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3683 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3684 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3685 ;;Total ram usage:        5 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    5
  3688 ;; This function calls:
  3689 ;;		_USBTransferOnePacket
  3690 ;; This function is called by:
  3691 ;;		_ProcessIO
  3692 ;;		_comm_send_rply
  3693 ;;		_comm_send_dat
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text8
  3698  001714                     __ptext8:
  3699                           	opt stack 0
  3700  001714                     _CDCTxService:
  3701                           	opt stack 22
  3702                           
  3703                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  3704                           ;usb_device_cdc.c: 896: uint8_t i;
  3705                           ;usb_device_cdc.c: 898: ;
  3706                           ;usb_device_cdc.c: 900: {};
  3707                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  3708                           
  3709                           ;incstack = 0
  3710  001714  0100               	movlb	0	; () banked
  3711  001716  5188               	movf	_CDCDataInHandle& (0+255),w,b
  3712  001718  0100               	movlb	0	; () banked
  3713  00171A  1189               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3714  00171C  B4D8               	btfsc	status,2,c
  3715  00171E  D00F               	goto	l4598
  3716                           
  3717                           ; BSR set to: 0
  3718  001720  C088  FFD9         	movff	_CDCDataInHandle,fsr2l
  3719  001724  C089  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3720  001728  0100               	movlb	0	; () banked
  3721  00172A  AEDF               	btfss	indf2,7,c
  3722  00172C  D003               	goto	u3440
  3723  00172E  6A2A               	clrf	??_CDCTxService& (0+255),c
  3724  001730  2A2A               	incf	??_CDCTxService& (0+255),f,c
  3725  001732  D001               	goto	u3448
  3726  001734                     u3440:
  3727  001734  6A2A               	clrf	??_CDCTxService& (0+255),c
  3728  001736                     u3448:
  3729  001736  502A               	movf	??_CDCTxService,w,c
  3730  001738  6E2B               	movwf	_CDCTxService$1695,c
  3731  00173A  6A2C               	clrf	_CDCTxService$1695+1,c
  3732  00173C  D005               	goto	l4600
  3733  00173E                     l4598:
  3734  00173E  0E00               	movlw	0
  3735  001740  6E2C               	movwf	_CDCTxService$1695+1,c
  3736  001742  0E00               	movlw	0
  3737  001744  6E2B               	movwf	_CDCTxService$1695,c
  3738  001746  D000               	goto	l4600
  3739  001748                     l4600:
  3740  001748  502B               	movf	_CDCTxService$1695,w,c
  3741  00174A  102C               	iorwf	_CDCTxService$1695+1,w,c
  3742  00174C  A4D8               	btfss	status,2,c
  3743  00174E  0012               	return	
  3744  001750  D001               	goto	l4604
  3745                           
  3746                           ;usb_device_cdc.c: 903: {
  3747                           ;usb_device_cdc.c: 904: ;
  3748                           ;usb_device_cdc.c: 905: return;
  3749  001752  0012               	return	
  3750  001754                     l4604:
  3751                           
  3752                           ;usb_device_cdc.c: 906: }
  3753                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  3754  001754  0E03               	movlw	3
  3755  001756  1852               	xorwf	_cdc_trf_state,w,c
  3756  001758  A4D8               	btfss	status,2,c
  3757  00175A  D002               	goto	l482
  3758                           
  3759                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  3760  00175C  0E00               	movlw	0
  3761  00175E  6E52               	movwf	_cdc_trf_state,c
  3762  001760                     l482:
  3763                           
  3764                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  3765  001760  5052               	movf	_cdc_trf_state,w,c
  3766  001762  B4D8               	btfsc	status,2,c
  3767  001764  0012               	return	
  3768  001766  D001               	goto	l4610
  3769                           
  3770                           ;usb_device_cdc.c: 920: {
  3771                           ;usb_device_cdc.c: 921: ;
  3772                           ;usb_device_cdc.c: 922: return;
  3773  001768  0012               	return	
  3774  00176A                     l4610:
  3775                           
  3776                           ;usb_device_cdc.c: 923: }
  3777                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  3778  00176A  0E02               	movlw	2
  3779  00176C  1852               	xorwf	_cdc_trf_state,w,c
  3780  00176E  A4D8               	btfss	status,2,c
  3781  001770  D012               	goto	l4616
  3782                           
  3783                           ;usb_device_cdc.c: 929: {
  3784                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3785  001772  0E01               	movlw	1
  3786  001774  6E23               	movwf	USBTransferOnePacket@dir,c
  3787  001776  0E00               	movlw	0
  3788  001778  6E24               	movwf	USBTransferOnePacket@data,c
  3789  00177A  0E00               	movlw	0
  3790  00177C  6E25               	movwf	USBTransferOnePacket@data+1,c
  3791  00177E  0E00               	movlw	0
  3792  001780  6E26               	movwf	USBTransferOnePacket@len,c
  3793  001782  0E02               	movlw	2
  3794  001784  EC5C  F012         	call	_USBTransferOnePacket
  3795  001788  C023  F088         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3796  00178C  C024  F089         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3797                           
  3798                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  3799  001790  0E03               	movlw	3
  3800  001792  6E52               	movwf	_cdc_trf_state,c
  3801                           
  3802                           ;usb_device_cdc.c: 933: }
  3803  001794  0012               	return	
  3804  001796                     l4616:
  3805                           
  3806                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  3807  001796  0452               	decf	_cdc_trf_state,w,c
  3808  001798  A4D8               	btfss	status,2,c
  3809  00179A  0012               	return	
  3810                           
  3811                           ;usb_device_cdc.c: 935: {
  3812                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  3813  00179C  0E40               	movlw	64
  3814  00179E  6453               	cpfsgt	_cdc_tx_len,c
  3815  0017A0  D003               	goto	l487
  3816                           
  3817                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  3818  0017A2  0E40               	movlw	64
  3819  0017A4  6E2E               	movwf	CDCTxService@byte_to_send,c
  3820  0017A6  D003               	goto	l4622
  3821  0017A8                     l487:
  3822                           
  3823                           ;usb_device_cdc.c: 941: else
  3824                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  3825  0017A8  C053  F02E         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3826  0017AC  D000               	goto	l4622
  3827  0017AE                     l4622:
  3828                           
  3829                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  3830  0017AE  502E               	movf	CDCTxService@byte_to_send,w,c
  3831  0017B0  0800               	sublw	0
  3832  0017B2  2453               	addwf	_cdc_tx_len,w,c
  3833  0017B4  6E53               	movwf	_cdc_tx_len,c
  3834                           
  3835                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3836  0017B6  0E00               	movlw	0
  3837  0017B8  0100               	movlb	0	; () banked
  3838  0017BA  6F82               	movwf	_pCDCDst& (0+255),b
  3839  0017BC  0E05               	movlw	5
  3840  0017BE  0100               	movlb	0	; () banked
  3841  0017C0  6F83               	movwf	(_pCDCDst+1)& (0+255),b
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;usb_device_cdc.c: 951: i = byte_to_send;
  3845  0017C2  C02E  F02D         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  3849  0017C6  0100               	movlb	0	; () banked
  3850  0017C8  5199               	movf	_cdc_mem_type& (0+255),w,b
  3851  0017CA  B4D8               	btfsc	status,2,c
  3852  0017CC  D014               	goto	l4638
  3853  0017CE  D02B               	goto	l4648
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;usb_device_cdc.c: 953: {
  3857                           ;usb_device_cdc.c: 954: while(i)
  3858  0017D0  D012               	goto	l4638
  3859  0017D2                     l4630:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;usb_device_cdc.c: 955: {
  3863                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  3864  0017D2  C085  FFD9         	movff	_pCDCSrc,fsr2l
  3865  0017D6  C086  FFDA         	movff	_pCDCSrc+1,fsr2h
  3866  0017DA  C082  FFE1         	movff	_pCDCDst,fsr1l
  3867  0017DE  C083  FFE2         	movff	_pCDCDst+1,fsr1h
  3868  0017E2  CFDF FFE7          	movff	indf2,indf1
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  3872  0017E6  0100               	movlb	0	; () banked
  3873  0017E8  4B82               	infsnz	_pCDCDst& (0+255),f,b
  3874  0017EA  2B83               	incf	(_pCDCDst+1)& (0+255),f,b
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  3878  0017EC  0100               	movlb	0	; () banked
  3879  0017EE  4B85               	infsnz	_pCDCSrc& (0+255),f,b
  3880  0017F0  2B86               	incf	(_pCDCSrc+1)& (0+255),f,b
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;usb_device_cdc.c: 959: i--;
  3884  0017F2  062D               	decf	CDCTxService@i,f,c
  3885  0017F4  D000               	goto	l4638
  3886  0017F6                     l4638:
  3887                           
  3888                           ; BSR set to: 0
  3889  0017F6  502D               	movf	CDCTxService@i,w,c
  3890  0017F8  B4D8               	btfsc	status,2,c
  3891  0017FA  D01A               	goto	l4650
  3892  0017FC  D7EA               	goto	l4630
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;usb_device_cdc.c: 960: }
  3896                           ;usb_device_cdc.c: 961: }
  3897  0017FE  D018               	goto	l4650
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;usb_device_cdc.c: 962: else
  3901                           ;usb_device_cdc.c: 963: {
  3902                           ;usb_device_cdc.c: 964: while(i)
  3903  001800  D012               	goto	l4648
  3904  001802                     l4640:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;usb_device_cdc.c: 965: {
  3908                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  3909  001802  C085  FFD9         	movff	_pCDCSrc,fsr2l
  3910  001806  C086  FFDA         	movff	_pCDCSrc+1,fsr2h
  3911  00180A  C082  FFE1         	movff	_pCDCDst,fsr1l
  3912  00180E  C083  FFE2         	movff	_pCDCDst+1,fsr1h
  3913  001812  CFDF FFE7          	movff	indf2,indf1
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  3917  001816  0100               	movlb	0	; () banked
  3918  001818  4B82               	infsnz	_pCDCDst& (0+255),f,b
  3919  00181A  2B83               	incf	(_pCDCDst+1)& (0+255),f,b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  3923  00181C  0100               	movlb	0	; () banked
  3924  00181E  4B85               	infsnz	_pCDCSrc& (0+255),f,b
  3925  001820  2B86               	incf	(_pCDCSrc+1)& (0+255),f,b
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;usb_device_cdc.c: 969: i--;
  3929  001822  062D               	decf	CDCTxService@i,f,c
  3930  001824  D000               	goto	l4648
  3931  001826                     l4648:
  3932                           
  3933                           ; BSR set to: 0
  3934  001826  502D               	movf	CDCTxService@i,w,c
  3935  001828  B4D8               	btfsc	status,2,c
  3936  00182A  D002               	goto	l4650
  3937  00182C  D7EA               	goto	l4640
  3938                           
  3939                           ; BSR set to: 0
  3940  00182E  D000               	goto	l4650
  3941  001830                     l4650:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;usb_device_cdc.c: 970: }
  3945                           ;usb_device_cdc.c: 971: }
  3946                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  3947  001830  5053               	movf	_cdc_tx_len,w,c
  3948  001832  A4D8               	btfss	status,2,c
  3949  001834  D009               	goto	l4658
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;usb_device_cdc.c: 978: {
  3953                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  3954  001836  0E40               	movlw	64
  3955  001838  182E               	xorwf	CDCTxService@byte_to_send,w,c
  3956  00183A  A4D8               	btfss	status,2,c
  3957  00183C  D002               	goto	l4656
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  3961  00183E  0E02               	movlw	2
  3962  001840  D001               	goto	L1
  3963  001842                     l4656:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;usb_device_cdc.c: 981: else
  3967                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  3968  001842  0E03               	movlw	3
  3969  001844                     L1:
  3970  001844  6E52               	movwf	_cdc_trf_state,c
  3971                           
  3972                           ; BSR set to: 0
  3973  001846  D000               	goto	l4658
  3974  001848                     l4658:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;usb_device_cdc.c: 983: }
  3978                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3979  001848  0E01               	movlw	1
  3980  00184A  6E23               	movwf	USBTransferOnePacket@dir,c
  3981  00184C  0E00               	movlw	0
  3982  00184E  6E24               	movwf	USBTransferOnePacket@data,c
  3983  001850  0E05               	movlw	5
  3984  001852  6E25               	movwf	USBTransferOnePacket@data+1,c
  3985  001854  C02E  F026         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3986  001858  0E02               	movlw	2
  3987  00185A  EC5C  F012         	call	_USBTransferOnePacket
  3988  00185E  C023  F088         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3989  001862  C024  F089         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3990  001866  0012               	return	
  3991  001868  0012               	return		;funcret
  3992  00186A                     __end_of_CDCTxService:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           prodh	equ	0xFF4
  3999                           prodl	equ	0xFF3
  4000                           intcon	equ	0xFF2
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           indf1	equ	0xFE7
  4004                           postdec1	equ	0xFE5
  4005                           fsr1h	equ	0xFE2
  4006                           fsr1l	equ	0xFE1
  4007                           indf2	equ	0xFDF
  4008                           postinc2	equ	0xFDE
  4009                           fsr2h	equ	0xFDA
  4010                           fsr2l	equ	0xFD9
  4011                           status	equ	0xFD8
  4012                           
  4013 ;; *************** function _Write_b_eep *****************
  4014 ;; Defined at:
  4015 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\write_B.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  badd            2   34[COMRAM] unsigned int 
  4018 ;;  bdat            1   36[COMRAM] unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  GIE_BIT_VAL     1   37[COMRAM] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;		None               void
  4023 ;; Registers used:
  4024 ;;		wreg, status,2
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4030 ;;      Params:         3       0       0       0       0       0       0       0       0
  4031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4033 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4034 ;;Total ram usage:        4 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    4
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_ProcessCDC
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text9
  4045  003046                     __ptext9:
  4046                           	opt stack 0
  4047  003046                     _Write_b_eep:
  4048                           	opt stack 24
  4049                           
  4050                           ;incstack = 0
  4051  003046  0E00               	movlw	0
  4052  003048  6E26               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4053  00304A  C023  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  4054  00304E  C025  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  4055  003052  9EA6               	bcf	4006,7,c	;volatile
  4056  003054  9CA6               	bcf	4006,6,c	;volatile
  4057  003056  84A6               	bsf	4006,2,c	;volatile
  4058  003058  0E00               	movlw	0
  4059  00305A  BEF2               	btfsc	intcon,7,c	;volatile
  4060  00305C  0E01               	movlw	1
  4061  00305E  6E26               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4062  003060  9EF2               	bcf	intcon,7,c	;volatile
  4063  003062  0E55               	movlw	85
  4064  003064  6EA7               	movwf	4007,c	;volatile
  4065  003066  0EAA               	movlw	170
  4066  003068  6EA7               	movwf	4007,c	;volatile
  4067  00306A  82A6               	bsf	4006,1,c	;volatile
  4068  00306C  D000               	goto	l1109
  4069  00306E                     l1109:
  4070  00306E  B2A6               	btfsc	4006,1,c	;volatile
  4071  003070  D7FE               	goto	l1109
  4072  003072  B026               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  4073  003074  D002               	bra	u4255
  4074  003076  9EF2               	bcf	intcon,7,c	;volatile
  4075  003078  D001               	bra	u4256
  4076  00307A                     u4255:
  4077  00307A  8EF2               	bsf	intcon,7,c	;volatile
  4078  00307C                     u4256:
  4079  00307C  94A6               	bcf	4006,2,c	;volatile
  4080  00307E  0012               	return		;funcret
  4081  003080                     __end_of_Write_b_eep:
  4082                           	opt stack 0
  4083                           tblptru	equ	0xFF8
  4084                           tblptrh	equ	0xFF7
  4085                           tblptrl	equ	0xFF6
  4086                           tablat	equ	0xFF5
  4087                           prodh	equ	0xFF4
  4088                           prodl	equ	0xFF3
  4089                           intcon	equ	0xFF2
  4090                           postinc0	equ	0xFEE
  4091                           wreg	equ	0xFE8
  4092                           indf1	equ	0xFE7
  4093                           postdec1	equ	0xFE5
  4094                           fsr1h	equ	0xFE2
  4095                           fsr1l	equ	0xFE1
  4096                           indf2	equ	0xFDF
  4097                           postinc2	equ	0xFDE
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function _USBDeviceTasks *****************
  4103 ;; Defined at:
  4104 ;;		line 489 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  i               1    2[BANK0 ] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;		None               void
  4111 ;; Registers used:
  4112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0
  4119 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4121 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4122 ;;Total ram usage:        1 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:   12
  4125 ;; This function calls:
  4126 ;;		_USBClearUSBInterrupt
  4127 ;;		_USBCtrlEPAllowStatusStage
  4128 ;;		_USBCtrlEPService
  4129 ;;		_USBDeviceInit
  4130 ;;		_USBStallHandler
  4131 ;;		_USBSuspend
  4132 ;;		_USBWakeFromSuspend
  4133 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4134 ;; This function is called by:
  4135 ;;		_ProcessIO
  4136 ;;		_ProcessCDC
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text10
  4141  000FEC                     __ptext10:
  4142                           	opt stack 0
  4143  000FEC                     _USBDeviceTasks:
  4144                           	opt stack 17
  4145                           
  4146                           ;usb_device.c: 491: uint8_t i;
  4147                           ;usb_device.c: 517: if (PORTCbits.RC6 != 1)
  4148                           
  4149                           ;incstack = 0
  4150  000FEC  BC82               	btfsc	3970,6,c	;volatile
  4151  000FEE  D012               	goto	l4820
  4152                           
  4153                           ;usb_device.c: 518: {
  4154                           ;usb_device.c: 520: *U1CON_R = 0;
  4155  000FF0  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4156  000FF4  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4157  000FF8  0E00               	movlw	0
  4158  000FFA  6EDF               	movwf	indf2,c
  4159                           
  4160                           ;usb_device.c: 523: *U1IE_R = 0;
  4161  000FFC  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4162  001000  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4163  001004  0E00               	movlw	0
  4164  001006  6EDF               	movwf	indf2,c
  4165                           
  4166                           ;usb_device.c: 526: USBDeviceState = DETACHED_STATE;
  4167  001008  0E00               	movlw	0
  4168  00100A  0100               	movlb	0	; () banked
  4169  00100C  6F97               	movwf	_USBDeviceState& (0+255),b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;usb_device.c: 554: USBClearUSBInterrupt();
  4173  00100E  EC5A  F018         	call	_USBClearUSBInterrupt	;wreg free
  4174                           
  4175                           ;usb_device.c: 555: return;
  4176  001012  0012               	return	
  4177  001014                     l4820:
  4178                           
  4179                           ;usb_device.c: 556: }
  4180                           ;usb_device.c: 578: if(USBDeviceState == DETACHED_STATE)
  4181  001014  0100               	movlb	0	; () banked
  4182  001016  5197               	movf	_USBDeviceState& (0+255),w,b
  4183  001018  A4D8               	btfss	status,2,c
  4184  00101A  D02E               	goto	l4834
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;usb_device.c: 579: {
  4188                           ;usb_device.c: 581: *U1CON_R = 0;
  4189  00101C  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4190  001020  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4191  001024  0E00               	movlw	0
  4192  001026  6EDF               	movwf	indf2,c
  4193                           
  4194                           ;usb_device.c: 584: *U1IE_R = 0;
  4195  001028  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4196  00102C  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4197  001030  0E00               	movlw	0
  4198  001032  6EDF               	movwf	indf2,c
  4199                           
  4200                           ;usb_device.c: 588: { *U1CNFG1_R = 0x10 | 0x00 | 0x04 | 0x02; *U1EIE_R = 0x9F; UIE = 0x3
      +                          9 | 0x40 | 0x02; };
  4201  001034  C0CB  FFD9         	movff	_U1CNFG1_R,fsr2l
  4202  001038  C0CC  FFDA         	movff	_U1CNFG1_R+1,fsr2h
  4203  00103C  0E16               	movlw	22
  4204  00103E  6EDF               	movwf	indf2,c
  4205  001040  C0CF  FFD9         	movff	_U1EIE_R,fsr2l
  4206  001044  C0D0  FFDA         	movff	_U1EIE_R+1,fsr2h
  4207  001048  0E9F               	movlw	159
  4208  00104A  6EDF               	movwf	indf2,c
  4209                           
  4210                           ; BSR set to: 0
  4211  00104C  0E7B               	movlw	123
  4212  00104E  6E64               	movwf	3940,c	;volatile
  4213                           
  4214                           ;usb_device.c: 591: while(!(*U1CON_R & 0x08)){
  4215  001050  D008               	goto	l4830
  4216  001052                     l4826:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;usb_device.c: 592: *U1CON_R |= 0x08;
  4220  001052  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4221  001056  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4222  00105A  0E00               	movlw	0
  4223  00105C  86DB               	bsf	plusw2,3,c
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;usb_device.c: 593: LATCbits.LATC2 = !LATCbits.LATC2;;
  4227  00105E  748B               	btg	3979,2,c	;volatile
  4228  001060  D000               	goto	l4830
  4229  001062                     l4830:
  4230                           
  4231                           ; BSR set to: 0
  4232  001062  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4233  001066  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4234  00106A  0100               	movlb	0	; () banked
  4235  00106C  A6DF               	btfss	indf2,3,c
  4236  00106E  D7F1               	goto	l4826
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;usb_device.c: 594: }
  4240                           ;usb_device.c: 597: USBDeviceState = ATTACHED_STATE;
  4241                           
  4242                           ; BSR set to: 0
  4243  001070  0E01               	movlw	1
  4244  001072  0100               	movlb	0	; () banked
  4245  001074  6F97               	movwf	_USBDeviceState& (0+255),b
  4246  001076  D000               	goto	l4834
  4247  001078                     l4834:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;usb_device.c: 602: }
  4251                           ;usb_device.c: 605: if(USBDeviceState == ATTACHED_STATE)
  4252  001078  0100               	movlb	0	; () banked
  4253  00107A  0597               	decf	_USBDeviceState& (0+255),w,b
  4254  00107C  B4D8               	btfsc	status,2,c
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;usb_device.c: 606: {
  4258                           ;usb_device.c: 616: if(!UCONbits.SE0)
  4259  00107E  BA60               	btfsc	3936,5,c	;volatile
  4260  001080  D012               	goto	l4846
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;usb_device.c: 617: {
  4264                           ;usb_device.c: 618: {*U1IR_R = 0;};
  4265  001082  C0D7  FFD9         	movff	_U1IR_R,fsr2l
  4266  001086  C0D8  FFDA         	movff	_U1IR_R+1,fsr2h
  4267  00108A  0E00               	movlw	0
  4268  00108C  6EDF               	movwf	indf2,c
  4269                           
  4270                           ;usb_device.c: 620: *U1IE_R=0;
  4271  00108E  C0D5  FFD9         	movff	_U1IE_R,fsr2l
  4272  001092  C0D6  FFDA         	movff	_U1IE_R+1,fsr2h
  4273  001096  0E00               	movlw	0
  4274  001098  6EDF               	movwf	indf2,c
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;usb_device.c: 622: UIEbits.URSTIE = 1;
  4278  00109A  8064               	bsf	3940,0,c	;volatile
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;usb_device.c: 623: UIEbits.IDLEIE = 1;
  4282  00109C  8864               	bsf	3940,4,c	;volatile
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;usb_device.c: 624: USBDeviceState = POWERED_STATE;
  4286  00109E  0E02               	movlw	2
  4287  0010A0  0100               	movlb	0	; () banked
  4288  0010A2  6F97               	movwf	_USBDeviceState& (0+255),b
  4289                           
  4290                           ; BSR set to: 0
  4291  0010A4  D000               	goto	l4846
  4292  0010A6                     l4846:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;usb_device.c: 625: }
  4296                           ;usb_device.c: 626: }
  4297                           ;usb_device.c: 642: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4298  0010A6  B465               	btfsc	3941,2,c	;volatile
  4299                           
  4300                           ; BSR set to: 0
  4301  0010A8  A464               	btfss	3940,2,c	;volatile
  4302  0010AA  D004               	goto	l4854
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;usb_device.c: 643: {
  4306                           ;usb_device.c: 644: (UIR &= 0xFB);
  4307  0010AC  9465               	bcf	3941,2,c	;volatile
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;usb_device.c: 648: USBWakeFromSuspend();
  4311  0010AE  EC05  F018         	call	_USBWakeFromSuspend	;wreg free
  4312  0010B2  D000               	goto	l4854
  4313  0010B4                     l4854:
  4314                           
  4315                           ;usb_device.c: 650: }
  4316                           ;usb_device.c: 655: if(UCONbits.SUSPND==1)
  4317  0010B4  A260               	btfss	3936,1,c	;volatile
  4318  0010B6  D003               	goto	l150
  4319                           
  4320                           ;usb_device.c: 656: {
  4321                           ;usb_device.c: 657: USBClearUSBInterrupt();
  4322  0010B8  EC5A  F018         	call	_USBClearUSBInterrupt	;wreg free
  4323                           
  4324                           ;usb_device.c: 658: return;
  4325  0010BC  0012               	return	
  4326  0010BE                     l150:
  4327                           
  4328                           ;usb_device.c: 659: }
  4329                           ;usb_device.c: 671: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4330  0010BE  B065               	btfsc	3941,0,c	;volatile
  4331  0010C0  A064               	btfss	3940,0,c	;volatile
  4332  0010C2  D007               	goto	l4868
  4333                           
  4334                           ;usb_device.c: 672: {
  4335                           ;usb_device.c: 673: USBDeviceInit();
  4336  0010C4  ECD2  F00A         	call	_USBDeviceInit	;wreg free
  4337                           
  4338                           ;usb_device.c: 677: ;
  4339                           ;usb_device.c: 679: USBDeviceState = DEFAULT_STATE;
  4340  0010C8  0E04               	movlw	4
  4341  0010CA  0100               	movlb	0	; () banked
  4342  0010CC  6F97               	movwf	_USBDeviceState& (0+255),b
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;usb_device.c: 689: (UIR &= 0xFE);
  4346  0010CE  9065               	bcf	3941,0,c	;volatile
  4347  0010D0  D000               	goto	l4868
  4348  0010D2                     l4868:
  4349                           
  4350                           ;usb_device.c: 690: }
  4351                           ;usb_device.c: 695: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4352  0010D2  B865               	btfsc	3941,4,c	;volatile
  4353  0010D4  A864               	btfss	3940,4,c	;volatile
  4354  0010D6  D004               	goto	l4876
  4355                           
  4356                           ;usb_device.c: 696: {
  4357                           ;usb_device.c: 701: USBSuspend();
  4358  0010D8  EC40  F018         	call	_USBSuspend	;wreg free
  4359                           
  4360                           ;usb_device.c: 704: (UIR &= 0xEF);
  4361  0010DC  9865               	bcf	3941,4,c	;volatile
  4362  0010DE  D000               	goto	l4876
  4363  0010E0                     l4876:
  4364                           
  4365                           ;usb_device.c: 705: }
  4366                           ;usb_device.c: 707: if(UIRbits.SOFIF)
  4367  0010E0  AC65               	btfss	3941,6,c	;volatile
  4368  0010E2  D020               	goto	l4892
  4369                           
  4370                           ;usb_device.c: 708: {
  4371                           ;usb_device.c: 709: if(UIEbits.SOFIE)
  4372  0010E4  AC64               	btfss	3940,6,c	;volatile
  4373  0010E6  D00F               	goto	l4882
  4374                           
  4375                           ;usb_device.c: 710: {
  4376                           ;usb_device.c: 711: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4377  0010E8  0E00               	movlw	0
  4378  0010EA  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4379  0010EC  0E73               	movlw	115
  4380  0010EE  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4381  0010F0  0E00               	movlw	0
  4382  0010F2  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4383  0010F4  0E00               	movlw	0
  4384  0010F6  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4385  0010F8  0E00               	movlw	0
  4386  0010FA  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4387  0010FC  0E01               	movlw	1
  4388  0010FE  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4389  001100  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4390  001104  D000               	goto	l4882
  4391  001106                     l4882:
  4392                           
  4393                           ;usb_device.c: 712: }
  4394                           ;usb_device.c: 713: (UIR &= 0xBF);
  4395  001106  9C65               	bcf	3941,6,c	;volatile
  4396                           
  4397                           ;usb_device.c: 738: if(USBStatusStageTimeoutCounter != 0u)
  4398  001108  0100               	movlb	0	; () banked
  4399  00110A  5198               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  4400  00110C  B4D8               	btfsc	status,2,c
  4401  00110E  D003               	goto	l4888
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;usb_device.c: 739: {
  4405                           ;usb_device.c: 740: USBStatusStageTimeoutCounter--;
  4406  001110  0100               	movlb	0	; () banked
  4407  001112  0798               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  4408  001114  D000               	goto	l4888
  4409  001116                     l4888:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;usb_device.c: 741: }
  4413                           ;usb_device.c: 747: if(USBStatusStageTimeoutCounter == 0)
  4414  001116  0100               	movlb	0	; () banked
  4415  001118  5198               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  4416  00111A  A4D8               	btfss	status,2,c
  4417  00111C  D003               	goto	l4892
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;usb_device.c: 748: {
  4421                           ;usb_device.c: 749: USBCtrlEPAllowStatusStage();
  4422  00111E  EC96  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4423  001122  D000               	goto	l4892
  4424  001124                     l4892:
  4425                           
  4426                           ;usb_device.c: 750: }
  4427                           ;usb_device.c: 752: }
  4428                           ;usb_device.c: 754: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4429  001124  BA65               	btfsc	3941,5,c	;volatile
  4430  001126  AA64               	btfss	3940,5,c	;volatile
  4431  001128  D003               	goto	l4898
  4432                           
  4433                           ;usb_device.c: 755: {
  4434                           ;usb_device.c: 756: USBStallHandler();
  4435  00112A  EC3F  F017         	call	_USBStallHandler	;wreg free
  4436  00112E  D000               	goto	l4898
  4437  001130                     l4898:
  4438                           
  4439                           ;usb_device.c: 757: }
  4440                           ;usb_device.c: 759: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4441  001130  B265               	btfsc	3941,1,c	;volatile
  4442  001132  A264               	btfss	3940,1,c	;volatile
  4443  001134  D014               	goto	l4906
  4444                           
  4445                           ;usb_device.c: 760: {
  4446                           ;usb_device.c: 761: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4447  001136  0E7F               	movlw	127
  4448  001138  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4449  00113A  682F               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4450  00113C  0E00               	movlw	0
  4451  00113E  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4452  001140  0E00               	movlw	0
  4453  001142  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4454  001144  0E00               	movlw	0
  4455  001146  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4456  001148  0E01               	movlw	1
  4457  00114A  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4458  00114C  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4459                           
  4460                           ;usb_device.c: 762: {*U1EIR_R = 0;};
  4461  001150  C0D1  FFD9         	movff	_U1EIR_R,fsr2l
  4462  001154  C0D2  FFDA         	movff	_U1EIR_R+1,fsr2h
  4463  001158  0E00               	movlw	0
  4464  00115A  6EDF               	movwf	indf2,c
  4465  00115C  D000               	goto	l4906
  4466  00115E                     l4906:
  4467                           
  4468                           ;usb_device.c: 770: }
  4469                           ;usb_device.c: 777: if(USBDeviceState < DEFAULT_STATE)
  4470  00115E  0E04               	movlw	4
  4471  001160  0100               	movlb	0	; () banked
  4472  001162  6197               	cpfslt	_USBDeviceState& (0+255),b
  4473  001164  D003               	goto	l159
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;usb_device.c: 778: {
  4477                           ;usb_device.c: 779: USBClearUSBInterrupt();
  4478  001166  EC5A  F018         	call	_USBClearUSBInterrupt	;wreg free
  4479                           
  4480                           ;usb_device.c: 780: return;
  4481  00116A  0012               	return	
  4482  00116C                     l159:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;usb_device.c: 781: }
  4486                           ;usb_device.c: 786: if(UIEbits.TRNIE)
  4487  00116C  A664               	btfss	3940,3,c	;volatile
  4488  00116E  D04C               	goto	l4940
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;usb_device.c: 787: {
  4492                           ;usb_device.c: 788: for(i = 0; i < 4u; i++)
  4493  001170  0E00               	movlw	0
  4494  001172  0100               	movlb	0	; () banked
  4495  001174  6FE0               	movwf	USBDeviceTasks@i& (0+255),b
  4496  001176                     l4914:
  4497                           
  4498                           ; BSR set to: 0
  4499  001176  0E03               	movlw	3
  4500  001178  0100               	movlb	0	; () banked
  4501  00117A  65E0               	cpfsgt	USBDeviceTasks@i& (0+255),b
  4502  00117C  D001               	goto	l161
  4503                           
  4504                           ; BSR set to: 0
  4505  00117E  D044               	goto	l4940
  4506  001180                     l161:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;usb_device.c: 789: {
  4510                           ;usb_device.c: 790: if(UIRbits.TRNIF)
  4511  001180  A665               	btfss	3941,3,c	;volatile
  4512  001182  D042               	goto	l4940
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;usb_device.c: 791: {
  4516                           ;usb_device.c: 793: USTATcopy.Val = *U1STAT_R;
  4517  001184  C0D9  FFD9         	movff	_U1STAT_R,fsr2l
  4518  001188  C0DA  FFDA         	movff	_U1STAT_R+1,fsr2h
  4519  00118C  50DF               	movf	indf2,w,c
  4520  00118E  0100               	movlb	0	; () banked
  4521  001190  6FB4               	movwf	_USTATcopy& (0+255),b
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;usb_device.c: 794: endpoint_number = USTATcopy.endpoint_number;
  4525  001192  0100               	movlb	0	; () banked
  4526  001194  31B4               	rrcf	_USTATcopy& (0+255),w,b
  4527  001196  32E8               	rrcf	wreg,f,c
  4528  001198  32E8               	rrcf	wreg,f,c
  4529  00119A  0B0F               	andlw	15
  4530  00119C  0100               	movlb	0	; () banked
  4531  00119E  6F9B               	movwf	_endpoint_number& (0+255),b
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;usb_device.c: 796: (UIR &= 0xF7);
  4535  0011A0  9665               	bcf	3941,3,c	;volatile
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;usb_device.c: 801: if(USTATcopy.direction == 0)
  4539  0011A2  0100               	movlb	0	; () banked
  4540  0011A4  B5B4               	btfsc	_USTATcopy& (0+255),2,b
  4541  0011A6  D008               	goto	l4928
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;usb_device.c: 802: {
  4545                           ;usb_device.c: 803: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4546  0011A8  0100               	movlb	0	; () banked
  4547  0011AA  519B               	movf	_endpoint_number& (0+255),w,b
  4548  0011AC  0D01               	mullw	1
  4549  0011AE  0E7F               	movlw	low _ep_data_out
  4550  0011B0  24F3               	addwf	prodl,w,c
  4551  0011B2  6ED9               	movwf	fsr2l,c
  4552  0011B4  0E00               	movlw	high _ep_data_out
  4553  0011B6  D007               	goto	L2
  4554  0011B8                     l4928:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;usb_device.c: 805: else
  4558                           ;usb_device.c: 806: {
  4559                           ;usb_device.c: 807: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4560  0011B8  0100               	movlb	0	; () banked
  4561  0011BA  519B               	movf	_endpoint_number& (0+255),w,b
  4562  0011BC  0D01               	mullw	1
  4563  0011BE  0E7C               	movlw	low _ep_data_in
  4564  0011C0  24F3               	addwf	prodl,w,c
  4565  0011C2  6ED9               	movwf	fsr2l,c
  4566  0011C4  0E00               	movlw	high _ep_data_in
  4567  0011C6                     L2:
  4568  0011C6  20F4               	addwfc	prodh,w,c
  4569  0011C8  6EDA               	movwf	fsr2h,c
  4570  0011CA  0100               	movlb	0	; () banked
  4571  0011CC  70DF               	btg	indf2,0,c
  4572  0011CE  D000               	goto	l4930
  4573  0011D0                     l4930:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;usb_device.c: 808: }
  4577                           ;usb_device.c: 813: if(endpoint_number == 0)
  4578  0011D0  0100               	movlb	0	; () banked
  4579  0011D2  519B               	movf	_endpoint_number& (0+255),w,b
  4580  0011D4  0100               	movlb	0	; () banked
  4581  0011D6  A4D8               	btfss	status,2,c
  4582  0011D8  D003               	goto	l4934
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;usb_device.c: 814: {
  4586                           ;usb_device.c: 815: USBCtrlEPService();
  4587  0011DA  ECBD  F010         	call	_USBCtrlEPService	;wreg free
  4588                           
  4589                           ;usb_device.c: 816: }
  4590  0011DE  D010               	goto	l4936
  4591  0011E0                     l4934:
  4592                           
  4593                           ;usb_device.c: 817: else
  4594                           ;usb_device.c: 818: {
  4595                           ;usb_device.c: 819: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4596  0011E0  0E00               	movlw	0
  4597  0011E2  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4598  0011E4  0E72               	movlw	114
  4599  0011E6  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4600  0011E8  0EB4               	movlw	low _USTATcopy
  4601  0011EA  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4602  0011EC  0E00               	movlw	high _USTATcopy
  4603  0011EE  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4604  0011F0  0E00               	movlw	0
  4605  0011F2  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4606  0011F4  0E00               	movlw	0
  4607  0011F6  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4608  0011F8  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4609                           
  4610                           ;usb_device.c: 820: }
  4611                           ;usb_device.c: 821: }
  4612  0011FC  D001               	goto	l4936
  4613                           
  4614                           ;usb_device.c: 822: else
  4615                           ;usb_device.c: 823: {
  4616                           ;usb_device.c: 824: break;
  4617  0011FE  D004               	goto	l4940
  4618  001200                     l4936:
  4619  001200  0100               	movlb	0	; () banked
  4620  001202  2BE0               	incf	USBDeviceTasks@i& (0+255),f,b
  4621  001204  D7B8               	goto	l4914
  4622                           
  4623                           ; BSR set to: 0
  4624                           
  4625                           ; BSR set to: 0
  4626  001206  D000               	goto	l4940
  4627  001208                     l4940:
  4628                           
  4629                           ;usb_device.c: 825: }
  4630                           ;usb_device.c: 826: }
  4631                           ;usb_device.c: 827: }
  4632                           ;usb_device.c: 829: USBClearUSBInterrupt();
  4633  001208  EC5A  F018         	call	_USBClearUSBInterrupt	;wreg free
  4634  00120C  0012               	return		;funcret
  4635  00120E                     __end_of_USBDeviceTasks:
  4636                           	opt stack 0
  4637                           tblptru	equ	0xFF8
  4638                           tblptrh	equ	0xFF7
  4639                           tblptrl	equ	0xFF6
  4640                           tablat	equ	0xFF5
  4641                           prodh	equ	0xFF4
  4642                           prodl	equ	0xFF3
  4643                           intcon	equ	0xFF2
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           indf1	equ	0xFE7
  4647                           postdec1	equ	0xFE5
  4648                           fsr1h	equ	0xFE2
  4649                           fsr1l	equ	0xFE1
  4650                           indf2	equ	0xFDF
  4651                           postinc2	equ	0xFDE
  4652                           plusw2	equ	0xFDB
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _USBWakeFromSuspend *****************
  4658 ;; Defined at:
  4659 ;;		line 2305 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;		None               void
  4666 ;; Registers used:
  4667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    8
  4680 ;; This function calls:
  4681 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4682 ;; This function is called by:
  4683 ;;		_USBDeviceTasks
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text11
  4688  00300A                     __ptext11:
  4689                           	opt stack 0
  4690  00300A                     _USBWakeFromSuspend:
  4691                           	opt stack 20
  4692                           
  4693                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
  4694                           
  4695                           ;incstack = 0
  4696  00300A  0E00               	movlw	0
  4697  00300C  0100               	movlb	0	; () banked
  4698  00300E  6F96               	movwf	_USBBusIsSuspended& (0+255),b
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4702  003010  0E00               	movlw	0
  4703  003012  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4704  003014  0E74               	movlw	116
  4705  003016  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4706  003018  0E00               	movlw	0
  4707  00301A  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4708  00301C  0E00               	movlw	0
  4709  00301E  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4710  003020  0E00               	movlw	0
  4711  003022  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4712  003024  0E00               	movlw	0
  4713  003026  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4714  003028  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4715                           
  4716                           ;usb_device.c: 2320: *U1CON_R &= 0xFD;
  4717  00302C  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4718  003030  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4719  003034  0EFD               	movlw	253
  4720  003036  16DF               	andwf	indf2,f,c
  4721                           
  4722                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
  4723  003038  9464               	bcf	3940,2,c	;volatile
  4724                           
  4725                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
  4726  00303A  D002               	goto	l4522
  4727  00303C                     l4520:
  4728                           
  4729                           ;usb_device.c: 2345: {
  4730                           ;usb_device.c: 2346: (UIR &= 0xFB);
  4731  00303C  9465               	bcf	3941,2,c	;volatile
  4732  00303E  D000               	goto	l4522
  4733  003040                     l4522:
  4734  003040  B465               	btfsc	3941,2,c	;volatile
  4735  003042  D7FC               	goto	l4520
  4736  003044  0012               	return		;funcret
  4737  003046                     __end_of_USBWakeFromSuspend:
  4738                           	opt stack 0
  4739                           tblptru	equ	0xFF8
  4740                           tblptrh	equ	0xFF7
  4741                           tblptrl	equ	0xFF6
  4742                           tablat	equ	0xFF5
  4743                           prodh	equ	0xFF4
  4744                           prodl	equ	0xFF3
  4745                           intcon	equ	0xFF2
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           indf1	equ	0xFE7
  4749                           postdec1	equ	0xFE5
  4750                           fsr1h	equ	0xFE2
  4751                           fsr1l	equ	0xFE1
  4752                           indf2	equ	0xFDF
  4753                           postinc2	equ	0xFDE
  4754                           plusw2	equ	0xFDB
  4755                           fsr2h	equ	0xFDA
  4756                           fsr2l	equ	0xFD9
  4757                           status	equ	0xFD8
  4758                           
  4759 ;; *************** function _USBSuspend *****************
  4760 ;; Defined at:
  4761 ;;		line 2248 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4778 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    8
  4782 ;; This function calls:
  4783 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4784 ;; This function is called by:
  4785 ;;		_USBDeviceTasks
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text12
  4790  003080                     __ptext12:
  4791                           	opt stack 0
  4792  003080                     _USBSuspend:
  4793                           	opt stack 20
  4794                           
  4795                           ;usb_device.c: 2273: UIEbits.ACTVIE = 1;
  4796                           
  4797                           ;incstack = 0
  4798  003080  8464               	bsf	3940,2,c	;volatile
  4799                           
  4800                           ;usb_device.c: 2274: (UIR &= 0xEF);
  4801  003082  9865               	bcf	3941,4,c	;volatile
  4802                           
  4803                           ;usb_device.c: 2277: *U1CON_R |= 0x02;
  4804  003084  C0CD  FFD9         	movff	_U1CON_R,fsr2l
  4805  003088  C0CE  FFDA         	movff	_U1CON_R+1,fsr2h
  4806  00308C  0E00               	movlw	0
  4807  00308E  82DB               	bsf	plusw2,1,c
  4808                           
  4809                           ;usb_device.c: 2280: USBBusIsSuspended = 1;
  4810  003090  0E01               	movlw	1
  4811  003092  0100               	movlb	0	; () banked
  4812  003094  6F96               	movwf	_USBBusIsSuspended& (0+255),b
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4816  003096  0E00               	movlw	0
  4817  003098  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4818  00309A  0E75               	movlw	117
  4819  00309C  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4820  00309E  0E00               	movlw	0
  4821  0030A0  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4822  0030A2  0E00               	movlw	0
  4823  0030A4  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4824  0030A6  0E00               	movlw	0
  4825  0030A8  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4826  0030AA  0E00               	movlw	0
  4827  0030AC  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4828  0030AE  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4829  0030B2  0012               	return		;funcret
  4830  0030B4                     __end_of_USBSuspend:
  4831                           	opt stack 0
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           postinc0	equ	0xFEE
  4840                           wreg	equ	0xFE8
  4841                           indf1	equ	0xFE7
  4842                           postdec1	equ	0xFE5
  4843                           fsr1h	equ	0xFE2
  4844                           fsr1l	equ	0xFE1
  4845                           indf2	equ	0xFDF
  4846                           postinc2	equ	0xFDE
  4847                           plusw2	equ	0xFDB
  4848                           fsr2h	equ	0xFDA
  4849                           fsr2l	equ	0xFD9
  4850                           status	equ	0xFD8
  4851                           
  4852 ;; *************** function _USBStallHandler *****************
  4853 ;; Defined at:
  4854 ;;		line 2205 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;		None               void
  4861 ;; Registers used:
  4862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4870 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4871 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:        1 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    4
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_USBDeviceTasks
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text13
  4883  002E7E                     __ptext13:
  4884                           	opt stack 0
  4885  002E7E                     _USBStallHandler:
  4886                           	opt stack 24
  4887                           
  4888                           ;usb_device.c: 2217: if(*U1EP0_R & 0x01)
  4889                           
  4890                           ;incstack = 0
  4891  002E7E  C05D  FFD9         	movff	_U1EP0_R,fsr2l
  4892  002E82  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
  4893  002E86  A0DF               	btfss	indf2,0,c
  4894  002E88  D024               	goto	l4546
  4895                           
  4896                           ;usb_device.c: 2218: {
  4897                           ;usb_device.c: 2220: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4898  002E8A  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4899  002E8E  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4900  002E92  0E80               	movlw	128
  4901  002E94  18DE               	xorwf	postinc2,w,c
  4902  002E96  A4D8               	btfss	status,2,c
  4903  002E98  D015               	goto	l4544
  4904  002E9A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  4905  002E9E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  4906  002EA2  0E84               	movlw	132
  4907  002EA4  18DE               	xorwf	postinc2,w,c
  4908  002EA6  A4D8               	btfss	status,2,c
  4909  002EA8  D00D               	goto	l4544
  4910                           
  4911                           ;usb_device.c: 2221: {
  4912                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4913  002EAA  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4914  002EAE  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4915  002EB2  0E0C               	movlw	12
  4916  002EB4  6EDF               	movwf	indf2,c
  4917                           
  4918                           ;usb_device.c: 2224: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4919  002EB6  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4920  002EBA  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4921  002EBE  0E00               	movlw	0
  4922  002EC0  8EDB               	bsf	plusw2,7,c
  4923  002EC2  D000               	goto	l4544
  4924  002EC4                     l4544:
  4925                           
  4926                           ;usb_device.c: 2225: }
  4927                           ;usb_device.c: 2226: *U1EP0_R &= 0xFE;
  4928  002EC4  C05D  FFD9         	movff	_U1EP0_R,fsr2l
  4929  002EC8  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
  4930  002ECC  0EFE               	movlw	254
  4931  002ECE  16DF               	andwf	indf2,f,c
  4932  002ED0  D000               	goto	l4546
  4933  002ED2                     l4546:
  4934                           
  4935                           ;usb_device.c: 2227: }
  4936                           ;usb_device.c: 2229: (UIR &= 0xDF);
  4937  002ED2  9A65               	bcf	3941,5,c	;volatile
  4938  002ED4  0012               	return		;funcret
  4939  002ED6                     __end_of_USBStallHandler:
  4940                           	opt stack 0
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           prodh	equ	0xFF4
  4946                           prodl	equ	0xFF3
  4947                           intcon	equ	0xFF2
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           indf1	equ	0xFE7
  4951                           postdec1	equ	0xFE5
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           plusw2	equ	0xFDB
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function _USBCtrlEPService *****************
  4962 ;; Defined at:
  4963 ;;		line 2372 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  setup_cnt       1   60[COMRAM] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;		None               void
  4970 ;; Registers used:
  4971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0
  4978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4979 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4980 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4981 ;;Total ram usage:        3 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:   11
  4984 ;; This function calls:
  4985 ;;		_USBCtrlTrfInHandler
  4986 ;;		_USBCtrlTrfOutHandler
  4987 ;;		_USBCtrlTrfSetupHandler
  4988 ;; This function is called by:
  4989 ;;		_USBDeviceTasks
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text14
  4994  00217A                     __ptext14:
  4995                           	opt stack 0
  4996  00217A                     _USBCtrlEPService:
  4997                           	opt stack 17
  4998                           
  4999                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5000                           
  5001                           ;incstack = 0
  5002  00217A  0E2D               	movlw	45
  5003  00217C  0100               	movlb	0	; () banked
  5004  00217E  6F98               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5008  002180  C0B4  F0DE         	movff	_USTATcopy,??_USBCtrlEPService
  5009  002184  0EFD               	movlw	253
  5010  002186  0100               	movlb	0	; () banked
  5011  002188  17DE               	andwf	??_USBCtrlEPService& (0+255),f,b
  5012  00218A  A4D8               	btfss	status,2,c
  5013  00218C  D05A               	goto	l4580
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;usb_device.c: 2383: {
  5017                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5018  00218E  C0B4  F0DE         	movff	_USTATcopy,??_USBCtrlEPService
  5019  002192  0100               	movlb	0	; () banked
  5020  002194  90D8               	bcf	status,0,c
  5021  002196  33DE               	rrcf	??_USBCtrlEPService& (0+255),f,b
  5022  002198  0E3F               	movlw	63
  5023  00219A  0100               	movlb	0	; () banked
  5024  00219C  17DE               	andwf	??_USBCtrlEPService& (0+255),f,b
  5025  00219E  0100               	movlb	0	; () banked
  5026  0021A0  51DE               	movf	??_USBCtrlEPService& (0+255),w,b
  5027  0021A2  0D04               	mullw	4
  5028  0021A4  0E00               	movlw	0
  5029  0021A6  24F3               	addwf	prodl,w,c
  5030  0021A8  6E46               	movwf	_pBDTEntryEP0OutCurrent,c
  5031  0021AA  0E04               	movlw	4
  5032  0021AC  20F4               	addwfc	prodh,w,c
  5033  0021AE  6E47               	movwf	_pBDTEntryEP0OutCurrent+1,c
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5037  0021B0  C046  F048         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  5038  0021B4  C047  F049         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;usb_device.c: 2396: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5042  0021B8  0E04               	movlw	4
  5043  0021BA  1A48               	xorwf	_pBDTEntryEP0OutNext,f,c
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5047  0021BC  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5048  0021C0  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5049  0021C4  30DF               	rrcf	indf2,w,c
  5050  0021C6  32E8               	rrcf	wreg,f,c
  5051  0021C8  0B0F               	andlw	15
  5052  0021CA  0A0D               	xorlw	13
  5053  0021CC  A4D8               	btfss	status,2,c
  5054  0021CE  D036               	goto	l4578
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;usb_device.c: 2400: {
  5058                           ;usb_device.c: 2401: unsigned char setup_cnt;
  5059                           ;usb_device.c: 2407: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5060  0021D0  0E00               	movlw	0
  5061  0021D2  6E3D               	movwf	USBCtrlEPService@setup_cnt,c
  5062  0021D4                     l4562:
  5063                           
  5064                           ; BSR set to: 0
  5065  0021D4  0E07               	movlw	7
  5066  0021D6  643D               	cpfsgt	USBCtrlEPService@setup_cnt,c
  5067  0021D8  D001               	goto	l4566
  5068                           
  5069                           ; BSR set to: 0
  5070  0021DA  D023               	goto	l4574
  5071  0021DC                     l4566:
  5072                           
  5073                           ;usb_device.c: 2408: {
  5074                           ;usb_device.c: 2409: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  5075  0021DC  EE20 F002          	lfsr	2,2
  5076  0021E0  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5077  0021E2  26D9               	addwf	fsr2l,f,c
  5078  0021E4  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5079  0021E6  22DA               	addwfc	fsr2h,f,c
  5080  0021E8  CFDE F0DE          	movff	postinc2,??_USBCtrlEPService
  5081  0021EC  CFDD F0DF          	movff	postdec2,??_USBCtrlEPService+1
  5082  0021F0  C0DE  FFD9         	movff	??_USBCtrlEPService,fsr2l
  5083  0021F4  C0DF  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
  5084  0021F8  503D               	movf	USBCtrlEPService@setup_cnt,w,c
  5085  0021FA  0D01               	mullw	1
  5086  0021FC  0E30               	movlw	48
  5087  0021FE  24F3               	addwf	prodl,w,c
  5088  002200  6EE1               	movwf	fsr1l,c
  5089  002202  0E04               	movlw	4
  5090  002204  20F4               	addwfc	prodh,w,c
  5091  002206  6EE2               	movwf	fsr1h,c
  5092  002208  CFDF FFE7          	movff	indf2,indf1
  5093                           
  5094                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR++;
  5095  00220C  EE20 F002          	lfsr	2,2
  5096  002210  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5097  002212  26D9               	addwf	fsr2l,f,c
  5098  002214  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5099  002216  22DA               	addwfc	fsr2h,f,c
  5100  002218  2ADE               	incf	postinc2,f,c
  5101  00221A  0E00               	movlw	0
  5102  00221C  22DD               	addwfc	postdec2,f,c
  5103  00221E  2A3D               	incf	USBCtrlEPService@setup_cnt,f,c
  5104  002220  D7D9               	goto	l4562
  5105  002222                     l4574:
  5106                           
  5107                           ;usb_device.c: 2411: }
  5108                           ;usb_device.c: 2412: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  5109  002222  EE20 F002          	lfsr	2,2
  5110  002226  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  5111  002228  26D9               	addwf	fsr2l,f,c
  5112  00222A  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  5113  00222C  22DA               	addwfc	fsr2h,f,c
  5114  00222E  0E30               	movlw	48
  5115  002230  6EDE               	movwf	postinc2,c
  5116  002232  0E04               	movlw	4
  5117  002234  6EDD               	movwf	postdec2,c
  5118                           
  5119                           ;usb_device.c: 2415: USBCtrlTrfSetupHandler();
  5120  002236  EC9A  F015         	call	_USBCtrlTrfSetupHandler	;wreg free
  5121                           
  5122                           ;usb_device.c: 2416: }
  5123  00223A  0012               	return	
  5124  00223C                     l4578:
  5125                           
  5126                           ;usb_device.c: 2417: else
  5127                           ;usb_device.c: 2418: {
  5128                           ;usb_device.c: 2420: USBCtrlTrfOutHandler();
  5129  00223C  EC81  F016         	call	_USBCtrlTrfOutHandler	;wreg free
  5130                           
  5131                           ;usb_device.c: 2421: }
  5132                           ;usb_device.c: 2422: }
  5133  002240  0012               	return	
  5134  002242                     l4580:
  5135                           
  5136                           ;usb_device.c: 2423: else if((USTATcopy.Val & ~0x02) == 0x04)
  5137  002242  0100               	movlb	0	; () banked
  5138  002244  51B4               	movf	_USTATcopy& (0+255),w,b
  5139  002246  0BFD               	andlw	253
  5140  002248  0A04               	xorlw	4
  5141  00224A  A4D8               	btfss	status,2,c
  5142  00224C  0012               	return	
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;usb_device.c: 2424: {
  5146                           ;usb_device.c: 2427: USBCtrlTrfInHandler();
  5147  00224E  EC2B  F011         	call	_USBCtrlTrfInHandler	;wreg free
  5148  002252  0012               	return	
  5149  002254  0012               	return		;funcret
  5150  002256                     __end_of_USBCtrlEPService:
  5151                           	opt stack 0
  5152                           tblptru	equ	0xFF8
  5153                           tblptrh	equ	0xFF7
  5154                           tblptrl	equ	0xFF6
  5155                           tablat	equ	0xFF5
  5156                           prodh	equ	0xFF4
  5157                           prodl	equ	0xFF3
  5158                           intcon	equ	0xFF2
  5159                           postinc0	equ	0xFEE
  5160                           wreg	equ	0xFE8
  5161                           indf1	equ	0xFE7
  5162                           postdec1	equ	0xFE5
  5163                           fsr1h	equ	0xFE2
  5164                           fsr1l	equ	0xFE1
  5165                           indf2	equ	0xFDF
  5166                           postinc2	equ	0xFDE
  5167                           postdec2	equ	0xFDD
  5168                           plusw2	equ	0xFDB
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5174 ;; Defined at:
  5175 ;;		line 2472 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;		None               void
  5182 ;; Registers used:
  5183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5192 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:   10
  5196 ;; This function calls:
  5197 ;;		_USBCheckStdRequest
  5198 ;;		_USBCtrlEPServiceComplete
  5199 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5200 ;; This function is called by:
  5201 ;;		_USBCtrlEPService
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text15
  5206  002B34                     __ptext15:
  5207                           	opt stack 0
  5208  002B34                     _USBCtrlTrfSetupHandler:
  5209                           	opt stack 17
  5210                           
  5211                           ;usb_device.c: 2477: shortPacketStatus = 0;
  5212                           
  5213                           ;incstack = 0
  5214  002B34  0E00               	movlw	0
  5215  002B36  6E55               	movwf	_shortPacketStatus,c
  5216                           
  5217                           ;usb_device.c: 2478: USBDeferStatusStagePacket = 0;
  5218  002B38  0E00               	movlw	0
  5219  002B3A  6E4E               	movwf	_USBDeferStatusStagePacket,c	;volatile
  5220                           
  5221                           ;usb_device.c: 2479: USBDeferINDataStagePackets = 0;
  5222  002B3C  0E00               	movlw	0
  5223  002B3E  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5224                           
  5225                           ;usb_device.c: 2480: USBDeferOUTDataStagePackets = 0;
  5226  002B40  0E00               	movlw	0
  5227  002B42  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5228                           
  5229                           ;usb_device.c: 2481: BothEP0OutUOWNsSet = 0;
  5230  002B44  0E00               	movlw	0
  5231  002B46  0100               	movlb	0	; () banked
  5232  002B48  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  5233                           
  5234                           ;usb_device.c: 2482: controlTransferState = 0;
  5235  002B4A  0E00               	movlw	0
  5236  002B4C  6E54               	movwf	_controlTransferState,c
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5240  002B4E  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5241  002B52  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5242  002B56  0E7F               	movlw	127
  5243  002B58  16DF               	andwf	indf2,f,c
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5247  002B5A  0E04               	movlw	4
  5248  002B5C  1A3E               	xorwf	_pBDTEntryIn,f,c
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;usb_device.c: 2493: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5252  002B5E  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5253  002B62  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5254  002B66  0E7F               	movlw	127
  5255  002B68  16DF               	andwf	indf2,f,c
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;usb_device.c: 2494: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5259  002B6A  0E04               	movlw	4
  5260  002B6C  1A3E               	xorwf	_pBDTEntryIn,f,c
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;usb_device.c: 2495: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5264  002B6E  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5265  002B72  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5266  002B76  0E7F               	movlw	127
  5267  002B78  16DF               	andwf	indf2,f,c
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;usb_device.c: 2497: inPipes[0].info.Val = 0;
  5271  002B7A  0E00               	movlw	0
  5272  002B7C  6E59               	movwf	_inPipes+3,c
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;usb_device.c: 2498: inPipes[0].wCount.Val = 0;
  5276  002B7E  0E00               	movlw	0
  5277  002B80  6E5B               	movwf	_inPipes+5,c
  5278  002B82  0E00               	movlw	0
  5279  002B84  6E5A               	movwf	_inPipes+4,c
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;usb_device.c: 2499: outPipes[0].info.Val = 0;
  5283  002B86  0E00               	movlw	0
  5284  002B88  0100               	movlb	0	; () banked
  5285  002B8A  6F6D               	movwf	(_outPipes+3)& (0+255),b
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;usb_device.c: 2500: outPipes[0].wCount.Val = 0;
  5289  002B8C  0E00               	movlw	0
  5290  002B8E  0100               	movlb	0	; () banked
  5291  002B90  6F6F               	movwf	(_outPipes+5)& (0+255),b
  5292  002B92  0E00               	movlw	0
  5293  002B94  6F6E               	movwf	(_outPipes+4)& (0+255),b
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;usb_device.c: 2506: USBCheckStdRequest();
  5297  002B96  EC6B  F00F         	call	_USBCheckStdRequest	;wreg free
  5298                           
  5299                           ;usb_device.c: 2507: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5300  002B9A  0E00               	movlw	0
  5301  002B9C  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5302  002B9E  0E03               	movlw	3
  5303  002BA0  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5304  002BA2  0E00               	movlw	0
  5305  002BA4  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5306  002BA6  0E00               	movlw	0
  5307  002BA8  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5308  002BAA  0E00               	movlw	0
  5309  002BAC  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5310  002BAE  0E00               	movlw	0
  5311  002BB0  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5312  002BB2  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5313                           
  5314                           ;usb_device.c: 2520: USBCtrlEPServiceComplete();
  5315  002BB6  EC77  F00E         	call	_USBCtrlEPServiceComplete	;wreg free
  5316  002BBA  0012               	return		;funcret
  5317  002BBC                     __end_of_USBCtrlTrfSetupHandler:
  5318                           	opt stack 0
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           intcon	equ	0xFF2
  5326                           postinc0	equ	0xFEE
  5327                           wreg	equ	0xFE8
  5328                           indf1	equ	0xFE7
  5329                           postdec1	equ	0xFE5
  5330                           fsr1h	equ	0xFE2
  5331                           fsr1l	equ	0xFE1
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           plusw2	equ	0xFDB
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _USBCtrlEPServiceComplete *****************
  5341 ;; Defined at:
  5342 ;;		line 1619 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;		None               void
  5349 ;; Registers used:
  5350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    6
  5363 ;; This function calls:
  5364 ;;		_USBCtrlEPAllowDataStage
  5365 ;;		_USBCtrlEPAllowStatusStage
  5366 ;; This function is called by:
  5367 ;;		_USBCtrlTrfSetupHandler
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text16
  5372  001CEE                     __ptext16:
  5373                           	opt stack 0
  5374  001CEE                     _USBCtrlEPServiceComplete:
  5375                           	opt stack 20
  5376                           
  5377                           ;usb_device.c: 1625: UCONbits.PKTDIS = 0;
  5378                           
  5379                           ;incstack = 0
  5380  001CEE  9860               	bcf	3936,4,c	;volatile
  5381                           
  5382                           ;usb_device.c: 1631: if(inPipes[0].info.bits.busy == 0)
  5383  001CF0  BE59               	btfsc	_inPipes+3,7,c
  5384  001CF2  D03B               	goto	l212
  5385                           
  5386                           ;usb_device.c: 1632: {
  5387                           ;usb_device.c: 1633: if(outPipes[0].info.bits.busy == 1)
  5388  001CF4  0100               	movlb	0	; () banked
  5389  001CF6  AF6D               	btfss	(_outPipes+3)& (0+255),7,b
  5390  001CF8  D00D               	goto	l4210
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;usb_device.c: 1634: {
  5394                           ;usb_device.c: 1635: controlTransferState = 2;
  5395  001CFA  0E02               	movlw	2
  5396  001CFC  6E54               	movwf	_controlTransferState,c
  5397                           
  5398                           ;usb_device.c: 1646: if(USBDeferOUTDataStagePackets == 0)
  5399  001CFE  504D               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  5400  001D00  A4D8               	btfss	status,2,c
  5401  001D02  D003               	goto	l4206
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;usb_device.c: 1647: {
  5405                           ;usb_device.c: 1648: USBCtrlEPAllowDataStage();
  5406  001D04  EC2A  F014         	call	_USBCtrlEPAllowDataStage	;wreg free
  5407  001D08  D000               	goto	l4206
  5408  001D0A                     l4206:
  5409                           
  5410                           ;usb_device.c: 1649: }
  5411                           ;usb_device.c: 1653: USBStatusStageEnabledFlag2 = 0;
  5412  001D0A  0E00               	movlw	0
  5413  001D0C  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5414                           
  5415                           ;usb_device.c: 1654: USBStatusStageEnabledFlag1 = 0;
  5416  001D0E  0E00               	movlw	0
  5417  001D10  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5418                           
  5419                           ;usb_device.c: 1655: }
  5420  001D12  0012               	return	
  5421  001D14                     l4210:
  5422                           
  5423                           ;usb_device.c: 1656: else
  5424                           ;usb_device.c: 1657: {
  5425                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->CNT = 8;
  5426  001D14  EE20 F001          	lfsr	2,1
  5427  001D18  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5428  001D1A  26D9               	addwf	fsr2l,f,c
  5429  001D1C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5430  001D1E  22DA               	addwfc	fsr2h,f,c
  5431  001D20  0E08               	movlw	8
  5432  001D22  6EDF               	movwf	indf2,c
  5433                           
  5434                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5435  001D24  EE20 F002          	lfsr	2,2
  5436  001D28  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5437  001D2A  26D9               	addwf	fsr2l,f,c
  5438  001D2C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5439  001D2E  22DA               	addwfc	fsr2h,f,c
  5440  001D30  0E30               	movlw	48
  5441  001D32  6EDE               	movwf	postinc2,c
  5442  001D34  0E04               	movlw	4
  5443  001D36  6EDD               	movwf	postdec2,c
  5444                           
  5445                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5446  001D38  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5447  001D3C  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5448  001D40  0E0C               	movlw	12
  5449  001D42  6EDF               	movwf	indf2,c
  5450                           
  5451                           ;usb_device.c: 1665: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5452  001D44  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5453  001D48  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5454  001D4C  0E00               	movlw	0
  5455  001D4E  8EDB               	bsf	plusw2,7,c
  5456                           
  5457                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val = 0x04;
  5458  001D50  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5459  001D54  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5460  001D58  0E04               	movlw	4
  5461  001D5A  6EDF               	movwf	indf2,c
  5462                           
  5463                           ;usb_device.c: 1667: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5464  001D5C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5465  001D60  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5466  001D64  0E00               	movlw	0
  5467  001D66  8EDB               	bsf	plusw2,7,c
  5468                           
  5469                           ;usb_device.c: 1668: }
  5470                           ;usb_device.c: 1669: }
  5471  001D68  0012               	return	
  5472  001D6A                     l212:
  5473                           
  5474                           ;usb_device.c: 1670: else
  5475                           ;usb_device.c: 1671: {
  5476                           ;usb_device.c: 1672: if(SetupPkt.DataDir == (0x80>>7))
  5477  001D6A  0104               	movlb	4	; () banked
  5478  001D6C  AF30               	btfss	48,7,b	;volatile
  5479  001D6E  D012               	goto	l4230
  5480                           
  5481                           ; BSR set to: 4
  5482                           ;usb_device.c: 1673: {
  5483                           ;usb_device.c: 1674: controlTransferState = 1;
  5484  001D70  0E01               	movlw	1
  5485  001D72  6E54               	movwf	_controlTransferState,c
  5486                           
  5487                           ;usb_device.c: 1688: if(USBDeferINDataStagePackets == 0)
  5488  001D74  504C               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  5489  001D76  A4D8               	btfss	status,2,c
  5490  001D78  D003               	goto	l4222
  5491                           
  5492                           ; BSR set to: 4
  5493                           ;usb_device.c: 1689: {
  5494                           ;usb_device.c: 1690: USBCtrlEPAllowDataStage();
  5495  001D7A  EC2A  F014         	call	_USBCtrlEPAllowDataStage	;wreg free
  5496  001D7E  D000               	goto	l4222
  5497  001D80                     l4222:
  5498                           
  5499                           ;usb_device.c: 1691: }
  5500                           ;usb_device.c: 1713: USBStatusStageEnabledFlag2 = 0;
  5501  001D80  0E00               	movlw	0
  5502  001D82  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5503                           
  5504                           ;usb_device.c: 1714: USBStatusStageEnabledFlag1 = 0;
  5505  001D84  0E00               	movlw	0
  5506  001D86  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5507                           
  5508                           ;usb_device.c: 1715: if(USBDeferStatusStagePacket == 0)
  5509  001D88  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5510  001D8A  A4D8               	btfss	status,2,c
  5511  001D8C  0012               	return	
  5512                           
  5513                           ;usb_device.c: 1716: {
  5514                           ;usb_device.c: 1717: USBCtrlEPAllowStatusStage();
  5515  001D8E  EC96  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5516                           
  5517                           ;usb_device.c: 1718: }
  5518                           ;usb_device.c: 1719: }
  5519  001D92  0012               	return	
  5520  001D94                     l4230:
  5521                           
  5522                           ;usb_device.c: 1720: else
  5523                           ;usb_device.c: 1721: {
  5524                           ;usb_device.c: 1732: controlTransferState = 2;
  5525  001D94  0E02               	movlw	2
  5526  001D96  6E54               	movwf	_controlTransferState,c
  5527                           
  5528                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->CNT = 8;
  5529  001D98  EE20 F001          	lfsr	2,1
  5530  001D9C  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5531  001D9E  26D9               	addwf	fsr2l,f,c
  5532  001DA0  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5533  001DA2  22DA               	addwfc	fsr2h,f,c
  5534  001DA4  0E08               	movlw	8
  5535  001DA6  6EDF               	movwf	indf2,c
  5536                           
  5537                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5538  001DA8  EE20 F002          	lfsr	2,2
  5539  001DAC  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5540  001DAE  26D9               	addwf	fsr2l,f,c
  5541  001DB0  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5542  001DB2  22DA               	addwfc	fsr2h,f,c
  5543  001DB4  0E30               	movlw	48
  5544  001DB6  6EDE               	movwf	postinc2,c
  5545  001DB8  0E04               	movlw	4
  5546  001DBA  6EDD               	movwf	postdec2,c
  5547                           
  5548                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5549  001DBC  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5550  001DC0  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5551  001DC4  0E04               	movlw	4
  5552  001DC6  6EDF               	movwf	indf2,c
  5553                           
  5554                           ;usb_device.c: 1738: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5555  001DC8  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5556  001DCC  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5557  001DD0  0E00               	movlw	0
  5558  001DD2  8EDB               	bsf	plusw2,7,c
  5559                           
  5560                           ;usb_device.c: 1741: USBStatusStageEnabledFlag2 = 0;
  5561  001DD4  0E00               	movlw	0
  5562  001DD6  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5563                           
  5564                           ;usb_device.c: 1742: USBStatusStageEnabledFlag1 = 0;
  5565  001DD8  0E00               	movlw	0
  5566  001DDA  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5567                           
  5568                           ;usb_device.c: 1743: if(USBDeferStatusStagePacket == 0)
  5569  001DDC  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5570  001DDE  A4D8               	btfss	status,2,c
  5571  001DE0  0012               	return	
  5572                           
  5573                           ;usb_device.c: 1744: {
  5574                           ;usb_device.c: 1745: USBCtrlEPAllowStatusStage();
  5575  001DE2  EC96  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5576  001DE6  0012               	return	
  5577  001DE8  0012               	return		;funcret
  5578  001DEA                     __end_of_USBCtrlEPServiceComplete:
  5579                           	opt stack 0
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           prodh	equ	0xFF4
  5585                           prodl	equ	0xFF3
  5586                           intcon	equ	0xFF2
  5587                           postinc0	equ	0xFEE
  5588                           wreg	equ	0xFE8
  5589                           indf1	equ	0xFE7
  5590                           postdec1	equ	0xFE5
  5591                           fsr1h	equ	0xFE2
  5592                           fsr1l	equ	0xFE1
  5593                           indf2	equ	0xFDF
  5594                           postinc2	equ	0xFDE
  5595                           postdec2	equ	0xFDD
  5596                           plusw2	equ	0xFDB
  5597                           fsr2h	equ	0xFDA
  5598                           fsr2l	equ	0xFD9
  5599                           status	equ	0xFD8
  5600                           
  5601 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5602 ;; Defined at:
  5603 ;;		line 1491 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;		None               void
  5610 ;; Registers used:
  5611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5617 ;;      Params:         0       0       0       0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5620 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5621 ;;Total ram usage:        0 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    5
  5624 ;; This function calls:
  5625 ;;		_USBCtrlTrfTxService
  5626 ;; This function is called by:
  5627 ;;		_USBCtrlEPServiceComplete
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text17
  5632  002854                     __ptext17:
  5633                           	opt stack 0
  5634  002854                     _USBCtrlEPAllowDataStage:
  5635                           	opt stack 20
  5636                           
  5637                           ;usb_device.c: 1493: USBDeferINDataStagePackets = 0;
  5638                           
  5639                           ;incstack = 0
  5640  002854  0E00               	movlw	0
  5641  002856  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5642                           
  5643                           ;usb_device.c: 1494: USBDeferOUTDataStagePackets = 0;
  5644  002858  0E00               	movlw	0
  5645  00285A  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5646                           
  5647                           ;usb_device.c: 1496: if(controlTransferState == 2)
  5648  00285C  0E02               	movlw	2
  5649  00285E  1854               	xorwf	_controlTransferState,w,c
  5650  002860  A4D8               	btfss	status,2,c
  5651  002862  D01F               	goto	l4004
  5652                           
  5653                           ;usb_device.c: 1497: {
  5654                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->CNT = 8;
  5655  002864  EE20 F001          	lfsr	2,1
  5656  002868  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5657  00286A  26D9               	addwf	fsr2l,f,c
  5658  00286C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5659  00286E  22DA               	addwfc	fsr2h,f,c
  5660  002870  0E08               	movlw	8
  5661  002872  6EDF               	movwf	indf2,c
  5662                           
  5663                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  5664  002874  EE20 F002          	lfsr	2,2
  5665  002878  5048               	movf	_pBDTEntryEP0OutNext,w,c
  5666  00287A  26D9               	addwf	fsr2l,f,c
  5667  00287C  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  5668  00287E  22DA               	addwfc	fsr2h,f,c
  5669  002880  0E38               	movlw	56
  5670  002882  6EDE               	movwf	postinc2,c
  5671  002884  0E04               	movlw	4
  5672  002886  6EDD               	movwf	postdec2,c
  5673                           
  5674                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5675  002888  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5676  00288C  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5677  002890  0E48               	movlw	72
  5678  002892  6EDF               	movwf	indf2,c
  5679                           
  5680                           ;usb_device.c: 1502: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5681  002894  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5682  002898  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5683  00289C  0E00               	movlw	0
  5684  00289E  8EDB               	bsf	plusw2,7,c
  5685                           
  5686                           ;usb_device.c: 1503: }
  5687  0028A0  0012               	return	
  5688  0028A2                     l4004:
  5689                           
  5690                           ;usb_device.c: 1504: else
  5691                           ;usb_device.c: 1505: {
  5692                           ;usb_device.c: 1508: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5693  0028A2  505A               	movf	_inPipes+4,w,c
  5694  0028A4  0104               	movlb	4	; () banked
  5695  0028A6  5D36               	subwf	54,w,b	;volatile
  5696  0028A8  505B               	movf	_inPipes+5,w,c
  5697  0028AA  0104               	movlb	4	; () banked
  5698  0028AC  5937               	subwfb	55,w,b	;volatile
  5699  0028AE  B0D8               	btfsc	status,0,c
  5700  0028B0  D005               	goto	l4008
  5701                           
  5702                           ; BSR set to: 4
  5703                           ;usb_device.c: 1509: {
  5704                           ;usb_device.c: 1510: inPipes[0].wCount.Val = SetupPkt.wLength;
  5705  0028B2  C436 F05A          	movff	1078,_inPipes+4	;volatile
  5706  0028B6  C437 F05B          	movff	1079,_inPipes+5	;volatile
  5707  0028BA  D000               	goto	l4008
  5708  0028BC                     l4008:
  5709                           
  5710                           ; BSR set to: 4
  5711                           ;usb_device.c: 1511: }
  5712                           ;usb_device.c: 1512: USBCtrlTrfTxService();
  5713  0028BC  EC4E  F010         	call	_USBCtrlTrfTxService	;wreg free
  5714                           
  5715                           ;usb_device.c: 1517: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  5716  0028C0  EE20 F002          	lfsr	2,2
  5717  0028C4  503E               	movf	_pBDTEntryIn,w,c
  5718  0028C6  26D9               	addwf	fsr2l,f,c
  5719  0028C8  503F               	movf	_pBDTEntryIn+1,w,c
  5720  0028CA  22DA               	addwfc	fsr2h,f,c
  5721  0028CC  0E38               	movlw	56
  5722  0028CE  6EDE               	movwf	postinc2,c
  5723  0028D0  0E04               	movlw	4
  5724  0028D2  6EDD               	movwf	postdec2,c
  5725                           
  5726                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5727  0028D4  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5728  0028D8  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5729  0028DC  0E48               	movlw	72
  5730  0028DE  6EDF               	movwf	indf2,c
  5731                           
  5732                           ;usb_device.c: 1519: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5733  0028E0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  5734  0028E4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5735  0028E8  0E00               	movlw	0
  5736  0028EA  8EDB               	bsf	plusw2,7,c
  5737  0028EC  0012               	return	
  5738  0028EE  0012               	return		;funcret
  5739  0028F0                     __end_of_USBCtrlEPAllowDataStage:
  5740                           	opt stack 0
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           prodh	equ	0xFF4
  5746                           prodl	equ	0xFF3
  5747                           intcon	equ	0xFF2
  5748                           postinc0	equ	0xFEE
  5749                           wreg	equ	0xFE8
  5750                           indf1	equ	0xFE7
  5751                           postdec1	equ	0xFE5
  5752                           fsr1h	equ	0xFE2
  5753                           fsr1l	equ	0xFE1
  5754                           indf2	equ	0xFDF
  5755                           postinc2	equ	0xFDE
  5756                           postdec2	equ	0xFDD
  5757                           plusw2	equ	0xFDB
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _USBCheckStdRequest *****************
  5763 ;; Defined at:
  5764 ;;		line 2692 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;		None               void
  5771 ;; Registers used:
  5772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        0 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    9
  5785 ;; This function calls:
  5786 ;;		_USBStdFeatureReqHandler
  5787 ;;		_USBStdGetDscHandler
  5788 ;;		_USBStdGetStatusHandler
  5789 ;;		_USBStdSetCfgHandler
  5790 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5791 ;; This function is called by:
  5792 ;;		_USBCtrlTrfSetupHandler
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text18
  5797  001ED6                     __ptext18:
  5798                           	opt stack 0
  5799  001ED6                     _USBCheckStdRequest:
  5800                           	opt stack 17
  5801                           
  5802                           ;usb_device.c: 2694: if(SetupPkt.RequestType != (0x00>>5)) return;
  5803                           
  5804                           ;incstack = 0
  5805  001ED6  0104               	movlb	4	; () banked
  5806  001ED8  3930               	swapf	48,w,b	;volatile
  5807  001EDA  32E8               	rrcf	wreg,f,c
  5808  001EDC  0B03               	andlw	3
  5809  001EDE  0900               	iorlw	0
  5810  001EE0  A4D8               	btfss	status,2,c
  5811  001EE2  0012               	return	
  5812  001EE4  D047               	goto	l4328
  5813                           
  5814                           ; BSR set to: 4
  5815  001EE6  0012               	return	
  5816                           
  5817                           ; BSR set to: 4
  5818                           ;usb_device.c: 2696: switch(SetupPkt.bRequest)
  5819  001EE8  D045               	goto	l4328
  5820  001EEA                     l339:
  5821                           
  5822                           ; BSR set to: 4
  5823                           ;usb_device.c: 2699: inPipes[0].info.bits.busy = 1;
  5824  001EEA  8E59               	bsf	_inPipes+3,7,c
  5825                           
  5826                           ; BSR set to: 4
  5827                           ;usb_device.c: 2700: USBDeviceState = ADR_PENDING_STATE;
  5828  001EEC  0E08               	movlw	8
  5829  001EEE  0100               	movlb	0	; () banked
  5830  001EF0  6F97               	movwf	_USBDeviceState& (0+255),b
  5831                           
  5832                           ;usb_device.c: 2702: break;
  5833  001EF2  0012               	return	
  5834  001EF4                     l4298:
  5835                           
  5836                           ;usb_device.c: 2704: USBStdGetDscHandler();
  5837  001EF4  ECD4  F00C         	call	_USBStdGetDscHandler	;wreg free
  5838                           
  5839                           ;usb_device.c: 2705: break;
  5840  001EF8  0012               	return	
  5841  001EFA                     l4300:
  5842                           
  5843                           ;usb_device.c: 2707: USBStdSetCfgHandler();
  5844  001EFA  ECDD  F00F         	call	_USBStdSetCfgHandler	;wreg free
  5845                           
  5846                           ;usb_device.c: 2708: break;
  5847  001EFE  0012               	return	
  5848  001F00                     l4302:
  5849                           
  5850                           ;usb_device.c: 2710: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5851  001F00  0E5C               	movlw	low _USBActiveConfiguration
  5852  001F02  6E56               	movwf	_inPipes,c
  5853  001F04  0E00               	movlw	high _USBActiveConfiguration
  5854  001F06  6E57               	movwf	_inPipes+1,c
  5855                           
  5856                           ;usb_device.c: 2711: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5857  001F08  8059               	bsf	_inPipes+3,0,c
  5858                           
  5859                           ;usb_device.c: 2712: inPipes[0].wCount.v[0] = 1;
  5860  001F0A  0E01               	movlw	1
  5861  001F0C  6E5A               	movwf	_inPipes+4,c
  5862                           
  5863                           ;usb_device.c: 2713: inPipes[0].info.bits.busy = 1;
  5864  001F0E  8E59               	bsf	_inPipes+3,7,c
  5865                           
  5866                           ;usb_device.c: 2714: break;
  5867  001F10  0012               	return	
  5868  001F12                     l4310:
  5869                           
  5870                           ;usb_device.c: 2716: USBStdGetStatusHandler();
  5871  001F12  EC78  F013         	call	_USBStdGetStatusHandler	;wreg free
  5872                           
  5873                           ;usb_device.c: 2717: break;
  5874  001F16  0012               	return	
  5875                           
  5876                           ;usb_device.c: 2718: case 1:
  5877  001F18  D000               	goto	l4312
  5878  001F1A                     l4312:
  5879                           
  5880                           ;usb_device.c: 2719: case 3:
  5881                           ;usb_device.c: 2720: USBStdFeatureReqHandler();
  5882  001F1A  ECAB  F006         	call	_USBStdFeatureReqHandler	;wreg free
  5883                           
  5884                           ;usb_device.c: 2721: break;
  5885  001F1E  0012               	return	
  5886  001F20                     l4314:
  5887                           
  5888                           ;usb_device.c: 2723: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5889  001F20  0104               	movlb	4	; () banked
  5890  001F22  5134               	movf	52,w,b	;volatile
  5891  001F24  0D01               	mullw	1
  5892  001F26  0EB2               	movlw	low _USBAlternateInterface
  5893  001F28  24F3               	addwf	prodl,w,c
  5894  001F2A  6E56               	movwf	_inPipes,c
  5895  001F2C  0E00               	movlw	high _USBAlternateInterface
  5896  001F2E  20F4               	addwfc	prodh,w,c
  5897  001F30  6E57               	movwf	_inPipes+1,c
  5898                           
  5899                           ; BSR set to: 4
  5900                           ;usb_device.c: 2724: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5901  001F32  8059               	bsf	_inPipes+3,0,c
  5902                           
  5903                           ; BSR set to: 4
  5904                           ;usb_device.c: 2725: inPipes[0].wCount.v[0] = 1;
  5905  001F34  0E01               	movlw	1
  5906  001F36  6E5A               	movwf	_inPipes+4,c
  5907                           
  5908                           ; BSR set to: 4
  5909                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
  5910  001F38  8E59               	bsf	_inPipes+3,7,c
  5911                           
  5912                           ;usb_device.c: 2727: break;
  5913  001F3A  0012               	return	
  5914  001F3C                     l348:
  5915                           
  5916                           ; BSR set to: 4
  5917                           ;usb_device.c: 2729: inPipes[0].info.bits.busy = 1;
  5918  001F3C  8E59               	bsf	_inPipes+3,7,c
  5919                           
  5920                           ; BSR set to: 4
  5921                           ;usb_device.c: 2730: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5922  001F3E  0104               	movlb	4	; () banked
  5923  001F40  5134               	movf	52,w,b	;volatile
  5924  001F42  0D01               	mullw	1
  5925  001F44  0EB2               	movlw	low _USBAlternateInterface
  5926  001F46  24F3               	addwf	prodl,w,c
  5927  001F48  6ED9               	movwf	fsr2l,c
  5928  001F4A  0E00               	movlw	high _USBAlternateInterface
  5929  001F4C  20F4               	addwfc	prodh,w,c
  5930  001F4E  6EDA               	movwf	fsr2h,c
  5931  001F50  C432 FFDF          	movff	1074,indf2	;volatile
  5932                           
  5933                           ;usb_device.c: 2731: break;
  5934  001F54  0012               	return	
  5935  001F56                     l4324:
  5936                           
  5937                           ; BSR set to: 4
  5938                           ;usb_device.c: 2733: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5939  001F56  0E00               	movlw	0
  5940  001F58  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5941  001F5A  0E02               	movlw	2
  5942  001F5C  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5943  001F5E  0E00               	movlw	0
  5944  001F60  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5945  001F62  0E00               	movlw	0
  5946  001F64  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5947  001F66  0E00               	movlw	0
  5948  001F68  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5949  001F6A  0E00               	movlw	0
  5950  001F6C  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5951  001F6E  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5952                           
  5953                           ;usb_device.c: 2738: }
  5954                           
  5955                           ;usb_device.c: 2737: break;
  5956                           
  5957                           ;usb_device.c: 2736: default:
  5958                           
  5959                           ;usb_device.c: 2735: case 12:
  5960                           
  5961                           ;usb_device.c: 2734: break;
  5962  001F72  0012               	return	
  5963  001F74                     l4328:
  5964  001F74  0104               	movlb	4	; () banked
  5965  001F76  5131               	movf	49,w,b	;volatile
  5966                           
  5967                           ; Switch size 1, requested type "space"
  5968                           ; Number of cases is 11, Range of values is 0 to 12
  5969                           ; switch strategies available:
  5970                           ; Name         Instructions Cycles
  5971                           ; simple_byte           34    18 (average)
  5972                           ;	Chosen strategy is simple_byte
  5973  001F78  0A00               	xorlw	0	; case 0
  5974  001F7A  B4D8               	btfsc	status,2,c
  5975  001F7C  D7CA               	goto	l4310
  5976  001F7E  0A01               	xorlw	1	; case 1
  5977  001F80  B4D8               	btfsc	status,2,c
  5978  001F82  D7CB               	goto	l4312
  5979  001F84  0A02               	xorlw	2	; case 3
  5980  001F86  B4D8               	btfsc	status,2,c
  5981  001F88  D7C8               	goto	l4312
  5982  001F8A  0A06               	xorlw	6	; case 5
  5983  001F8C  B4D8               	btfsc	status,2,c
  5984  001F8E  D7AD               	goto	l339
  5985  001F90  0A03               	xorlw	3	; case 6
  5986  001F92  B4D8               	btfsc	status,2,c
  5987  001F94  D7AF               	goto	l4298
  5988  001F96  0A01               	xorlw	1	; case 7
  5989  001F98  B4D8               	btfsc	status,2,c
  5990  001F9A  D7DD               	goto	l4324
  5991  001F9C  0A0F               	xorlw	15	; case 8
  5992  001F9E  B4D8               	btfsc	status,2,c
  5993  001FA0  D7AF               	goto	l4302
  5994  001FA2  0A01               	xorlw	1	; case 9
  5995  001FA4  B4D8               	btfsc	status,2,c
  5996  001FA6  D7A9               	goto	l4300
  5997  001FA8  0A03               	xorlw	3	; case 10
  5998  001FAA  B4D8               	btfsc	status,2,c
  5999  001FAC  D7B9               	goto	l4314
  6000  001FAE  0A01               	xorlw	1	; case 11
  6001  001FB0  B4D8               	btfsc	status,2,c
  6002  001FB2  D7C4               	goto	l348
  6003  001FB4  0A07               	xorlw	7	; case 12
  6004  001FB6  0012               	return	
  6005                           
  6006                           ; BSR set to: 4
  6007  001FB8  0012               	return		;funcret
  6008  001FBA                     __end_of_USBCheckStdRequest:
  6009                           	opt stack 0
  6010                           tblptru	equ	0xFF8
  6011                           tblptrh	equ	0xFF7
  6012                           tblptrl	equ	0xFF6
  6013                           tablat	equ	0xFF5
  6014                           prodh	equ	0xFF4
  6015                           prodl	equ	0xFF3
  6016                           intcon	equ	0xFF2
  6017                           postinc0	equ	0xFEE
  6018                           wreg	equ	0xFE8
  6019                           indf1	equ	0xFE7
  6020                           postdec1	equ	0xFE5
  6021                           fsr1h	equ	0xFE2
  6022                           fsr1l	equ	0xFE1
  6023                           indf2	equ	0xFDF
  6024                           postinc2	equ	0xFDE
  6025                           postdec2	equ	0xFDD
  6026                           plusw2	equ	0xFDB
  6027                           fsr2h	equ	0xFDA
  6028                           fsr2l	equ	0xFD9
  6029                           status	equ	0xFD8
  6030                           
  6031 ;; *************** function _USBStdSetCfgHandler *****************
  6032 ;; Defined at:
  6033 ;;		line 1971 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  i               1   54[COMRAM] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;		None               void
  6040 ;; Registers used:
  6041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0
  6048 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6050 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6051 ;;Total ram usage:        1 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    8
  6054 ;; This function calls:
  6055 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6056 ;;		_memset
  6057 ;; This function is called by:
  6058 ;;		_USBCheckStdRequest
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text19
  6063  001FBA                     __ptext19:
  6064                           	opt stack 0
  6065  001FBA                     _USBStdSetCfgHandler:
  6066                           	opt stack 17
  6067                           
  6068                           ;usb_device.c: 1973: uint8_t i;
  6069                           ;usb_device.c: 1976: inPipes[0].info.bits.busy = 1;
  6070                           
  6071                           ;incstack = 0
  6072  001FBA  8E59               	bsf	_inPipes+3,7,c
  6073                           
  6074                           ;usb_device.c: 1979: memset((void*)&*U1EP1_R,0x00,(2));;
  6075  001FBC  C0D3  F023         	movff	_U1EP1_R,memset@p1
  6076  001FC0  C0D4  F024         	movff	_U1EP1_R+1,memset@p1+1
  6077  001FC4  0E00               	movlw	0
  6078  001FC6  6E26               	movwf	memset@c+1,c
  6079  001FC8  0E00               	movlw	0
  6080  001FCA  6E25               	movwf	memset@c,c
  6081  001FCC  0E00               	movlw	0
  6082  001FCE  6E28               	movwf	memset@n+1,c
  6083  001FD0  0E02               	movlw	2
  6084  001FD2  6E27               	movwf	memset@n,c
  6085  001FD4  ECBA  F018         	call	_memset	;wreg free
  6086                           
  6087                           ;usb_device.c: 1982: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6088  001FD8  0E00               	movlw	0
  6089  001FDA  6E23               	movwf	memset@p1,c
  6090  001FDC  0E04               	movlw	4
  6091  001FDE  6E24               	movwf	memset@p1+1,c
  6092  001FE0  0E00               	movlw	0
  6093  001FE2  6E26               	movwf	memset@c+1,c
  6094  001FE4  0E00               	movlw	0
  6095  001FE6  6E25               	movwf	memset@c,c
  6096  001FE8  0E00               	movlw	0
  6097  001FEA  6E28               	movwf	memset@n+1,c
  6098  001FEC  0E30               	movlw	48
  6099  001FEE  6E27               	movwf	memset@n,c
  6100  001FF0  ECBA  F018         	call	_memset	;wreg free
  6101                           
  6102                           ;usb_device.c: 1985: UCONbits.PPBRST = 1;
  6103  001FF4  8C60               	bsf	3936,6,c	;volatile
  6104                           
  6105                           ;usb_device.c: 1990: for(i = 0; i < (uint8_t)(2+1u); i++)
  6106  001FF6  0E00               	movlw	0
  6107  001FF8  6E37               	movwf	USBStdSetCfgHandler@i,c
  6108  001FFA                     l4024:
  6109  001FFA  0E02               	movlw	2
  6110  001FFC  6437               	cpfsgt	USBStdSetCfgHandler@i,c
  6111  001FFE  D001               	goto	l4028
  6112  002000  D016               	goto	l4034
  6113  002002                     l4028:
  6114                           
  6115                           ;usb_device.c: 1991: {
  6116                           ;usb_device.c: 1992: ep_data_in[i].Val = 0u;
  6117  002002  5037               	movf	USBStdSetCfgHandler@i,w,c
  6118  002004  0D01               	mullw	1
  6119  002006  0E7C               	movlw	low _ep_data_in
  6120  002008  24F3               	addwf	prodl,w,c
  6121  00200A  6ED9               	movwf	fsr2l,c
  6122  00200C  0E00               	movlw	high _ep_data_in
  6123  00200E  20F4               	addwfc	prodh,w,c
  6124  002010  6EDA               	movwf	fsr2h,c
  6125  002012  0E00               	movlw	0
  6126  002014  6EDF               	movwf	indf2,c
  6127                           
  6128                           ;usb_device.c: 1993: ep_data_out[i].Val = 0u;
  6129  002016  5037               	movf	USBStdSetCfgHandler@i,w,c
  6130  002018  0D01               	mullw	1
  6131  00201A  0E7F               	movlw	low _ep_data_out
  6132  00201C  24F3               	addwf	prodl,w,c
  6133  00201E  6ED9               	movwf	fsr2l,c
  6134  002020  0E00               	movlw	high _ep_data_out
  6135  002022  20F4               	addwfc	prodh,w,c
  6136  002024  6EDA               	movwf	fsr2h,c
  6137  002026  0E00               	movlw	0
  6138  002028  6EDF               	movwf	indf2,c
  6139  00202A  2A37               	incf	USBStdSetCfgHandler@i,f,c
  6140  00202C  D7E6               	goto	l4024
  6141  00202E                     l4034:
  6142                           
  6143                           ;usb_device.c: 1994: }
  6144                           ;usb_device.c: 1997: memset((void*)&USBAlternateInterface,0x00,2);
  6145  00202E  0EB2               	movlw	low _USBAlternateInterface
  6146  002030  6E23               	movwf	memset@p1,c
  6147  002032  0E00               	movlw	high _USBAlternateInterface
  6148  002034  6E24               	movwf	memset@p1+1,c
  6149  002036  0E00               	movlw	0
  6150  002038  6E26               	movwf	memset@c+1,c
  6151  00203A  0E00               	movlw	0
  6152  00203C  6E25               	movwf	memset@c,c
  6153  00203E  0E00               	movlw	0
  6154  002040  6E28               	movwf	memset@n+1,c
  6155  002042  0E02               	movlw	2
  6156  002044  6E27               	movwf	memset@n,c
  6157  002046  ECBA  F018         	call	_memset	;wreg free
  6158                           
  6159                           ;usb_device.c: 2000: UCONbits.PPBRST = 0;
  6160  00204A  9C60               	bcf	3936,6,c	;volatile
  6161                           
  6162                           ;usb_device.c: 2002: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6163  00204C  0E08               	movlw	8
  6164  00204E  6E3E               	movwf	_pBDTEntryIn,c
  6165  002050  0E04               	movlw	4
  6166  002052  6E3F               	movwf	_pBDTEntryIn+1,c
  6167                           
  6168                           ;usb_device.c: 2005: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6169  002054  0E00               	movlw	0
  6170  002056  6E46               	movwf	_pBDTEntryEP0OutCurrent,c
  6171  002058  0E04               	movlw	4
  6172  00205A  6E47               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6173                           
  6174                           ;usb_device.c: 2006: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6175  00205C  C046  F048         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6176  002060  C047  F049         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6177                           
  6178                           ;usb_device.c: 2009: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6179  002064  C432 F05C          	movff	1074,_USBActiveConfiguration	;volatile
  6180                           
  6181                           ;usb_device.c: 2012: if(USBActiveConfiguration == 0)
  6182  002068  505C               	movf	_USBActiveConfiguration,w,c
  6183  00206A  A4D8               	btfss	status,2,c
  6184  00206C  D004               	goto	l4050
  6185                           
  6186                           ;usb_device.c: 2013: {
  6187                           ;usb_device.c: 2015: USBDeviceState = ADDRESS_STATE;
  6188  00206E  0E10               	movlw	16
  6189  002070  0100               	movlb	0	; () banked
  6190  002072  6F97               	movwf	_USBDeviceState& (0+255),b
  6191                           
  6192                           ;usb_device.c: 2016: }
  6193  002074  0012               	return	
  6194  002076                     l4050:
  6195                           
  6196                           ;usb_device.c: 2017: else
  6197                           ;usb_device.c: 2018: {
  6198                           ;usb_device.c: 2020: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6199  002076  0E00               	movlw	0
  6200  002078  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6201  00207A  0E01               	movlw	1
  6202  00207C  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6203  00207E  0E5C               	movlw	low _USBActiveConfiguration
  6204  002080  6E31               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6205  002082  0E00               	movlw	high _USBActiveConfiguration
  6206  002084  6E32               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  6207  002086  0E00               	movlw	0
  6208  002088  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  6209  00208A  0E01               	movlw	1
  6210  00208C  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  6211  00208E  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6212                           
  6213                           ;usb_device.c: 2025: USBDeviceState = CONFIGURED_STATE;
  6214  002092  0E20               	movlw	32
  6215  002094  0100               	movlb	0	; () banked
  6216  002096  6F97               	movwf	_USBDeviceState& (0+255),b
  6217  002098  0012               	return	
  6218                           
  6219                           ; BSR set to: 0
  6220                           
  6221                           ; BSR set to: 0
  6222  00209A  0012               	return		;funcret
  6223  00209C                     __end_of_USBStdSetCfgHandler:
  6224                           	opt stack 0
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           prodh	equ	0xFF4
  6230                           prodl	equ	0xFF3
  6231                           intcon	equ	0xFF2
  6232                           postinc0	equ	0xFEE
  6233                           wreg	equ	0xFE8
  6234                           indf1	equ	0xFE7
  6235                           postdec1	equ	0xFE5
  6236                           fsr1h	equ	0xFE2
  6237                           fsr1l	equ	0xFE1
  6238                           indf2	equ	0xFDF
  6239                           postinc2	equ	0xFDE
  6240                           postdec2	equ	0xFDD
  6241                           plusw2	equ	0xFDB
  6242                           fsr2h	equ	0xFDA
  6243                           fsr2l	equ	0xFD9
  6244                           status	equ	0xFD8
  6245                           
  6246 ;; *************** function _USBStdGetStatusHandler *****************
  6247 ;; Defined at:
  6248 ;;		line 2132 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  p               2   35[COMRAM] PTR struct __BDT
  6253 ;;		 -> NULL(0), BDT(48), 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;		None               void
  6256 ;; Registers used:
  6257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0
  6264 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6265 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6266 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6267 ;;Total ram usage:        3 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    4
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_USBCheckStdRequest
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text20
  6278  0026F0                     __ptext20:
  6279                           	opt stack 0
  6280  0026F0                     _USBStdGetStatusHandler:
  6281                           	opt stack 21
  6282                           
  6283                           ;usb_device.c: 2134: CtrlTrfData[0] = 0;
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;incstack = 0
  6287  0026F0  0E00               	movlw	0
  6288  0026F2  0104               	movlb	4	; () banked
  6289  0026F4  6F38               	movwf	56,b	;volatile
  6290                           
  6291                           ;usb_device.c: 2135: CtrlTrfData[1] = 0;
  6292  0026F6  0E00               	movlw	0
  6293  0026F8  0104               	movlb	4	; () banked
  6294  0026FA  6F39               	movwf	57,b	;volatile
  6295                           
  6296                           ;usb_device.c: 2137: switch(SetupPkt.Recipient)
  6297  0026FC  D03D               	goto	l4106
  6298  0026FE                     l275:
  6299                           
  6300                           ; BSR set to: 4
  6301                           ;usb_device.c: 2145: if(1 == 1)
  6302  0026FE  8E59               	bsf	_inPipes+3,7,c
  6303                           
  6304                           ; BSR set to: 4
  6305                           ;usb_device.c: 2146: {
  6306                           ;usb_device.c: 2147: CtrlTrfData[0]|=0x01;
  6307  002700  0104               	movlb	4	; () banked
  6308  002702  8138               	bsf	56,0,b	;volatile
  6309  002704  D000               	goto	l4090
  6310  002706                     l4090:
  6311                           
  6312                           ; BSR set to: 4
  6313                           ;usb_device.c: 2148: }
  6314                           ;usb_device.c: 2150: if(RemoteWakeup == 1)
  6315  002706  0100               	movlb	0	; () banked
  6316  002708  0595               	decf	_RemoteWakeup& (0+255),w,b
  6317  00270A  A4D8               	btfss	status,2,c
  6318  00270C  D041               	goto	l278
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;usb_device.c: 2151: {
  6322                           ;usb_device.c: 2152: CtrlTrfData[0]|=0x02;
  6323  00270E  0104               	movlb	4	; () banked
  6324  002710  8338               	bsf	56,1,b	;volatile
  6325                           
  6326                           ; BSR set to: 4
  6327                           ;usb_device.c: 2153: }
  6328                           ;usb_device.c: 2154: break;
  6329  002712  D03E               	goto	l278
  6330  002714                     l279:
  6331                           
  6332                           ; BSR set to: 4
  6333                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6334  002714  8E59               	bsf	_inPipes+3,7,c
  6335                           
  6336                           ;usb_device.c: 2157: break;
  6337  002716  D03C               	goto	l278
  6338  002718                     l280:
  6339                           
  6340                           ; BSR set to: 4
  6341                           ;usb_device.c: 2159: inPipes[0].info.bits.busy = 1;
  6342  002718  8E59               	bsf	_inPipes+3,7,c
  6343                           
  6344                           ;usb_device.c: 2163: {
  6345                           ;usb_device.c: 2164: BDT_ENTRY *p;
  6346                           ;usb_device.c: 2166: if(SetupPkt.EPDir == 0)
  6347  00271A  0104               	movlb	4	; () banked
  6348  00271C  BF34               	btfsc	52,7,b	;volatile
  6349  00271E  D00B               	goto	l4096
  6350                           
  6351                           ; BSR set to: 4
  6352                           ;usb_device.c: 2167: {
  6353                           ;usb_device.c: 2168: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6354  002720  0104               	movlb	4	; () banked
  6355  002722  5134               	movf	52,w,b	;volatile
  6356  002724  0B0F               	andlw	15
  6357  002726  6E23               	movwf	??_USBStdGetStatusHandler& (0+255),c
  6358  002728  5023               	movf	??_USBStdGetStatusHandler,w,c
  6359  00272A  0D02               	mullw	2
  6360  00272C  0E72               	movlw	low _pBDTEntryOut
  6361  00272E  24F3               	addwf	prodl,w,c
  6362  002730  6ED9               	movwf	fsr2l,c
  6363  002732  0E00               	movlw	high _pBDTEntryOut
  6364  002734  D00A               	goto	L3
  6365  002736                     l4096:
  6366                           
  6367                           ; BSR set to: 4
  6368                           ;usb_device.c: 2170: else
  6369                           ;usb_device.c: 2171: {
  6370                           ;usb_device.c: 2172: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6371  002736  0104               	movlb	4	; () banked
  6372  002738  5134               	movf	52,w,b	;volatile
  6373  00273A  0B0F               	andlw	15
  6374  00273C  6E23               	movwf	??_USBStdGetStatusHandler& (0+255),c
  6375  00273E  5023               	movf	??_USBStdGetStatusHandler,w,c
  6376  002740  0D02               	mullw	2
  6377  002742  0E3E               	movlw	low _pBDTEntryIn
  6378  002744  24F3               	addwf	prodl,w,c
  6379  002746  6ED9               	movwf	fsr2l,c
  6380  002748  0E00               	movlw	high _pBDTEntryIn
  6381  00274A                     L3:
  6382  00274A  20F4               	addwfc	prodh,w,c
  6383  00274C  6EDA               	movwf	fsr2h,c
  6384  00274E  CFDE F024          	movff	postinc2,USBStdGetStatusHandler@p
  6385  002752  CFDD F025          	movff	postdec2,USBStdGetStatusHandler@p+1
  6386  002756  D000               	goto	l4098
  6387  002758                     l4098:
  6388                           
  6389                           ; BSR set to: 4
  6390                           ;usb_device.c: 2173: }
  6391                           ;usb_device.c: 2175: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6392  002758  C024  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6393  00275C  C025  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6394  002760  AEDF               	btfss	indf2,7,c
  6395  002762  D016               	goto	l278
  6396                           
  6397                           ; BSR set to: 4
  6398  002764  C024  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6399  002768  C025  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6400  00276C  A4DF               	btfss	indf2,2,c
  6401  00276E  D010               	goto	l278
  6402                           
  6403                           ; BSR set to: 4
  6404                           ;usb_device.c: 2176: CtrlTrfData[0]=0x01;
  6405  002770  0E01               	movlw	1
  6406  002772  0104               	movlb	4	; () banked
  6407  002774  6F38               	movwf	56,b	;volatile
  6408                           
  6409                           ; BSR set to: 4
  6410                           ;usb_device.c: 2178: }
  6411                           ;usb_device.c: 2179: }
  6412                           
  6413                           ; BSR set to: 4
  6414                           ;usb_device.c: 2177: break;
  6415  002776  D00C               	goto	l278
  6416  002778                     l4106:
  6417                           
  6418                           ; BSR set to: 4
  6419  002778  0104               	movlb	4	; () banked
  6420  00277A  5130               	movf	48,w,b	;volatile
  6421  00277C  0B1F               	andlw	31
  6422                           
  6423                           ; Switch size 1, requested type "space"
  6424                           ; Number of cases is 3, Range of values is 0 to 2
  6425                           ; switch strategies available:
  6426                           ; Name         Instructions Cycles
  6427                           ; simple_byte           10     6 (average)
  6428                           ;	Chosen strategy is simple_byte
  6429  00277E  0A00               	xorlw	0	; case 0
  6430  002780  B4D8               	btfsc	status,2,c
  6431  002782  D7BD               	goto	l275
  6432  002784  0A01               	xorlw	1	; case 1
  6433  002786  B4D8               	btfsc	status,2,c
  6434  002788  D7C5               	goto	l279
  6435  00278A  0A03               	xorlw	3	; case 2
  6436  00278C  B4D8               	btfsc	status,2,c
  6437  00278E  D7C4               	goto	l280
  6438  002790                     l278:
  6439                           
  6440                           ;usb_device.c: 2181: if(inPipes[0].info.bits.busy == 1)
  6441  002790  AE59               	btfss	_inPipes+3,7,c
  6442  002792  0012               	return	
  6443                           
  6444                           ;usb_device.c: 2182: {
  6445                           ;usb_device.c: 2183: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6446  002794  0E38               	movlw	56
  6447  002796  6E56               	movwf	_inPipes,c
  6448  002798  0E04               	movlw	4
  6449  00279A  6E57               	movwf	_inPipes+1,c
  6450                           
  6451                           ;usb_device.c: 2184: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6452  00279C  8059               	bsf	_inPipes+3,0,c
  6453                           
  6454                           ;usb_device.c: 2185: inPipes[0].wCount.v[0] = 2;
  6455  00279E  0E02               	movlw	2
  6456  0027A0  6E5A               	movwf	_inPipes+4,c
  6457  0027A2  0012               	return	
  6458  0027A4  0012               	return		;funcret
  6459  0027A6                     __end_of_USBStdGetStatusHandler:
  6460                           	opt stack 0
  6461                           tblptru	equ	0xFF8
  6462                           tblptrh	equ	0xFF7
  6463                           tblptrl	equ	0xFF6
  6464                           tablat	equ	0xFF5
  6465                           prodh	equ	0xFF4
  6466                           prodl	equ	0xFF3
  6467                           intcon	equ	0xFF2
  6468                           postinc0	equ	0xFEE
  6469                           wreg	equ	0xFE8
  6470                           indf1	equ	0xFE7
  6471                           postdec1	equ	0xFE5
  6472                           fsr1h	equ	0xFE2
  6473                           fsr1l	equ	0xFE1
  6474                           indf2	equ	0xFDF
  6475                           postinc2	equ	0xFDE
  6476                           postdec2	equ	0xFDD
  6477                           plusw2	equ	0xFDB
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8
  6481                           
  6482 ;; *************** function _USBStdGetDscHandler *****************
  6483 ;; Defined at:
  6484 ;;		line 2046 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6498 ;;      Params:         0       0       0       0       0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6500 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6501 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6502 ;;Total ram usage:        2 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    4
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_USBCheckStdRequest
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text21
  6513  0019A8                     __ptext21:
  6514                           	opt stack 0
  6515  0019A8                     _USBStdGetDscHandler:
  6516                           	opt stack 21
  6517                           
  6518                           ;usb_device.c: 2048: if(SetupPkt.bmRequestType == 0x80)
  6519                           
  6520                           ;incstack = 0
  6521  0019A8  0E80               	movlw	128
  6522  0019AA  0104               	movlb	4	; () banked
  6523  0019AC  1930               	xorwf	48,w,b	;volatile
  6524  0019AE  A4D8               	btfss	status,2,c
  6525  0019B0  0012               	return	
  6526                           
  6527                           ; BSR set to: 4
  6528                           ;usb_device.c: 2049: {
  6529                           ;usb_device.c: 2050: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6530  0019B2  0EC0               	movlw	192
  6531  0019B4  6E59               	movwf	_inPipes+3,c
  6532                           
  6533                           ;usb_device.c: 2052: switch(SetupPkt.bDescriptorType)
  6534  0019B6  D07C               	goto	l4084
  6535  0019B8                     l4058:
  6536                           
  6537                           ; BSR set to: 4
  6538                           ;usb_device.c: 2058: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6539  0019B8  0E8C               	movlw	low _device_dsc
  6540  0019BA  6E56               	movwf	_inPipes,c
  6541  0019BC  0E08               	movlw	high _device_dsc
  6542  0019BE  6E57               	movwf	_inPipes+1,c
  6543                           
  6544                           ; BSR set to: 4
  6545                           ;usb_device.c: 2060: inPipes[0].wCount.Val = sizeof(device_dsc);
  6546  0019C0  0E00               	movlw	0
  6547  0019C2  6E5B               	movwf	_inPipes+5,c
  6548  0019C4  0E12               	movlw	18
  6549  0019C6  6E5A               	movwf	_inPipes+4,c
  6550                           
  6551                           ;usb_device.c: 2061: break;
  6552  0019C8  0012               	return	
  6553  0019CA                     l4062:
  6554                           
  6555                           ; BSR set to: 4
  6556                           ;usb_device.c: 2066: if(SetupPkt.bDscIndex < 1)
  6557  0019CA  0104               	movlb	4	; () banked
  6558  0019CC  5132               	movf	50,w,b	;volatile
  6559  0019CE  A4D8               	btfss	status,2,c
  6560  0019D0  D03E               	goto	l4070
  6561                           
  6562                           ; BSR set to: 4
  6563                           ;usb_device.c: 2067: {
  6564                           ;usb_device.c: 2071: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6565  0019D2  0104               	movlb	4	; () banked
  6566  0019D4  5132               	movf	50,w,b	;volatile
  6567  0019D6  0D02               	mullw	2
  6568  0019D8  0E09               	movlw	low _USB_CD_Ptr
  6569  0019DA  24F3               	addwf	prodl,w,c
  6570  0019DC  6EF6               	movwf	tblptrl,c
  6571  0019DE  0E08               	movlw	high _USB_CD_Ptr
  6572  0019E0  20F4               	addwfc	prodh,w,c
  6573  0019E2  6EF7               	movwf	tblptrh,c
  6574  0019E4                     	if	0	;There are less than 3 active tblptr bytes
  6575  0019E4                     	endif
  6576  0019E4  0009               	tblrd		*+
  6577  0019E6  CFF5 F056          	movff	tablat,_inPipes
  6578  0019EA  000A               	tblrd		*-
  6579  0019EC  CFF5 F057          	movff	tablat,_inPipes+1
  6580                           
  6581                           ; BSR set to: 4
  6582                           ;usb_device.c: 2077: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6583  0019F0  0E02               	movlw	2
  6584  0019F2  2456               	addwf	_inPipes,w,c
  6585  0019F4  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6586  0019F6  0E00               	movlw	0
  6587  0019F8  2057               	addwfc	_inPipes+1,w,c
  6588  0019FA  6E24               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  6589  0019FC  C023  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6590  001A00  C024  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6591  001A04  6AF8               	clrf	tblptru,c
  6592  001A06  0E07               	movlw	(high __ramtop+-1)
  6593  001A08  64F7               	cpfsgt	tblptrh,c
  6594  001A0A  D003               	bra	u2767
  6595  001A0C  0008               	tblrd		*
  6596  001A0E  50F5               	movf	tablat,w,c
  6597  001A10  D005               	bra	u2760
  6598  001A12                     u2767:
  6599  001A12  CFF6 FFE1          	movff	tblptrl,fsr1l
  6600  001A16  CFF7 FFE2          	movff	tblptrh,fsr1h
  6601  001A1A  50E7               	movf	indf1,w,c
  6602  001A1C                     u2760:
  6603  001A1C  6E5A               	movwf	_inPipes+4,c
  6604                           
  6605                           ;usb_device.c: 2078: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6606  001A1E  0E03               	movlw	3
  6607  001A20  2456               	addwf	_inPipes,w,c
  6608  001A22  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6609  001A24  0E00               	movlw	0
  6610  001A26  2057               	addwfc	_inPipes+1,w,c
  6611  001A28  6E24               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  6612  001A2A  C023  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6613  001A2E  C024  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6614  001A32  6AF8               	clrf	tblptru,c
  6615  001A34  0E07               	movlw	(high __ramtop+-1)
  6616  001A36  64F7               	cpfsgt	tblptrh,c
  6617  001A38  D003               	bra	u2777
  6618  001A3A  0008               	tblrd		*
  6619  001A3C  50F5               	movf	tablat,w,c
  6620  001A3E  D005               	bra	u2770
  6621  001A40                     u2777:
  6622  001A40  CFF6 FFE1          	movff	tblptrl,fsr1l
  6623  001A44  CFF7 FFE2          	movff	tblptrh,fsr1h
  6624  001A48  50E7               	movf	indf1,w,c
  6625  001A4A                     u2770:
  6626  001A4A  6E5B               	movwf	_inPipes+5,c
  6627                           
  6628                           ;usb_device.c: 2079: }
  6629  001A4C  0012               	return	
  6630  001A4E                     l4070:
  6631                           
  6632                           ;usb_device.c: 2080: else
  6633                           ;usb_device.c: 2081: {
  6634                           ;usb_device.c: 2082: inPipes[0].info.Val = 0;
  6635  001A4E  0E00               	movlw	0
  6636  001A50  6E59               	movwf	_inPipes+3,c
  6637                           
  6638                           ;usb_device.c: 2083: }
  6639                           ;usb_device.c: 2084: break;
  6640  001A52  0012               	return	
  6641  001A54                     l4072:
  6642                           
  6643                           ;usb_device.c: 2089: if(SetupPkt.bDscIndex<4)
  6644  001A54  0E04               	movlw	4
  6645  001A56  0104               	movlb	4	; () banked
  6646  001A58  6132               	cpfslt	50,b	;volatile
  6647  001A5A  D024               	goto	l4078
  6648                           
  6649                           ; BSR set to: 4
  6650                           ;usb_device.c: 2090: {
  6651                           ;usb_device.c: 2092: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6652  001A5C  0104               	movlb	4	; () banked
  6653  001A5E  5132               	movf	50,w,b	;volatile
  6654  001A60  0D02               	mullw	2
  6655  001A62  0E01               	movlw	low _USB_SD_Ptr
  6656  001A64  24F3               	addwf	prodl,w,c
  6657  001A66  6EF6               	movwf	tblptrl,c
  6658  001A68  0E08               	movlw	high _USB_SD_Ptr
  6659  001A6A  20F4               	addwfc	prodh,w,c
  6660  001A6C  6EF7               	movwf	tblptrh,c
  6661  001A6E                     	if	0	;There are less than 3 active tblptr bytes
  6662  001A6E                     	endif
  6663  001A6E  0009               	tblrd		*+
  6664  001A70  CFF5 F056          	movff	tablat,_inPipes
  6665  001A74  000A               	tblrd		*-
  6666  001A76  CFF5 F057          	movff	tablat,_inPipes+1
  6667                           
  6668                           ; BSR set to: 4
  6669                           ;usb_device.c: 2094: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6670  001A7A  C056  FFF6         	movff	_inPipes,tblptrl
  6671  001A7E  C057  FFF7         	movff	_inPipes+1,tblptrh
  6672  001A82  6AF8               	clrf	tblptru,c
  6673  001A84  0E07               	movlw	(high __ramtop+-1)
  6674  001A86  64F7               	cpfsgt	tblptrh,c
  6675  001A88  D003               	bra	u2797
  6676  001A8A  0008               	tblrd		*
  6677  001A8C  50F5               	movf	tablat,w,c
  6678  001A8E  D005               	bra	u2790
  6679  001A90                     u2797:
  6680  001A90  CFF6 FFE1          	movff	tblptrl,fsr1l
  6681  001A94  CFF7 FFE2          	movff	tblptrh,fsr1h
  6682  001A98  50E7               	movf	indf1,w,c
  6683  001A9A                     u2790:
  6684  001A9A  6E23               	movwf	??_USBStdGetDscHandler& (0+255),c
  6685  001A9C  5023               	movf	??_USBStdGetDscHandler,w,c
  6686  001A9E  6E5A               	movwf	_inPipes+4,c
  6687  001AA0  6A5B               	clrf	_inPipes+5,c
  6688                           
  6689                           ;usb_device.c: 2095: }
  6690  001AA2  0012               	return	
  6691  001AA4                     l4078:
  6692                           
  6693                           ;usb_device.c: 2105: else
  6694                           ;usb_device.c: 2106: {
  6695                           ;usb_device.c: 2107: inPipes[0].info.Val = 0;
  6696  001AA4  0E00               	movlw	0
  6697  001AA6  6E59               	movwf	_inPipes+3,c
  6698                           
  6699                           ;usb_device.c: 2108: }
  6700                           ;usb_device.c: 2109: break;
  6701  001AA8  0012               	return	
  6702  001AAA                     l4080:
  6703                           
  6704                           ;usb_device.c: 2111: inPipes[0].info.Val = 0;
  6705  001AAA  0E00               	movlw	0
  6706  001AAC  6E59               	movwf	_inPipes+3,c
  6707                           
  6708                           ;usb_device.c: 2113: }
  6709                           
  6710                           ;usb_device.c: 2112: break;
  6711  001AAE  0012               	return	
  6712  001AB0                     l4084:
  6713  001AB0  0104               	movlb	4	; () banked
  6714  001AB2  5133               	movf	51,w,b	;volatile
  6715                           
  6716                           ; Switch size 1, requested type "space"
  6717                           ; Number of cases is 3, Range of values is 1 to 3
  6718                           ; switch strategies available:
  6719                           ; Name         Instructions Cycles
  6720                           ; simple_byte           10     6 (average)
  6721                           ;	Chosen strategy is simple_byte
  6722  001AB4  0A01               	xorlw	1	; case 1
  6723  001AB6  B4D8               	btfsc	status,2,c
  6724  001AB8  D77F               	goto	l4058
  6725  001ABA  0A03               	xorlw	3	; case 2
  6726  001ABC  B4D8               	btfsc	status,2,c
  6727  001ABE  D785               	goto	l4062
  6728  001AC0  0A01               	xorlw	1	; case 3
  6729  001AC2  B4D8               	btfsc	status,2,c
  6730  001AC4  D7C7               	goto	l4072
  6731  001AC6  D7F1               	goto	l4080
  6732                           
  6733                           ; BSR set to: 4
  6734  001AC8  0012               	return	
  6735                           
  6736                           ; BSR set to: 4
  6737  001ACA  0012               	return		;funcret
  6738  001ACC                     __end_of_USBStdGetDscHandler:
  6739                           	opt stack 0
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           intcon	equ	0xFF2
  6747                           postinc0	equ	0xFEE
  6748                           wreg	equ	0xFE8
  6749                           indf1	equ	0xFE7
  6750                           postdec1	equ	0xFE5
  6751                           fsr1h	equ	0xFE2
  6752                           fsr1l	equ	0xFE1
  6753                           indf2	equ	0xFDF
  6754                           postinc2	equ	0xFDE
  6755                           postdec2	equ	0xFDD
  6756                           plusw2	equ	0xFDB
  6757                           fsr2h	equ	0xFDA
  6758                           fsr2l	equ	0xFD9
  6759                           status	equ	0xFD8
  6760                           
  6761 ;; *************** function _USBStdFeatureReqHandler *****************
  6762 ;; Defined at:
  6763 ;;		line 2760 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;		None
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  p               2   58[COMRAM] PTR struct __BDT
  6768 ;;		 -> NULL(0), BDT(48), 
  6769 ;;  pUEP            2   55[COMRAM] PTR unsigned char 
  6770 ;;		 -> UEP0(1), RAM(2047), 
  6771 ;;  current_ep_d    1   57[COMRAM] struct .
  6772 ;; Return value:  Size  Location     Type
  6773 ;;		None               void
  6774 ;; Registers used:
  6775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6784 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:        6 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    8
  6788 ;; This function calls:
  6789 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6790 ;; This function is called by:
  6791 ;;		_USBCheckStdRequest
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text22
  6796  000D56                     __ptext22:
  6797                           	opt stack 0
  6798  000D56                     _USBStdFeatureReqHandler:
  6799                           	opt stack 17
  6800                           
  6801                           ;usb_device.c: 2762: BDT_ENTRY *p;
  6802                           ;usb_device.c: 2763: EP_STATUS current_ep_data;
  6803                           ;usb_device.c: 2767: unsigned char* pUEP;
  6804                           ;usb_device.c: 2805: if((SetupPkt.bFeature == 1)&&
  6805                           ;usb_device.c: 2806: (SetupPkt.Recipient == (0x00)))
  6806                           
  6807                           ;incstack = 0
  6808  000D56  0104               	movlb	4	; () banked
  6809  000D58  0532               	decf	50,w,b	;volatile
  6810  000D5A  A4D8               	btfss	status,2,c
  6811  000D5C  D012               	goto	l354
  6812                           
  6813                           ; BSR set to: 4
  6814  000D5E  0104               	movlb	4	; () banked
  6815  000D60  5130               	movf	48,w,b	;volatile
  6816  000D62  0B1F               	andlw	31
  6817  000D64  0900               	iorlw	0
  6818  000D66  A4D8               	btfss	status,2,c
  6819  000D68  D00C               	goto	l354
  6820                           
  6821                           ; BSR set to: 4
  6822                           ;usb_device.c: 2807: {
  6823                           ;usb_device.c: 2808: inPipes[0].info.bits.busy = 1;
  6824  000D6A  8E59               	bsf	_inPipes+3,7,c
  6825                           
  6826                           ; BSR set to: 4
  6827                           ;usb_device.c: 2809: if(SetupPkt.bRequest == 3)
  6828  000D6C  0E03               	movlw	3
  6829  000D6E  0104               	movlb	4	; () banked
  6830  000D70  1931               	xorwf	49,w,b	;volatile
  6831  000D72  A4D8               	btfss	status,2,c
  6832  000D74  D002               	goto	l4124
  6833                           
  6834                           ; BSR set to: 4
  6835                           ;usb_device.c: 2810: RemoteWakeup = 1;
  6836  000D76  0E01               	movlw	1
  6837  000D78  D001               	goto	L4
  6838  000D7A                     l4124:
  6839                           
  6840                           ;usb_device.c: 2811: else
  6841                           ;usb_device.c: 2812: RemoteWakeup = 0;
  6842  000D7A  0E00               	movlw	0
  6843  000D7C                     L4:
  6844  000D7C  0100               	movlb	0	; () banked
  6845  000D7E  6F95               	movwf	_RemoteWakeup& (0+255),b
  6846  000D80  D000               	goto	l354
  6847  000D82                     l354:
  6848                           
  6849                           ;usb_device.c: 2813: }
  6850                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 0)&&
  6851                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x02))&&
  6852                           ;usb_device.c: 2818: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6853                           ;usb_device.c: 2819: (USBDeviceState == CONFIGURED_STATE))
  6854  000D82  0104               	movlb	4	; () banked
  6855  000D84  5132               	movf	50,w,b	;volatile
  6856  000D86  A4D8               	btfss	status,2,c
  6857  000D88  0012               	return	
  6858                           
  6859                           ; BSR set to: 4
  6860  000D8A  0104               	movlb	4	; () banked
  6861  000D8C  5130               	movf	48,w,b	;volatile
  6862  000D8E  0B1F               	andlw	31
  6863  000D90  0A02               	xorlw	2
  6864  000D92  A4D8               	btfss	status,2,c
  6865  000D94  0012               	return	
  6866                           
  6867                           ; BSR set to: 4
  6868  000D96  0104               	movlb	4	; () banked
  6869  000D98  5134               	movf	52,w,b	;volatile
  6870  000D9A  0B0F               	andlw	15
  6871  000D9C  0900               	iorlw	0
  6872  000D9E  B4D8               	btfsc	status,2,c
  6873  000DA0  0012               	return	
  6874                           
  6875                           ; BSR set to: 4
  6876  000DA2  0104               	movlb	4	; () banked
  6877  000DA4  5134               	movf	52,w,b	;volatile
  6878  000DA6  0B0F               	andlw	15
  6879  000DA8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6880  000DAA  0E03               	movlw	3
  6881  000DAC  6037               	cpfslt	??_USBStdFeatureReqHandler,c
  6882  000DAE  0012               	return	
  6883                           
  6884                           ; BSR set to: 4
  6885  000DB0  0E20               	movlw	32
  6886  000DB2  0100               	movlb	0	; () banked
  6887  000DB4  1997               	xorwf	_USBDeviceState& (0+255),w,b
  6888  000DB6  A4D8               	btfss	status,2,c
  6889  000DB8  0012               	return	
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;usb_device.c: 2820: {
  6893                           ;usb_device.c: 2823: inPipes[0].info.bits.busy = 1;
  6894  000DBA  8E59               	bsf	_inPipes+3,7,c
  6895                           
  6896                           ;usb_device.c: 2826: if(SetupPkt.EPDir == 0)
  6897  000DBC  0104               	movlb	4	; () banked
  6898  000DBE  BF34               	btfsc	52,7,b	;volatile
  6899  000DC0  D01B               	goto	l4138
  6900                           
  6901                           ; BSR set to: 4
  6902                           ;usb_device.c: 2827: {
  6903                           ;usb_device.c: 2828: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6904  000DC2  0104               	movlb	4	; () banked
  6905  000DC4  5134               	movf	52,w,b	;volatile
  6906  000DC6  0B0F               	andlw	15
  6907  000DC8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6908  000DCA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6909  000DCC  0D02               	mullw	2
  6910  000DCE  0E72               	movlw	low _pBDTEntryOut
  6911  000DD0  24F3               	addwf	prodl,w,c
  6912  000DD2  6ED9               	movwf	fsr2l,c
  6913  000DD4  0E00               	movlw	high _pBDTEntryOut
  6914  000DD6  20F4               	addwfc	prodh,w,c
  6915  000DD8  6EDA               	movwf	fsr2h,c
  6916  000DDA  CFDE F03B          	movff	postinc2,USBStdFeatureReqHandler@p
  6917  000DDE  CFDD F03C          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6918                           
  6919                           ;usb_device.c: 2829: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6920  000DE2  0104               	movlb	4	; () banked
  6921  000DE4  5134               	movf	52,w,b	;volatile
  6922  000DE6  0B0F               	andlw	15
  6923  000DE8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6924  000DEA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6925  000DEC  0D01               	mullw	1
  6926  000DEE  0E7F               	movlw	low _ep_data_out
  6927  000DF0  24F3               	addwf	prodl,w,c
  6928  000DF2  6ED9               	movwf	fsr2l,c
  6929  000DF4  0E00               	movlw	high _ep_data_out
  6930  000DF6  D01A               	goto	L5
  6931  000DF8                     l4138:
  6932                           
  6933                           ; BSR set to: 4
  6934                           ;usb_device.c: 2831: else
  6935                           ;usb_device.c: 2832: {
  6936                           ;usb_device.c: 2833: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6937  000DF8  0104               	movlb	4	; () banked
  6938  000DFA  5134               	movf	52,w,b	;volatile
  6939  000DFC  0B0F               	andlw	15
  6940  000DFE  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6941  000E00  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6942  000E02  0D02               	mullw	2
  6943  000E04  0E3E               	movlw	low _pBDTEntryIn
  6944  000E06  24F3               	addwf	prodl,w,c
  6945  000E08  6ED9               	movwf	fsr2l,c
  6946  000E0A  0E00               	movlw	high _pBDTEntryIn
  6947  000E0C  20F4               	addwfc	prodh,w,c
  6948  000E0E  6EDA               	movwf	fsr2h,c
  6949  000E10  CFDE F03B          	movff	postinc2,USBStdFeatureReqHandler@p
  6950  000E14  CFDD F03C          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6951                           
  6952                           ;usb_device.c: 2834: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6953  000E18  0104               	movlb	4	; () banked
  6954  000E1A  5134               	movf	52,w,b	;volatile
  6955  000E1C  0B0F               	andlw	15
  6956  000E1E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6957  000E20  5037               	movf	??_USBStdFeatureReqHandler,w,c
  6958  000E22  0D01               	mullw	1
  6959  000E24  0E7C               	movlw	low _ep_data_in
  6960  000E26  24F3               	addwf	prodl,w,c
  6961  000E28  6ED9               	movwf	fsr2l,c
  6962  000E2A  0E00               	movlw	high _ep_data_in
  6963  000E2C                     L5:
  6964  000E2C  20F4               	addwfc	prodh,w,c
  6965  000E2E  6EDA               	movwf	fsr2h,c
  6966  000E30  50DF               	movf	indf2,w,c
  6967  000E32  6E3A               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  6968  000E34  D000               	goto	l4140
  6969  000E36                     l4140:
  6970                           
  6971                           ; BSR set to: 4
  6972                           ;usb_device.c: 2835: }
  6973                           ;usb_device.c: 2841: if(current_ep_data.bits.ping_pong_state == 0)
  6974  000E36  B03A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  6975  000E38  D002               	goto	l4144
  6976                           
  6977                           ; BSR set to: 4
  6978                           ;usb_device.c: 2842: {
  6979                           ;usb_device.c: 2843: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6980  000E3A  943B               	bcf	USBStdFeatureReqHandler@p,2,c
  6981                           
  6982                           ;usb_device.c: 2844: }
  6983  000E3C  D002               	goto	l4146
  6984  000E3E                     l4144:
  6985                           
  6986                           ; BSR set to: 4
  6987                           ;usb_device.c: 2845: else
  6988                           ;usb_device.c: 2846: {
  6989                           ;usb_device.c: 2847: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6990  000E3E  843B               	bsf	USBStdFeatureReqHandler@p,2,c
  6991  000E40  D000               	goto	l4146
  6992  000E42                     l4146:
  6993                           
  6994                           ; BSR set to: 4
  6995                           ;usb_device.c: 2848: }
  6996                           ;usb_device.c: 2853: if(SetupPkt.EPDir == 0)
  6997  000E42  0104               	movlb	4	; () banked
  6998  000E44  BF34               	btfsc	52,7,b	;volatile
  6999  000E46  D00B               	goto	l4150
  7000                           
  7001                           ; BSR set to: 4
  7002                           ;usb_device.c: 2854: {
  7003                           ;usb_device.c: 2855: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7004  000E48  0104               	movlb	4	; () banked
  7005  000E4A  5134               	movf	52,w,b	;volatile
  7006  000E4C  0B0F               	andlw	15
  7007  000E4E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7008  000E50  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7009  000E52  0D02               	mullw	2
  7010  000E54  0E72               	movlw	low _pBDTEntryOut
  7011  000E56  24F3               	addwf	prodl,w,c
  7012  000E58  6ED9               	movwf	fsr2l,c
  7013  000E5A  0E00               	movlw	high _pBDTEntryOut
  7014  000E5C  D00A               	goto	L6
  7015  000E5E                     l4150:
  7016                           
  7017                           ; BSR set to: 4
  7018                           ;usb_device.c: 2857: else
  7019                           ;usb_device.c: 2858: {
  7020                           ;usb_device.c: 2859: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7021  000E5E  0104               	movlb	4	; () banked
  7022  000E60  5134               	movf	52,w,b	;volatile
  7023  000E62  0B0F               	andlw	15
  7024  000E64  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7025  000E66  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7026  000E68  0D02               	mullw	2
  7027  000E6A  0E3E               	movlw	low _pBDTEntryIn
  7028  000E6C  24F3               	addwf	prodl,w,c
  7029  000E6E  6ED9               	movwf	fsr2l,c
  7030  000E70  0E00               	movlw	high _pBDTEntryIn
  7031  000E72                     L6:
  7032  000E72  20F4               	addwfc	prodh,w,c
  7033  000E74  6EDA               	movwf	fsr2h,c
  7034  000E76  C03B  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7035  000E7A  C03C  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7036  000E7E  D000               	goto	l4152
  7037  000E80                     l4152:
  7038                           
  7039                           ; BSR set to: 4
  7040                           ;usb_device.c: 2860: }
  7041                           ;usb_device.c: 2863: if(SetupPkt.bRequest == 3)
  7042  000E80  0E03               	movlw	3
  7043  000E82  0104               	movlb	4	; () banked
  7044  000E84  1931               	xorwf	49,w,b	;volatile
  7045  000E86  A4D8               	btfss	status,2,c
  7046  000E88  D030               	goto	l4166
  7047                           
  7048                           ; BSR set to: 4
  7049                           ;usb_device.c: 2864: {
  7050                           ;usb_device.c: 2865: if(p->STAT.UOWN == 1)
  7051  000E8A  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7052  000E8E  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7053  000E92  AEDF               	btfss	indf2,7,c
  7054  000E94  D01D               	goto	l4162
  7055                           
  7056                           ; BSR set to: 4
  7057                           ;usb_device.c: 2866: {
  7058                           ;usb_device.c: 2869: if(SetupPkt.EPDir == 0)
  7059  000E96  0104               	movlb	4	; () banked
  7060  000E98  BF34               	btfsc	52,7,b	;volatile
  7061  000E9A  D00B               	goto	l4160
  7062                           
  7063                           ; BSR set to: 4
  7064                           ;usb_device.c: 2870: {
  7065                           ;usb_device.c: 2871: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7066  000E9C  0104               	movlb	4	; () banked
  7067  000E9E  5134               	movf	52,w,b	;volatile
  7068  000EA0  0B0F               	andlw	15
  7069  000EA2  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7070  000EA4  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7071  000EA6  0D01               	mullw	1
  7072  000EA8  0E7F               	movlw	low _ep_data_out
  7073  000EAA  24F3               	addwf	prodl,w,c
  7074  000EAC  6ED9               	movwf	fsr2l,c
  7075  000EAE  0E00               	movlw	high _ep_data_out
  7076  000EB0  D00A               	goto	L7
  7077  000EB2                     l4160:
  7078                           
  7079                           ;usb_device.c: 2873: else
  7080                           ;usb_device.c: 2874: {
  7081                           ;usb_device.c: 2875: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7082  000EB2  0104               	movlb	4	; () banked
  7083  000EB4  5134               	movf	52,w,b	;volatile
  7084  000EB6  0B0F               	andlw	15
  7085  000EB8  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7086  000EBA  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7087  000EBC  0D01               	mullw	1
  7088  000EBE  0E7C               	movlw	low _ep_data_in
  7089  000EC0  24F3               	addwf	prodl,w,c
  7090  000EC2  6ED9               	movwf	fsr2l,c
  7091  000EC4  0E00               	movlw	high _ep_data_in
  7092  000EC6                     L7:
  7093  000EC6  20F4               	addwfc	prodh,w,c
  7094  000EC8  6EDA               	movwf	fsr2h,c
  7095  000ECA  0100               	movlb	0	; () banked
  7096  000ECC  82DF               	bsf	indf2,1,c
  7097                           
  7098                           ; BSR set to: 0
  7099  000ECE  D000               	goto	l4162
  7100  000ED0                     l4162:
  7101                           
  7102                           ;usb_device.c: 2876: }
  7103                           ;usb_device.c: 2877: }
  7104                           ;usb_device.c: 2880: p->STAT.Val |= 0x04;
  7105  000ED0  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7106  000ED4  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7107  000ED8  0E00               	movlw	0
  7108  000EDA  84DB               	bsf	plusw2,2,c
  7109                           
  7110                           ;usb_device.c: 2881: p->STAT.Val |= 0x80;
  7111  000EDC  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7112  000EE0  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7113  000EE4  0E00               	movlw	0
  7114  000EE6  8EDB               	bsf	plusw2,7,c
  7115                           
  7116                           ;usb_device.c: 2882: }
  7117  000EE8  0012               	return	
  7118  000EEA                     l4166:
  7119                           
  7120                           ;usb_device.c: 2883: else
  7121                           ;usb_device.c: 2884: {
  7122                           ;usb_device.c: 2888: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7123  000EEA  0E04               	movlw	4
  7124  000EEC  1A3B               	xorwf	USBStdFeatureReqHandler@p,f,c
  7125                           
  7126                           ;usb_device.c: 2890: if(p->STAT.UOWN == 1)
  7127  000EEE  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7128  000EF2  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7129  000EF6  AEDF               	btfss	indf2,7,c
  7130  000EF8  D01B               	goto	l4176
  7131                           
  7132                           ;usb_device.c: 2891: {
  7133                           ;usb_device.c: 2894: p->STAT.Val &= (~0x80);
  7134  000EFA  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7135  000EFE  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7136  000F02  0E7F               	movlw	127
  7137  000F04  16DF               	andwf	indf2,f,c
  7138                           
  7139                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7140  000F06  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7141  000F0A  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7142  000F0E  0E00               	movlw	0
  7143  000F10  8CDB               	bsf	plusw2,6,c
  7144                           
  7145                           ;usb_device.c: 2896: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7146  000F12  0E00               	movlw	0
  7147  000F14  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7148  000F16  0E05               	movlw	5
  7149  000F18  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7150  000F1A  C03B  F031         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7151  000F1E  C03C  F032         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7152  000F22  0E00               	movlw	0
  7153  000F24  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7154  000F26  0E02               	movlw	2
  7155  000F28  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7156  000F2A  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7157                           
  7158                           ;usb_device.c: 2897: }
  7159  000F2E  D007               	goto	l4178
  7160  000F30                     l4176:
  7161                           
  7162                           ;usb_device.c: 2898: else
  7163                           ;usb_device.c: 2899: {
  7164                           ;usb_device.c: 2901: p->STAT.Val |= 0x40;
  7165  000F30  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7166  000F34  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7167  000F38  0E00               	movlw	0
  7168  000F3A  8CDB               	bsf	plusw2,6,c
  7169  000F3C  D000               	goto	l4178
  7170  000F3E                     l4178:
  7171                           
  7172                           ;usb_device.c: 2902: }
  7173                           ;usb_device.c: 2906: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7174  000F3E  0E04               	movlw	4
  7175  000F40  1A3B               	xorwf	USBStdFeatureReqHandler@p,f,c
  7176                           
  7177                           ;usb_device.c: 2912: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7178  000F42  B23A               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7179  000F44  D006               	goto	l373
  7180  000F46  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7181  000F4A  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7182  000F4E  AEDF               	btfss	indf2,7,c
  7183  000F50  D032               	goto	l4192
  7184  000F52                     l373:
  7185                           
  7186                           ;usb_device.c: 2913: {
  7187                           ;usb_device.c: 2914: if(SetupPkt.EPDir == 0)
  7188  000F52  0104               	movlb	4	; () banked
  7189  000F54  BF34               	btfsc	52,7,b	;volatile
  7190  000F56  D00B               	goto	l4186
  7191                           
  7192                           ; BSR set to: 4
  7193                           ;usb_device.c: 2915: {
  7194                           ;usb_device.c: 2916: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7195  000F58  0104               	movlb	4	; () banked
  7196  000F5A  5134               	movf	52,w,b	;volatile
  7197  000F5C  0B0F               	andlw	15
  7198  000F5E  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7199  000F60  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7200  000F62  0D01               	mullw	1
  7201  000F64  0E7F               	movlw	low _ep_data_out
  7202  000F66  24F3               	addwf	prodl,w,c
  7203  000F68  6ED9               	movwf	fsr2l,c
  7204  000F6A  0E00               	movlw	high _ep_data_out
  7205  000F6C  D00A               	goto	L8
  7206  000F6E                     l4186:
  7207                           
  7208                           ;usb_device.c: 2918: else
  7209                           ;usb_device.c: 2919: {
  7210                           ;usb_device.c: 2920: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7211  000F6E  0104               	movlb	4	; () banked
  7212  000F70  5134               	movf	52,w,b	;volatile
  7213  000F72  0B0F               	andlw	15
  7214  000F74  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7215  000F76  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7216  000F78  0D01               	mullw	1
  7217  000F7A  0E7C               	movlw	low _ep_data_in
  7218  000F7C  24F3               	addwf	prodl,w,c
  7219  000F7E  6ED9               	movwf	fsr2l,c
  7220  000F80  0E00               	movlw	high _ep_data_in
  7221  000F82                     L8:
  7222  000F82  20F4               	addwfc	prodh,w,c
  7223  000F84  6EDA               	movwf	fsr2h,c
  7224  000F86  0100               	movlb	0	; () banked
  7225  000F88  92DF               	bcf	indf2,1,c
  7226  000F8A  D000               	goto	l4188
  7227  000F8C                     l4188:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;usb_device.c: 2921: }
  7231                           ;usb_device.c: 2923: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7232  000F8C  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7233  000F90  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7234  000F94  0E3B               	movlw	59
  7235  000F96  16DF               	andwf	indf2,f,c
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;usb_device.c: 2926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7239  000F98  0E00               	movlw	0
  7240  000F9A  6E30               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7241  000F9C  0E05               	movlw	5
  7242  000F9E  6E2F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7243  000FA0  C03B  F031         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7244  000FA4  C03C  F032         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7245  000FA8  0E00               	movlw	0
  7246  000FAA  6E34               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7247  000FAC  0E02               	movlw	2
  7248  000FAE  6E33               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7249  000FB0  ECB2  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7250                           
  7251                           ;usb_device.c: 2927: }
  7252  000FB4  D007               	goto	l4194
  7253  000FB6                     l4192:
  7254                           
  7255                           ;usb_device.c: 2928: else
  7256                           ;usb_device.c: 2929: {
  7257                           ;usb_device.c: 2931: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7258  000FB6  C03B  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7259  000FBA  C03C  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7260  000FBE  0E3B               	movlw	59
  7261  000FC0  16DF               	andwf	indf2,f,c
  7262  000FC2  D000               	goto	l4194
  7263  000FC4                     l4194:
  7264                           
  7265                           ;usb_device.c: 2932: }
  7266                           ;usb_device.c: 2979: pUEP = (unsigned char*)(&*U1EP0_R+SetupPkt.EPNum);
  7267  000FC4  0104               	movlb	4	; () banked
  7268  000FC6  5134               	movf	52,w,b	;volatile
  7269  000FC8  0B0F               	andlw	15
  7270  000FCA  6E37               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7271  000FCC  5037               	movf	??_USBStdFeatureReqHandler,w,c
  7272  000FCE  0D01               	mullw	1
  7273  000FD0  50F3               	movf	prodl,w,c
  7274  000FD2  245D               	addwf	_U1EP0_R,w,c
  7275  000FD4  6E38               	movwf	USBStdFeatureReqHandler@pUEP,c
  7276  000FD6  50F4               	movf	prodh,w,c
  7277  000FD8  205E               	addwfc	_U1EP0_R+1,w,c
  7278  000FDA  6E39               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7279                           
  7280                           ; BSR set to: 4
  7281                           ;usb_device.c: 2983: *pUEP &= ~0x0001;
  7282  000FDC  C038  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7283  000FE0  C039  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7284  000FE4  0EFE               	movlw	254
  7285  000FE6  16DF               	andwf	indf2,f,c
  7286                           
  7287                           ; BSR set to: 4
  7288  000FE8  0012               	return	
  7289                           
  7290                           ; BSR set to: 4
  7291  000FEA  0012               	return		;funcret
  7292  000FEC                     __end_of_USBStdFeatureReqHandler:
  7293                           	opt stack 0
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           prodh	equ	0xFF4
  7299                           prodl	equ	0xFF3
  7300                           intcon	equ	0xFF2
  7301                           postinc0	equ	0xFEE
  7302                           wreg	equ	0xFE8
  7303                           indf1	equ	0xFE7
  7304                           postdec1	equ	0xFE5
  7305                           fsr1h	equ	0xFE2
  7306                           fsr1l	equ	0xFE1
  7307                           indf2	equ	0xFDF
  7308                           postinc2	equ	0xFDE
  7309                           postdec2	equ	0xFDD
  7310                           plusw2	equ	0xFDB
  7311                           fsr2h	equ	0xFDA
  7312                           fsr2l	equ	0xFD9
  7313                           status	equ	0xFD8
  7314                           
  7315 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7316 ;; Defined at:
  7317 ;;		line 271 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  event           2   46[COMRAM] enum E7520
  7320 ;;  pdata           2   48[COMRAM] PTR void 
  7321 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  7322 ;;  size            2   50[COMRAM] unsigned int 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;		None
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  1    wreg      unsigned char 
  7327 ;; Registers used:
  7328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7334 ;;      Params:         6       0       0       0       0       0       0       0       0
  7335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7336 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7337 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7338 ;;Total ram usage:        8 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; Hardware stack levels required when called:    7
  7341 ;; This function calls:
  7342 ;;		_CDCInitEP
  7343 ;;		_USBCheckCDCRequest
  7344 ;; This function is called by:
  7345 ;;		_USBDeviceTasks
  7346 ;;		_USBStdSetCfgHandler
  7347 ;;		_USBSuspend
  7348 ;;		_USBWakeFromSuspend
  7349 ;;		_USBCtrlTrfSetupHandler
  7350 ;;		_USBCheckStdRequest
  7351 ;;		_USBStdFeatureReqHandler
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text23
  7356  002D64                     __ptext23:
  7357                           	opt stack 0
  7358  002D64                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7359                           	opt stack 21
  7360                           
  7361                           ;karate.c: 273: switch( (int) event )
  7362                           
  7363                           ;incstack = 0
  7364  002D64  D007               	goto	l3906
  7365                           
  7366                           ;karate.c: 289: break;
  7367                           
  7368                           ;karate.c: 287: case EVENT_RESUME:
  7369                           
  7370                           ;karate.c: 285: break;
  7371                           
  7372                           ;karate.c: 283: case EVENT_SUSPEND:
  7373                           
  7374                           ;karate.c: 281: break;
  7375                           
  7376                           ;karate.c: 278: case EVENT_SOF:
  7377                           
  7378                           ;karate.c: 276: break;
  7379                           
  7380                           ;karate.c: 274: {
  7381                           ;karate.c: 275: case EVENT_TRANSFER:
  7382  002D66  0012               	return	
  7383  002D68                     l3900:
  7384                           
  7385                           ;karate.c: 294: CDCInitEP();
  7386  002D68  EC19  F016         	call	_CDCInitEP	;wreg free
  7387                           
  7388                           ;karate.c: 298: break;
  7389                           
  7390                           ;karate.c: 297: case EVENT_SET_DESCRIPTOR:
  7391                           
  7392                           ;karate.c: 295: break;
  7393  002D6C  0012               	return	
  7394  002D6E                     l3902:
  7395                           
  7396                           ;karate.c: 303: USBCheckCDCRequest();
  7397  002D6E  ECFA  F011         	call	_USBCheckCDCRequest	;wreg free
  7398                           
  7399                           ;karate.c: 314: }
  7400                           
  7401                           ;karate.c: 313: break;
  7402                           
  7403                           ;karate.c: 312: default:
  7404                           
  7405                           ;karate.c: 310: break;
  7406                           
  7407                           ;karate.c: 309: case EVENT_TRANSFER_TERMINATED:
  7408                           
  7409                           ;karate.c: 307: break;
  7410                           
  7411                           ;karate.c: 306: case EVENT_BUS_ERROR:
  7412                           
  7413                           ;karate.c: 304: break;
  7414  002D72  0012               	return	
  7415  002D74                     l3906:
  7416  002D74  C02F  F035         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7417  002D78  C030  F036         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7418                           
  7419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7420                           ; Switch size 1, requested type "space"
  7421                           ; Number of cases is 2, Range of values is 0 to 127
  7422                           ; switch strategies available:
  7423                           ; Name         Instructions Cycles
  7424                           ; simple_byte            7     4 (average)
  7425                           ;	Chosen strategy is simple_byte
  7426  002D7C  5036               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7427  002D7E  0A00               	xorlw	0	; case 0
  7428  002D80  B4D8               	btfsc	status,2,c
  7429  002D82  D004               	goto	l5732
  7430  002D84  0A7F               	xorlw	127	; case 127
  7431  002D86  A4D8               	btfss	status,2,c
  7432  002D88  0012               	return	
  7433  002D8A  D018               	goto	l5734
  7434  002D8C                     l5732:
  7435                           
  7436                           ; Switch size 1, requested type "space"
  7437                           ; Number of cases is 8, Range of values is 1 to 117
  7438                           ; switch strategies available:
  7439                           ; Name         Instructions Cycles
  7440                           ; simple_byte           25    13 (average)
  7441                           ;	Chosen strategy is simple_byte
  7442  002D8C  5035               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7443  002D8E  0A01               	xorlw	1	; case 1
  7444  002D90  B4D8               	btfsc	status,2,c
  7445  002D92  D7EA               	goto	l3900
  7446  002D94  0A03               	xorlw	3	; case 2
  7447  002D96  B4D8               	btfsc	status,2,c
  7448  002D98  0012               	return	
  7449  002D9A  0A01               	xorlw	1	; case 3
  7450  002D9C  B4D8               	btfsc	status,2,c
  7451  002D9E  D7E7               	goto	l3902
  7452  002DA0  0A06               	xorlw	6	; case 5
  7453  002DA2  B4D8               	btfsc	status,2,c
  7454  002DA4  0012               	return	
  7455  002DA6  0A77               	xorlw	119	; case 114
  7456  002DA8  B4D8               	btfsc	status,2,c
  7457  002DAA  0012               	return	
  7458  002DAC  0A01               	xorlw	1	; case 115
  7459  002DAE  B4D8               	btfsc	status,2,c
  7460  002DB0  0012               	return	
  7461  002DB2  0A07               	xorlw	7	; case 116
  7462  002DB4  B4D8               	btfsc	status,2,c
  7463  002DB6  0012               	return	
  7464  002DB8  0A01               	xorlw	1	; case 117
  7465  002DBA  0012               	return	
  7466  002DBC                     l5734:
  7467                           
  7468                           ; Switch size 1, requested type "space"
  7469                           ; Number of cases is 1, Range of values is 255 to 255
  7470                           ; switch strategies available:
  7471                           ; Name         Instructions Cycles
  7472                           ; simple_byte            4     3 (average)
  7473                           ;	Chosen strategy is simple_byte
  7474  002DBC  5035               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7475  002DBE  0AFF               	xorlw	255	; case 255
  7476  002DC0  0012               	return	
  7477                           
  7478                           ;karate.c: 315: return 1;
  7479                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7480  002DC2  0012               	return		;funcret
  7481  002DC4                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7482                           	opt stack 0
  7483                           tblptru	equ	0xFF8
  7484                           tblptrh	equ	0xFF7
  7485                           tblptrl	equ	0xFF6
  7486                           tablat	equ	0xFF5
  7487                           prodh	equ	0xFF4
  7488                           prodl	equ	0xFF3
  7489                           intcon	equ	0xFF2
  7490                           postinc0	equ	0xFEE
  7491                           wreg	equ	0xFE8
  7492                           indf1	equ	0xFE7
  7493                           postdec1	equ	0xFE5
  7494                           fsr1h	equ	0xFE2
  7495                           fsr1l	equ	0xFE1
  7496                           indf2	equ	0xFDF
  7497                           postinc2	equ	0xFDE
  7498                           postdec2	equ	0xFDD
  7499                           plusw2	equ	0xFDB
  7500                           fsr2h	equ	0xFDA
  7501                           fsr2l	equ	0xFD9
  7502                           status	equ	0xFD8
  7503                           
  7504 ;; *************** function _USBCheckCDCRequest *****************
  7505 ;; Defined at:
  7506 ;;		line 204 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;		None               void
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7520 ;;      Params:         0       0       0       0       0       0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7523 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7524 ;;Total ram usage:        0 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    4
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text24
  7535  0023F4                     __ptext24:
  7536                           	opt stack 0
  7537  0023F4                     _USBCheckCDCRequest:
  7538                           	opt stack 23
  7539                           
  7540                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
  7541                           
  7542                           ;incstack = 0
  7543  0023F4  0104               	movlb	4	; () banked
  7544  0023F6  5130               	movf	48,w,b	;volatile
  7545  0023F8  0B1F               	andlw	31
  7546  0023FA  06E8               	decf	wreg,f,c
  7547  0023FC  A4D8               	btfss	status,2,c
  7548  0023FE  0012               	return	
  7549  002400  D001               	goto	l3842
  7550                           
  7551                           ; BSR set to: 4
  7552  002402  0012               	return	
  7553  002404                     l3842:
  7554                           
  7555                           ; BSR set to: 4
  7556                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
  7557  002404  0104               	movlb	4	; () banked
  7558  002406  3930               	swapf	48,w,b	;volatile
  7559  002408  32E8               	rrcf	wreg,f,c
  7560  00240A  0B03               	andlw	3
  7561  00240C  06E8               	decf	wreg,f,c
  7562  00240E  A4D8               	btfss	status,2,c
  7563  002410  0012               	return	
  7564  002412  D001               	goto	l3846
  7565                           
  7566                           ; BSR set to: 4
  7567  002414  0012               	return	
  7568  002416                     l3846:
  7569                           
  7570                           ; BSR set to: 4
  7571                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
  7572                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
  7573  002416  0104               	movlb	4	; () banked
  7574  002418  5134               	movf	52,w,b	;volatile
  7575  00241A  B4D8               	btfsc	status,2,c
  7576  00241C  D03A               	goto	l3876
  7577                           
  7578                           ; BSR set to: 4
  7579  00241E  0104               	movlb	4	; () banked
  7580  002420  0534               	decf	52,w,b	;volatile
  7581  002422  A4D8               	btfss	status,2,c
  7582  002424  0012               	return	
  7583  002426  D035               	goto	l3876
  7584                           
  7585                           ; BSR set to: 4
  7586  002428  0012               	return	
  7587                           
  7588                           ; BSR set to: 4
  7589                           ;usb_device_cdc.c: 223: switch(SetupPkt.bRequest)
  7590  00242A  D033               	goto	l3876
  7591  00242C                     l3852:
  7592                           
  7593                           ; BSR set to: 4
  7594                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7595  00242C  0EA3               	movlw	low _dummy_encapsulated_cmd_response
  7596  00242E  6E56               	movwf	_inPipes,c
  7597  002430  0E00               	movlw	high _dummy_encapsulated_cmd_response
  7598  002432  6E57               	movwf	_inPipes+1,c
  7599                           
  7600                           ; BSR set to: 4
  7601                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
  7602  002434  0E00               	movlw	0
  7603  002436  6E5B               	movwf	_inPipes+5,c
  7604  002438  0E08               	movlw	8
  7605  00243A  6E5A               	movwf	_inPipes+4,c
  7606                           
  7607                           ; BSR set to: 4
  7608                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7609  00243C  8059               	bsf	_inPipes+3,0,c
  7610                           
  7611                           ; BSR set to: 4
  7612                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  7613  00243E  8E59               	bsf	_inPipes+3,7,c
  7614                           
  7615                           ;usb_device_cdc.c: 232: break;
  7616  002440  0012               	return	
  7617  002442                     l3860:
  7618                           
  7619                           ; BSR set to: 4
  7620                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7621  002442  0EA3               	movlw	low _dummy_encapsulated_cmd_response
  7622  002444  6E56               	movwf	_inPipes,c
  7623  002446  0E00               	movlw	high _dummy_encapsulated_cmd_response
  7624  002448  6E57               	movwf	_inPipes+1,c
  7625                           
  7626                           ; BSR set to: 4
  7627                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
  7628  00244A  8E59               	bsf	_inPipes+3,7,c
  7629                           
  7630                           ;usb_device_cdc.c: 237: break;
  7631  00244C  0012               	return	
  7632  00244E                     l428:
  7633                           
  7634                           ; BSR set to: 4
  7635                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
  7636  00244E  C436 F06E          	movff	1078,_outPipes+4	;volatile
  7637  002452  C437 F06F          	movff	1079,_outPipes+5	;volatile
  7638                           
  7639                           ; BSR set to: 4
  7640                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7641  002456  0EAB               	movlw	low _line_coding
  7642  002458  0100               	movlb	0	; () banked
  7643  00245A  6F6A               	movwf	_outPipes& (0+255),b
  7644  00245C  0E00               	movlw	high _line_coding
  7645  00245E  0100               	movlb	0	; () banked
  7646  002460  6F6B               	movwf	(_outPipes+1)& (0+255),b
  7647                           
  7648                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
  7649  002462  0E00               	movlw	0
  7650  002464  0100               	movlb	0	; () banked
  7651  002466  6F70               	movwf	(_outPipes+6)& (0+255),b
  7652  002468  0E00               	movlw	0
  7653  00246A  0100               	movlb	0	; () banked
  7654  00246C  6F71               	movwf	(_outPipes+7)& (0+255),b
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
  7658  00246E  0100               	movlb	0	; () banked
  7659  002470  8F6D               	bsf	(_outPipes+3)& (0+255),7,b
  7660                           
  7661                           ;usb_device_cdc.c: 246: break;
  7662  002472  0012               	return	
  7663  002474                     l3868:
  7664                           
  7665                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7666  002474  0EAB               	movlw	low _line_coding
  7667  002476  6E56               	movwf	_inPipes,c
  7668  002478  0E00               	movlw	high _line_coding
  7669  00247A  6E57               	movwf	_inPipes+1,c
  7670  00247C  0E00               	movlw	0
  7671  00247E  6E5B               	movwf	_inPipes+5,c
  7672  002480  0E07               	movlw	7
  7673  002482  6E5A               	movwf	_inPipes+4,c
  7674  002484  0EC1               	movlw	193
  7675  002486  6E59               	movwf	_inPipes+3,c
  7676                           
  7677                           ;usb_device_cdc.c: 253: break;
  7678  002488  0012               	return	
  7679  00248A                     l430:
  7680                           
  7681                           ; BSR set to: 4
  7682                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7683  00248A  C432 F09A          	movff	1074,_control_signal_bitmap	;volatile
  7684                           
  7685                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
  7686  00248E  8E59               	bsf	_inPipes+3,7,c
  7687                           
  7688                           ; BSR set to: 4
  7689                           ;usb_device_cdc.c: 315: }
  7690                           
  7691                           ; BSR set to: 4
  7692                           ;usb_device_cdc.c: 314: break;
  7693                           
  7694                           ;usb_device_cdc.c: 313: default:
  7695                           
  7696                           ;usb_device_cdc.c: 289: break;
  7697  002490  0012               	return	
  7698  002492                     l3876:
  7699                           
  7700                           ; BSR set to: 4
  7701  002492  0104               	movlb	4	; () banked
  7702  002494  5131               	movf	49,w,b	;volatile
  7703                           
  7704                           ; Switch size 1, requested type "space"
  7705                           ; Number of cases is 5, Range of values is 0 to 34
  7706                           ; switch strategies available:
  7707                           ; Name         Instructions Cycles
  7708                           ; simple_byte           16     9 (average)
  7709                           ;	Chosen strategy is simple_byte
  7710  002496  0A00               	xorlw	0	; case 0
  7711  002498  B4D8               	btfsc	status,2,c
  7712  00249A  D7C8               	goto	l3852
  7713  00249C  0A01               	xorlw	1	; case 1
  7714  00249E  B4D8               	btfsc	status,2,c
  7715  0024A0  D7D0               	goto	l3860
  7716  0024A2  0A21               	xorlw	33	; case 32
  7717  0024A4  B4D8               	btfsc	status,2,c
  7718  0024A6  D7D3               	goto	l428
  7719  0024A8  0A01               	xorlw	1	; case 33
  7720  0024AA  B4D8               	btfsc	status,2,c
  7721  0024AC  D7E3               	goto	l3868
  7722  0024AE  0A03               	xorlw	3	; case 34
  7723  0024B0  A4D8               	btfss	status,2,c
  7724  0024B2  0012               	return	
  7725  0024B4  D7EA               	goto	l430
  7726                           
  7727                           ; BSR set to: 4
  7728  0024B6  0012               	return		;funcret
  7729  0024B8                     __end_of_USBCheckCDCRequest:
  7730                           	opt stack 0
  7731                           tblptru	equ	0xFF8
  7732                           tblptrh	equ	0xFF7
  7733                           tblptrl	equ	0xFF6
  7734                           tablat	equ	0xFF5
  7735                           prodh	equ	0xFF4
  7736                           prodl	equ	0xFF3
  7737                           intcon	equ	0xFF2
  7738                           postinc0	equ	0xFEE
  7739                           wreg	equ	0xFE8
  7740                           indf1	equ	0xFE7
  7741                           postdec1	equ	0xFE5
  7742                           fsr1h	equ	0xFE2
  7743                           fsr1l	equ	0xFE1
  7744                           indf2	equ	0xFDF
  7745                           postinc2	equ	0xFDE
  7746                           postdec2	equ	0xFDD
  7747                           plusw2	equ	0xFDB
  7748                           fsr2h	equ	0xFDA
  7749                           fsr2l	equ	0xFD9
  7750                           status	equ	0xFD8
  7751                           
  7752 ;; *************** function _CDCInitEP *****************
  7753 ;; Defined at:
  7754 ;;		line 351 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;		None
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;		None               void
  7761 ;; Registers used:
  7762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7768 ;;      Params:         0       0       0       0       0       0       0       0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7771 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7772 ;;Total ram usage:        0 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    6
  7775 ;; This function calls:
  7776 ;;		_USBEnableEndpoint
  7777 ;;		_USBTransferOnePacket
  7778 ;; This function is called by:
  7779 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text25
  7784  002C32                     __ptext25:
  7785                           	opt stack 0
  7786  002C32                     _CDCInitEP:
  7787                           	opt stack 21
  7788                           
  7789                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
  7790                           
  7791                           ;incstack = 0
  7792  002C32  0E00               	movlw	0
  7793  002C34  0100               	movlb	0	; () banked
  7794  002C36  6FAB               	movwf	_line_coding& (0+255),b
  7795  002C38  0E4B               	movlw	75
  7796  002C3A  6FAC               	movwf	(_line_coding+1)& (0+255),b
  7797  002C3C  0E00               	movlw	0
  7798  002C3E  6FAD               	movwf	(_line_coding+2)& (0+255),b
  7799  002C40  0E00               	movlw	0
  7800  002C42  6FAE               	movwf	(_line_coding+3)& (0+255),b
  7801                           
  7802                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
  7803  002C44  0E00               	movlw	0
  7804  002C46  0100               	movlb	0	; () banked
  7805  002C48  6FAF               	movwf	(_line_coding+4)& (0+255),b
  7806                           
  7807                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
  7808  002C4A  0E00               	movlw	0
  7809  002C4C  0100               	movlb	0	; () banked
  7810  002C4E  6FB0               	movwf	(_line_coding+5)& (0+255),b
  7811                           
  7812                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
  7813  002C50  0E08               	movlw	8
  7814  002C52  0100               	movlb	0	; () banked
  7815  002C54  6FB1               	movwf	(_line_coding+6)& (0+255),b
  7816                           
  7817                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
  7818  002C56  0E00               	movlw	0
  7819  002C58  6E51               	movwf	_cdc_rx_len,c
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
  7823  002C5A  0E1A               	movlw	26
  7824  002C5C  6E2B               	movwf	USBEnableEndpoint@options,c
  7825  002C5E  0E01               	movlw	1
  7826  002C60  ECE5  F017         	call	_USBEnableEndpoint
  7827                           
  7828                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7829  002C64  0E1E               	movlw	30
  7830  002C66  6E2B               	movwf	USBEnableEndpoint@options,c
  7831  002C68  0E02               	movlw	2
  7832  002C6A  ECE5  F017         	call	_USBEnableEndpoint
  7833                           
  7834                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7835  002C6E  0E00               	movlw	0
  7836  002C70  6E23               	movwf	USBTransferOnePacket@dir,c
  7837  002C72  0E40               	movlw	64
  7838  002C74  6E24               	movwf	USBTransferOnePacket@data,c
  7839  002C76  0E05               	movlw	5
  7840  002C78  6E25               	movwf	USBTransferOnePacket@data+1,c
  7841  002C7A  0E40               	movlw	64
  7842  002C7C  6E26               	movwf	USBTransferOnePacket@len,c
  7843  002C7E  0E02               	movlw	2
  7844  002C80  EC5C  F012         	call	_USBTransferOnePacket
  7845  002C84  C023  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  7846  002C88  C024  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  7847                           
  7848                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
  7849  002C8C  0E00               	movlw	0
  7850  002C8E  0100               	movlb	0	; () banked
  7851  002C90  6F88               	movwf	_CDCDataInHandle& (0+255),b
  7852  002C92  0E00               	movlw	0
  7853  002C94  0100               	movlb	0	; () banked
  7854  002C96  6F89               	movwf	(_CDCDataInHandle+1)& (0+255),b
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
  7858  002C98  0E00               	movlw	0
  7859  002C9A  6E52               	movwf	_cdc_trf_state,c
  7860                           
  7861                           ; BSR set to: 0
  7862  002C9C  0012               	return		;funcret
  7863  002C9E                     __end_of_CDCInitEP:
  7864                           	opt stack 0
  7865                           tblptru	equ	0xFF8
  7866                           tblptrh	equ	0xFF7
  7867                           tblptrl	equ	0xFF6
  7868                           tablat	equ	0xFF5
  7869                           prodh	equ	0xFF4
  7870                           prodl	equ	0xFF3
  7871                           intcon	equ	0xFF2
  7872                           postinc0	equ	0xFEE
  7873                           wreg	equ	0xFE8
  7874                           indf1	equ	0xFE7
  7875                           postdec1	equ	0xFE5
  7876                           fsr1h	equ	0xFE2
  7877                           fsr1l	equ	0xFE1
  7878                           indf2	equ	0xFDF
  7879                           postinc2	equ	0xFDE
  7880                           postdec2	equ	0xFDD
  7881                           plusw2	equ	0xFDB
  7882                           fsr2h	equ	0xFDA
  7883                           fsr2l	equ	0xFD9
  7884                           status	equ	0xFD8
  7885                           
  7886 ;; *************** function _USBTransferOnePacket *****************
  7887 ;; Defined at:
  7888 ;;		line 998 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  ep              1    wreg     unsigned char 
  7891 ;;  dir             1   34[COMRAM] unsigned char 
  7892 ;;  data            2   35[COMRAM] PTR unsigned char 
  7893 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7894 ;;  len             1   37[COMRAM] unsigned char 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  ep              1   38[COMRAM] unsigned char 
  7897 ;;  handle          2   39[COMRAM] PTR volatile struct __BD
  7898 ;;		 -> NULL(0), BDT(48), 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  2   34[COMRAM] PTR void 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7908 ;;      Params:         4       0       0       0       0       0       0       0       0
  7909 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7911 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7912 ;;Total ram usage:        7 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    4
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_CDCInitEP
  7919 ;;		_getsUSBUSART
  7920 ;;		_CDCTxService
  7921 ;;		_USBCDCEventHandler
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text26
  7926  0024B8                     __ptext26:
  7927                           	opt stack 0
  7928  0024B8                     _USBTransferOnePacket:
  7929                           	opt stack 22
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;incstack = 0
  7933                           ;USBTransferOnePacket@ep stored from wreg
  7934  0024B8  6E27               	movwf	USBTransferOnePacket@ep,c
  7935                           
  7936                           ;usb_device.c: 1000: volatile BDT_ENTRY* handle;
  7937                           ;usb_device.c: 1003: if(dir != 0)
  7938  0024BA  5023               	movf	USBTransferOnePacket@dir,w,c
  7939  0024BC  B4D8               	btfsc	status,2,c
  7940  0024BE  D007               	goto	l3812
  7941                           
  7942                           ;usb_device.c: 1004: {
  7943                           ;usb_device.c: 1006: handle = pBDTEntryIn[ep];
  7944  0024C0  5027               	movf	USBTransferOnePacket@ep,w,c
  7945  0024C2  0D02               	mullw	2
  7946  0024C4  0E3E               	movlw	low _pBDTEntryIn
  7947  0024C6  24F3               	addwf	prodl,w,c
  7948  0024C8  6ED9               	movwf	fsr2l,c
  7949  0024CA  0E00               	movlw	high _pBDTEntryIn
  7950  0024CC  D006               	goto	L9
  7951  0024CE                     l3812:
  7952                           
  7953                           ;usb_device.c: 1008: else
  7954                           ;usb_device.c: 1009: {
  7955                           ;usb_device.c: 1011: handle = pBDTEntryOut[ep];
  7956  0024CE  5027               	movf	USBTransferOnePacket@ep,w,c
  7957  0024D0  0D02               	mullw	2
  7958  0024D2  0E72               	movlw	low _pBDTEntryOut
  7959  0024D4  24F3               	addwf	prodl,w,c
  7960  0024D6  6ED9               	movwf	fsr2l,c
  7961  0024D8  0E00               	movlw	high _pBDTEntryOut
  7962  0024DA                     L9:
  7963  0024DA  20F4               	addwfc	prodh,w,c
  7964  0024DC  6EDA               	movwf	fsr2h,c
  7965  0024DE  CFDE F028          	movff	postinc2,USBTransferOnePacket@handle
  7966  0024E2  CFDD F029          	movff	postdec2,USBTransferOnePacket@handle+1
  7967  0024E6  D000               	goto	l3814
  7968  0024E8                     l3814:
  7969                           
  7970                           ;usb_device.c: 1012: }
  7971                           ;usb_device.c: 1016: if(handle == 0)
  7972  0024E8  5028               	movf	USBTransferOnePacket@handle,w,c
  7973  0024EA  1029               	iorwf	USBTransferOnePacket@handle+1,w,c
  7974  0024EC  A4D8               	btfss	status,2,c
  7975  0024EE  D005               	goto	l3820
  7976                           
  7977                           ;usb_device.c: 1017: {
  7978                           ;usb_device.c: 1018: return 0;
  7979  0024F0  0E00               	movlw	0
  7980  0024F2  6E23               	movwf	?_USBTransferOnePacket,c
  7981  0024F4  0E00               	movlw	0
  7982  0024F6  6E24               	movwf	?_USBTransferOnePacket+1,c
  7983  0024F8  0012               	return	
  7984  0024FA                     l3820:
  7985                           
  7986                           ;usb_device.c: 1019: }
  7987                           ;usb_device.c: 1032: handle->ADR = ((uint16_t)(data));
  7988  0024FA  EE20 F002          	lfsr	2,2
  7989  0024FE  5028               	movf	USBTransferOnePacket@handle,w,c
  7990  002500  26D9               	addwf	fsr2l,f,c
  7991  002502  5029               	movf	USBTransferOnePacket@handle+1,w,c
  7992  002504  22DA               	addwfc	fsr2h,f,c
  7993  002506  C024  FFDE         	movff	USBTransferOnePacket@data,postinc2
  7994  00250A  C025  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  7995                           
  7996                           ;usb_device.c: 1033: handle->CNT = len;
  7997  00250E  EE20 F001          	lfsr	2,1
  7998  002512  5028               	movf	USBTransferOnePacket@handle,w,c
  7999  002514  26D9               	addwf	fsr2l,f,c
  8000  002516  5029               	movf	USBTransferOnePacket@handle+1,w,c
  8001  002518  22DA               	addwfc	fsr2h,f,c
  8002  00251A  C026  FFDF         	movff	USBTransferOnePacket@len,indf2
  8003                           
  8004                           ;usb_device.c: 1034: handle->STAT.Val &= 0x40;
  8005  00251E  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8006  002522  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8007  002526  0E40               	movlw	64
  8008  002528  16DF               	andwf	indf2,f,c
  8009                           
  8010                           ;usb_device.c: 1035: handle->STAT.Val |= (0x08 & 0x08);
  8011  00252A  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8012  00252E  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8013  002532  0E00               	movlw	0
  8014  002534  86DB               	bsf	plusw2,3,c
  8015                           
  8016                           ;usb_device.c: 1036: handle->STAT.Val |= 0x80;
  8017  002536  C028  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8018  00253A  C029  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8019  00253E  0E00               	movlw	0
  8020  002540  8EDB               	bsf	plusw2,7,c
  8021                           
  8022                           ;usb_device.c: 1039: if(dir != 0)
  8023  002542  5023               	movf	USBTransferOnePacket@dir,w,c
  8024  002544  B4D8               	btfsc	status,2,c
  8025  002546  D007               	goto	l3832
  8026                           
  8027                           ;usb_device.c: 1040: {
  8028                           ;usb_device.c: 1042: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  8029  002548  5027               	movf	USBTransferOnePacket@ep,w,c
  8030  00254A  0D02               	mullw	2
  8031  00254C  0E3E               	movlw	low _pBDTEntryIn
  8032  00254E  24F3               	addwf	prodl,w,c
  8033  002550  6ED9               	movwf	fsr2l,c
  8034  002552  0E00               	movlw	high _pBDTEntryIn
  8035  002554  D006               	goto	L10
  8036  002556                     l3832:
  8037                           
  8038                           ;usb_device.c: 1044: else
  8039                           ;usb_device.c: 1045: {
  8040                           ;usb_device.c: 1047: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8041  002556  5027               	movf	USBTransferOnePacket@ep,w,c
  8042  002558  0D02               	mullw	2
  8043  00255A  0E72               	movlw	low _pBDTEntryOut
  8044  00255C  24F3               	addwf	prodl,w,c
  8045  00255E  6ED9               	movwf	fsr2l,c
  8046  002560  0E00               	movlw	high _pBDTEntryOut
  8047  002562                     L10:
  8048  002562  20F4               	addwfc	prodh,w,c
  8049  002564  6EDA               	movwf	fsr2h,c
  8050  002566  0E04               	movlw	4
  8051  002568  1ADF               	xorwf	indf2,f,c
  8052  00256A  D000               	goto	l3834
  8053  00256C                     l3834:
  8054                           
  8055                           ;usb_device.c: 1048: }
  8056                           ;usb_device.c: 1049: return (void*)handle;
  8057  00256C  C028  F023         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  8058  002570  C029  F024         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  8059  002574  0012               	return	
  8060  002576  0012               	return		;funcret
  8061  002578                     __end_of_USBTransferOnePacket:
  8062                           	opt stack 0
  8063                           tblptru	equ	0xFF8
  8064                           tblptrh	equ	0xFF7
  8065                           tblptrl	equ	0xFF6
  8066                           tablat	equ	0xFF5
  8067                           prodh	equ	0xFF4
  8068                           prodl	equ	0xFF3
  8069                           intcon	equ	0xFF2
  8070                           postinc0	equ	0xFEE
  8071                           wreg	equ	0xFE8
  8072                           indf1	equ	0xFE7
  8073                           postdec1	equ	0xFE5
  8074                           fsr1h	equ	0xFE2
  8075                           fsr1l	equ	0xFE1
  8076                           indf2	equ	0xFDF
  8077                           postinc2	equ	0xFDE
  8078                           postdec2	equ	0xFDD
  8079                           plusw2	equ	0xFDB
  8080                           fsr2h	equ	0xFDA
  8081                           fsr2l	equ	0xFD9
  8082                           status	equ	0xFD8
  8083                           
  8084 ;; *************** function _USBEnableEndpoint *****************
  8085 ;; Defined at:
  8086 ;;		line 881 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  ep              1    wreg     unsigned char 
  8089 ;;  options         1   42[COMRAM] unsigned char 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  ep              1   45[COMRAM] unsigned char 
  8092 ;;  p               2   43[COMRAM] PTR unsigned char 
  8093 ;;		 -> UEP0(1), RAM(2047), 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;		None               void
  8096 ;; Registers used:
  8097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8103 ;;      Params:         1       0       0       0       0       0       0       0       0
  8104 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8106 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8107 ;;Total ram usage:        4 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    5
  8110 ;; This function calls:
  8111 ;;		_USBConfigureEndpoint
  8112 ;; This function is called by:
  8113 ;;		_CDCInitEP
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text27
  8118  002FCA                     __ptext27:
  8119                           	opt stack 0
  8120  002FCA                     _USBEnableEndpoint:
  8121                           	opt stack 21
  8122                           
  8123                           ;incstack = 0
  8124                           ;USBEnableEndpoint@ep stored from wreg
  8125  002FCA  6E2E               	movwf	USBEnableEndpoint@ep,c
  8126                           
  8127                           ;usb_device.c: 883: unsigned char* p;
  8128                           ;usb_device.c: 887: if(options & 0x04)
  8129  002FCC  A42B               	btfss	USBEnableEndpoint@options,2,c
  8130  002FCE  D006               	goto	l3800
  8131                           
  8132                           ;usb_device.c: 888: {
  8133                           ;usb_device.c: 889: USBConfigureEndpoint(ep, 0);
  8134  002FD0  0E00               	movlw	0
  8135  002FD2  6E23               	movwf	USBConfigureEndpoint@direction,c
  8136  002FD4  502E               	movf	USBEnableEndpoint@ep,w,c
  8137  002FD6  EC78  F014         	call	_USBConfigureEndpoint
  8138  002FDA  D000               	goto	l3800
  8139  002FDC                     l3800:
  8140                           
  8141                           ;usb_device.c: 890: }
  8142                           ;usb_device.c: 891: if(options & 0x02)
  8143  002FDC  A22B               	btfss	USBEnableEndpoint@options,1,c
  8144  002FDE  D006               	goto	l3804
  8145                           
  8146                           ;usb_device.c: 892: {
  8147                           ;usb_device.c: 893: USBConfigureEndpoint(ep, 1);
  8148  002FE0  0E01               	movlw	1
  8149  002FE2  6E23               	movwf	USBConfigureEndpoint@direction,c
  8150  002FE4  502E               	movf	USBEnableEndpoint@ep,w,c
  8151  002FE6  EC78  F014         	call	_USBConfigureEndpoint
  8152  002FEA  D000               	goto	l3804
  8153  002FEC                     l3804:
  8154                           
  8155                           ;usb_device.c: 894: }
  8156                           ;usb_device.c: 902: p = (unsigned char*)(&*U1EP0_R+ep);
  8157  002FEC  502E               	movf	USBEnableEndpoint@ep,w,c
  8158  002FEE  0D01               	mullw	1
  8159  002FF0  50F3               	movf	prodl,w,c
  8160  002FF2  245D               	addwf	_U1EP0_R,w,c
  8161  002FF4  6E2C               	movwf	USBEnableEndpoint@p,c
  8162  002FF6  50F4               	movf	prodh,w,c
  8163  002FF8  205E               	addwfc	_U1EP0_R+1,w,c
  8164  002FFA  6E2D               	movwf	USBEnableEndpoint@p+1,c
  8165                           
  8166                           ;usb_device.c: 904: *p = options;
  8167  002FFC  C02C  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8168  003000  C02D  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8169  003004  C02B  FFDF         	movff	USBEnableEndpoint@options,indf2
  8170  003008  0012               	return		;funcret
  8171  00300A                     __end_of_USBEnableEndpoint:
  8172                           	opt stack 0
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           postinc0	equ	0xFEE
  8181                           wreg	equ	0xFE8
  8182                           indf1	equ	0xFE7
  8183                           postdec1	equ	0xFE5
  8184                           fsr1h	equ	0xFE2
  8185                           fsr1l	equ	0xFE1
  8186                           indf2	equ	0xFDF
  8187                           postinc2	equ	0xFDE
  8188                           postdec2	equ	0xFDD
  8189                           plusw2	equ	0xFDB
  8190                           fsr2h	equ	0xFDA
  8191                           fsr2l	equ	0xFD9
  8192                           status	equ	0xFD8
  8193                           
  8194 ;; *************** function _USBConfigureEndpoint *****************
  8195 ;; Defined at:
  8196 ;;		line 1546 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  EPNum           1    wreg     unsigned char 
  8199 ;;  direction       1   34[COMRAM] unsigned char 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  EPNum           1   39[COMRAM] unsigned char 
  8202 ;;  handle          2   40[COMRAM] PTR volatile struct __BD
  8203 ;;		 -> BDT(48), 
  8204 ;; Return value:  Size  Location     Type
  8205 ;;		None               void
  8206 ;; Registers used:
  8207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8213 ;;      Params:         1       0       0       0       0       0       0       0       0
  8214 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8215 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8216 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8217 ;;Total ram usage:        8 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; Hardware stack levels required when called:    4
  8220 ;; This function calls:
  8221 ;;		Nothing
  8222 ;; This function is called by:
  8223 ;;		_USBEnableEndpoint
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text28
  8228  0028F0                     __ptext28:
  8229                           	opt stack 0
  8230  0028F0                     _USBConfigureEndpoint:
  8231                           	opt stack 21
  8232                           
  8233                           ;incstack = 0
  8234                           ;USBConfigureEndpoint@EPNum stored from wreg
  8235  0028F0  6E28               	movwf	USBConfigureEndpoint@EPNum,c
  8236                           
  8237                           ;usb_device.c: 1548: volatile BDT_ENTRY* handle;
  8238                           ;usb_device.c: 1552: handle = (volatile BDT_ENTRY*)&BDT[0];
  8239  0028F2  0E00               	movlw	0
  8240  0028F4  6E29               	movwf	USBConfigureEndpoint@handle,c
  8241  0028F6  0E04               	movlw	4
  8242  0028F8  6E2A               	movwf	USBConfigureEndpoint@handle+1,c
  8243                           
  8244                           ;usb_device.c: 1553: handle += (4*EPNum+2*direction+0u);
  8245  0028FA  5023               	movf	USBConfigureEndpoint@direction,w,c
  8246  0028FC  6E24               	movwf	??_USBConfigureEndpoint& (0+255),c
  8247  0028FE  6A25               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8248  002900  90D8               	bcf	status,0,c
  8249  002902  3624               	rlcf	??_USBConfigureEndpoint,f,c
  8250  002904  3625               	rlcf	??_USBConfigureEndpoint+1,f,c
  8251  002906  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8252  002908  6E26               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8253  00290A  6A27               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8254  00290C  90D8               	bcf	status,0,c
  8255  00290E  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8256  002910  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8257  002912  90D8               	bcf	status,0,c
  8258  002914  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8259  002916  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8260  002918  5024               	movf	??_USBConfigureEndpoint,w,c
  8261  00291A  2626               	addwf	??_USBConfigureEndpoint+2,f,c
  8262  00291C  5025               	movf	??_USBConfigureEndpoint+1,w,c
  8263  00291E  2227               	addwfc	??_USBConfigureEndpoint+3,f,c
  8264  002920  90D8               	bcf	status,0,c
  8265  002922  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8266  002924  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8267  002926  90D8               	bcf	status,0,c
  8268  002928  3626               	rlcf	??_USBConfigureEndpoint+2,f,c
  8269  00292A  3627               	rlcf	??_USBConfigureEndpoint+3,f,c
  8270  00292C  5026               	movf	??_USBConfigureEndpoint+2,w,c
  8271  00292E  2629               	addwf	USBConfigureEndpoint@handle,f,c
  8272  002930  5027               	movf	??_USBConfigureEndpoint+3,w,c
  8273  002932  222A               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8274                           
  8275                           ;usb_device.c: 1555: handle->STAT.UOWN = 0;
  8276  002934  C029  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8277  002938  C02A  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8278  00293C  9EDF               	bcf	indf2,7,c
  8279                           
  8280                           ;usb_device.c: 1560: if(direction == 0)
  8281  00293E  5023               	movf	USBConfigureEndpoint@direction,w,c
  8282  002940  A4D8               	btfss	status,2,c
  8283  002942  D007               	goto	l3790
  8284                           
  8285                           ;usb_device.c: 1561: {
  8286                           ;usb_device.c: 1562: pBDTEntryOut[EPNum] = handle;
  8287  002944  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8288  002946  0D02               	mullw	2
  8289  002948  0E72               	movlw	low _pBDTEntryOut
  8290  00294A  24F3               	addwf	prodl,w,c
  8291  00294C  6ED9               	movwf	fsr2l,c
  8292  00294E  0E00               	movlw	high _pBDTEntryOut
  8293  002950  D006               	goto	L11
  8294  002952                     l3790:
  8295                           
  8296                           ;usb_device.c: 1564: else
  8297                           ;usb_device.c: 1565: {
  8298                           ;usb_device.c: 1566: pBDTEntryIn[EPNum] = handle;
  8299  002952  5028               	movf	USBConfigureEndpoint@EPNum,w,c
  8300  002954  0D02               	mullw	2
  8301  002956  0E3E               	movlw	low _pBDTEntryIn
  8302  002958  24F3               	addwf	prodl,w,c
  8303  00295A  6ED9               	movwf	fsr2l,c
  8304  00295C  0E00               	movlw	high _pBDTEntryIn
  8305  00295E                     L11:
  8306  00295E  20F4               	addwfc	prodh,w,c
  8307  002960  6EDA               	movwf	fsr2h,c
  8308  002962  C029  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8309  002966  C02A  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8310  00296A  D000               	goto	l3792
  8311  00296C                     l3792:
  8312                           
  8313                           ;usb_device.c: 1567: }
  8314                           ;usb_device.c: 1570: handle->STAT.DTS = 0;
  8315  00296C  C029  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8316  002970  C02A  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8317  002974  9CDF               	bcf	indf2,6,c
  8318                           
  8319                           ;usb_device.c: 1571: (handle+1)->STAT.DTS = 1;
  8320  002976  EE20 F004          	lfsr	2,4
  8321  00297A  5029               	movf	USBConfigureEndpoint@handle,w,c
  8322  00297C  26D9               	addwf	fsr2l,f,c
  8323  00297E  502A               	movf	USBConfigureEndpoint@handle+1,w,c
  8324  002980  22DA               	addwfc	fsr2h,f,c
  8325  002982  8CDF               	bsf	indf2,6,c
  8326  002984  0012               	return		;funcret
  8327  002986                     __end_of_USBConfigureEndpoint:
  8328                           	opt stack 0
  8329                           tblptru	equ	0xFF8
  8330                           tblptrh	equ	0xFF7
  8331                           tblptrl	equ	0xFF6
  8332                           tablat	equ	0xFF5
  8333                           prodh	equ	0xFF4
  8334                           prodl	equ	0xFF3
  8335                           intcon	equ	0xFF2
  8336                           postinc0	equ	0xFEE
  8337                           wreg	equ	0xFE8
  8338                           indf1	equ	0xFE7
  8339                           postdec1	equ	0xFE5
  8340                           fsr1h	equ	0xFE2
  8341                           fsr1l	equ	0xFE1
  8342                           indf2	equ	0xFDF
  8343                           postinc2	equ	0xFDE
  8344                           postdec2	equ	0xFDD
  8345                           plusw2	equ	0xFDB
  8346                           fsr2h	equ	0xFDA
  8347                           fsr2l	equ	0xFD9
  8348                           status	equ	0xFD8
  8349                           
  8350 ;; *************** function _USBCtrlTrfOutHandler *****************
  8351 ;; Defined at:
  8352 ;;		line 2544 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;		None
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;		None
  8357 ;; Return value:  Size  Location     Type
  8358 ;;		None               void
  8359 ;; Registers used:
  8360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8366 ;;      Params:         0       0       0       0       0       0       0       0       0
  8367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8369 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8370 ;;Total ram usage:        0 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:    6
  8373 ;; This function calls:
  8374 ;;		_USBCtrlTrfRxService
  8375 ;; This function is called by:
  8376 ;;		_USBCtrlEPService
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text29
  8381  002D02                     __ptext29:
  8382                           	opt stack 0
  8383  002D02                     _USBCtrlTrfOutHandler:
  8384                           	opt stack 21
  8385                           
  8386                           ;usb_device.c: 2546: if(controlTransferState == 2)
  8387                           
  8388                           ;incstack = 0
  8389  002D02  0E02               	movlw	2
  8390  002D04  1854               	xorwf	_controlTransferState,w,c
  8391  002D06  A4D8               	btfss	status,2,c
  8392  002D08  D003               	goto	l4366
  8393                           
  8394                           ;usb_device.c: 2547: {
  8395                           ;usb_device.c: 2548: USBCtrlTrfRxService();
  8396  002D0A  EC66  F00D         	call	_USBCtrlTrfRxService	;wreg free
  8397                           
  8398                           ;usb_device.c: 2549: }
  8399  002D0E  0012               	return	
  8400  002D10                     l4366:
  8401                           
  8402                           ;usb_device.c: 2550: else
  8403                           ;usb_device.c: 2551: {
  8404                           ;usb_device.c: 2554: controlTransferState = 0;
  8405  002D10  0E00               	movlw	0
  8406  002D12  6E54               	movwf	_controlTransferState,c
  8407                           
  8408                           ;usb_device.c: 2561: if(BothEP0OutUOWNsSet == 0)
  8409  002D14  0100               	movlb	0	; () banked
  8410  002D16  5194               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
  8411  002D18  A4D8               	btfss	status,2,c
  8412  002D1A  D01F               	goto	l4374
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;usb_device.c: 2562: {
  8416                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->CNT = 8;
  8417  002D1C  EE20 F001          	lfsr	2,1
  8418  002D20  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8419  002D22  26D9               	addwf	fsr2l,f,c
  8420  002D24  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8421  002D26  22DA               	addwfc	fsr2h,f,c
  8422  002D28  0E08               	movlw	8
  8423  002D2A  6EDF               	movwf	indf2,c
  8424                           
  8425                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8426  002D2C  EE20 F002          	lfsr	2,2
  8427  002D30  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8428  002D32  26D9               	addwf	fsr2l,f,c
  8429  002D34  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8430  002D36  22DA               	addwfc	fsr2h,f,c
  8431  002D38  0E30               	movlw	48
  8432  002D3A  6EDE               	movwf	postinc2,c
  8433  002D3C  0E04               	movlw	4
  8434  002D3E  6EDD               	movwf	postdec2,c
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;usb_device.c: 2565: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8438  002D40  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8439  002D44  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8440  002D48  0E0C               	movlw	12
  8441  002D4A  6EDF               	movwf	indf2,c
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;usb_device.c: 2566: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8445  002D4C  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8446  002D50  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8447  002D54  0E00               	movlw	0
  8448  002D56  8EDB               	bsf	plusw2,7,c
  8449                           
  8450                           ;usb_device.c: 2567: }
  8451  002D58  0012               	return	
  8452  002D5A                     l4374:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;usb_device.c: 2568: else
  8456                           ;usb_device.c: 2569: {
  8457                           ;usb_device.c: 2570: BothEP0OutUOWNsSet = 0;
  8458  002D5A  0E00               	movlw	0
  8459  002D5C  0100               	movlb	0	; () banked
  8460  002D5E  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8461                           
  8462                           ; BSR set to: 0
  8463  002D60  0012               	return	
  8464                           
  8465                           ; BSR set to: 0
  8466  002D62  0012               	return		;funcret
  8467  002D64                     __end_of_USBCtrlTrfOutHandler:
  8468                           	opt stack 0
  8469                           tblptru	equ	0xFF8
  8470                           tblptrh	equ	0xFF7
  8471                           tblptrl	equ	0xFF6
  8472                           tablat	equ	0xFF5
  8473                           prodh	equ	0xFF4
  8474                           prodl	equ	0xFF3
  8475                           intcon	equ	0xFF2
  8476                           postinc0	equ	0xFEE
  8477                           wreg	equ	0xFE8
  8478                           indf1	equ	0xFE7
  8479                           postdec1	equ	0xFE5
  8480                           fsr1h	equ	0xFE2
  8481                           fsr1l	equ	0xFE1
  8482                           indf2	equ	0xFDF
  8483                           postinc2	equ	0xFDE
  8484                           postdec2	equ	0xFDD
  8485                           plusw2	equ	0xFDB
  8486                           fsr2h	equ	0xFDA
  8487                           fsr2l	equ	0xFD9
  8488                           status	equ	0xFD8
  8489                           
  8490 ;; *************** function _USBCtrlTrfRxService *****************
  8491 ;; Defined at:
  8492 ;;		line 1855 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;		None
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  byteToRead      1   35[COMRAM] unsigned char 
  8497 ;;  i               1   34[COMRAM] unsigned char 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;		None               void
  8500 ;; Registers used:
  8501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8507 ;;      Params:         0       0       0       0       0       0       0       0       0
  8508 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8510 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8511 ;;Total ram usage:        2 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    5
  8514 ;; This function calls:
  8515 ;;		_USBCtrlEPAllowStatusStage
  8516 ;; This function is called by:
  8517 ;;		_USBCtrlTrfOutHandler
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text30
  8522  001ACC                     __ptext30:
  8523                           	opt stack 0
  8524  001ACC                     _USBCtrlTrfRxService:
  8525                           	opt stack 21
  8526                           
  8527                           ;usb_device.c: 1857: uint8_t byteToRead;
  8528                           ;usb_device.c: 1858: uint8_t i;
  8529                           ;usb_device.c: 1862: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8530                           
  8531                           ;incstack = 0
  8532  001ACC  EE20 F001          	lfsr	2,1
  8533  001AD0  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8534  001AD2  26D9               	addwf	fsr2l,f,c
  8535  001AD4  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8536  001AD6  22DA               	addwfc	fsr2h,f,c
  8537  001AD8  50DF               	movf	indf2,w,c
  8538  001ADA  6E24               	movwf	USBCtrlTrfRxService@byteToRead,c
  8539                           
  8540                           ;usb_device.c: 1868: if(byteToRead > outPipes[0].wCount.Val)
  8541  001ADC  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8542  001ADE  0100               	movlb	0	; () banked
  8543  001AE0  5D6E               	subwf	(_outPipes+4)& (0+255),w,b
  8544  001AE2  0E00               	movlw	0
  8545  001AE4  596F               	subwfb	(_outPipes+5)& (0+255),w,b
  8546  001AE6  B0D8               	btfsc	status,0,c
  8547  001AE8  D003               	goto	l4254
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;usb_device.c: 1869: {
  8551                           ;usb_device.c: 1870: byteToRead = outPipes[0].wCount.Val;
  8552  001AEA  C06E  F024         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
  8553  001AEE  D000               	goto	l4254
  8554  001AF0                     l4254:
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;usb_device.c: 1871: }
  8558                           ;usb_device.c: 1873: outPipes[0].wCount.Val -= byteToRead;
  8559  001AF0  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8560  001AF2  0100               	movlb	0	; () banked
  8561  001AF4  5F6E               	subwf	(_outPipes+4)& (0+255),f,b
  8562  001AF6  0E00               	movlw	0
  8563  001AF8  5B6F               	subwfb	(_outPipes+5)& (0+255),f,b
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;usb_device.c: 1877: for(i=0;i<byteToRead;i++)
  8567  001AFA  0E00               	movlw	0
  8568  001AFC  6E23               	movwf	USBCtrlTrfRxService@i,c
  8569  001AFE  D013               	goto	l4264
  8570  001B00                     l4258:
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;usb_device.c: 1878: {
  8574                           ;usb_device.c: 1879: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8575  001B00  5023               	movf	USBCtrlTrfRxService@i,w,c
  8576  001B02  0D01               	mullw	1
  8577  001B04  0E38               	movlw	56
  8578  001B06  24F3               	addwf	prodl,w,c
  8579  001B08  6ED9               	movwf	fsr2l,c
  8580  001B0A  0E04               	movlw	4
  8581  001B0C  20F4               	addwfc	prodh,w,c
  8582  001B0E  6EDA               	movwf	fsr2h,c
  8583  001B10  C06A  FFE1         	movff	_outPipes,fsr1l
  8584  001B14  C06B  FFE2         	movff	_outPipes+1,fsr1h
  8585  001B18  CFDF FFE7          	movff	indf2,indf1
  8586                           
  8587                           ; BSR set to: 0
  8588  001B1C  0100               	movlb	0	; () banked
  8589  001B1E  4B6A               	infsnz	_outPipes& (0+255),f,b
  8590  001B20  2B6B               	incf	(_outPipes+1)& (0+255),f,b
  8591                           
  8592                           ; BSR set to: 0
  8593  001B22  2A23               	incf	USBCtrlTrfRxService@i,f,c
  8594  001B24  D000               	goto	l4264
  8595  001B26                     l4264:
  8596                           
  8597                           ; BSR set to: 0
  8598  001B26  5024               	movf	USBCtrlTrfRxService@byteToRead,w,c
  8599  001B28  5C23               	subwf	USBCtrlTrfRxService@i,w,c
  8600  001B2A  A0D8               	btfss	status,0,c
  8601  001B2C  D7E9               	goto	l4258
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;usb_device.c: 1880: }
  8605                           ;usb_device.c: 1884: if(outPipes[0].wCount.Val > 0)
  8606                           
  8607                           ; BSR set to: 0
  8608  001B2E  0100               	movlb	0	; () banked
  8609  001B30  516E               	movf	(_outPipes+4)& (0+255),w,b
  8610  001B32  0100               	movlb	0	; () banked
  8611  001B34  116F               	iorwf	(_outPipes+5)& (0+255),w,b
  8612  001B36  B4D8               	btfsc	status,2,c
  8613  001B38  D032               	goto	l4280
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;usb_device.c: 1885: {
  8617                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->CNT = 8;
  8618  001B3A  EE20 F001          	lfsr	2,1
  8619  001B3E  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8620  001B40  26D9               	addwf	fsr2l,f,c
  8621  001B42  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8622  001B44  22DA               	addwfc	fsr2h,f,c
  8623  001B46  0E08               	movlw	8
  8624  001B48  6EDF               	movwf	indf2,c
  8625                           
  8626                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  8627  001B4A  EE20 F002          	lfsr	2,2
  8628  001B4E  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8629  001B50  26D9               	addwf	fsr2l,f,c
  8630  001B52  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8631  001B54  22DA               	addwfc	fsr2h,f,c
  8632  001B56  0E38               	movlw	56
  8633  001B58  6EDE               	movwf	postinc2,c
  8634  001B5A  0E04               	movlw	4
  8635  001B5C  6EDD               	movwf	postdec2,c
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;usb_device.c: 1888: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8639  001B5E  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8640  001B62  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8641  001B66  BCDF               	btfsc	indf2,6,c
  8642  001B68  D00D               	goto	l4276
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;usb_device.c: 1889: {
  8646                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8647  001B6A  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8648  001B6E  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8649  001B72  0E48               	movlw	72
  8650  001B74  6EDF               	movwf	indf2,c
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;usb_device.c: 1891: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8654  001B76  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8655  001B7A  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8656  001B7E  0E00               	movlw	0
  8657  001B80  8EDB               	bsf	plusw2,7,c
  8658                           
  8659                           ;usb_device.c: 1892: }
  8660  001B82  0012               	return	
  8661  001B84                     l4276:
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;usb_device.c: 1893: else
  8665                           ;usb_device.c: 1894: {
  8666                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8667  001B84  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8668  001B88  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8669  001B8C  0E08               	movlw	8
  8670  001B8E  6EDF               	movwf	indf2,c
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;usb_device.c: 1896: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8674  001B90  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8675  001B94  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8676  001B98  0E00               	movlw	0
  8677  001B9A  8EDB               	bsf	plusw2,7,c
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;usb_device.c: 1897: }
  8681                           ;usb_device.c: 1898: }
  8682  001B9C  0012               	return	
  8683  001B9E                     l4280:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;usb_device.c: 1899: else
  8687                           ;usb_device.c: 1900: {
  8688                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->CNT = 8;
  8689  001B9E  EE20 F001          	lfsr	2,1
  8690  001BA2  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8691  001BA4  26D9               	addwf	fsr2l,f,c
  8692  001BA6  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8693  001BA8  22DA               	addwfc	fsr2h,f,c
  8694  001BAA  0E08               	movlw	8
  8695  001BAC  6EDF               	movwf	indf2,c
  8696                           
  8697                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8698  001BAE  EE20 F002          	lfsr	2,2
  8699  001BB2  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8700  001BB4  26D9               	addwf	fsr2l,f,c
  8701  001BB6  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8702  001BB8  22DA               	addwfc	fsr2h,f,c
  8703  001BBA  0E30               	movlw	48
  8704  001BBC  6EDE               	movwf	postinc2,c
  8705  001BBE  0E04               	movlw	4
  8706  001BC0  6EDD               	movwf	postdec2,c
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8710  001BC2  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8711  001BC6  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8712  001BCA  0E04               	movlw	4
  8713  001BCC  6EDF               	movwf	indf2,c
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8717  001BCE  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8718  001BD2  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8719  001BD6  0E00               	movlw	0
  8720  001BD8  8EDB               	bsf	plusw2,7,c
  8721  001BDA  D000               	goto	l248
  8722  001BDC                     l248:
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;usb_device.c: 1929: }
  8726                           ;usb_device.c: 1930: outPipes[0].info.bits.busy = 0;
  8727  001BDC  0100               	movlb	0	; () banked
  8728  001BDE  9F6D               	bcf	(_outPipes+3)& (0+255),7,b
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;usb_device.c: 1944: if(USBDeferStatusStagePacket == 0)
  8732  001BE0  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  8733  001BE2  A4D8               	btfss	status,2,c
  8734  001BE4  0012               	return	
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;usb_device.c: 1945: {
  8738                           ;usb_device.c: 1946: USBCtrlEPAllowStatusStage();
  8739  001BE6  EC96  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8740  001BEA  0012               	return	
  8741  001BEC  0012               	return		;funcret
  8742  001BEE                     __end_of_USBCtrlTrfRxService:
  8743                           	opt stack 0
  8744                           tblptru	equ	0xFF8
  8745                           tblptrh	equ	0xFF7
  8746                           tblptrl	equ	0xFF6
  8747                           tablat	equ	0xFF5
  8748                           prodh	equ	0xFF4
  8749                           prodl	equ	0xFF3
  8750                           intcon	equ	0xFF2
  8751                           postinc0	equ	0xFEE
  8752                           wreg	equ	0xFE8
  8753                           indf1	equ	0xFE7
  8754                           postdec1	equ	0xFE5
  8755                           fsr1h	equ	0xFE2
  8756                           fsr1l	equ	0xFE1
  8757                           indf2	equ	0xFDF
  8758                           postinc2	equ	0xFDE
  8759                           postdec2	equ	0xFDD
  8760                           plusw2	equ	0xFDB
  8761                           fsr2h	equ	0xFDA
  8762                           fsr2l	equ	0xFD9
  8763                           status	equ	0xFD8
  8764                           
  8765 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8766 ;; Defined at:
  8767 ;;		line 1419 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;		None
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;		None               void
  8774 ;; Registers used:
  8775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8784 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8785 ;;Total ram usage:        0 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    4
  8788 ;; This function calls:
  8789 ;;		Nothing
  8790 ;; This function is called by:
  8791 ;;		_USBDeviceTasks
  8792 ;;		_USBCtrlEPServiceComplete
  8793 ;;		_USBCtrlTrfRxService
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text31
  8798  00232C                     __ptext31:
  8799                           	opt stack 0
  8800  00232C                     _USBCtrlEPAllowStatusStage:
  8801                           	opt stack 21
  8802                           
  8803                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag1 == 0)
  8804                           
  8805                           ;incstack = 0
  8806  00232C  504F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  8807  00232E  A4D8               	btfss	status,2,c
  8808  002330  0012               	return	
  8809                           
  8810                           ;usb_device.c: 1427: {
  8811                           ;usb_device.c: 1428: USBStatusStageEnabledFlag1 = 1;
  8812  002332  0E01               	movlw	1
  8813  002334  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8814                           
  8815                           ;usb_device.c: 1429: if(USBStatusStageEnabledFlag2 == 0)
  8816  002336  5050               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  8817  002338  A4D8               	btfss	status,2,c
  8818  00233A  0012               	return	
  8819                           
  8820                           ;usb_device.c: 1430: {
  8821                           ;usb_device.c: 1431: USBStatusStageEnabledFlag2 = 1;
  8822  00233C  0E01               	movlw	1
  8823  00233E  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8824                           
  8825                           ;usb_device.c: 1435: if(controlTransferState == 2)
  8826  002340  0E02               	movlw	2
  8827  002342  1854               	xorwf	_controlTransferState,w,c
  8828  002344  A4D8               	btfss	status,2,c
  8829  002346  D015               	goto	l3974
  8830                           
  8831                           ;usb_device.c: 1436: {
  8832                           ;usb_device.c: 1437: pBDTEntryIn[0]->CNT = 0;
  8833  002348  EE20 F001          	lfsr	2,1
  8834  00234C  503E               	movf	_pBDTEntryIn,w,c
  8835  00234E  26D9               	addwf	fsr2l,f,c
  8836  002350  503F               	movf	_pBDTEntryIn+1,w,c
  8837  002352  22DA               	addwfc	fsr2h,f,c
  8838  002354  0E00               	movlw	0
  8839  002356  6EDF               	movwf	indf2,c
  8840                           
  8841                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8842  002358  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8843  00235C  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8844  002360  0E48               	movlw	72
  8845  002362  6EDF               	movwf	indf2,c
  8846                           
  8847                           ;usb_device.c: 1439: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8848  002364  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8849  002368  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8850  00236C  0E00               	movlw	0
  8851  00236E  8EDB               	bsf	plusw2,7,c
  8852                           
  8853                           ;usb_device.c: 1440: }
  8854  002370  0012               	return	
  8855  002372                     l3974:
  8856                           
  8857                           ;usb_device.c: 1441: else if(controlTransferState == 1)
  8858  002372  0454               	decf	_controlTransferState,w,c
  8859  002374  A4D8               	btfss	status,2,c
  8860  002376  0012               	return	
  8861                           
  8862                           ;usb_device.c: 1442: {
  8863                           ;usb_device.c: 1443: BothEP0OutUOWNsSet = 0;
  8864  002378  0E00               	movlw	0
  8865  00237A  0100               	movlb	0	; () banked
  8866  00237C  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->CNT = 8;
  8870  00237E  EE20 F001          	lfsr	2,1
  8871  002382  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8872  002384  26D9               	addwf	fsr2l,f,c
  8873  002386  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8874  002388  22DA               	addwfc	fsr2h,f,c
  8875  00238A  0E08               	movlw	8
  8876  00238C  6EDF               	movwf	indf2,c
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  8880  00238E  EE20 F002          	lfsr	2,2
  8881  002392  5046               	movf	_pBDTEntryEP0OutCurrent,w,c
  8882  002394  26D9               	addwf	fsr2l,f,c
  8883  002396  5047               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8884  002398  22DA               	addwfc	fsr2h,f,c
  8885  00239A  0E30               	movlw	48
  8886  00239C  6EDE               	movwf	postinc2,c
  8887  00239E  0E04               	movlw	4
  8888  0023A0  6EDD               	movwf	postdec2,c
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8892  0023A2  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8893  0023A6  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8894  0023AA  0E04               	movlw	4
  8895  0023AC  6EDF               	movwf	indf2,c
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;usb_device.c: 1451: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8899  0023AE  C046  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8900  0023B2  C047  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8901  0023B6  0E00               	movlw	0
  8902  0023B8  8EDB               	bsf	plusw2,7,c
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;usb_device.c: 1452: BothEP0OutUOWNsSet = 1;
  8906  0023BA  0E01               	movlw	1
  8907  0023BC  0100               	movlb	0	; () banked
  8908  0023BE  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->CNT = 8;
  8912  0023C0  EE20 F001          	lfsr	2,1
  8913  0023C4  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8914  0023C6  26D9               	addwf	fsr2l,f,c
  8915  0023C8  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8916  0023CA  22DA               	addwfc	fsr2h,f,c
  8917  0023CC  0E08               	movlw	8
  8918  0023CE  6EDF               	movwf	indf2,c
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8922  0023D0  EE20 F002          	lfsr	2,2
  8923  0023D4  5048               	movf	_pBDTEntryEP0OutNext,w,c
  8924  0023D6  26D9               	addwf	fsr2l,f,c
  8925  0023D8  5049               	movf	_pBDTEntryEP0OutNext+1,w,c
  8926  0023DA  22DA               	addwfc	fsr2h,f,c
  8927  0023DC  0E30               	movlw	48
  8928  0023DE  6EDE               	movwf	postinc2,c
  8929  0023E0  0E04               	movlw	4
  8930  0023E2  6EDD               	movwf	postdec2,c
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;usb_device.c: 1458: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8934  0023E4  C048  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8935  0023E8  C049  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8936  0023EC  0E80               	movlw	128
  8937  0023EE  6EDF               	movwf	indf2,c
  8938                           
  8939                           ; BSR set to: 0
  8940                           
  8941                           ; BSR set to: 0
  8942                           
  8943                           ; BSR set to: 0
  8944  0023F0  0012               	return	
  8945                           
  8946                           ; BSR set to: 0
  8947  0023F2  0012               	return		;funcret
  8948  0023F4                     __end_of_USBCtrlEPAllowStatusStage:
  8949                           	opt stack 0
  8950                           tblptru	equ	0xFF8
  8951                           tblptrh	equ	0xFF7
  8952                           tblptrl	equ	0xFF6
  8953                           tablat	equ	0xFF5
  8954                           prodh	equ	0xFF4
  8955                           prodl	equ	0xFF3
  8956                           intcon	equ	0xFF2
  8957                           postinc0	equ	0xFEE
  8958                           wreg	equ	0xFE8
  8959                           indf1	equ	0xFE7
  8960                           postdec1	equ	0xFE5
  8961                           fsr1h	equ	0xFE2
  8962                           fsr1l	equ	0xFE1
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           plusw2	equ	0xFDB
  8967                           fsr2h	equ	0xFDA
  8968                           fsr2l	equ	0xFD9
  8969                           status	equ	0xFD8
  8970                           
  8971 ;; *************** function _USBCtrlTrfInHandler *****************
  8972 ;; Defined at:
  8973 ;;		line 2598 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;		None
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;  lastDTS         1   35[COMRAM] unsigned char 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;		None               void
  8980 ;; Registers used:
  8981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8987 ;;      Params:         0       0       0       0       0       0       0       0       0
  8988 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8990 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8991 ;;Total ram usage:        1 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    5
  8994 ;; This function calls:
  8995 ;;		_USBCtrlTrfTxService
  8996 ;; This function is called by:
  8997 ;;		_USBCtrlEPService
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text32
  9002  002256                     __ptext32:
  9003                           	opt stack 0
  9004  002256                     _USBCtrlTrfInHandler:
  9005                           	opt stack 22
  9006                           
  9007                           ;usb_device.c: 2600: uint8_t lastDTS;
  9008                           ;usb_device.c: 2602: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9009                           
  9010                           ;incstack = 0
  9011  002256  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9012  00225A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9013  00225E  0E00               	movlw	0
  9014  002260  BCDF               	btfsc	indf2,6,c
  9015  002262  0E01               	movlw	1
  9016  002264  6E24               	movwf	USBCtrlTrfInHandler@lastDTS,c
  9017                           
  9018                           ;usb_device.c: 2605: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9019  002266  0E04               	movlw	4
  9020  002268  1A3E               	xorwf	_pBDTEntryIn,f,c
  9021                           
  9022                           ;usb_device.c: 2610: if(USBDeviceState == ADR_PENDING_STATE)
  9023  00226A  0E08               	movlw	8
  9024  00226C  0100               	movlb	0	; () banked
  9025  00226E  1997               	xorwf	_USBDeviceState& (0+255),w,b
  9026  002270  A4D8               	btfss	status,2,c
  9027  002272  D015               	goto	l4390
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;usb_device.c: 2611: {
  9031                           ;usb_device.c: 2612: *U1ADDR_R = (SetupPkt.bDevADR & 0x7F);
  9032  002274  0104               	movlb	4	; () banked
  9033  002276  5132               	movf	50,w,b	;volatile
  9034  002278  0B7F               	andlw	127
  9035  00227A  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
  9036  00227E  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
  9037  002282  6EDF               	movwf	indf2,c
  9038                           
  9039                           ; BSR set to: 4
  9040                           ;usb_device.c: 2613: if(*U1ADDR_R != 0u)
  9041  002284  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
  9042  002288  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
  9043  00228C  50DF               	movf	indf2,w,c
  9044  00228E  B4D8               	btfsc	status,2,c
  9045  002290  D002               	goto	l4388
  9046                           
  9047                           ; BSR set to: 4
  9048                           ;usb_device.c: 2614: {
  9049                           ;usb_device.c: 2615: USBDeviceState=ADDRESS_STATE;
  9050  002292  0E10               	movlw	16
  9051  002294  D001               	goto	L12
  9052  002296                     l4388:
  9053                           
  9054                           ;usb_device.c: 2617: else
  9055                           ;usb_device.c: 2618: {
  9056                           ;usb_device.c: 2619: USBDeviceState=DEFAULT_STATE;
  9057  002296  0E04               	movlw	4
  9058  002298                     L12:
  9059  002298  0100               	movlb	0	; () banked
  9060  00229A  6F97               	movwf	_USBDeviceState& (0+255),b
  9061                           
  9062                           ; BSR set to: 0
  9063  00229C  D000               	goto	l4390
  9064  00229E                     l4390:
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;usb_device.c: 2620: }
  9068                           ;usb_device.c: 2621: }
  9069                           ;usb_device.c: 2624: if(controlTransferState == 1)
  9070  00229E  0454               	decf	_controlTransferState,w,c
  9071  0022A0  A4D8               	btfss	status,2,c
  9072  0022A2  D03A               	goto	l325
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;usb_device.c: 2625: {
  9076                           ;usb_device.c: 2626: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
  9077  0022A4  EE20 F002          	lfsr	2,2
  9078  0022A8  503E               	movf	_pBDTEntryIn,w,c
  9079  0022AA  26D9               	addwf	fsr2l,f,c
  9080  0022AC  503F               	movf	_pBDTEntryIn+1,w,c
  9081  0022AE  22DA               	addwfc	fsr2h,f,c
  9082  0022B0  0E38               	movlw	56
  9083  0022B2  6EDE               	movwf	postinc2,c
  9084  0022B4  0E04               	movlw	4
  9085  0022B6  6EDD               	movwf	postdec2,c
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;usb_device.c: 2627: USBCtrlTrfTxService();
  9089  0022B8  EC4E  F010         	call	_USBCtrlTrfTxService	;wreg free
  9090                           
  9091                           ;usb_device.c: 2633: if(shortPacketStatus == 2)
  9092  0022BC  0E02               	movlw	2
  9093  0022BE  1855               	xorwf	_shortPacketStatus,w,c
  9094  0022C0  A4D8               	btfss	status,2,c
  9095  0022C2  D00D               	goto	l4402
  9096                           
  9097                           ;usb_device.c: 2634: {
  9098                           ;usb_device.c: 2637: pBDTEntryIn[0]->STAT.Val = 0x04;
  9099  0022C4  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9100  0022C8  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9101  0022CC  0E04               	movlw	4
  9102  0022CE  6EDF               	movwf	indf2,c
  9103                           
  9104                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9105  0022D0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9106  0022D4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9107  0022D8  0E00               	movlw	0
  9108  0022DA  8EDB               	bsf	plusw2,7,c
  9109                           
  9110                           ;usb_device.c: 2639: }
  9111  0022DC  0012               	return	
  9112  0022DE                     l4402:
  9113                           
  9114                           ;usb_device.c: 2640: else
  9115                           ;usb_device.c: 2641: {
  9116                           ;usb_device.c: 2642: if(lastDTS == 0)
  9117  0022DE  5024               	movf	USBCtrlTrfInHandler@lastDTS,w,c
  9118  0022E0  A4D8               	btfss	status,2,c
  9119  0022E2  D00D               	goto	l4408
  9120                           
  9121                           ;usb_device.c: 2643: {
  9122                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9123  0022E4  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9124  0022E8  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9125  0022EC  0E48               	movlw	72
  9126  0022EE  6EDF               	movwf	indf2,c
  9127                           
  9128                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9129  0022F0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9130  0022F4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9131  0022F8  0E00               	movlw	0
  9132  0022FA  8EDB               	bsf	plusw2,7,c
  9133                           
  9134                           ;usb_device.c: 2646: }
  9135  0022FC  0012               	return	
  9136  0022FE                     l4408:
  9137                           
  9138                           ;usb_device.c: 2647: else
  9139                           ;usb_device.c: 2648: {
  9140                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9141  0022FE  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9142  002302  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9143  002306  0E08               	movlw	8
  9144  002308  6EDF               	movwf	indf2,c
  9145                           
  9146                           ;usb_device.c: 2650: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9147  00230A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  9148  00230E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9149  002312  0E00               	movlw	0
  9150  002314  8EDB               	bsf	plusw2,7,c
  9151                           
  9152                           ;usb_device.c: 2651: }
  9153                           ;usb_device.c: 2652: }
  9154                           ;usb_device.c: 2653: }
  9155  002316  0012               	return	
  9156  002318                     l325:
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;usb_device.c: 2654: else
  9160                           ;usb_device.c: 2655: {
  9161                           ;usb_device.c: 2659: if(outPipes[0].info.bits.busy == 1)
  9162  002318  0100               	movlb	0	; () banked
  9163  00231A  AF6D               	btfss	(_outPipes+3)& (0+255),7,b
  9164  00231C  D003               	goto	l4414
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;usb_device.c: 2664: }
  9168                           ;usb_device.c: 2665: outPipes[0].info.bits.busy = 0;
  9169                           
  9170                           ; BSR set to: 0
  9171  00231E  0100               	movlb	0	; () banked
  9172  002320  9F6D               	bcf	(_outPipes+3)& (0+255),7,b
  9173  002322  D000               	goto	l4414
  9174  002324                     l4414:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;usb_device.c: 2666: }
  9178                           ;usb_device.c: 2668: controlTransferState = 0;
  9179  002324  0E00               	movlw	0
  9180  002326  6E54               	movwf	_controlTransferState,c
  9181  002328  0012               	return	
  9182                           
  9183                           ; BSR set to: 0
  9184  00232A  0012               	return		;funcret
  9185  00232C                     __end_of_USBCtrlTrfInHandler:
  9186                           	opt stack 0
  9187                           tblptru	equ	0xFF8
  9188                           tblptrh	equ	0xFF7
  9189                           tblptrl	equ	0xFF6
  9190                           tablat	equ	0xFF5
  9191                           prodh	equ	0xFF4
  9192                           prodl	equ	0xFF3
  9193                           intcon	equ	0xFF2
  9194                           postinc0	equ	0xFEE
  9195                           wreg	equ	0xFE8
  9196                           indf1	equ	0xFE7
  9197                           postdec1	equ	0xFE5
  9198                           fsr1h	equ	0xFE2
  9199                           fsr1l	equ	0xFE1
  9200                           indf2	equ	0xFDF
  9201                           postinc2	equ	0xFDE
  9202                           postdec2	equ	0xFDD
  9203                           plusw2	equ	0xFDB
  9204                           fsr2h	equ	0xFDA
  9205                           fsr2l	equ	0xFD9
  9206                           status	equ	0xFD8
  9207                           
  9208 ;; *************** function _USBCtrlTrfTxService *****************
  9209 ;; Defined at:
  9210 ;;		line 1774 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  byteToSend      1   34[COMRAM] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;		None               void
  9217 ;; Registers used:
  9218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0
  9225 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9227 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9228 ;;Total ram usage:        1 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    4
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_USBCtrlEPAllowDataStage
  9235 ;;		_USBCtrlTrfInHandler
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           	psect	text33
  9240  00209C                     __ptext33:
  9241                           	opt stack 0
  9242  00209C                     _USBCtrlTrfTxService:
  9243                           	opt stack 20
  9244                           
  9245                           ;usb_device.c: 1776: uint8_t byteToSend;
  9246                           ;usb_device.c: 1780: byteToSend = 8;
  9247                           
  9248                           ;incstack = 0
  9249  00209C  0E08               	movlw	8
  9250  00209E  6E23               	movwf	USBCtrlTrfTxService@byteToSend,c
  9251                           
  9252                           ;usb_device.c: 1781: if(inPipes[0].wCount.Val < (uint8_t)8)
  9253  0020A0  505B               	movf	_inPipes+5,w,c
  9254  0020A2  E111               	bnz	l3930
  9255  0020A4  0E08               	movlw	8
  9256  0020A6  5C5A               	subwf	_inPipes+4,w,c
  9257  0020A8  B0D8               	btfsc	status,0,c
  9258  0020AA  D00D               	goto	l3930
  9259                           
  9260                           ;usb_device.c: 1782: {
  9261                           ;usb_device.c: 1783: byteToSend = inPipes[0].wCount.Val;
  9262  0020AC  C05A  F023         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
  9263                           
  9264                           ;usb_device.c: 1790: if(shortPacketStatus == 0)
  9265  0020B0  5055               	movf	_shortPacketStatus,w,c
  9266  0020B2  A4D8               	btfss	status,2,c
  9267  0020B4  D002               	goto	l3926
  9268                           
  9269                           ;usb_device.c: 1791: {
  9270                           ;usb_device.c: 1792: shortPacketStatus = 1;
  9271  0020B6  0E01               	movlw	1
  9272  0020B8  D004               	goto	L13
  9273  0020BA                     l3926:
  9274                           
  9275                           ;usb_device.c: 1794: else if(shortPacketStatus == 1)
  9276  0020BA  0455               	decf	_shortPacketStatus,w,c
  9277  0020BC  A4D8               	btfss	status,2,c
  9278  0020BE  D003               	goto	l3930
  9279                           
  9280                           ;usb_device.c: 1795: {
  9281                           ;usb_device.c: 1796: shortPacketStatus = 2;
  9282  0020C0  0E02               	movlw	2
  9283  0020C2                     L13:
  9284  0020C2  6E55               	movwf	_shortPacketStatus,c
  9285  0020C4  D000               	goto	l3930
  9286  0020C6                     l3930:
  9287                           
  9288                           ;usb_device.c: 1797: }
  9289                           ;usb_device.c: 1798: }
  9290                           ;usb_device.c: 1802: inPipes[0].wCount.Val -= byteToSend;
  9291  0020C6  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9292  0020C8  5E5A               	subwf	_inPipes+4,f,c
  9293  0020CA  0E00               	movlw	0
  9294  0020CC  5A5B               	subwfb	_inPipes+5,f,c
  9295                           
  9296                           ;usb_device.c: 1807: pBDTEntryIn[0]->CNT = byteToSend;
  9297  0020CE  EE20 F001          	lfsr	2,1
  9298  0020D2  503E               	movf	_pBDTEntryIn,w,c
  9299  0020D4  26D9               	addwf	fsr2l,f,c
  9300  0020D6  503F               	movf	_pBDTEntryIn+1,w,c
  9301  0020D8  22DA               	addwfc	fsr2h,f,c
  9302  0020DA  C023  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
  9303                           
  9304                           ;usb_device.c: 1811: pDst = ( uint8_t*)CtrlTrfData;
  9305  0020DE  0E38               	movlw	56
  9306  0020E0  0100               	movlb	0	; () banked
  9307  0020E2  6F8C               	movwf	_pDst& (0+255),b
  9308  0020E4  0E04               	movlw	4
  9309  0020E6  0100               	movlb	0	; () banked
  9310  0020E8  6F8D               	movwf	(_pDst+1)& (0+255),b
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;usb_device.c: 1812: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9314  0020EA  A059               	btfss	_inPipes+3,0,c
  9315  0020EC  D01E               	goto	l3948
  9316  0020EE  D03F               	goto	l3958
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;usb_device.c: 1813: {
  9320                           ;usb_device.c: 1814: while(byteToSend)
  9321  0020F0  D01C               	goto	l3948
  9322  0020F2                     l3940:
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;usb_device.c: 1815: {
  9326                           ;usb_device.c: 1816: *pDst++ = *inPipes[0].pSrc.bRom++;
  9327  0020F2  C056  FFF6         	movff	_inPipes,tblptrl
  9328  0020F6  C057  FFF7         	movff	_inPipes+1,tblptrh
  9329  0020FA  6AF8               	clrf	tblptru,c
  9330  0020FC  C08C  FFD9         	movff	_pDst,fsr2l
  9331  002100  C08D  FFDA         	movff	_pDst+1,fsr2h
  9332  002104  0E07               	movlw	(high __ramtop+-1)
  9333  002106  64F7               	cpfsgt	tblptrh,c
  9334  002108  D003               	bra	u2617
  9335  00210A  0008               	tblrd		*
  9336  00210C  50F5               	movf	tablat,w,c
  9337  00210E  D005               	bra	u2610
  9338  002110                     u2617:
  9339  002110  CFF6 FFE1          	movff	tblptrl,fsr1l
  9340  002114  CFF7 FFE2          	movff	tblptrh,fsr1h
  9341  002118  50E7               	movf	indf1,w,c
  9342  00211A                     u2610:
  9343  00211A  6EDF               	movwf	indf2,c
  9344  00211C  4A56               	infsnz	_inPipes,f,c
  9345  00211E  2A57               	incf	_inPipes+1,f,c
  9346  002120  0100               	movlb	0	; () banked
  9347  002122  4B8C               	infsnz	_pDst& (0+255),f,b
  9348  002124  2B8D               	incf	(_pDst+1)& (0+255),f,b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;usb_device.c: 1817: byteToSend--;
  9352  002126  0623               	decf	USBCtrlTrfTxService@byteToSend,f,c
  9353  002128  D000               	goto	l3948
  9354  00212A                     l3948:
  9355                           
  9356                           ; BSR set to: 0
  9357  00212A  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9358  00212C  B4D8               	btfsc	status,2,c
  9359  00212E  0012               	return	
  9360  002130  D7E0               	goto	l3940
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;usb_device.c: 1818: }
  9364                           ;usb_device.c: 1819: }
  9365  002132  0012               	return	
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;usb_device.c: 1820: else
  9369                           ;usb_device.c: 1821: {
  9370                           ;usb_device.c: 1822: while(byteToSend)
  9371  002134  D01C               	goto	l3958
  9372  002136                     l3950:
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;usb_device.c: 1823: {
  9376                           ;usb_device.c: 1824: *pDst++ = *inPipes[0].pSrc.bRam++;
  9377  002136  C056  FFF6         	movff	_inPipes,tblptrl
  9378  00213A  C057  FFF7         	movff	_inPipes+1,tblptrh
  9379  00213E  6AF8               	clrf	tblptru,c
  9380  002140  C08C  FFD9         	movff	_pDst,fsr2l
  9381  002144  C08D  FFDA         	movff	_pDst+1,fsr2h
  9382  002148  0E07               	movlw	(high __ramtop+-1)
  9383  00214A  64F7               	cpfsgt	tblptrh,c
  9384  00214C  D003               	bra	u2637
  9385  00214E  0008               	tblrd		*
  9386  002150  50F5               	movf	tablat,w,c
  9387  002152  D005               	bra	u2630
  9388  002154                     u2637:
  9389  002154  CFF6 FFE1          	movff	tblptrl,fsr1l
  9390  002158  CFF7 FFE2          	movff	tblptrh,fsr1h
  9391  00215C  50E7               	movf	indf1,w,c
  9392  00215E                     u2630:
  9393  00215E  6EDF               	movwf	indf2,c
  9394  002160  4A56               	infsnz	_inPipes,f,c
  9395  002162  2A57               	incf	_inPipes+1,f,c
  9396  002164  0100               	movlb	0	; () banked
  9397  002166  4B8C               	infsnz	_pDst& (0+255),f,b
  9398  002168  2B8D               	incf	(_pDst+1)& (0+255),f,b
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;usb_device.c: 1825: byteToSend--;
  9402  00216A  0623               	decf	USBCtrlTrfTxService@byteToSend,f,c
  9403  00216C  D000               	goto	l3958
  9404  00216E                     l3958:
  9405                           
  9406                           ; BSR set to: 0
  9407  00216E  5023               	movf	USBCtrlTrfTxService@byteToSend,w,c
  9408  002170  B4D8               	btfsc	status,2,c
  9409  002172  0012               	return	
  9410  002174  D7E0               	goto	l3950
  9411                           
  9412                           ; BSR set to: 0
  9413  002176  0012               	return	
  9414                           
  9415                           ; BSR set to: 0
  9416                           
  9417                           ; BSR set to: 0
  9418  002178  0012               	return		;funcret
  9419  00217A                     __end_of_USBCtrlTrfTxService:
  9420                           	opt stack 0
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           prodh	equ	0xFF4
  9426                           prodl	equ	0xFF3
  9427                           intcon	equ	0xFF2
  9428                           postinc0	equ	0xFEE
  9429                           wreg	equ	0xFE8
  9430                           indf1	equ	0xFE7
  9431                           postdec1	equ	0xFE5
  9432                           fsr1h	equ	0xFE2
  9433                           fsr1l	equ	0xFE1
  9434                           indf2	equ	0xFDF
  9435                           postinc2	equ	0xFDE
  9436                           postdec2	equ	0xFDD
  9437                           plusw2	equ	0xFDB
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function _USBClearUSBInterrupt *****************
  9443 ;; Defined at:
  9444 ;;		line 23 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;		None               void
  9451 ;; Registers used:
  9452 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    4
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_USBDeviceTasks
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text34
  9473  0030B4                     __ptext34:
  9474                           	opt stack 0
  9475  0030B4                     _USBClearUSBInterrupt:
  9476                           	opt stack 24
  9477                           
  9478                           ;usb_hal_fixes.c: 24: if (pic18_devid == 0x02E0) {
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;incstack = 0
  9482  0030B4  0EE0               	movlw	224
  9483  0030B6  0100               	movlb	0	; () banked
  9484  0030B8  19F1               	xorwf	_pic18_devid& (0+255),w,b
  9485  0030BA  E10C               	bnz	l4510
  9486  0030BC  0E02               	movlw	2
  9487  0030BE  0100               	movlb	0	; () banked
  9488  0030C0  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
  9489  0030C2  A4D8               	btfss	status,2,c
  9490  0030C4  D007               	goto	l4510
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;usb_hal_fixes.c: 25: *PIR3_R &= 0b11111011;
  9494  0030C6  C0C5  FFD9         	movff	_PIR3_R,fsr2l
  9495  0030CA  C0C6  FFDA         	movff	_PIR3_R+1,fsr2h
  9496  0030CE  0EFB               	movlw	251
  9497  0030D0  16DF               	andwf	indf2,f,c
  9498                           
  9499                           ;usb_hal_fixes.c: 26: } else {
  9500  0030D2  0012               	return	
  9501  0030D4                     l4510:
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;usb_hal_fixes.c: 27: *PIR2_R &= 0b11011111;
  9505  0030D4  C0C3  FFD9         	movff	_PIR2_R,fsr2l
  9506  0030D8  C0C4  FFDA         	movff	_PIR2_R+1,fsr2h
  9507  0030DC  0EDF               	movlw	223
  9508  0030DE  16DF               	andwf	indf2,f,c
  9509  0030E0  0012               	return	
  9510                           
  9511                           ; BSR set to: 0
  9512                           
  9513                           ; BSR set to: 0
  9514  0030E2  0012               	return		;funcret
  9515  0030E4                     __end_of_USBClearUSBInterrupt:
  9516                           	opt stack 0
  9517                           tblptru	equ	0xFF8
  9518                           tblptrh	equ	0xFF7
  9519                           tblptrl	equ	0xFF6
  9520                           tablat	equ	0xFF5
  9521                           prodh	equ	0xFF4
  9522                           prodl	equ	0xFF3
  9523                           intcon	equ	0xFF2
  9524                           postinc0	equ	0xFEE
  9525                           wreg	equ	0xFE8
  9526                           indf1	equ	0xFE7
  9527                           postdec1	equ	0xFE5
  9528                           fsr1h	equ	0xFE2
  9529                           fsr1l	equ	0xFE1
  9530                           indf2	equ	0xFDF
  9531                           postinc2	equ	0xFDE
  9532                           postdec2	equ	0xFDD
  9533                           plusw2	equ	0xFDB
  9534                           fsr2h	equ	0xFDA
  9535                           fsr2l	equ	0xFD9
  9536                           status	equ	0xFD8
  9537                           
  9538 ;; *************** function _Read_b_eep *****************
  9539 ;; Defined at:
  9540 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\read_B.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  badd            2   34[COMRAM] unsigned int 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;		None
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  1    wreg      unsigned char 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9554 ;;      Params:         2       0       0       0       0       0       0       0       0
  9555 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9557 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9558 ;;Total ram usage:        2 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:    4
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_ProcessCDC
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           	psect	text35
  9569  0032F8                     __ptext35:
  9570                           	opt stack 0
  9571  0032F8                     _Read_b_eep:
  9572                           	opt stack 24
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;incstack = 0
  9576  0032F8  C023  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  9577  0032FC  9CA6               	bcf	4006,6,c	;volatile
  9578  0032FE  9EA6               	bcf	4006,7,c	;volatile
  9579  003300  80A6               	bsf	4006,0,c	;volatile
  9580  003302  F000               	nop	
  9581  003304  F000               	nop	
  9582  003306  50A8               	movf	4008,w,c	;volatile
  9583  003308  0012               	return	
  9584  00330A  0012               	return		;funcret
  9585  00330C                     __end_of_Read_b_eep:
  9586                           	opt stack 0
  9587                           tblptru	equ	0xFF8
  9588                           tblptrh	equ	0xFF7
  9589                           tblptrl	equ	0xFF6
  9590                           tablat	equ	0xFF5
  9591                           prodh	equ	0xFF4
  9592                           prodl	equ	0xFF3
  9593                           intcon	equ	0xFF2
  9594                           postinc0	equ	0xFEE
  9595                           wreg	equ	0xFE8
  9596                           indf1	equ	0xFE7
  9597                           postdec1	equ	0xFE5
  9598                           fsr1h	equ	0xFE2
  9599                           fsr1l	equ	0xFE1
  9600                           indf2	equ	0xFDF
  9601                           postinc2	equ	0xFDE
  9602                           postdec2	equ	0xFDD
  9603                           plusw2	equ	0xFDB
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function _ReadADC *****************
  9609 ;; Defined at:
  9610 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;		None
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;		None
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  2   34[COMRAM] int 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9624 ;;      Params:         2       0       0       0       0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9626 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9627 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9628 ;;Total ram usage:        4 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    4
  9631 ;; This function calls:
  9632 ;;		Nothing
  9633 ;; This function is called by:
  9634 ;;		_ProcessCDC
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text36
  9639  003354                     __ptext36:
  9640                           	opt stack 0
  9641  003354                     _ReadADC:
  9642                           	opt stack 24
  9643                           
  9644                           ;incstack = 0
  9645  003354  50C4               	movf	4036,w,c	;volatile
  9646  003356  6E25               	movwf	??_ReadADC& (0+255),c
  9647  003358  50C3               	movf	4035,w,c	;volatile
  9648  00335A  6E23               	movwf	?_ReadADC,c
  9649  00335C  C025  F024         	movff	??_ReadADC,?_ReadADC+1
  9650  003360  0012               	return	
  9651  003362  0012               	return		;funcret
  9652  003364                     __end_of_ReadADC:
  9653                           	opt stack 0
  9654                           tblptru	equ	0xFF8
  9655                           tblptrh	equ	0xFF7
  9656                           tblptrl	equ	0xFF6
  9657                           tablat	equ	0xFF5
  9658                           prodh	equ	0xFF4
  9659                           prodl	equ	0xFF3
  9660                           intcon	equ	0xFF2
  9661                           postinc0	equ	0xFEE
  9662                           wreg	equ	0xFE8
  9663                           indf1	equ	0xFE7
  9664                           postdec1	equ	0xFE5
  9665                           fsr1h	equ	0xFE2
  9666                           fsr1l	equ	0xFE1
  9667                           indf2	equ	0xFDF
  9668                           postinc2	equ	0xFDE
  9669                           postdec2	equ	0xFDD
  9670                           plusw2	equ	0xFDB
  9671                           fsr2h	equ	0xFDA
  9672                           fsr2l	equ	0xFD9
  9673                           status	equ	0xFD8
  9674                           
  9675 ;; *************** function _ConvertADC *****************
  9676 ;; Defined at:
  9677 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;		None
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;		None
  9682 ;; Return value:  Size  Location     Type
  9683 ;;		None               void
  9684 ;; Registers used:
  9685 ;;		None
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9691 ;;      Params:         0       0       0       0       0       0       0       0       0
  9692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9694 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9695 ;;Total ram usage:        0 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:    4
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_ProcessCDC
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           	psect	text37
  9706  00337A                     __ptext37:
  9707                           	opt stack 0
  9708  00337A                     _ConvertADC:
  9709                           	opt stack 24
  9710                           
  9711                           ;incstack = 0
  9712  00337A  82C2               	bsf	4034,1,c	;volatile
  9713  00337C  0012               	return		;funcret
  9714  00337E                     __end_of_ConvertADC:
  9715                           	opt stack 0
  9716                           tblptru	equ	0xFF8
  9717                           tblptrh	equ	0xFF7
  9718                           tblptrl	equ	0xFF6
  9719                           tablat	equ	0xFF5
  9720                           prodh	equ	0xFF4
  9721                           prodl	equ	0xFF3
  9722                           intcon	equ	0xFF2
  9723                           postinc0	equ	0xFEE
  9724                           wreg	equ	0xFE8
  9725                           indf1	equ	0xFE7
  9726                           postdec1	equ	0xFE5
  9727                           fsr1h	equ	0xFE2
  9728                           fsr1l	equ	0xFE1
  9729                           indf2	equ	0xFDF
  9730                           postinc2	equ	0xFDE
  9731                           postdec2	equ	0xFDD
  9732                           plusw2	equ	0xFDB
  9733                           fsr2h	equ	0xFDA
  9734                           fsr2l	equ	0xFD9
  9735                           status	equ	0xFD8
  9736                           
  9737 ;; *************** function _Busy_eep *****************
  9738 ;; Defined at:
  9739 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\busy_eep.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;		None
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;		None               void
  9746 ;; Registers used:
  9747 ;;		None
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9753 ;;      Params:         0       0       0       0       0       0       0       0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9756 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9757 ;;Total ram usage:        0 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    4
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_ProcessCDC
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text38
  9768  003372                     __ptext38:
  9769                           	opt stack 0
  9770  003372                     _Busy_eep:
  9771                           	opt stack 24
  9772                           
  9773                           ;incstack = 0
  9774  003372  D000               	goto	l1082
  9775  003374                     l1082:
  9776  003374  B2A6               	btfsc	4006,1,c	;volatile
  9777  003376  D7FE               	goto	l1082
  9778  003378  0012               	return		;funcret
  9779  00337A                     __end_of_Busy_eep:
  9780                           	opt stack 0
  9781                           tblptru	equ	0xFF8
  9782                           tblptrh	equ	0xFF7
  9783                           tblptrl	equ	0xFF6
  9784                           tablat	equ	0xFF5
  9785                           prodh	equ	0xFF4
  9786                           prodl	equ	0xFF3
  9787                           intcon	equ	0xFF2
  9788                           postinc0	equ	0xFEE
  9789                           wreg	equ	0xFE8
  9790                           indf1	equ	0xFE7
  9791                           postdec1	equ	0xFE5
  9792                           fsr1h	equ	0xFE2
  9793                           fsr1l	equ	0xFE1
  9794                           indf2	equ	0xFDF
  9795                           postinc2	equ	0xFDE
  9796                           postdec2	equ	0xFDD
  9797                           plusw2	equ	0xFDB
  9798                           fsr2h	equ	0xFDA
  9799                           fsr2l	equ	0xFD9
  9800                           status	equ	0xFD8
  9801                           
  9802 ;; *************** function _BusyADC *****************
  9803 ;; Defined at:
  9804 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      unsigned char 
  9811 ;; Registers used:
  9812 ;;		wreg
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    4
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_ProcessCDC
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text39
  9833  003364                     __ptext39:
  9834                           	opt stack 0
  9835  003364                     _BusyADC:
  9836                           	opt stack 24
  9837                           
  9838                           ;incstack = 0
  9839  003364  A2C2               	btfss	4034,1,c	;volatile
  9840  003366  D002               	goto	u4220
  9841  003368  0E01               	movlw	1
  9842  00336A  0012               	return	
  9843  00336C                     u4220:
  9844  00336C  0E00               	movlw	0
  9845  00336E  0012               	return	
  9846  003370  0012               	return		;funcret
  9847  003372                     __end_of_BusyADC:
  9848                           	opt stack 0
  9849                           tblptru	equ	0xFF8
  9850                           tblptrh	equ	0xFF7
  9851                           tblptrl	equ	0xFF6
  9852                           tablat	equ	0xFF5
  9853                           prodh	equ	0xFF4
  9854                           prodl	equ	0xFF3
  9855                           intcon	equ	0xFF2
  9856                           postinc0	equ	0xFEE
  9857                           wreg	equ	0xFE8
  9858                           indf1	equ	0xFE7
  9859                           postdec1	equ	0xFE5
  9860                           fsr1h	equ	0xFE2
  9861                           fsr1l	equ	0xFE1
  9862                           indf2	equ	0xFDF
  9863                           postinc2	equ	0xFDE
  9864                           postdec2	equ	0xFDD
  9865                           plusw2	equ	0xFDB
  9866                           fsr2h	equ	0xFDA
  9867                           fsr2l	equ	0xFD9
  9868                           status	equ	0xFD8
  9869                           
  9870 ;; *************** function _BlinkUSBStatus *****************
  9871 ;; Defined at:
  9872 ;;		line 259 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;		None               void
  9879 ;; Registers used:
  9880 ;;		wreg, status,2, status,0
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9888 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9889 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9890 ;;Total ram usage:        1 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    4
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_ProcessIO
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text40
  9901  002F7E                     __ptext40:
  9902                           	opt stack 0
  9903  002F7E                     _BlinkUSBStatus:
  9904                           	opt stack 25
  9905                           
  9906                           ;karate.c: 261: if(led_count-- == 0) {
  9907                           
  9908                           ;incstack = 0
  9909  002F7E  0100               	movlb	0	; () banked
  9910  002F80  078A               	decf	_led_count& (0+255),f,b
  9911  002F82  A0D8               	btfss	status,0,c
  9912  002F84  078B               	decf	(_led_count+1)& (0+255),f,b
  9913  002F86  0100               	movlb	0	; () banked
  9914  002F88  298A               	incf	_led_count& (0+255),w,b
  9915  002F8A  E11E               	bnz	l734
  9916  002F8C  0100               	movlb	0	; () banked
  9917  002F8E  298B               	incf	(_led_count+1)& (0+255),w,b
  9918  002F90  A4D8               	btfss	status,2,c
  9919  002F92  0012               	return	
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;karate.c: 262: led_count = 10000U;
  9923  002F94  0E27               	movlw	39
  9924  002F96  0100               	movlb	0	; () banked
  9925  002F98  6F8B               	movwf	(_led_count+1)& (0+255),b
  9926  002F9A  0E10               	movlw	16
  9927  002F9C  6F8A               	movwf	_led_count& (0+255),b
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;karate.c: 263: if ((USBDeviceState == CONFIGURED_STATE) & (UCONbits.SUSPND != 1)) {
  9931  002F9E  B260               	btfsc	3936,1,c	;volatile
  9932  002FA0  D002               	goto	u4330
  9933  002FA2  0E01               	movlw	1
  9934  002FA4  D001               	goto	u4332
  9935  002FA6                     u4330:
  9936  002FA6  0E00               	movlw	0
  9937  002FA8                     u4332:
  9938  002FA8  6E23               	movwf	??_BlinkUSBStatus& (0+255),c
  9939  002FAA  0E20               	movlw	32
  9940  002FAC  0100               	movlb	0	; () banked
  9941  002FAE  1997               	xorwf	_USBDeviceState& (0+255),w,b
  9942  002FB0  A4D8               	btfss	status,2,c
  9943  002FB2  D002               	goto	u4340
  9944  002FB4  0E01               	movlw	1
  9945  002FB6  D001               	goto	u4342
  9946  002FB8                     u4340:
  9947  002FB8  0E00               	movlw	0
  9948  002FBA                     u4342:
  9949  002FBA  1423               	andwf	??_BlinkUSBStatus,w,c
  9950  002FBC  A0E8               	btfss	wreg,0,c
  9951  002FBE  D002               	goto	l732
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;karate.c: 264: LATCbits.LATC1 = !LATCbits.LATC1;;
  9955  002FC0  728B               	btg	3979,1,c	;volatile
  9956                           
  9957                           ;karate.c: 265: } else {
  9958  002FC2  0012               	return	
  9959  002FC4                     l732:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;karate.c: 266: LATCbits.LATC1 = 0;;
  9963  002FC4  928B               	bcf	3979,1,c	;volatile
  9964                           
  9965                           ; BSR set to: 0
  9966  002FC6  0012               	return	
  9967  002FC8                     l734:
  9968                           
  9969                           ; BSR set to: 0
  9970  002FC8  0012               	return		;funcret
  9971  002FCA                     __end_of_BlinkUSBStatus:
  9972                           	opt stack 0
  9973                           tblptru	equ	0xFF8
  9974                           tblptrh	equ	0xFF7
  9975                           tblptrl	equ	0xFF6
  9976                           tablat	equ	0xFF5
  9977                           prodh	equ	0xFF4
  9978                           prodl	equ	0xFF3
  9979                           intcon	equ	0xFF2
  9980                           postinc0	equ	0xFEE
  9981                           wreg	equ	0xFE8
  9982                           indf1	equ	0xFE7
  9983                           postdec1	equ	0xFE5
  9984                           fsr1h	equ	0xFE2
  9985                           fsr1l	equ	0xFE1
  9986                           indf2	equ	0xFDF
  9987                           postinc2	equ	0xFDE
  9988                           postdec2	equ	0xFDD
  9989                           plusw2	equ	0xFDB
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function _InitializeSystem *****************
  9995 ;; Defined at:
  9996 ;;		line 88 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;		None               void
 10003 ;; Registers used:
 10004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10013 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10014 ;;Total ram usage:        0 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    7
 10017 ;; This function calls:
 10018 ;;		_OpenSPI1
 10019 ;;		_USBDeviceInit
 10020 ;;		_USBRegisterFix
 10021 ;;		_readDeviceID
 10022 ;;		_tlc5947_count_channels
 10023 ;;		_tlc5947_pwm_readback
 10024 ;; This function is called by:
 10025 ;;		_main
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text41
 10030  00186A                     __ptext41:
 10031                           	opt stack 0
 10032  00186A                     _InitializeSystem:
 10033                           	opt stack 23
 10034                           
 10035                           ;karate.c: 90: DDRE &= 0x00; DDRD &= 0x00; DDRC &= 0xFF; DDRB &= 0x3F; DDRA &= 0xC3;;
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;incstack = 0
 10039  00186A  0E00               	movlw	0
 10040  00186C  6E96               	movwf	3990,c	;volatile
 10041  00186E  0E00               	movlw	0
 10042  001870  6E95               	movwf	3989,c	;volatile
 10043  001872  5094               	movf	3988,w,c	;volatile
 10044  001874  0E3F               	movlw	63
 10045  001876  1693               	andwf	3987,f,c	;volatile
 10046  001878  0EC3               	movlw	195
 10047  00187A  1692               	andwf	3986,f,c	;volatile
 10048                           
 10049                           ;karate.c: 91: LATC &= 0xF9; TRISC &= 0xF9;;
 10050  00187C  0EF9               	movlw	249
 10051  00187E  168B               	andwf	3979,f,c	;volatile
 10052  001880  0EF9               	movlw	249
 10053  001882  1694               	andwf	3988,f,c	;volatile
 10054                           
 10055                           ;karate.c: 93: readDeviceID();
 10056  001884  EC4F  F016         	call	_readDeviceID	;wreg free
 10057                           
 10058                           ;karate.c: 96: if (pic18_devid == 0x02E0) {
 10059  001888  0EE0               	movlw	224
 10060  00188A  0100               	movlb	0	; () banked
 10061  00188C  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10062  00188E  E130               	bnz	l5460
 10063  001890  0E02               	movlw	2
 10064  001892  0100               	movlb	0	; () banked
 10065  001894  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 10066  001896  A4D8               	btfss	status,2,c
 10067  001898  D02B               	goto	l5460
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;karate.c: 97: OSCTUNE = 0x80;
 10071  00189A  0E80               	movlw	128
 10072  00189C  6E9B               	movwf	3995,c	;volatile
 10073                           
 10074                           ;karate.c: 98: OSCCON = 0x70;
 10075  00189E  0E70               	movlw	112
 10076  0018A0  6ED3               	movwf	4051,c	;volatile
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;karate.c: 99: *OSCCON2_R = 0x10;
 10080  0018A2  C0BD  FFD9         	movff	_OSCCON2_R,fsr2l
 10081  0018A6  C0BE  FFDA         	movff	_OSCCON2_R+1,fsr2h
 10082  0018AA  0E10               	movlw	16
 10083  0018AC  6EDF               	movwf	indf2,c
 10084                           
 10085                           ; BSR set to: 0
 10086                           
 10087                           ;karate.c: 100: while((*OSCCON2_R & 0x80) != 0x80);
 10088  0018AE  D000               	goto	l5456
 10089  0018B0                     l5456:
 10090                           
 10091                           ; BSR set to: 0
 10092  0018B0  C0BD  FFD9         	movff	_OSCCON2_R,fsr2l
 10093  0018B4  C0BE  FFDA         	movff	_OSCCON2_R+1,fsr2h
 10094  0018B8  0100               	movlb	0	; () banked
 10095  0018BA  AEDF               	btfss	indf2,7,c
 10096  0018BC  D7F9               	goto	l5456
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;karate.c: 101: *ACTCON_R = 0x90;
 10100                           
 10101                           ; BSR set to: 0
 10102  0018BE  C0B5  FFD9         	movff	_ACTCON_R,fsr2l
 10103  0018C2  C0B6  FFDA         	movff	_ACTCON_R+1,fsr2h
 10104  0018C6  0E90               	movlw	144
 10105  0018C8  6EDF               	movwf	indf2,c
 10106                           
 10107                           ;karate.c: 102: *ANSELC_R = 0;
 10108  0018CA  C0B9  FFD9         	movff	_ANSELC_R,fsr2l
 10109  0018CE  C0BA  FFDA         	movff	_ANSELC_R+1,fsr2h
 10110  0018D2  0E00               	movlw	0
 10111  0018D4  6EDF               	movwf	indf2,c
 10112                           
 10113                           ;karate.c: 103: *ANSELA_R = 0;
 10114  0018D6  C0B7  FFD9         	movff	_ANSELA_R,fsr2l
 10115  0018DA  C0B8  FFDA         	movff	_ANSELA_R+1,fsr2h
 10116  0018DE  0E00               	movlw	0
 10117  0018E0  6EDF               	movwf	indf2,c
 10118                           
 10119                           ;karate.c: 104: *IOCB_R = 0x10;
 10120  0018E2  C0BB  FFD9         	movff	_IOCB_R,fsr2l
 10121  0018E6  C0BC  FFDA         	movff	_IOCB_R+1,fsr2h
 10122  0018EA  0E10               	movlw	16
 10123  0018EC  6EDF               	movwf	indf2,c
 10124                           
 10125                           ;karate.c: 105: } else {
 10126  0018EE  D003               	goto	l5462
 10127  0018F0                     l5460:
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;karate.c: 106: ADCON1 = 0x0F;
 10131  0018F0  0E0F               	movlw	15
 10132  0018F2  6EC1               	movwf	4033,c	;volatile
 10133  0018F4  D000               	goto	l5462
 10134  0018F6                     l5462:
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;karate.c: 107: }
 10138                           ;karate.c: 109: DDRAbits.RA1 = 1;
 10139  0018F6  8292               	bsf	3986,1,c	;volatile
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;karate.c: 110: DDRBbits.RB2 = 1;
 10143  0018F8  8493               	bsf	3987,2,c	;volatile
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;karate.c: 111: DDRBbits.RB4 = 1;
 10147  0018FA  8893               	bsf	3987,4,c	;volatile
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;karate.c: 112: TRISCbits.TRISC6 = 1;
 10151  0018FC  8C94               	bsf	3988,6,c	;volatile
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;karate.c: 115: if (pic18_devid == 0x02E0) {
 10155  0018FE  0EE0               	movlw	224
 10156  001900  0100               	movlb	0	; () banked
 10157  001902  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10158  001904  E10D               	bnz	l5474
 10159  001906  0E02               	movlw	2
 10160  001908  0100               	movlb	0	; () banked
 10161  00190A  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 10162  00190C  A4D8               	btfss	status,2,c
 10163  00190E  D008               	goto	l5474
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;karate.c: 116: OpenSPI1(0b00000010, 0b00000000, 0b00000000);
 10167  001910  0E00               	movlw	0
 10168  001912  6E23               	movwf	OpenSPI1@bus_mode,c
 10169  001914  0E00               	movlw	0
 10170  001916  6E24               	movwf	OpenSPI1@smp_phase,c
 10171  001918  0E02               	movlw	2
 10172  00191A  EC6B  F017         	call	_OpenSPI1
 10173                           
 10174                           ;karate.c: 117: } else {
 10175  00191E  D005               	goto	l5476
 10176  001920                     l5474:
 10177                           
 10178                           ;karate.c: 118: SSPSTAT = 0x40;
 10179  001920  0E40               	movlw	64
 10180  001922  6EC7               	movwf	4039,c	;volatile
 10181                           
 10182                           ;karate.c: 119: SSPCON1 = 0x22;
 10183  001924  0E22               	movlw	34
 10184  001926  6EC6               	movwf	4038,c	;volatile
 10185  001928  D000               	goto	l5476
 10186  00192A                     l5476:
 10187                           
 10188                           ;karate.c: 120: }
 10189                           ;karate.c: 121: TRISBbits.TRISB1 = 0;
 10190  00192A  9293               	bcf	3987,1,c	;volatile
 10191                           
 10192                           ;karate.c: 122: TRISBbits.TRISB0 = 1;
 10193  00192C  8093               	bsf	3987,0,c	;volatile
 10194                           
 10195                           ;karate.c: 123: TRISCbits.TRISC7 = 0;
 10196  00192E  9E94               	bcf	3988,7,c	;volatile
 10197                           
 10198                           ;karate.c: 124: TRISBbits.TRISB3=0; TRISCbits.TRISC0=0; TRISBbits.TRISB5=0; LATBbits.LAT
      +                          B3=0; LATCbits.LATC0=1; LATBbits.LATB5=0;;
 10199  001930  9693               	bcf	3987,3,c	;volatile
 10200  001932  9094               	bcf	3988,0,c	;volatile
 10201  001934  9A93               	bcf	3987,5,c	;volatile
 10202  001936  968A               	bcf	3978,3,c	;volatile
 10203  001938  808B               	bsf	3979,0,c	;volatile
 10204  00193A  9A8A               	bcf	3978,5,c	;volatile
 10205                           
 10206                           ;karate.c: 126: tlc5947_count_channels();
 10207  00193C  ECDE  F015         	call	_tlc5947_count_channels	;wreg free
 10208                           
 10209                           ;karate.c: 129: if (pic18_devid != 0x0090) {
 10210  001940  0E90               	movlw	144
 10211  001942  0100               	movlb	0	; () banked
 10212  001944  19F1               	xorwf	_pic18_devid& (0+255),w,b
 10213  001946  0100               	movlb	0	; () banked
 10214  001948  11F2               	iorwf	(_pic18_devid+1)& (0+255),w,b
 10215  00194A  B4D8               	btfsc	status,2,c
 10216  00194C  D009               	goto	l5502
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;karate.c: 130: T3CON = 0x77;
 10220  00194E  0E77               	movlw	119
 10221  001950  6EB1               	movwf	4017,c	;volatile
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;karate.c: 131: *T3GCON_R = 0x73;
 10225  001952  C0C7  FFD9         	movff	_T3GCON_R,fsr2l
 10226  001956  C0C8  FFDA         	movff	_T3GCON_R+1,fsr2h
 10227  00195A  0E73               	movlw	115
 10228  00195C  6EDF               	movwf	indf2,c
 10229                           
 10230                           ;karate.c: 132: } else {
 10231  00195E  D003               	goto	l5504
 10232  001960                     l5502:
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;karate.c: 133: T3CON = 0xD1;
 10236  001960  0ED1               	movlw	209
 10237  001962  6EB1               	movwf	4017,c	;volatile
 10238  001964  D000               	goto	l5504
 10239  001966                     l5504:
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;karate.c: 134: }
 10243                           ;karate.c: 135: IPR2bits.TMR3IP = 1;
 10244  001966  82A2               	bsf	4002,1,c	;volatile
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;karate.c: 136: tlc5947_pwm_readback();
 10248  001968  ECD3  F013         	call	_tlc5947_pwm_readback	;wreg free
 10249                           
 10250                           ;karate.c: 137: PIE2 = 0x02;
 10251  00196C  0E02               	movlw	2
 10252  00196E  6EA0               	movwf	4000,c	;volatile
 10253                           
 10254                           ;karate.c: 139: tmr3h_cal = (uint8_t)((tlc_pwm_readback_value >> 8 & 0xFF)^0xFF);
 10255  001970  504B               	movf	_tlc_pwm_readback_value+1,w,c
 10256  001972  0AFF               	xorlw	255
 10257  001974  0100               	movlb	0	; () banked
 10258  001976  6FA1               	movwf	_tmr3h_cal& (0+255),b
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;karate.c: 140: tmr3l_cal = (uint8_t)((tlc_pwm_readback_value & 0xFF)^0xFF);
 10262  001978  504A               	movf	_tlc_pwm_readback_value,w,c
 10263  00197A  0AFF               	xorlw	255
 10264  00197C  0100               	movlb	0	; () banked
 10265  00197E  6FA2               	movwf	_tmr3l_cal& (0+255),b
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;karate.c: 144: ADCON0 = 0x01;
 10269  001980  0E01               	movlw	1
 10270  001982  6EC2               	movwf	4034,c	;volatile
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;karate.c: 145: ADCON1 = 0x0E;
 10274  001984  0E0E               	movlw	14
 10275  001986  6EC1               	movwf	4033,c	;volatile
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;karate.c: 146: ADCON2 = 0xBE;
 10279  001988  0EBE               	movlw	190
 10280  00198A  6EC0               	movwf	4032,c	;volatile
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;karate.c: 149: INTCONbits.INT0IE = 0;
 10284  00198C  98F2               	bcf	intcon,4,c	;volatile
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;karate.c: 152: T2CON = 0xFF;
 10288  00198E  68BA               	setf	4026,c	;volatile
 10289                           
 10290                           ; BSR set to: 0
 10291                           ;karate.c: 153: PR2 = 234;
 10292  001990  0EEA               	movlw	234
 10293  001992  6EBB               	movwf	4027,c	;volatile
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;karate.c: 154: PIE1bits.TMR2IE = 0;
 10297  001994  929D               	bcf	3997,1,c	;volatile
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;karate.c: 155: IPR1bits.TMR2IP = 0;
 10301  001996  929F               	bcf	3999,1,c	;volatile
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;karate.c: 157: USBRegisterFix();
 10305  001998  ECF7  F00D         	call	_USBRegisterFix	;wreg free
 10306                           
 10307                           ;karate.c: 158: USBDeviceInit();
 10308  00199C  ECD2  F00A         	call	_USBDeviceInit	;wreg free
 10309                           
 10310                           ;karate.c: 161: RCONbits.IPEN = 1;
 10311  0019A0  8ED0               	bsf	4048,7,c	;volatile
 10312                           
 10313                           ;karate.c: 162: INTCONbits.GIEL = 1;
 10314  0019A2  8CF2               	bsf	intcon,6,c	;volatile
 10315                           
 10316                           ;karate.c: 163: INTCONbits.GIEH = 1;
 10317  0019A4  8EF2               	bsf	intcon,7,c	;volatile
 10318  0019A6  0012               	return		;funcret
 10319  0019A8                     __end_of_InitializeSystem:
 10320                           	opt stack 0
 10321                           tblptru	equ	0xFF8
 10322                           tblptrh	equ	0xFF7
 10323                           tblptrl	equ	0xFF6
 10324                           tablat	equ	0xFF5
 10325                           prodh	equ	0xFF4
 10326                           prodl	equ	0xFF3
 10327                           intcon	equ	0xFF2
 10328                           postinc0	equ	0xFEE
 10329                           wreg	equ	0xFE8
 10330                           indf1	equ	0xFE7
 10331                           postdec1	equ	0xFE5
 10332                           fsr1h	equ	0xFE2
 10333                           fsr1l	equ	0xFE1
 10334                           indf2	equ	0xFDF
 10335                           postinc2	equ	0xFDE
 10336                           postdec2	equ	0xFDD
 10337                           plusw2	equ	0xFDB
 10338                           fsr2h	equ	0xFDA
 10339                           fsr2l	equ	0xFD9
 10340                           status	equ	0xFD8
 10341                           
 10342 ;; *************** function _tlc5947_pwm_readback *****************
 10343 ;; Defined at:
 10344 ;;		line 124 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;		None
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  i               1   52[COMRAM] unsigned char 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;		None               void
 10351 ;; Registers used:
 10352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10358 ;;      Params:         0       0       0       0       0       0       0       0       0
 10359 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10360 ;;      Temps:          6       0       0       0       0       0       0       0       0
 10361 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10362 ;;Total ram usage:        7 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    6
 10365 ;; This function calls:
 10366 ;;		_Delay10TCYx
 10367 ;;		___lwdiv
 10368 ;;		_tlc5947_latch
 10369 ;;		_tlc5947_setChannel
 10370 ;;		_tlc5947_update
 10371 ;; This function is called by:
 10372 ;;		_InitializeSystem
 10373 ;;		_ProcessCDC
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text42
 10378  0027A6                     __ptext42:
 10379                           	opt stack 0
 10380  0027A6                     _tlc5947_pwm_readback:
 10381                           	opt stack 22
 10382                           
 10383                           ;tlc5947.c: 131: uint8_t i;
 10384                           ;tlc5947.c: 134: tlc_request = -1;
 10385                           
 10386                           ;incstack = 0
 10387  0027A6  0100               	movlb	0	; () banked
 10388  0027A8  69A0               	setf	_tlc_request& (0+255),b
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;tlc5947.c: 137: tlc5947_setChannel(23, 190);
 10392  0027AA  0EBE               	movlw	190
 10393  0027AC  6E26               	movwf	tlc5947_setChannel@val,c
 10394  0027AE  0E17               	movlw	23
 10395  0027B0  EC07  F00A         	call	_tlc5947_setChannel
 10396                           
 10397                           ;tlc5947.c: 138: tlc5947_update();
 10398  0027B4  EC72  F018         	call	_tlc5947_update	;wreg free
 10399                           
 10400                           ;tlc5947.c: 139: tlc5947_latch();
 10401  0027B8  ECE7  F018         	call	_tlc5947_latch	;wreg free
 10402                           
 10403                           ;tlc5947.c: 141: INTCONbits.IOCIF = 0;
 10404  0027BC  90F2               	bcf	intcon,0,c	;volatile
 10405                           
 10406                           ;tlc5947.c: 143: i = 0;
 10407  0027BE  0E00               	movlw	0
 10408  0027C0  6E35               	movwf	tlc5947_pwm_readback@i,c
 10409  0027C2  D000               	goto	l5010
 10410  0027C4                     l5010:
 10411                           
 10412                           ;tlc5947.c: 145: if (INTCONbits.IOCIF) {
 10413  0027C4  A0F2               	btfss	intcon,0,c	;volatile
 10414  0027C6  D7FE               	goto	l5010
 10415                           
 10416                           ;tlc5947.c: 146: Delay10TCYx(2);
 10417  0027C8  0E02               	movlw	2
 10418  0027CA  EC86  F019         	call	_Delay10TCYx
 10419                           
 10420                           ;tlc5947.c: 147: if (PORTBbits.RB4 == 0) {
 10421  0027CE  B881               	btfsc	3969,4,c	;volatile
 10422  0027D0  D010               	goto	l5026
 10423                           
 10424                           ;tlc5947.c: 148: if (i == 0) {
 10425  0027D2  5035               	movf	tlc5947_pwm_readback@i,w,c
 10426  0027D4  A4D8               	btfss	status,2,c
 10427  0027D6  D005               	goto	l5020
 10428                           
 10429                           ;tlc5947.c: 149: TMR3H = 0x00;
 10430  0027D8  0E00               	movlw	0
 10431  0027DA  6EB3               	movwf	4019,c	;volatile
 10432                           
 10433                           ;tlc5947.c: 150: TMR3L = 0x00;
 10434  0027DC  0E00               	movlw	0
 10435  0027DE  6EB2               	movwf	4018,c	;volatile
 10436  0027E0  D000               	goto	l5020
 10437  0027E2                     l5020:
 10438                           
 10439                           ;tlc5947.c: 151: }
 10440                           ;tlc5947.c: 152: if (i == 8) {
 10441  0027E2  0E08               	movlw	8
 10442  0027E4  1835               	xorwf	tlc5947_pwm_readback@i,w,c
 10443  0027E6  B4D8               	btfsc	status,2,c
 10444  0027E8  D006               	goto	l824
 10445  0027EA  D001               	goto	l5024
 10446                           
 10447                           ;tlc5947.c: 153: break;
 10448  0027EC  D004               	goto	l824
 10449  0027EE                     l5024:
 10450                           
 10451                           ;tlc5947.c: 154: }
 10452                           ;tlc5947.c: 155: i++;
 10453  0027EE  2A35               	incf	tlc5947_pwm_readback@i,f,c
 10454  0027F0  D000               	goto	l5026
 10455  0027F2                     l5026:
 10456                           
 10457                           ;tlc5947.c: 156: }
 10458                           ;tlc5947.c: 157: INTCONbits.IOCIF = 0;
 10459  0027F2  90F2               	bcf	intcon,0,c	;volatile
 10460  0027F4  D7E7               	goto	l5010
 10461  0027F6                     l824:
 10462                           
 10463                           ;tlc5947.c: 158: }
 10464                           ;tlc5947.c: 159: }
 10465                           ;tlc5947.c: 161: tlc_pwm_readback_value = TMR3L;
 10466  0027F6  CFB2 F04A          	movff	4018,_tlc_pwm_readback_value	;volatile
 10467  0027FA  6A4B               	clrf	_tlc_pwm_readback_value+1,c
 10468                           
 10469                           ;tlc5947.c: 162: tlc_pwm_readback_value += 256 * TMR3H;
 10470  0027FC  50B3               	movf	4019,w,c	;volatile
 10471  0027FE  264B               	addwf	_tlc_pwm_readback_value+1,f,c
 10472                           
 10473                           ;tlc5947.c: 164: pwr_delay = (tlc_pwm_readback_value - (2 * 40)) / 2 / 100;
 10474  002800  0EB0               	movlw	176
 10475  002802  6E2F               	movwf	??_tlc5947_pwm_readback& (0+255),c
 10476  002804  0EFF               	movlw	255
 10477  002806  6E30               	movwf	(??_tlc5947_pwm_readback+1)& (0+255),c
 10478  002808  C04A  F031         	movff	_tlc_pwm_readback_value,??_tlc5947_pwm_readback+2
 10479  00280C  C04B  F032         	movff	_tlc_pwm_readback_value+1,??_tlc5947_pwm_readback+3
 10480  002810  502F               	movf	??_tlc5947_pwm_readback,w,c
 10481  002812  2631               	addwf	??_tlc5947_pwm_readback+2,f,c
 10482  002814  5030               	movf	??_tlc5947_pwm_readback+1,w,c
 10483  002816  2232               	addwfc	??_tlc5947_pwm_readback+3,f,c
 10484  002818  90D8               	bcf	status,0,c
 10485  00281A  3032               	rrcf	??_tlc5947_pwm_readback+3,w,c
 10486  00281C  6E33               	movwf	(??_tlc5947_pwm_readback+4)& (0+255),c
 10487  00281E  3031               	rrcf	??_tlc5947_pwm_readback+2,w,c
 10488  002820  6E23               	movwf	___lwdiv@dividend,c
 10489  002822  C033  F024         	movff	??_tlc5947_pwm_readback+4,___lwdiv@dividend+1
 10490  002826  0E00               	movlw	0
 10491  002828  6E26               	movwf	___lwdiv@divisor+1,c
 10492  00282A  0E64               	movlw	100
 10493  00282C  6E25               	movwf	___lwdiv@divisor,c
 10494  00282E  EC11  F017         	call	___lwdiv	;wreg free
 10495  002832  C023  F08E         	movff	?___lwdiv,_pwr_delay
 10496  002836  C024  F08F         	movff	?___lwdiv+1,_pwr_delay+1
 10497                           
 10498                           ;tlc5947.c: 167: tlc5947_setChannel(23, 0);
 10499  00283A  0E00               	movlw	0
 10500  00283C  6E26               	movwf	tlc5947_setChannel@val,c
 10501  00283E  0E17               	movlw	23
 10502  002840  EC07  F00A         	call	_tlc5947_setChannel
 10503                           
 10504                           ;tlc5947.c: 168: tlc5947_update();
 10505  002844  EC72  F018         	call	_tlc5947_update	;wreg free
 10506                           
 10507                           ;tlc5947.c: 169: tlc5947_latch();
 10508  002848  ECE7  F018         	call	_tlc5947_latch	;wreg free
 10509                           
 10510                           ;tlc5947.c: 172: tlc_request = 0;
 10511  00284C  0E00               	movlw	0
 10512  00284E  0100               	movlb	0	; () banked
 10513  002850  6FA0               	movwf	_tlc_request& (0+255),b
 10514                           
 10515                           ; BSR set to: 0
 10516  002852  0012               	return		;funcret
 10517  002854                     __end_of_tlc5947_pwm_readback:
 10518                           	opt stack 0
 10519                           tblptru	equ	0xFF8
 10520                           tblptrh	equ	0xFF7
 10521                           tblptrl	equ	0xFF6
 10522                           tablat	equ	0xFF5
 10523                           prodh	equ	0xFF4
 10524                           prodl	equ	0xFF3
 10525                           intcon	equ	0xFF2
 10526                           postinc0	equ	0xFEE
 10527                           wreg	equ	0xFE8
 10528                           indf1	equ	0xFE7
 10529                           postdec1	equ	0xFE5
 10530                           fsr1h	equ	0xFE2
 10531                           fsr1l	equ	0xFE1
 10532                           indf2	equ	0xFDF
 10533                           postinc2	equ	0xFDE
 10534                           postdec2	equ	0xFDD
 10535                           plusw2	equ	0xFDB
 10536                           fsr2h	equ	0xFDA
 10537                           fsr2l	equ	0xFD9
 10538                           status	equ	0xFD8
 10539                           
 10540 ;; *************** function _tlc5947_setChannel *****************
 10541 ;; Defined at:
 10542 ;;		line 43 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  ch              1    wreg     unsigned char 
 10545 ;;  val             1   37[COMRAM] unsigned char 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  ch              1   41[COMRAM] unsigned char 
 10548 ;;  col             2   42[COMRAM] unsigned int 
 10549 ;;  mpos            1   45[COMRAM] unsigned char 
 10550 ;;  pos             1   44[COMRAM] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;		None               void
 10553 ;; Registers used:
 10554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10560 ;;      Params:         1       0       0       0       0       0       0       0       0
 10561 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10562 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10563 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10564 ;;Total ram usage:        9 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    5
 10567 ;; This function calls:
 10568 ;;		_gamma_lookup
 10569 ;; This function is called by:
 10570 ;;		_ProcessIO
 10571 ;;		_tlc5947_pwm_readback
 10572 ;;		_ProcessCDC
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           	psect	text43
 10577  00140E                     __ptext43:
 10578                           	opt stack 0
 10579  00140E                     _tlc5947_setChannel:
 10580                           	opt stack 24
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;incstack = 0
 10584                           ;tlc5947_setChannel@ch stored from wreg
 10585  00140E  6E2A               	movwf	tlc5947_setChannel@ch,c
 10586                           
 10587                           ;tlc5947.c: 45: uint8_t pos = 0;
 10588  001410  0E00               	movlw	0
 10589  001412  6E2D               	movwf	tlc5947_setChannel@pos,c
 10590                           
 10591                           ;tlc5947.c: 46: uint8_t mpos = 0;
 10592  001414  0E00               	movlw	0
 10593  001416  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10594                           
 10595                           ;tlc5947.c: 47: uint16_t col = 0;
 10596  001418  0E00               	movlw	0
 10597  00141A  6E2C               	movwf	tlc5947_setChannel@col+1,c
 10598  00141C  0E00               	movlw	0
 10599  00141E  6E2B               	movwf	tlc5947_setChannel@col,c
 10600                           
 10601                           ;tlc5947.c: 50: if (ch >= tlc_nchannels) return;
 10602  001420  0100               	movlb	0	; () banked
 10603  001422  51DD               	movf	_tlc_nchannels& (0+255),w,b
 10604  001424  5C2A               	subwf	tlc5947_setChannel@ch,w,c
 10605  001426  B0D8               	btfsc	status,0,c
 10606  001428  0012               	return	
 10607  00142A  D001               	goto	l4694
 10608                           
 10609                           ; BSR set to: 0
 10610  00142C  0012               	return	
 10611  00142E                     l4694:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;tlc5947.c: 52: col = ~gamma_lookup(val);
 10615  00142E  5026               	movf	tlc5947_setChannel@val,w,c
 10616  001430  EC58  F019         	call	_gamma_lookup
 10617  001434  1C23               	comf	?_gamma_lookup,w,c
 10618  001436  6E2B               	movwf	tlc5947_setChannel@col,c
 10619  001438  1C24               	comf	?_gamma_lookup+1,w,c
 10620  00143A  6E2C               	movwf	tlc5947_setChannel@col+1,c
 10621                           
 10622                           ;tlc5947.c: 55: if (tlc_nchannels == 48) {
 10623  00143C  0E30               	movlw	48
 10624  00143E  0100               	movlb	0	; () banked
 10625  001440  19DD               	xorwf	_tlc_nchannels& (0+255),w,b
 10626  001442  A4D8               	btfss	status,2,c
 10627  001444  D009               	goto	l4704
 10628                           
 10629                           ; BSR set to: 0
 10630                           ;tlc5947.c: 56: if (ch < 24) {
 10631  001446  0E18               	movlw	24
 10632  001448  602A               	cpfslt	tlc5947_setChannel@ch,c
 10633  00144A  D003               	goto	l4702
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;tlc5947.c: 57: ch+=24;
 10637  00144C  0E18               	movlw	24
 10638  00144E  262A               	addwf	tlc5947_setChannel@ch,f,c
 10639                           
 10640                           ;tlc5947.c: 58: } else {
 10641  001450  D003               	goto	l4704
 10642  001452                     l4702:
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;tlc5947.c: 59: ch-=24;
 10646  001452  0E18               	movlw	24
 10647  001454  5E2A               	subwf	tlc5947_setChannel@ch,f,c
 10648                           
 10649                           ; BSR set to: 0
 10650  001456  D000               	goto	l4704
 10651  001458                     l4704:
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;tlc5947.c: 60: }
 10655                           ;tlc5947.c: 61: }
 10656                           ;tlc5947.c: 63: pos = ch * 3;
 10657  001458  502A               	movf	tlc5947_setChannel@ch,w,c
 10658  00145A  0D03               	mullw	3
 10659  00145C  CFF3 F02D          	movff	prodl,tlc5947_setChannel@pos
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;tlc5947.c: 66: mpos = pos >> 1;
 10663  001460  90D8               	bcf	status,0,c
 10664  001462  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10665  001464  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;tlc5947.c: 67: if (pos & 0x01) {
 10669  001466  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10670  001468  D013               	goto	l4712
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;tlc5947.c: 68: tlc_memory[mpos] &= 0xF0;
 10674  00146A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10675  00146C  0D01               	mullw	1
 10676  00146E  0E80               	movlw	low _tlc_memory
 10677  001470  24F3               	addwf	prodl,w,c
 10678  001472  6ED9               	movwf	fsr2l,c
 10679  001474  0E01               	movlw	high _tlc_memory
 10680  001476  20F4               	addwfc	prodh,w,c
 10681  001478  6EDA               	movwf	fsr2h,c
 10682  00147A  0EF0               	movlw	240
 10683  00147C  16DF               	andwf	indf2,f,c
 10684                           
 10685                           ;tlc5947.c: 69: tlc_memory[mpos] |= ((col & 0xF00) >> 8);
 10686  00147E  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10687  001482  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10688  001486  C028  F027         	movff	??_tlc5947_setChannel+1,??_tlc5947_setChannel
 10689  00148A  6A28               	clrf	??_tlc5947_setChannel+1,c
 10690  00148C  0E0F               	movlw	15
 10691  00148E  D016               	goto	L14
 10692  001490                     l4712:
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;tlc5947.c: 71: tlc_memory[mpos] &= 0x0F;
 10696  001490  502E               	movf	tlc5947_setChannel@mpos,w,c
 10697  001492  0D01               	mullw	1
 10698  001494  0E80               	movlw	low _tlc_memory
 10699  001496  24F3               	addwf	prodl,w,c
 10700  001498  6ED9               	movwf	fsr2l,c
 10701  00149A  0E01               	movlw	high _tlc_memory
 10702  00149C  20F4               	addwfc	prodh,w,c
 10703  00149E  6EDA               	movwf	fsr2h,c
 10704  0014A0  0E0F               	movlw	15
 10705  0014A2  16DF               	andwf	indf2,f,c
 10706                           
 10707                           ;tlc5947.c: 72: tlc_memory[mpos] |= ((col & 0xF00) >> 4);
 10708  0014A4  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10709  0014A8  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10710  0014AC  0E04               	movlw	4
 10711  0014AE  6E29               	movwf	(??_tlc5947_setChannel+2)& (0+255),c
 10712  0014B0                     u3615:
 10713  0014B0  90D8               	bcf	status,0,c
 10714  0014B2  3228               	rrcf	??_tlc5947_setChannel+1,f,c
 10715  0014B4  3227               	rrcf	??_tlc5947_setChannel,f,c
 10716  0014B6  2E29               	decfsz	(??_tlc5947_setChannel+2)& (0+255),f,c
 10717  0014B8  D7FB               	goto	u3615
 10718  0014BA  0EF0               	movlw	240
 10719  0014BC                     L14:
 10720  0014BC  1627               	andwf	??_tlc5947_setChannel,f,c
 10721  0014BE  502E               	movf	tlc5947_setChannel@mpos,w,c
 10722  0014C0  0D01               	mullw	1
 10723  0014C2  0E80               	movlw	low _tlc_memory
 10724  0014C4  24F3               	addwf	prodl,w,c
 10725  0014C6  6ED9               	movwf	fsr2l,c
 10726  0014C8  0E01               	movlw	high _tlc_memory
 10727  0014CA  20F4               	addwfc	prodh,w,c
 10728  0014CC  6EDA               	movwf	fsr2h,c
 10729  0014CE  5027               	movf	??_tlc5947_setChannel,w,c
 10730  0014D0  12DF               	iorwf	indf2,f,c
 10731  0014D2  D000               	goto	l4714
 10732  0014D4                     l4714:
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;tlc5947.c: 73: }
 10736                           ;tlc5947.c: 75: pos++;
 10737  0014D4  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;tlc5947.c: 76: mpos = pos >> 1;
 10741  0014D6  90D8               	bcf	status,0,c
 10742  0014D8  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10743  0014DA  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;tlc5947.c: 77: if (pos & 0x01) {
 10747  0014DC  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10748  0014DE  D017               	goto	l4722
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;tlc5947.c: 78: tlc_memory[mpos] &= 0xF0;
 10752  0014E0  502E               	movf	tlc5947_setChannel@mpos,w,c
 10753  0014E2  0D01               	mullw	1
 10754  0014E4  0E80               	movlw	low _tlc_memory
 10755  0014E6  24F3               	addwf	prodl,w,c
 10756  0014E8  6ED9               	movwf	fsr2l,c
 10757  0014EA  0E01               	movlw	high _tlc_memory
 10758  0014EC  20F4               	addwfc	prodh,w,c
 10759  0014EE  6EDA               	movwf	fsr2h,c
 10760  0014F0  0EF0               	movlw	240
 10761  0014F2  16DF               	andwf	indf2,f,c
 10762                           
 10763                           ;tlc5947.c: 79: tlc_memory[mpos] |= ((col & 0x0F0) >> 4);
 10764  0014F4  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10765  0014F8  C02C  F028         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10766  0014FC  0E04               	movlw	4
 10767  0014FE  6E29               	movwf	(??_tlc5947_setChannel+2)& (0+255),c
 10768  001500                     u3635:
 10769  001500  90D8               	bcf	status,0,c
 10770  001502  3228               	rrcf	??_tlc5947_setChannel+1,f,c
 10771  001504  3227               	rrcf	??_tlc5947_setChannel,f,c
 10772  001506  2E29               	decfsz	(??_tlc5947_setChannel+2)& (0+255),f,c
 10773  001508  D7FB               	goto	u3635
 10774  00150A  0E0F               	movlw	15
 10775  00150C  D00D               	goto	L15
 10776  00150E                     l4722:
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;tlc5947.c: 81: tlc_memory[mpos] &= 0x0F;
 10780  00150E  502E               	movf	tlc5947_setChannel@mpos,w,c
 10781  001510  0D01               	mullw	1
 10782  001512  0E80               	movlw	low _tlc_memory
 10783  001514  24F3               	addwf	prodl,w,c
 10784  001516  6ED9               	movwf	fsr2l,c
 10785  001518  0E01               	movlw	high _tlc_memory
 10786  00151A  20F4               	addwfc	prodh,w,c
 10787  00151C  6EDA               	movwf	fsr2h,c
 10788  00151E  0E0F               	movlw	15
 10789  001520  16DF               	andwf	indf2,f,c
 10790                           
 10791                           ;tlc5947.c: 82: tlc_memory[mpos] |= (col & 0x0F0);
 10792  001522  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10793  001526  0EF0               	movlw	240
 10794  001528                     L15:
 10795  001528  1627               	andwf	??_tlc5947_setChannel,f,c
 10796  00152A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10797  00152C  0D01               	mullw	1
 10798  00152E  0E80               	movlw	low _tlc_memory
 10799  001530  24F3               	addwf	prodl,w,c
 10800  001532  6ED9               	movwf	fsr2l,c
 10801  001534  0E01               	movlw	high _tlc_memory
 10802  001536  20F4               	addwfc	prodh,w,c
 10803  001538  6EDA               	movwf	fsr2h,c
 10804  00153A  5027               	movf	??_tlc5947_setChannel,w,c
 10805  00153C  12DF               	iorwf	indf2,f,c
 10806  00153E  D000               	goto	l4724
 10807  001540                     l4724:
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;tlc5947.c: 83: }
 10811                           ;tlc5947.c: 85: pos++;
 10812  001540  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;tlc5947.c: 86: mpos = pos >> 1;
 10816  001542  90D8               	bcf	status,0,c
 10817  001544  302D               	rrcf	tlc5947_setChannel@pos,w,c
 10818  001546  6E2E               	movwf	tlc5947_setChannel@mpos,c
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;tlc5947.c: 87: if (pos & 0x01) {
 10822  001548  A02D               	btfss	tlc5947_setChannel@pos,0,c
 10823  00154A  D00E               	goto	l4732
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;tlc5947.c: 88: tlc_memory[mpos] &= 0xF0;
 10827  00154C  502E               	movf	tlc5947_setChannel@mpos,w,c
 10828  00154E  0D01               	mullw	1
 10829  001550  0E80               	movlw	low _tlc_memory
 10830  001552  24F3               	addwf	prodl,w,c
 10831  001554  6ED9               	movwf	fsr2l,c
 10832  001556  0E01               	movlw	high _tlc_memory
 10833  001558  20F4               	addwfc	prodh,w,c
 10834  00155A  6EDA               	movwf	fsr2h,c
 10835  00155C  0EF0               	movlw	240
 10836  00155E  16DF               	andwf	indf2,f,c
 10837                           
 10838                           ;tlc5947.c: 89: tlc_memory[mpos] |= (col & 0x00F);
 10839  001560  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10840  001564  0E0F               	movlw	15
 10841  001566  D010               	goto	L16
 10842  001568                     l4732:
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;tlc5947.c: 91: tlc_memory[mpos] &= 0x0F;
 10846  001568  502E               	movf	tlc5947_setChannel@mpos,w,c
 10847  00156A  0D01               	mullw	1
 10848  00156C  0E80               	movlw	low _tlc_memory
 10849  00156E  24F3               	addwf	prodl,w,c
 10850  001570  6ED9               	movwf	fsr2l,c
 10851  001572  0E01               	movlw	high _tlc_memory
 10852  001574  20F4               	addwfc	prodh,w,c
 10853  001576  6EDA               	movwf	fsr2h,c
 10854  001578  0E0F               	movlw	15
 10855  00157A  16DF               	andwf	indf2,f,c
 10856                           
 10857                           ;tlc5947.c: 92: tlc_memory[mpos] |= ((col & 0x00F) << 4);
 10858  00157C  C02B  F027         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10859  001580  0E0F               	movlw	15
 10860  001582  1627               	andwf	??_tlc5947_setChannel,f,c
 10861  001584  3A27               	swapf	??_tlc5947_setChannel,f,c
 10862  001586  0EF0               	movlw	240
 10863  001588                     L16:
 10864  001588  1627               	andwf	??_tlc5947_setChannel,f,c
 10865  00158A  502E               	movf	tlc5947_setChannel@mpos,w,c
 10866  00158C  0D01               	mullw	1
 10867  00158E  0E80               	movlw	low _tlc_memory
 10868  001590  24F3               	addwf	prodl,w,c
 10869  001592  6ED9               	movwf	fsr2l,c
 10870  001594  0E01               	movlw	high _tlc_memory
 10871  001596  20F4               	addwfc	prodh,w,c
 10872  001598  6EDA               	movwf	fsr2h,c
 10873  00159A  5027               	movf	??_tlc5947_setChannel,w,c
 10874  00159C  12DF               	iorwf	indf2,f,c
 10875  00159E  D000               	goto	l4734
 10876  0015A0                     l4734:
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;tlc5947.c: 93: }
 10880                           ;tlc5947.c: 94: pos++;
 10881  0015A0  2A2D               	incf	tlc5947_setChannel@pos,f,c
 10882                           
 10883                           ; BSR set to: 0
 10884  0015A2  0012               	return		;funcret
 10885  0015A4                     __end_of_tlc5947_setChannel:
 10886                           	opt stack 0
 10887                           tblptru	equ	0xFF8
 10888                           tblptrh	equ	0xFF7
 10889                           tblptrl	equ	0xFF6
 10890                           tablat	equ	0xFF5
 10891                           prodh	equ	0xFF4
 10892                           prodl	equ	0xFF3
 10893                           intcon	equ	0xFF2
 10894                           postinc0	equ	0xFEE
 10895                           wreg	equ	0xFE8
 10896                           indf1	equ	0xFE7
 10897                           postdec1	equ	0xFE5
 10898                           fsr1h	equ	0xFE2
 10899                           fsr1l	equ	0xFE1
 10900                           indf2	equ	0xFDF
 10901                           postinc2	equ	0xFDE
 10902                           postdec2	equ	0xFDD
 10903                           plusw2	equ	0xFDB
 10904                           fsr2h	equ	0xFDA
 10905                           fsr2l	equ	0xFD9
 10906                           status	equ	0xFD8
 10907                           
 10908 ;; *************** function _gamma_lookup *****************
 10909 ;; Defined at:
 10910 ;;		line 23 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/gamma.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  c               1    wreg     unsigned char 
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;  c               1   36[COMRAM] unsigned char 
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  2   34[COMRAM] unsigned int 
 10917 ;; Registers used:
 10918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10924 ;;      Params:         2       0       0       0       0       0       0       0       0
 10925 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10926 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10927 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10928 ;;Total ram usage:        3 bytes
 10929 ;; Hardware stack levels used:    1
 10930 ;; Hardware stack levels required when called:    4
 10931 ;; This function calls:
 10932 ;;		Nothing
 10933 ;; This function is called by:
 10934 ;;		_tlc5947_setChannel
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text44
 10939  0032B0                     __ptext44:
 10940                           	opt stack 0
 10941  0032B0                     _gamma_lookup:
 10942                           	opt stack 24
 10943                           
 10944                           ; BSR set to: 0
 10945                           ;incstack = 0
 10946                           ;gamma_lookup@c stored from wreg
 10947  0032B0  6E25               	movwf	gamma_lookup@c,c
 10948                           
 10949                           ;gamma.c: 25: return gamma_table[c];
 10950  0032B2  5025               	movf	gamma_lookup@c,w,c
 10951  0032B4  0D02               	mullw	2
 10952  0032B6  0E80               	movlw	low _gamma_table
 10953  0032B8  24F3               	addwf	prodl,w,c
 10954  0032BA  6ED9               	movwf	fsr2l,c
 10955  0032BC  0E05               	movlw	high _gamma_table
 10956  0032BE  20F4               	addwfc	prodh,w,c
 10957  0032C0  6EDA               	movwf	fsr2h,c
 10958  0032C2  CFDE F023          	movff	postinc2,?_gamma_lookup
 10959  0032C6  CFDD F024          	movff	postdec2,?_gamma_lookup+1
 10960  0032CA  0012               	return	
 10961  0032CC  0012               	return		;funcret
 10962  0032CE                     __end_of_gamma_lookup:
 10963                           	opt stack 0
 10964                           tblptru	equ	0xFF8
 10965                           tblptrh	equ	0xFF7
 10966                           tblptrl	equ	0xFF6
 10967                           tablat	equ	0xFF5
 10968                           prodh	equ	0xFF4
 10969                           prodl	equ	0xFF3
 10970                           intcon	equ	0xFF2
 10971                           postinc0	equ	0xFEE
 10972                           wreg	equ	0xFE8
 10973                           indf1	equ	0xFE7
 10974                           postdec1	equ	0xFE5
 10975                           fsr1h	equ	0xFE2
 10976                           fsr1l	equ	0xFE1
 10977                           indf2	equ	0xFDF
 10978                           postinc2	equ	0xFDE
 10979                           postdec2	equ	0xFDD
 10980                           plusw2	equ	0xFDB
 10981                           fsr2h	equ	0xFDA
 10982                           fsr2l	equ	0xFD9
 10983                           status	equ	0xFD8
 10984                           
 10985 ;; *************** function _tlc5947_latch *****************
 10986 ;; Defined at:
 10987 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;		None               void
 10994 ;; Registers used:
 10995 ;;		wreg, status,2, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:    5
 11008 ;; This function calls:
 11009 ;;		_Delay100TCYx
 11010 ;;		_Delay10TCYx
 11011 ;; This function is called by:
 11012 ;;		_tlc5947_pwm_readback
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text45
 11017  0031CE                     __ptext45:
 11018                           	opt stack 0
 11019  0031CE                     _tlc5947_latch:
 11020                           	opt stack 22
 11021                           
 11022                           ;tlc5947.c: 187: LATBbits.LATB5 = 1;;
 11023                           
 11024                           ;incstack = 0
 11025  0031CE  8A8A               	bsf	3978,5,c	;volatile
 11026                           
 11027                           ;tlc5947.c: 188: Delay100TCYx (pwr_delay);
 11028  0031D0  0100               	movlb	0	; () banked
 11029  0031D2  518E               	movf	_pwr_delay& (0+255),w,b
 11030  0031D4  EC8F  F019         	call	_Delay100TCYx
 11031                           
 11032                           ;tlc5947.c: 190: LATCbits.LATC0 = 1;;
 11033  0031D8  808B               	bsf	3979,0,c	;volatile
 11034                           
 11035                           ;tlc5947.c: 191: LATBbits.LATB3 = 1;;
 11036  0031DA  868A               	bsf	3978,3,c	;volatile
 11037                           
 11038                           ;tlc5947.c: 192: Delay10TCYx(40);
 11039  0031DC  0E28               	movlw	40
 11040  0031DE  EC86  F019         	call	_Delay10TCYx
 11041                           
 11042                           ;tlc5947.c: 193: LATBbits.LATB3 = 0;;
 11043  0031E2  968A               	bcf	3978,3,c	;volatile
 11044                           
 11045                           ;tlc5947.c: 194: Delay10TCYx(40);
 11046  0031E4  0E28               	movlw	40
 11047  0031E6  EC86  F019         	call	_Delay10TCYx
 11048                           
 11049                           ;tlc5947.c: 195: LATCbits.LATC0 = 0;;
 11050  0031EA  908B               	bcf	3979,0,c	;volatile
 11051                           
 11052                           ;tlc5947.c: 197: Delay100TCYx(pwr_delay);
 11053  0031EC  0100               	movlb	0	; () banked
 11054  0031EE  518E               	movf	_pwr_delay& (0+255),w,b
 11055  0031F0  EC8F  F019         	call	_Delay100TCYx
 11056                           
 11057                           ;tlc5947.c: 198: LATBbits.LATB5 = 0;;
 11058  0031F4  9A8A               	bcf	3978,5,c	;volatile
 11059  0031F6  0012               	return		;funcret
 11060  0031F8                     __end_of_tlc5947_latch:
 11061                           	opt stack 0
 11062                           tblptru	equ	0xFF8
 11063                           tblptrh	equ	0xFF7
 11064                           tblptrl	equ	0xFF6
 11065                           tablat	equ	0xFF5
 11066                           prodh	equ	0xFF4
 11067                           prodl	equ	0xFF3
 11068                           intcon	equ	0xFF2
 11069                           postinc0	equ	0xFEE
 11070                           wreg	equ	0xFE8
 11071                           indf1	equ	0xFE7
 11072                           postdec1	equ	0xFE5
 11073                           fsr1h	equ	0xFE2
 11074                           fsr1l	equ	0xFE1
 11075                           indf2	equ	0xFDF
 11076                           postinc2	equ	0xFDE
 11077                           postdec2	equ	0xFDD
 11078                           plusw2	equ	0xFDB
 11079                           fsr2h	equ	0xFDA
 11080                           fsr2l	equ	0xFD9
 11081                           status	equ	0xFD8
 11082                           
 11083 ;; *************** function _Delay10TCYx *****************
 11084 ;; Defined at:
 11085 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10tcyx.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  unit            1    wreg     unsigned char 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  unit            1   34[COMRAM] unsigned char 
 11090 ;; Return value:  Size  Location     Type
 11091 ;;		None               void
 11092 ;; Registers used:
 11093 ;;		wreg
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 0/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11099 ;;      Params:         0       0       0       0       0       0       0       0       0
 11100 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11101 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11102 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11103 ;;Total ram usage:        1 bytes
 11104 ;; Hardware stack levels used:    1
 11105 ;; Hardware stack levels required when called:    4
 11106 ;; This function calls:
 11107 ;;		Nothing
 11108 ;; This function is called by:
 11109 ;;		_tlc5947_pwm_readback
 11110 ;;		_tlc5947_latch
 11111 ;;		_ProcessCDC
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           	psect	text46
 11116  00330C                     __ptext46:
 11117                           	opt stack 0
 11118  00330C                     _Delay10TCYx:
 11119                           	opt stack 22
 11120                           
 11121                           ;incstack = 0
 11122                           ;Delay10TCYx@unit stored from wreg
 11123  00330C  6E23               	movwf	Delay10TCYx@unit,c
 11124  00330E  0E03               	movlw	3
 11125  003310                     u4887:
 11126  003310  2EE8               	decfsz	wreg,f,c
 11127  003312  D7FE               	goto	u4887
 11128  003314  F000               	nop	
 11129  003316  2E23               	decfsz	Delay10TCYx@unit,f,c
 11130  003318  D7FA               	goto	l4430
 11131  00331A  0012               	return	
 11132  00331C  0012               	return		;funcret
 11133  00331E                     __end_of_Delay10TCYx:
 11134                           	opt stack 0
 11135                           tblptru	equ	0xFF8
 11136                           tblptrh	equ	0xFF7
 11137                           tblptrl	equ	0xFF6
 11138                           tablat	equ	0xFF5
 11139                           prodh	equ	0xFF4
 11140                           prodl	equ	0xFF3
 11141                           intcon	equ	0xFF2
 11142                           postinc0	equ	0xFEE
 11143                           wreg	equ	0xFE8
 11144                           indf1	equ	0xFE7
 11145                           postdec1	equ	0xFE5
 11146                           fsr1h	equ	0xFE2
 11147                           fsr1l	equ	0xFE1
 11148                           indf2	equ	0xFDF
 11149                           postinc2	equ	0xFDE
 11150                           postdec2	equ	0xFDD
 11151                           plusw2	equ	0xFDB
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _Delay100TCYx *****************
 11157 ;; Defined at:
 11158 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  unit            1    wreg     unsigned char 
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  unit            1   34[COMRAM] unsigned char 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;		None               void
 11165 ;; Registers used:
 11166 ;;		wreg
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0
 11173 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11175 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11176 ;;Total ram usage:        1 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    4
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_tlc5947_latch
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text47
 11187  00331E                     __ptext47:
 11188                           	opt stack 0
 11189  00331E                     _Delay100TCYx:
 11190                           	opt stack 22
 11191                           
 11192                           ;incstack = 0
 11193                           ;Delay100TCYx@unit stored from wreg
 11194  00331E  6E23               	movwf	Delay100TCYx@unit,c
 11195  003320  0E21               	movlw	33
 11196  003322                     u4897:
 11197  003322  2EE8               	decfsz	wreg,f,c
 11198  003324  D7FE               	goto	u4897
 11199  003326  F000               	nop	
 11200  003328  2E23               	decfsz	Delay100TCYx@unit,f,c
 11201  00332A  D7FA               	goto	l4434
 11202  00332C  0012               	return	
 11203  00332E  0012               	return		;funcret
 11204  003330                     __end_of_Delay100TCYx:
 11205                           	opt stack 0
 11206                           tblptru	equ	0xFF8
 11207                           tblptrh	equ	0xFF7
 11208                           tblptrl	equ	0xFF6
 11209                           tablat	equ	0xFF5
 11210                           prodh	equ	0xFF4
 11211                           prodl	equ	0xFF3
 11212                           intcon	equ	0xFF2
 11213                           postinc0	equ	0xFEE
 11214                           wreg	equ	0xFE8
 11215                           indf1	equ	0xFE7
 11216                           postdec1	equ	0xFE5
 11217                           fsr1h	equ	0xFE2
 11218                           fsr1l	equ	0xFE1
 11219                           indf2	equ	0xFDF
 11220                           postinc2	equ	0xFDE
 11221                           postdec2	equ	0xFDD
 11222                           plusw2	equ	0xFDB
 11223                           fsr2h	equ	0xFDA
 11224                           fsr2l	equ	0xFD9
 11225                           status	equ	0xFD8
 11226                           
 11227 ;; *************** function ___lwdiv *****************
 11228 ;; Defined at:
 11229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  dividend        2   34[COMRAM] unsigned int 
 11232 ;;  divisor         2   36[COMRAM] unsigned int 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  quotient        2   38[COMRAM] unsigned int 
 11235 ;;  counter         1   40[COMRAM] unsigned char 
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  2   34[COMRAM] unsigned int 
 11238 ;; Registers used:
 11239 ;;		wreg, status,2, status,0
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11245 ;;      Params:         4       0       0       0       0       0       0       0       0
 11246 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11248 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11249 ;;Total ram usage:        7 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; Hardware stack levels required when called:    4
 11252 ;; This function calls:
 11253 ;;		Nothing
 11254 ;; This function is called by:
 11255 ;;		_tlc5947_pwm_readback
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259                           	psect	text48
 11260  002E22                     __ptext48:
 11261                           	opt stack 0
 11262  002E22                     ___lwdiv:
 11263                           	opt stack 23
 11264                           
 11265                           ;incstack = 0
 11266  002E22  0E00               	movlw	0
 11267  002E24  6E28               	movwf	___lwdiv@quotient+1,c
 11268  002E26  0E00               	movlw	0
 11269  002E28  6E27               	movwf	___lwdiv@quotient,c
 11270  002E2A  5025               	movf	___lwdiv@divisor,w,c
 11271  002E2C  1026               	iorwf	___lwdiv@divisor+1,w,c
 11272  002E2E  B4D8               	btfsc	status,2,c
 11273  002E30  D021               	goto	l1699
 11274  002E32  0E01               	movlw	1
 11275  002E34  6E29               	movwf	___lwdiv@counter,c
 11276  002E36  D005               	goto	l4796
 11277  002E38                     l4794:
 11278  002E38  90D8               	bcf	status,0,c
 11279  002E3A  3625               	rlcf	___lwdiv@divisor,f,c
 11280  002E3C  3626               	rlcf	___lwdiv@divisor+1,f,c
 11281  002E3E  2A29               	incf	___lwdiv@counter,f,c
 11282  002E40  D000               	goto	l4796
 11283  002E42                     l4796:
 11284  002E42  BE26               	btfsc	___lwdiv@divisor+1,7,c
 11285  002E44  D002               	goto	l4798
 11286  002E46  D7F8               	goto	l4794
 11287  002E48  D000               	goto	l4798
 11288  002E4A                     l4798:
 11289  002E4A  90D8               	bcf	status,0,c
 11290  002E4C  3627               	rlcf	___lwdiv@quotient,f,c
 11291  002E4E  3628               	rlcf	___lwdiv@quotient+1,f,c
 11292  002E50  5025               	movf	___lwdiv@divisor,w,c
 11293  002E52  5C23               	subwf	___lwdiv@dividend,w,c
 11294  002E54  5026               	movf	___lwdiv@divisor+1,w,c
 11295  002E56  5824               	subwfb	___lwdiv@dividend+1,w,c
 11296  002E58  A0D8               	btfss	status,0,c
 11297  002E5A  D006               	goto	l4806
 11298  002E5C  5025               	movf	___lwdiv@divisor,w,c
 11299  002E5E  5E23               	subwf	___lwdiv@dividend,f,c
 11300  002E60  5026               	movf	___lwdiv@divisor+1,w,c
 11301  002E62  5A24               	subwfb	___lwdiv@dividend+1,f,c
 11302  002E64  8027               	bsf	___lwdiv@quotient,0,c
 11303  002E66  D000               	goto	l4806
 11304  002E68                     l4806:
 11305  002E68  90D8               	bcf	status,0,c
 11306  002E6A  3226               	rrcf	___lwdiv@divisor+1,f,c
 11307  002E6C  3225               	rrcf	___lwdiv@divisor,f,c
 11308  002E6E  2E29               	decfsz	___lwdiv@counter,f,c
 11309  002E70  D7EC               	goto	l4798
 11310  002E72  D000               	goto	l1699
 11311  002E74                     l1699:
 11312  002E74  C027  F023         	movff	___lwdiv@quotient,?___lwdiv
 11313  002E78  C028  F024         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11314  002E7C  0012               	return		;funcret
 11315  002E7E                     __end_of___lwdiv:
 11316                           	opt stack 0
 11317                           tblptru	equ	0xFF8
 11318                           tblptrh	equ	0xFF7
 11319                           tblptrl	equ	0xFF6
 11320                           tablat	equ	0xFF5
 11321                           prodh	equ	0xFF4
 11322                           prodl	equ	0xFF3
 11323                           intcon	equ	0xFF2
 11324                           postinc0	equ	0xFEE
 11325                           wreg	equ	0xFE8
 11326                           indf1	equ	0xFE7
 11327                           postdec1	equ	0xFE5
 11328                           fsr1h	equ	0xFE2
 11329                           fsr1l	equ	0xFE1
 11330                           indf2	equ	0xFDF
 11331                           postinc2	equ	0xFDE
 11332                           postdec2	equ	0xFDD
 11333                           plusw2	equ	0xFDB
 11334                           fsr2h	equ	0xFDA
 11335                           fsr2l	equ	0xFD9
 11336                           status	equ	0xFD8
 11337                           
 11338 ;; *************** function _tlc5947_count_channels *****************
 11339 ;; Defined at:
 11340 ;;		line 97 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;		None
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;  pos             1   44[COMRAM] unsigned char 
 11345 ;;  data            1   43[COMRAM] unsigned char 
 11346 ;;  old_data        1   42[COMRAM] unsigned char 
 11347 ;; Return value:  Size  Location     Type
 11348 ;;		None               void
 11349 ;; Registers used:
 11350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11356 ;;      Params:         0       0       0       0       0       0       0       0       0
 11357 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11358 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11359 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11360 ;;Total ram usage:        3 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; Hardware stack levels required when called:    6
 11363 ;; This function calls:
 11364 ;;		_ReadSPI1
 11365 ;;		_WriteSPI1
 11366 ;;		___awdiv
 11367 ;;		_tlc5947_update
 11368 ;; This function is called by:
 11369 ;;		_InitializeSystem
 11370 ;;		_ProcessCDC
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text49
 11375  002BBC                     __ptext49:
 11376                           	opt stack 0
 11377  002BBC                     _tlc5947_count_channels:
 11378                           	opt stack 22
 11379                           
 11380                           ;tlc5947.c: 99: uint8_t pos, data, old_data;
 11381                           ;tlc5947.c: 101: tlc_request = -1;
 11382                           
 11383                           ;incstack = 0
 11384  002BBC  0100               	movlb	0	; () banked
 11385  002BBE  69A0               	setf	_tlc_request& (0+255),b
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;tlc5947.c: 104: tlc_nbytes = 72;
 11389  002BC0  0E48               	movlw	72
 11390  002BC2  6E5F               	movwf	_tlc_nbytes,c
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;tlc5947.c: 107: WriteSPI1(tcl5947_testbyte0);
 11394  002BC4  0100               	movlb	0	; () banked
 11395  002BC6  51DB               	movf	_tcl5947_testbyte0& (0+255),w,b
 11396  002BC8  EC26  F019         	call	_WriteSPI1
 11397                           
 11398                           ;tlc5947.c: 108: WriteSPI1(tcl5947_testbyte1);
 11399  002BCC  0100               	movlb	0	; () banked
 11400  002BCE  51DC               	movf	_tcl5947_testbyte1& (0+255),w,b
 11401  002BD0  EC26  F019         	call	_WriteSPI1
 11402                           
 11403                           ;tlc5947.c: 111: for (pos = 1; pos <= 72; pos++) {
 11404  002BD4  0E01               	movlw	1
 11405  002BD6  6E2D               	movwf	tlc5947_count_channels@pos,c
 11406  002BD8                     l4978:
 11407  002BD8  0E48               	movlw	72
 11408  002BDA  642D               	cpfsgt	tlc5947_count_channels@pos,c
 11409  002BDC  D001               	goto	l4982
 11410  002BDE  D014               	goto	l4994
 11411  002BE0                     l4982:
 11412                           
 11413                           ;tlc5947.c: 112: data = ReadSPI1();
 11414  002BE0  EC67  F019         	call	_ReadSPI1	;wreg free
 11415  002BE4  6E2C               	movwf	tlc5947_count_channels@data,c
 11416                           
 11417                           ;tlc5947.c: 113: if ((data == tcl5947_testbyte1) && (old_data == tcl5947_testbyte0)) {
 11418  002BE6  0100               	movlb	0	; () banked
 11419  002BE8  51DC               	movf	_tcl5947_testbyte1& (0+255),w,b
 11420  002BEA  182C               	xorwf	tlc5947_count_channels@data,w,c
 11421  002BEC  A4D8               	btfss	status,2,c
 11422  002BEE  D008               	goto	l815
 11423                           
 11424                           ; BSR set to: 0
 11425  002BF0  0100               	movlb	0	; () banked
 11426  002BF2  51DB               	movf	_tcl5947_testbyte0& (0+255),w,b
 11427  002BF4  182B               	xorwf	tlc5947_count_channels@old_data,w,c
 11428  002BF6  A4D8               	btfss	status,2,c
 11429  002BF8  D003               	goto	l815
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;tlc5947.c: 114: tlc_nbytes = pos;
 11433  002BFA  C02D  F05F         	movff	tlc5947_count_channels@pos,_tlc_nbytes
 11434                           
 11435                           ;tlc5947.c: 115: break;
 11436  002BFE  D004               	goto	l4994
 11437  002C00                     l815:
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;tlc5947.c: 116: }
 11441                           ;tlc5947.c: 117: old_data = data;
 11442  002C00  C02C  F02B         	movff	tlc5947_count_channels@data,tlc5947_count_channels@old_data
 11443                           
 11444                           ; BSR set to: 0
 11445  002C04  2A2D               	incf	tlc5947_count_channels@pos,f,c
 11446  002C06  D7E8               	goto	l4978
 11447  002C08                     l4994:
 11448                           
 11449                           ;tlc5947.c: 118: }
 11450                           ;tlc5947.c: 119: tlc5947_update();
 11451  002C08  EC72  F018         	call	_tlc5947_update	;wreg free
 11452                           
 11453                           ;tlc5947.c: 120: tlc_nchannels = tlc_nbytes * 2 / 3;
 11454  002C0C  505F               	movf	_tlc_nbytes,w,c
 11455  002C0E  0D02               	mullw	2
 11456  002C10  CFF3 F023          	movff	prodl,___awdiv@dividend
 11457  002C14  CFF4 F024          	movff	prodh,___awdiv@dividend+1
 11458  002C18  0E00               	movlw	0
 11459  002C1A  6E26               	movwf	___awdiv@divisor+1,c
 11460  002C1C  0E03               	movlw	3
 11461  002C1E  6E25               	movwf	___awdiv@divisor,c
 11462  002C20  ECC3  F014         	call	___awdiv	;wreg free
 11463  002C24  5023               	movf	?___awdiv,w,c
 11464  002C26  0100               	movlb	0	; () banked
 11465  002C28  6FDD               	movwf	_tlc_nchannels& (0+255),b
 11466                           
 11467                           ; BSR set to: 0
 11468                           ;tlc5947.c: 121: tlc_request = 0;
 11469  002C2A  0E00               	movlw	0
 11470  002C2C  0100               	movlb	0	; () banked
 11471  002C2E  6FA0               	movwf	_tlc_request& (0+255),b
 11472                           
 11473                           ; BSR set to: 0
 11474  002C30  0012               	return		;funcret
 11475  002C32                     __end_of_tlc5947_count_channels:
 11476                           	opt stack 0
 11477                           tblptru	equ	0xFF8
 11478                           tblptrh	equ	0xFF7
 11479                           tblptrl	equ	0xFF6
 11480                           tablat	equ	0xFF5
 11481                           prodh	equ	0xFF4
 11482                           prodl	equ	0xFF3
 11483                           intcon	equ	0xFF2
 11484                           postinc0	equ	0xFEE
 11485                           wreg	equ	0xFE8
 11486                           indf1	equ	0xFE7
 11487                           postdec1	equ	0xFE5
 11488                           fsr1h	equ	0xFE2
 11489                           fsr1l	equ	0xFE1
 11490                           indf2	equ	0xFDF
 11491                           postinc2	equ	0xFDE
 11492                           postdec2	equ	0xFDD
 11493                           plusw2	equ	0xFDB
 11494                           fsr2h	equ	0xFDA
 11495                           fsr2l	equ	0xFD9
 11496                           status	equ	0xFD8
 11497                           
 11498 ;; *************** function _tlc5947_update *****************
 11499 ;; Defined at:
 11500 ;;		line 175 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;		None
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  x               1   36[COMRAM] unsigned char 
 11505 ;; Return value:  Size  Location     Type
 11506 ;;		None               void
 11507 ;; Registers used:
 11508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/0
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11514 ;;      Params:         0       0       0       0       0       0       0       0       0
 11515 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11516 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11517 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11518 ;;Total ram usage:        1 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:    5
 11521 ;; This function calls:
 11522 ;;		_WriteSPI1
 11523 ;; This function is called by:
 11524 ;;		_tlc5947_count_channels
 11525 ;;		_tlc5947_pwm_readback
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           	psect	text50
 11530  0030E4                     __ptext50:
 11531                           	opt stack 0
 11532  0030E4                     _tlc5947_update:
 11533                           	opt stack 22
 11534                           
 11535                           ;tlc5947.c: 177: uint8_t x;
 11536                           ;tlc5947.c: 179: for (x = 0; x < tlc_nbytes; x++) {
 11537                           
 11538                           ; BSR set to: 0
 11539                           ;incstack = 0
 11540  0030E4  0E00               	movlw	0
 11541  0030E6  6E25               	movwf	tlc5947_update@x,c
 11542  0030E8  D00D               	goto	l4684
 11543  0030EA                     l4680:
 11544                           
 11545                           ;tlc5947.c: 180: WriteSPI1(tlc_memory[x]);
 11546  0030EA  5025               	movf	tlc5947_update@x,w,c
 11547  0030EC  0D01               	mullw	1
 11548  0030EE  0E80               	movlw	low _tlc_memory
 11549  0030F0  24F3               	addwf	prodl,w,c
 11550  0030F2  6ED9               	movwf	fsr2l,c
 11551  0030F4  0E01               	movlw	high _tlc_memory
 11552  0030F6  20F4               	addwfc	prodh,w,c
 11553  0030F8  6EDA               	movwf	fsr2h,c
 11554  0030FA  50DF               	movf	indf2,w,c
 11555  0030FC  EC26  F019         	call	_WriteSPI1
 11556  003100  2A25               	incf	tlc5947_update@x,f,c
 11557  003102  D000               	goto	l4684
 11558  003104                     l4684:
 11559  003104  505F               	movf	_tlc_nbytes,w,c
 11560  003106  5C25               	subwf	tlc5947_update@x,w,c
 11561  003108  A0D8               	btfss	status,0,c
 11562  00310A  D7EF               	goto	l4680
 11563                           
 11564                           ;tlc5947.c: 181: }
 11565                           ;tlc5947.c: 182: tlc_request = 0;
 11566  00310C  0E00               	movlw	0
 11567  00310E  0100               	movlb	0	; () banked
 11568  003110  6FA0               	movwf	_tlc_request& (0+255),b
 11569                           
 11570                           ; BSR set to: 0
 11571  003112  0012               	return		;funcret
 11572  003114                     __end_of_tlc5947_update:
 11573                           	opt stack 0
 11574                           tblptru	equ	0xFF8
 11575                           tblptrh	equ	0xFF7
 11576                           tblptrl	equ	0xFF6
 11577                           tablat	equ	0xFF5
 11578                           prodh	equ	0xFF4
 11579                           prodl	equ	0xFF3
 11580                           intcon	equ	0xFF2
 11581                           postinc0	equ	0xFEE
 11582                           wreg	equ	0xFE8
 11583                           indf1	equ	0xFE7
 11584                           postdec1	equ	0xFE5
 11585                           fsr1h	equ	0xFE2
 11586                           fsr1l	equ	0xFE1
 11587                           indf2	equ	0xFDF
 11588                           postinc2	equ	0xFDE
 11589                           postdec2	equ	0xFDD
 11590                           plusw2	equ	0xFDB
 11591                           fsr2h	equ	0xFDA
 11592                           fsr2l	equ	0xFD9
 11593                           status	equ	0xFD8
 11594                           
 11595 ;; *************** function _WriteSPI1 *****************
 11596 ;; Defined at:
 11597 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1writ.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;  data_out        1    wreg     unsigned char 
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;  data_out        1   35[COMRAM] unsigned char 
 11602 ;;  TempVar         1   34[COMRAM] unsigned char 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  1    wreg      char 
 11605 ;; Registers used:
 11606 ;;		wreg
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11612 ;;      Params:         0       0       0       0       0       0       0       0       0
 11613 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11615 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11616 ;;Total ram usage:        2 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; Hardware stack levels required when called:    4
 11619 ;; This function calls:
 11620 ;;		Nothing
 11621 ;; This function is called by:
 11622 ;;		_tlc5947_count_channels
 11623 ;;		_tlc5947_update
 11624 ;; This function uses a non-reentrant model
 11625 ;;
 11626                           
 11627                           	psect	text51
 11628  00324C                     __ptext51:
 11629                           	opt stack 0
 11630  00324C                     _WriteSPI1:
 11631                           	opt stack 22
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;incstack = 0
 11635                           ;WriteSPI1@data_out stored from wreg
 11636  00324C  6E24               	movwf	WriteSPI1@data_out,c
 11637  00324E  CFC9 F023          	movff	4041,WriteSPI1@TempVar	;volatile
 11638  003252  969E               	bcf	3998,3,c	;volatile
 11639  003254  9EC6               	bcf	4038,7,c	;volatile
 11640  003256  C024  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
 11641  00325A  BEC6               	btfsc	4038,7,c	;volatile
 11642  00325C  0012               	return	
 11643  00325E  D002               	goto	l1162
 11644                           
 11645                           ;	Return value of _WriteSPI1 is never used
 11646  003260  0012               	return	
 11647  003262  D000               	goto	l1162
 11648  003264                     l1162:
 11649  003264  B69E               	btfsc	3998,3,c	;volatile
 11650  003266  0012               	return	
 11651  003268  D7FD               	goto	l1162
 11652  00326A  0012               	return	
 11653                           
 11654                           ;	Return value of _WriteSPI1 is never used
 11655  00326C  0012               	return		;funcret
 11656  00326E                     __end_of_WriteSPI1:
 11657                           	opt stack 0
 11658                           tblptru	equ	0xFF8
 11659                           tblptrh	equ	0xFF7
 11660                           tblptrl	equ	0xFF6
 11661                           tablat	equ	0xFF5
 11662                           prodh	equ	0xFF4
 11663                           prodl	equ	0xFF3
 11664                           intcon	equ	0xFF2
 11665                           postinc0	equ	0xFEE
 11666                           wreg	equ	0xFE8
 11667                           indf1	equ	0xFE7
 11668                           postdec1	equ	0xFE5
 11669                           fsr1h	equ	0xFE2
 11670                           fsr1l	equ	0xFE1
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           postdec2	equ	0xFDD
 11674                           plusw2	equ	0xFDB
 11675                           fsr2h	equ	0xFDA
 11676                           fsr2l	equ	0xFD9
 11677                           status	equ	0xFD8
 11678                           
 11679 ;; *************** function ___awdiv *****************
 11680 ;; Defined at:
 11681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  dividend        2   34[COMRAM] int 
 11684 ;;  divisor         2   36[COMRAM] int 
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;  quotient        2   40[COMRAM] int 
 11687 ;;  sign            1   39[COMRAM] unsigned char 
 11688 ;;  counter         1   38[COMRAM] unsigned char 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  2   34[COMRAM] int 
 11691 ;; Registers used:
 11692 ;;		wreg, status,2, status,0
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11698 ;;      Params:         4       0       0       0       0       0       0       0       0
 11699 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11701 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11702 ;;Total ram usage:        8 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:    4
 11705 ;; This function calls:
 11706 ;;		Nothing
 11707 ;; This function is called by:
 11708 ;;		_tlc5947_count_channels
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	text52
 11713  002986                     __ptext52:
 11714                           	opt stack 0
 11715  002986                     ___awdiv:
 11716                           	opt stack 23
 11717                           
 11718                           ;incstack = 0
 11719  002986  0E00               	movlw	0
 11720  002988  6E28               	movwf	___awdiv@sign,c
 11721  00298A  AE26               	btfss	___awdiv@divisor+1,7,c
 11722  00298C  D007               	goto	l4752
 11723  00298E  6C25               	negf	___awdiv@divisor,c
 11724  002990  1E26               	comf	___awdiv@divisor+1,f,c
 11725  002992  B0D8               	btfsc	status,0,c
 11726  002994  2A26               	incf	___awdiv@divisor+1,f,c
 11727  002996  0E01               	movlw	1
 11728  002998  6E28               	movwf	___awdiv@sign,c
 11729  00299A  D000               	goto	l4752
 11730  00299C                     l4752:
 11731  00299C  AE24               	btfss	___awdiv@dividend+1,7,c
 11732  00299E  D007               	goto	l4758
 11733  0029A0  6C23               	negf	___awdiv@dividend,c
 11734  0029A2  1E24               	comf	___awdiv@dividend+1,f,c
 11735  0029A4  B0D8               	btfsc	status,0,c
 11736  0029A6  2A24               	incf	___awdiv@dividend+1,f,c
 11737  0029A8  0E01               	movlw	1
 11738  0029AA  1A28               	xorwf	___awdiv@sign,f,c
 11739  0029AC  D000               	goto	l4758
 11740  0029AE                     l4758:
 11741  0029AE  0E00               	movlw	0
 11742  0029B0  6E2A               	movwf	___awdiv@quotient+1,c
 11743  0029B2  0E00               	movlw	0
 11744  0029B4  6E29               	movwf	___awdiv@quotient,c
 11745  0029B6  5025               	movf	___awdiv@divisor,w,c
 11746  0029B8  1026               	iorwf	___awdiv@divisor+1,w,c
 11747  0029BA  B4D8               	btfsc	status,2,c
 11748  0029BC  D021               	goto	l4780
 11749  0029BE  0E01               	movlw	1
 11750  0029C0  6E27               	movwf	___awdiv@counter,c
 11751  0029C2  D005               	goto	l4766
 11752  0029C4                     l4764:
 11753  0029C4  90D8               	bcf	status,0,c
 11754  0029C6  3625               	rlcf	___awdiv@divisor,f,c
 11755  0029C8  3626               	rlcf	___awdiv@divisor+1,f,c
 11756  0029CA  2A27               	incf	___awdiv@counter,f,c
 11757  0029CC  D000               	goto	l4766
 11758  0029CE                     l4766:
 11759  0029CE  BE26               	btfsc	___awdiv@divisor+1,7,c
 11760  0029D0  D002               	goto	l4768
 11761  0029D2  D7F8               	goto	l4764
 11762  0029D4  D000               	goto	l4768
 11763  0029D6                     l4768:
 11764  0029D6  90D8               	bcf	status,0,c
 11765  0029D8  3629               	rlcf	___awdiv@quotient,f,c
 11766  0029DA  362A               	rlcf	___awdiv@quotient+1,f,c
 11767  0029DC  5025               	movf	___awdiv@divisor,w,c
 11768  0029DE  5C23               	subwf	___awdiv@dividend,w,c
 11769  0029E0  5026               	movf	___awdiv@divisor+1,w,c
 11770  0029E2  5824               	subwfb	___awdiv@dividend+1,w,c
 11771  0029E4  A0D8               	btfss	status,0,c
 11772  0029E6  D006               	goto	l4776
 11773  0029E8  5025               	movf	___awdiv@divisor,w,c
 11774  0029EA  5E23               	subwf	___awdiv@dividend,f,c
 11775  0029EC  5026               	movf	___awdiv@divisor+1,w,c
 11776  0029EE  5A24               	subwfb	___awdiv@dividend+1,f,c
 11777  0029F0  8029               	bsf	___awdiv@quotient,0,c
 11778  0029F2  D000               	goto	l4776
 11779  0029F4                     l4776:
 11780  0029F4  90D8               	bcf	status,0,c
 11781  0029F6  3226               	rrcf	___awdiv@divisor+1,f,c
 11782  0029F8  3225               	rrcf	___awdiv@divisor,f,c
 11783  0029FA  2E27               	decfsz	___awdiv@counter,f,c
 11784  0029FC  D7EC               	goto	l4768
 11785  0029FE  D000               	goto	l4780
 11786  002A00                     l4780:
 11787  002A00  5028               	movf	___awdiv@sign,w,c
 11788  002A02  B4D8               	btfsc	status,2,c
 11789  002A04  D005               	goto	l4784
 11790  002A06  6C29               	negf	___awdiv@quotient,c
 11791  002A08  1E2A               	comf	___awdiv@quotient+1,f,c
 11792  002A0A  B0D8               	btfsc	status,0,c
 11793  002A0C  2A2A               	incf	___awdiv@quotient+1,f,c
 11794  002A0E  D000               	goto	l4784
 11795  002A10                     l4784:
 11796  002A10  C029  F023         	movff	___awdiv@quotient,?___awdiv
 11797  002A14  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
 11798  002A18  0012               	return	
 11799  002A1A  0012               	return		;funcret
 11800  002A1C                     __end_of___awdiv:
 11801                           	opt stack 0
 11802                           tblptru	equ	0xFF8
 11803                           tblptrh	equ	0xFF7
 11804                           tblptrl	equ	0xFF6
 11805                           tablat	equ	0xFF5
 11806                           prodh	equ	0xFF4
 11807                           prodl	equ	0xFF3
 11808                           intcon	equ	0xFF2
 11809                           postinc0	equ	0xFEE
 11810                           wreg	equ	0xFE8
 11811                           indf1	equ	0xFE7
 11812                           postdec1	equ	0xFE5
 11813                           fsr1h	equ	0xFE2
 11814                           fsr1l	equ	0xFE1
 11815                           indf2	equ	0xFDF
 11816                           postinc2	equ	0xFDE
 11817                           postdec2	equ	0xFDD
 11818                           plusw2	equ	0xFDB
 11819                           fsr2h	equ	0xFDA
 11820                           fsr2l	equ	0xFD9
 11821                           status	equ	0xFD8
 11822                           
 11823 ;; *************** function _ReadSPI1 *****************
 11824 ;; Defined at:
 11825 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1read.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;		None
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;  TempVar         1   34[COMRAM] unsigned char 
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      unsigned char 
 11832 ;; Registers used:
 11833 ;;		wreg, status,2
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11839 ;;      Params:         0       0       0       0       0       0       0       0       0
 11840 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11841 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11842 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11843 ;;Total ram usage:        1 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    4
 11846 ;; This function calls:
 11847 ;;		Nothing
 11848 ;; This function is called by:
 11849 ;;		_tlc5947_count_channels
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           	psect	text53
 11854  0032CE                     __ptext53:
 11855                           	opt stack 0
 11856  0032CE                     _ReadSPI1:
 11857                           	opt stack 23
 11858                           
 11859                           ;incstack = 0
 11860  0032CE  CFC9 F023          	movff	4041,ReadSPI1@TempVar	;volatile
 11861  0032D2  969E               	bcf	3998,3,c	;volatile
 11862  0032D4  0E00               	movlw	0
 11863  0032D6  6EC9               	movwf	4041,c	;volatile
 11864  0032D8  D000               	goto	l1145
 11865  0032DA                     l1145:
 11866  0032DA  A69E               	btfss	3998,3,c	;volatile
 11867  0032DC  D7FE               	goto	l1145
 11868  0032DE  50C9               	movf	4041,w,c	;volatile
 11869  0032E0  0012               	return	
 11870  0032E2  0012               	return		;funcret
 11871  0032E4                     __end_of_ReadSPI1:
 11872                           	opt stack 0
 11873                           tblptru	equ	0xFF8
 11874                           tblptrh	equ	0xFF7
 11875                           tblptrl	equ	0xFF6
 11876                           tablat	equ	0xFF5
 11877                           prodh	equ	0xFF4
 11878                           prodl	equ	0xFF3
 11879                           intcon	equ	0xFF2
 11880                           postinc0	equ	0xFEE
 11881                           wreg	equ	0xFE8
 11882                           indf1	equ	0xFE7
 11883                           postdec1	equ	0xFE5
 11884                           fsr1h	equ	0xFE2
 11885                           fsr1l	equ	0xFE1
 11886                           indf2	equ	0xFDF
 11887                           postinc2	equ	0xFDE
 11888                           postdec2	equ	0xFDD
 11889                           plusw2	equ	0xFDB
 11890                           fsr2h	equ	0xFDA
 11891                           fsr2l	equ	0xFD9
 11892                           status	equ	0xFD8
 11893                           
 11894 ;; *************** function _readDeviceID *****************
 11895 ;; Defined at:
 11896 ;;		line 166 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;		None
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;  devID2          1   37[COMRAM] unsigned char 
 11901 ;;  devID1          1   36[COMRAM] unsigned char 
 11902 ;; Return value:  Size  Location     Type
 11903 ;;		None               void
 11904 ;; Registers used:
 11905 ;;		wreg, status,2, status,0
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11911 ;;      Params:         0       0       0       0       0       0       0       0       0
 11912 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11913 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11914 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11915 ;;Total ram usage:        5 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; Hardware stack levels required when called:    4
 11918 ;; This function calls:
 11919 ;;		Nothing
 11920 ;; This function is called by:
 11921 ;;		_InitializeSystem
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           	psect	text54
 11926  002C9E                     __ptext54:
 11927                           	opt stack 0
 11928  002C9E                     _readDeviceID:
 11929                           	opt stack 25
 11930                           
 11931                           ;karate.c: 168: uint8_t devID1, devID2;
 11932                           ;karate.c: 170: TBLPTRU = 0x3F;
 11933                           
 11934                           ;incstack = 0
 11935  002C9E  0E3F               	movlw	63
 11936  002CA0  6EF8               	movwf	tblptru,c	;volatile
 11937                           
 11938                           ;karate.c: 171: TBLPTRH = 0xFF;
 11939  002CA2  68F7               	setf	tblptrh,c	;volatile
 11940                           
 11941                           ;karate.c: 172: TBLPTRL = 0xFE;
 11942  002CA4  0EFE               	movlw	254
 11943  002CA6  6EF6               	movwf	tblptrl,c	;volatile
 11944  002CA8  0008               	tblrd		*	;# 
 11945                           
 11946                           ;karate.c: 174: devID1 = TABLAT;
 11947  002CAA  CFF5 F025          	movff	tablat,readDeviceID@devID1	;volatile
 11948                           
 11949                           ;karate.c: 176: TBLPTRL = 0xFF;
 11950  002CAE  68F6               	setf	tblptrl,c	;volatile
 11951  002CB0  0008               	tblrd		*	;# 
 11952                           
 11953                           ;karate.c: 178: devID2 = TABLAT;
 11954  002CB2  CFF5 F026          	movff	tablat,readDeviceID@devID2	;volatile
 11955                           
 11956                           ;karate.c: 180: pic18_devid = ((uint16_t)devID2 << 3);
 11957  002CB6  5026               	movf	readDeviceID@devID2,w,c
 11958  002CB8  6E23               	movwf	??_readDeviceID& (0+255),c
 11959  002CBA  6A24               	clrf	(??_readDeviceID+1)& (0+255),c
 11960  002CBC  90D8               	bcf	status,0,c
 11961  002CBE  3623               	rlcf	??_readDeviceID,f,c
 11962  002CC0  3624               	rlcf	??_readDeviceID+1,f,c
 11963  002CC2  90D8               	bcf	status,0,c
 11964  002CC4  3623               	rlcf	??_readDeviceID,f,c
 11965  002CC6  3624               	rlcf	??_readDeviceID+1,f,c
 11966  002CC8  90D8               	bcf	status,0,c
 11967  002CCA  3623               	rlcf	??_readDeviceID,f,c
 11968  002CCC  3624               	rlcf	??_readDeviceID+1,f,c
 11969  002CCE  C023  F0F1         	movff	??_readDeviceID,_pic18_devid
 11970  002CD2  C024  F0F2         	movff	??_readDeviceID+1,_pic18_devid+1
 11971                           
 11972                           ;karate.c: 181: pic18_devid += ((devID1 && 0xE0) >> 5);
 11973  002CD6  0E00               	movlw	0
 11974  002CD8  6E27               	movwf	_readDeviceID$2794,c
 11975  002CDA  5025               	movf	readDeviceID@devID1,w,c
 11976  002CDC  B4D8               	btfsc	status,2,c
 11977  002CDE  D003               	goto	l5146
 11978  002CE0  0E01               	movlw	1
 11979  002CE2  6E27               	movwf	_readDeviceID$2794,c
 11980  002CE4  D000               	goto	l5146
 11981  002CE6                     l5146:
 11982  002CE6  C027  F023         	movff	_readDeviceID$2794,??_readDeviceID
 11983  002CEA  0E05               	movlw	5
 11984  002CEC  6E24               	movwf	(??_readDeviceID+1)& (0+255),c
 11985  002CEE                     u4275:
 11986  002CEE  90D8               	bcf	status,0,c
 11987  002CF0  3223               	rrcf	??_readDeviceID,f,c
 11988  002CF2  2E24               	decfsz	(??_readDeviceID+1)& (0+255),f,c
 11989  002CF4  D7FC               	goto	u4275
 11990  002CF6  5023               	movf	??_readDeviceID,w,c
 11991  002CF8  0100               	movlb	0	; () banked
 11992  002CFA  27F1               	addwf	_pic18_devid& (0+255),f,b
 11993  002CFC  0E00               	movlw	0
 11994  002CFE  23F2               	addwfc	(_pic18_devid+1)& (0+255),f,b
 11995                           
 11996                           ; BSR set to: 0
 11997  002D00  0012               	return		;funcret
 11998  002D02                     __end_of_readDeviceID:
 11999                           	opt stack 0
 12000                           tblptru	equ	0xFF8
 12001                           tblptrh	equ	0xFF7
 12002                           tblptrl	equ	0xFF6
 12003                           tablat	equ	0xFF5
 12004                           prodh	equ	0xFF4
 12005                           prodl	equ	0xFF3
 12006                           intcon	equ	0xFF2
 12007                           postinc0	equ	0xFEE
 12008                           wreg	equ	0xFE8
 12009                           indf1	equ	0xFE7
 12010                           postdec1	equ	0xFE5
 12011                           fsr1h	equ	0xFE2
 12012                           fsr1l	equ	0xFE1
 12013                           indf2	equ	0xFDF
 12014                           postinc2	equ	0xFDE
 12015                           postdec2	equ	0xFDD
 12016                           plusw2	equ	0xFDB
 12017                           fsr2h	equ	0xFDA
 12018                           fsr2l	equ	0xFD9
 12019                           status	equ	0xFD8
 12020                           
 12021 ;; *************** function _USBRegisterFix *****************
 12022 ;; Defined at:
 12023 ;;		line 38 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;		None
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;		None
 12028 ;; Return value:  Size  Location     Type
 12029 ;;		None               void
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12037 ;;      Params:         0       0       0       0       0       0       0       0       0
 12038 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12040 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12041 ;;Total ram usage:        0 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    4
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_InitializeSystem
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text55
 12052  001BEE                     __ptext55:
 12053                           	opt stack 0
 12054  001BEE                     _USBRegisterFix:
 12055                           	opt stack 25
 12056                           
 12057                           ;usb_hal_fixes.c: 39: if (pic18_devid == 0x02E0) {
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;incstack = 0
 12061  001BEE  0EE0               	movlw	224
 12062  001BF0  0100               	movlb	0	; () banked
 12063  001BF2  19F1               	xorwf	_pic18_devid& (0+255),w,b
 12064  001BF4  E140               	bnz	l5170
 12065  001BF6  0E02               	movlw	2
 12066  001BF8  0100               	movlb	0	; () banked
 12067  001BFA  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 12068  001BFC  A4D8               	btfss	status,2,c
 12069  001BFE  D03B               	goto	l5170
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;usb_hal_fixes.c: 41: U1ADDR_R = (unsigned char*)0xF63;
 12073  001C00  0E63               	movlw	99
 12074  001C02  0100               	movlb	0	; () banked
 12075  001C04  6FC9               	movwf	_U1ADDR_R& (0+255),b
 12076  001C06  0E0F               	movlw	15
 12077  001C08  0100               	movlb	0	; () banked
 12078  001C0A  6FCA               	movwf	(_U1ADDR_R+1)& (0+255),b
 12079                           
 12080                           ;usb_hal_fixes.c: 42: U1IE_R = (unsigned char*)0xF64;
 12081  001C0C  0E64               	movlw	100
 12082  001C0E  0100               	movlb	0	; () banked
 12083  001C10  6FD5               	movwf	_U1IE_R& (0+255),b
 12084  001C12  0E0F               	movlw	15
 12085  001C14  0100               	movlb	0	; () banked
 12086  001C16  6FD6               	movwf	(_U1IE_R+1)& (0+255),b
 12087                           
 12088                           ;usb_hal_fixes.c: 43: U1IR_R = (unsigned char*)0xF65;
 12089  001C18  0E65               	movlw	101
 12090  001C1A  0100               	movlb	0	; () banked
 12091  001C1C  6FD7               	movwf	_U1IR_R& (0+255),b
 12092  001C1E  0E0F               	movlw	15
 12093  001C20  0100               	movlb	0	; () banked
 12094  001C22  6FD8               	movwf	(_U1IR_R+1)& (0+255),b
 12095                           
 12096                           ;usb_hal_fixes.c: 44: U1EIR_R = (unsigned char*)0xF67;
 12097  001C24  0E67               	movlw	103
 12098  001C26  0100               	movlb	0	; () banked
 12099  001C28  6FD1               	movwf	_U1EIR_R& (0+255),b
 12100  001C2A  0E0F               	movlw	15
 12101  001C2C  0100               	movlb	0	; () banked
 12102  001C2E  6FD2               	movwf	(_U1EIR_R+1)& (0+255),b
 12103                           
 12104                           ;usb_hal_fixes.c: 45: U1EIE_R = (unsigned char*)0xF66;
 12105  001C30  0E66               	movlw	102
 12106  001C32  0100               	movlb	0	; () banked
 12107  001C34  6FCF               	movwf	_U1EIE_R& (0+255),b
 12108  001C36  0E0F               	movlw	15
 12109  001C38  0100               	movlb	0	; () banked
 12110  001C3A  6FD0               	movwf	(_U1EIE_R+1)& (0+255),b
 12111                           
 12112                           ;usb_hal_fixes.c: 46: U1CON_R = (unsigned char*)0xF60;
 12113  001C3C  0E60               	movlw	96
 12114  001C3E  0100               	movlb	0	; () banked
 12115  001C40  6FCD               	movwf	_U1CON_R& (0+255),b
 12116  001C42  0E0F               	movlw	15
 12117  001C44  0100               	movlb	0	; () banked
 12118  001C46  6FCE               	movwf	(_U1CON_R+1)& (0+255),b
 12119                           
 12120                           ;usb_hal_fixes.c: 47: U1EP0_R = (unsigned char*)0xF6A;
 12121  001C48  0E6A               	movlw	106
 12122  001C4A  6E5D               	movwf	_U1EP0_R,c
 12123  001C4C  0E0F               	movlw	15
 12124  001C4E  6E5E               	movwf	_U1EP0_R+1,c
 12125                           
 12126                           ;usb_hal_fixes.c: 48: U1EP1_R = (unsigned char*)0xF6B;
 12127  001C50  0E6B               	movlw	107
 12128  001C52  0100               	movlb	0	; () banked
 12129  001C54  6FD3               	movwf	_U1EP1_R& (0+255),b
 12130  001C56  0E0F               	movlw	15
 12131  001C58  0100               	movlb	0	; () banked
 12132  001C5A  6FD4               	movwf	(_U1EP1_R+1)& (0+255),b
 12133                           
 12134                           ;usb_hal_fixes.c: 49: U1CNFG1_R = (unsigned char*)0xF62;
 12135  001C5C  0E62               	movlw	98
 12136  001C5E  0100               	movlb	0	; () banked
 12137  001C60  6FCB               	movwf	_U1CNFG1_R& (0+255),b
 12138  001C62  0E0F               	movlw	15
 12139  001C64  0100               	movlb	0	; () banked
 12140  001C66  6FCC               	movwf	(_U1CNFG1_R+1)& (0+255),b
 12141                           
 12142                           ;usb_hal_fixes.c: 50: U1STAT_R = (unsigned char*)0xF61;
 12143  001C68  0E61               	movlw	97
 12144  001C6A  0100               	movlb	0	; () banked
 12145  001C6C  6FD9               	movwf	_U1STAT_R& (0+255),b
 12146  001C6E  0E0F               	movlw	15
 12147  001C70  0100               	movlb	0	; () banked
 12148  001C72  6FDA               	movwf	(_U1STAT_R+1)& (0+255),b
 12149                           
 12150                           ;usb_hal_fixes.c: 51: } else {
 12151  001C74  0012               	return	
 12152  001C76                     l5170:
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;usb_hal_fixes.c: 53: U1ADDR_R = (unsigned char*)0xF6E;
 12156  001C76  0E6E               	movlw	110
 12157  001C78  0100               	movlb	0	; () banked
 12158  001C7A  6FC9               	movwf	_U1ADDR_R& (0+255),b
 12159  001C7C  0E0F               	movlw	15
 12160  001C7E  0100               	movlb	0	; () banked
 12161  001C80  6FCA               	movwf	(_U1ADDR_R+1)& (0+255),b
 12162                           
 12163                           ;usb_hal_fixes.c: 54: U1IE_R = (unsigned char*)0xF69;
 12164  001C82  0E69               	movlw	105
 12165  001C84  0100               	movlb	0	; () banked
 12166  001C86  6FD5               	movwf	_U1IE_R& (0+255),b
 12167  001C88  0E0F               	movlw	15
 12168  001C8A  0100               	movlb	0	; () banked
 12169  001C8C  6FD6               	movwf	(_U1IE_R+1)& (0+255),b
 12170                           
 12171                           ;usb_hal_fixes.c: 55: U1IR_R = (unsigned char*)0xF68;
 12172  001C8E  0E68               	movlw	104
 12173  001C90  0100               	movlb	0	; () banked
 12174  001C92  6FD7               	movwf	_U1IR_R& (0+255),b
 12175  001C94  0E0F               	movlw	15
 12176  001C96  0100               	movlb	0	; () banked
 12177  001C98  6FD8               	movwf	(_U1IR_R+1)& (0+255),b
 12178                           
 12179                           ;usb_hal_fixes.c: 56: U1EIR_R = (unsigned char*)0xF6A;
 12180  001C9A  0E6A               	movlw	106
 12181  001C9C  0100               	movlb	0	; () banked
 12182  001C9E  6FD1               	movwf	_U1EIR_R& (0+255),b
 12183  001CA0  0E0F               	movlw	15
 12184  001CA2  0100               	movlb	0	; () banked
 12185  001CA4  6FD2               	movwf	(_U1EIR_R+1)& (0+255),b
 12186                           
 12187                           ;usb_hal_fixes.c: 57: U1EIE_R = (unsigned char*)0xF6B;
 12188  001CA6  0E6B               	movlw	107
 12189  001CA8  0100               	movlb	0	; () banked
 12190  001CAA  6FCF               	movwf	_U1EIE_R& (0+255),b
 12191  001CAC  0E0F               	movlw	15
 12192  001CAE  0100               	movlb	0	; () banked
 12193  001CB0  6FD0               	movwf	(_U1EIE_R+1)& (0+255),b
 12194                           
 12195                           ;usb_hal_fixes.c: 58: U1CON_R = (unsigned char*)0xF6D;
 12196  001CB2  0E6D               	movlw	109
 12197  001CB4  0100               	movlb	0	; () banked
 12198  001CB6  6FCD               	movwf	_U1CON_R& (0+255),b
 12199  001CB8  0E0F               	movlw	15
 12200  001CBA  0100               	movlb	0	; () banked
 12201  001CBC  6FCE               	movwf	(_U1CON_R+1)& (0+255),b
 12202                           
 12203                           ;usb_hal_fixes.c: 59: U1EP0_R = (unsigned char*)0xF70;
 12204  001CBE  0E70               	movlw	112
 12205  001CC0  6E5D               	movwf	_U1EP0_R,c
 12206  001CC2  0E0F               	movlw	15
 12207  001CC4  6E5E               	movwf	_U1EP0_R+1,c
 12208                           
 12209                           ;usb_hal_fixes.c: 60: U1EP1_R = (unsigned char*)0xF71;
 12210  001CC6  0E71               	movlw	113
 12211  001CC8  0100               	movlb	0	; () banked
 12212  001CCA  6FD3               	movwf	_U1EP1_R& (0+255),b
 12213  001CCC  0E0F               	movlw	15
 12214  001CCE  0100               	movlb	0	; () banked
 12215  001CD0  6FD4               	movwf	(_U1EP1_R+1)& (0+255),b
 12216                           
 12217                           ;usb_hal_fixes.c: 61: U1CNFG1_R = (unsigned char*)0xF6F;
 12218  001CD2  0E6F               	movlw	111
 12219  001CD4  0100               	movlb	0	; () banked
 12220  001CD6  6FCB               	movwf	_U1CNFG1_R& (0+255),b
 12221  001CD8  0E0F               	movlw	15
 12222  001CDA  0100               	movlb	0	; () banked
 12223  001CDC  6FCC               	movwf	(_U1CNFG1_R+1)& (0+255),b
 12224                           
 12225                           ;usb_hal_fixes.c: 62: U1STAT_R = (unsigned char*)0xF6C;
 12226  001CDE  0E6C               	movlw	108
 12227  001CE0  0100               	movlb	0	; () banked
 12228  001CE2  6FD9               	movwf	_U1STAT_R& (0+255),b
 12229  001CE4  0E0F               	movlw	15
 12230  001CE6  0100               	movlb	0	; () banked
 12231  001CE8  6FDA               	movwf	(_U1STAT_R+1)& (0+255),b
 12232  001CEA  0012               	return	
 12233                           
 12234                           ; BSR set to: 0
 12235                           
 12236                           ; BSR set to: 0
 12237  001CEC  0012               	return		;funcret
 12238  001CEE                     __end_of_USBRegisterFix:
 12239                           	opt stack 0
 12240                           tblptru	equ	0xFF8
 12241                           tblptrh	equ	0xFF7
 12242                           tblptrl	equ	0xFF6
 12243                           tablat	equ	0xFF5
 12244                           prodh	equ	0xFF4
 12245                           prodl	equ	0xFF3
 12246                           intcon	equ	0xFF2
 12247                           postinc0	equ	0xFEE
 12248                           wreg	equ	0xFE8
 12249                           indf1	equ	0xFE7
 12250                           postdec1	equ	0xFE5
 12251                           fsr1h	equ	0xFE2
 12252                           fsr1l	equ	0xFE1
 12253                           indf2	equ	0xFDF
 12254                           postinc2	equ	0xFDE
 12255                           postdec2	equ	0xFDD
 12256                           plusw2	equ	0xFDB
 12257                           fsr2h	equ	0xFDA
 12258                           fsr2l	equ	0xFD9
 12259                           status	equ	0xFD8
 12260                           
 12261 ;; *************** function _USBDeviceInit *****************
 12262 ;; Defined at:
 12263 ;;		line 298 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;		None
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;  i               1   42[COMRAM] unsigned char 
 12268 ;; Return value:  Size  Location     Type
 12269 ;;		None               void
 12270 ;; Registers used:
 12271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0
 12278 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12280 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12281 ;;Total ram usage:        1 bytes
 12282 ;; Hardware stack levels used:    1
 12283 ;; Hardware stack levels required when called:    5
 12284 ;; This function calls:
 12285 ;;		_USBDisableInterrupts
 12286 ;;		_memset
 12287 ;; This function is called by:
 12288 ;;		_USBDeviceTasks
 12289 ;;		_InitializeSystem
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text56
 12294  0015A4                     __ptext56:
 12295                           	opt stack 0
 12296  0015A4                     _USBDeviceInit:
 12297                           	opt stack 23
 12298                           
 12299                           ;usb_device.c: 300: uint8_t i;
 12300                           ;usb_device.c: 302: USBDisableInterrupts();
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;incstack = 0
 12304  0015A4  EC8A  F018         	call	_USBDisableInterrupts	;wreg free
 12305                           
 12306                           ;usb_device.c: 305: {*U1EIR_R = 0;};
 12307  0015A8  C0D1  FFD9         	movff	_U1EIR_R,fsr2l
 12308  0015AC  C0D2  FFDA         	movff	_U1EIR_R+1,fsr2h
 12309  0015B0  0E00               	movlw	0
 12310  0015B2  6EDF               	movwf	indf2,c
 12311                           
 12312                           ;usb_device.c: 308: {*U1IR_R = 0;};
 12313  0015B4  C0D7  FFD9         	movff	_U1IR_R,fsr2l
 12314  0015B8  C0D8  FFDA         	movff	_U1IR_R+1,fsr2h
 12315  0015BC  0E00               	movlw	0
 12316  0015BE  6EDF               	movwf	indf2,c
 12317                           
 12318                           ;usb_device.c: 311: *U1EP0_R = 0;
 12319  0015C0  C05D  FFD9         	movff	_U1EP0_R,fsr2l
 12320  0015C4  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
 12321  0015C8  0E00               	movlw	0
 12322  0015CA  6EDF               	movwf	indf2,c
 12323                           
 12324                           ;usb_device.c: 313: memset((void*)&*U1EP1_R,0x00,(2));;
 12325  0015CC  C0D3  F023         	movff	_U1EP1_R,memset@p1
 12326  0015D0  C0D4  F024         	movff	_U1EP1_R+1,memset@p1+1
 12327  0015D4  0E00               	movlw	0
 12328  0015D6  6E26               	movwf	memset@c+1,c
 12329  0015D8  0E00               	movlw	0
 12330  0015DA  6E25               	movwf	memset@c,c
 12331  0015DC  0E00               	movlw	0
 12332  0015DE  6E28               	movwf	memset@n+1,c
 12333  0015E0  0E02               	movlw	2
 12334  0015E2  6E27               	movwf	memset@n,c
 12335  0015E4  ECBA  F018         	call	_memset	;wreg free
 12336                           
 12337                           ;usb_device.c: 315: { *U1CNFG1_R = 0x10 | 0x00 | 0x04 | 0x02; *U1EIE_R = 0x9F; UIE = 0x3
      +                          9 | 0x40 | 0x02; };
 12338  0015E8  C0CB  FFD9         	movff	_U1CNFG1_R,fsr2l
 12339  0015EC  C0CC  FFDA         	movff	_U1CNFG1_R+1,fsr2h
 12340  0015F0  0E16               	movlw	22
 12341  0015F2  6EDF               	movwf	indf2,c
 12342  0015F4  C0CF  FFD9         	movff	_U1EIE_R,fsr2l
 12343  0015F8  C0D0  FFDA         	movff	_U1EIE_R+1,fsr2h
 12344  0015FC  0E9F               	movlw	159
 12345  0015FE  6EDF               	movwf	indf2,c
 12346  001600  0E7B               	movlw	123
 12347  001602  6E64               	movwf	3940,c	;volatile
 12348                           
 12349                           ;usb_device.c: 318: ;
 12350                           ;usb_device.c: 321: ;
 12351                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12352  001604  0E00               	movlw	0
 12353  001606  6E2B               	movwf	USBDeviceInit@i,c
 12354  001608  D00E               	goto	l4460
 12355  00160A  D010               	goto	l132
 12356  00160C                     l4456:
 12357                           
 12358                           ;usb_device.c: 325: {
 12359                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 12360  00160C  502B               	movf	USBDeviceInit@i,w,c
 12361  00160E  0D04               	mullw	4
 12362  001610  0E00               	movlw	0
 12363  001612  24F3               	addwf	prodl,w,c
 12364  001614  6ED9               	movwf	fsr2l,c
 12365  001616  0E04               	movlw	4
 12366  001618  20F4               	addwfc	prodh,w,c
 12367  00161A  6EDA               	movwf	fsr2h,c
 12368  00161C  6ADE               	clrf	postinc2,c
 12369  00161E  6ADE               	clrf	postinc2,c
 12370  001620  6ADE               	clrf	postinc2,c
 12371  001622  6ADD               	clrf	postdec2,c
 12372  001624  2A2B               	incf	USBDeviceInit@i,f,c
 12373  001626                     l4460:
 12374  001626  0E0B               	movlw	11
 12375  001628  642B               	cpfsgt	USBDeviceInit@i,c
 12376  00162A  D7F0               	goto	l4456
 12377  00162C                     l132:
 12378                           
 12379                           ;usb_device.c: 327: }
 12380                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 12381  00162C  8C60               	bsf	3936,6,c	;volatile
 12382                           
 12383                           ;usb_device.c: 333: *U1ADDR_R = 0x00;
 12384  00162E  C0C9  FFD9         	movff	_U1ADDR_R,fsr2l
 12385  001632  C0CA  FFDA         	movff	_U1ADDR_R+1,fsr2h
 12386  001636  0E00               	movlw	0
 12387  001638  6EDF               	movwf	indf2,c
 12388                           
 12389                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 12390  00163A  9860               	bcf	3936,4,c	;volatile
 12391                           
 12392                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 12393  00163C  9C60               	bcf	3936,6,c	;volatile
 12394                           
 12395                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 12396  00163E  D00C               	goto	l4476
 12397  001640                     l4468:
 12398                           
 12399                           ;usb_device.c: 343: {
 12400                           ;usb_device.c: 344: (UIR &= 0xF7);
 12401  001640  9665               	bcf	3941,3,c	;volatile
 12402                           
 12403                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 12404  001642  0E00               	movlw	0
 12405  001644  6E59               	movwf	_inPipes+3,c
 12406                           
 12407                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 12408  001646  0E00               	movlw	0
 12409  001648  0100               	movlb	0	; () banked
 12410  00164A  6F6D               	movwf	(_outPipes+3)& (0+255),b
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 12414  00164C  0E00               	movlw	0
 12415  00164E  0100               	movlb	0	; () banked
 12416  001650  6F6F               	movwf	(_outPipes+5)& (0+255),b
 12417  001652  0E00               	movlw	0
 12418  001654  6F6E               	movwf	(_outPipes+4)& (0+255),b
 12419  001656  D000               	goto	l4476
 12420  001658                     l4476:
 12421  001658  B665               	btfsc	3941,3,c	;volatile
 12422  00165A  D7F2               	goto	l4468
 12423                           
 12424                           ;usb_device.c: 349: }
 12425                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 12426  00165C  0E01               	movlw	1
 12427  00165E  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12428                           
 12429                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 12430  001660  0E01               	movlw	1
 12431  001662  6E50               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12432                           
 12433                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 12434  001664  0E00               	movlw	0
 12435  001666  6E4C               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12436                           
 12437                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 12438  001668  0E00               	movlw	0
 12439  00166A  6E4D               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12440                           
 12441                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 12442  00166C  0E00               	movlw	0
 12443  00166E  0100               	movlb	0	; () banked
 12444  001670  6F96               	movwf	_USBBusIsSuspended& (0+255),b
 12445                           
 12446                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 12447  001672  0E00               	movlw	0
 12448  001674  6E2B               	movwf	USBDeviceInit@i,c
 12449  001676                     l4480:
 12450                           
 12451                           ; BSR set to: 0
 12452  001676  0E02               	movlw	2
 12453  001678  642B               	cpfsgt	USBDeviceInit@i,c
 12454  00167A  D001               	goto	l4484
 12455                           
 12456                           ; BSR set to: 0
 12457  00167C  D02E               	goto	l4490
 12458  00167E                     l4484:
 12459                           
 12460                           ;usb_device.c: 363: {
 12461                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 12462  00167E  502B               	movf	USBDeviceInit@i,w,c
 12463  001680  0D02               	mullw	2
 12464  001682  0E3E               	movlw	low _pBDTEntryIn
 12465  001684  24F3               	addwf	prodl,w,c
 12466  001686  6ED9               	movwf	fsr2l,c
 12467  001688  0E00               	movlw	high _pBDTEntryIn
 12468  00168A  20F4               	addwfc	prodh,w,c
 12469  00168C  6EDA               	movwf	fsr2h,c
 12470  00168E  0E00               	movlw	0
 12471  001690  6EDE               	movwf	postinc2,c
 12472  001692  0E00               	movlw	0
 12473  001694  6EDD               	movwf	postdec2,c
 12474                           
 12475                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 12476  001696  502B               	movf	USBDeviceInit@i,w,c
 12477  001698  0D02               	mullw	2
 12478  00169A  0E72               	movlw	low _pBDTEntryOut
 12479  00169C  24F3               	addwf	prodl,w,c
 12480  00169E  6ED9               	movwf	fsr2l,c
 12481  0016A0  0E00               	movlw	high _pBDTEntryOut
 12482  0016A2  20F4               	addwfc	prodh,w,c
 12483  0016A4  6EDA               	movwf	fsr2h,c
 12484  0016A6  0E00               	movlw	0
 12485  0016A8  6EDE               	movwf	postinc2,c
 12486  0016AA  0E00               	movlw	0
 12487  0016AC  6EDD               	movwf	postdec2,c
 12488                           
 12489                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 12490  0016AE  502B               	movf	USBDeviceInit@i,w,c
 12491  0016B0  0D01               	mullw	1
 12492  0016B2  0E7C               	movlw	low _ep_data_in
 12493  0016B4  24F3               	addwf	prodl,w,c
 12494  0016B6  6ED9               	movwf	fsr2l,c
 12495  0016B8  0E00               	movlw	high _ep_data_in
 12496  0016BA  20F4               	addwfc	prodh,w,c
 12497  0016BC  6EDA               	movwf	fsr2h,c
 12498  0016BE  0E00               	movlw	0
 12499  0016C0  6EDF               	movwf	indf2,c
 12500                           
 12501                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 12502  0016C2  502B               	movf	USBDeviceInit@i,w,c
 12503  0016C4  0D01               	mullw	1
 12504  0016C6  0E7F               	movlw	low _ep_data_out
 12505  0016C8  24F3               	addwf	prodl,w,c
 12506  0016CA  6ED9               	movwf	fsr2l,c
 12507  0016CC  0E00               	movlw	high _ep_data_out
 12508  0016CE  20F4               	addwfc	prodh,w,c
 12509  0016D0  6EDA               	movwf	fsr2h,c
 12510  0016D2  0E00               	movlw	0
 12511  0016D4  6EDF               	movwf	indf2,c
 12512  0016D6  2A2B               	incf	USBDeviceInit@i,f,c
 12513  0016D8  D7CE               	goto	l4480
 12514  0016DA                     l4490:
 12515                           
 12516                           ;usb_device.c: 368: }
 12517                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12518  0016DA  0E08               	movlw	8
 12519  0016DC  6E3E               	movwf	_pBDTEntryIn,c
 12520  0016DE  0E04               	movlw	4
 12521  0016E0  6E3F               	movwf	_pBDTEntryIn+1,c
 12522                           
 12523                           ;usb_device.c: 373: *U1EP0_R = 0x06|0x10;
 12524  0016E2  C05D  FFD9         	movff	_U1EP0_R,fsr2l
 12525  0016E6  C05E  FFDA         	movff	_U1EP0_R+1,fsr2h
 12526  0016EA  0E16               	movlw	22
 12527  0016EC  6EDF               	movwf	indf2,c
 12528                           
 12529                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12530  0016EE  0E04               	movlw	4
 12531  0016F0  0104               	movlb	4	; () banked
 12532  0016F2  6F03               	movwf	3,b	;volatile
 12533  0016F4  0E30               	movlw	48
 12534  0016F6  6F02               	movwf	2,b	;volatile
 12535                           
 12536                           ; BSR set to: 4
 12537                           ;usb_device.c: 376: BDT[0].CNT = 8;
 12538  0016F8  0E08               	movlw	8
 12539  0016FA  0104               	movlb	4	; () banked
 12540  0016FC  6F01               	movwf	1,b	;volatile
 12541                           
 12542                           ; BSR set to: 4
 12543                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 12544  0016FE  0E04               	movlw	4
 12545  001700  0104               	movlb	4	; () banked
 12546  001702  6F00               	movwf	0,b	;volatile
 12547                           
 12548                           ; BSR set to: 4
 12549                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 12550  001704  0104               	movlb	4	; () banked
 12551  001706  8F00               	bsf	0,7,b	;volatile
 12552                           
 12553                           ; BSR set to: 4
 12554                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 12555  001708  0E00               	movlw	0
 12556  00170A  6E5C               	movwf	_USBActiveConfiguration,c
 12557                           
 12558                           ; BSR set to: 4
 12559                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 12560  00170C  0E00               	movlw	0
 12561  00170E  0100               	movlb	0	; () banked
 12562  001710  6F97               	movwf	_USBDeviceState& (0+255),b
 12563                           
 12564                           ; BSR set to: 0
 12565  001712  0012               	return		;funcret
 12566  001714                     __end_of_USBDeviceInit:
 12567                           	opt stack 0
 12568                           tblptru	equ	0xFF8
 12569                           tblptrh	equ	0xFF7
 12570                           tblptrl	equ	0xFF6
 12571                           tablat	equ	0xFF5
 12572                           prodh	equ	0xFF4
 12573                           prodl	equ	0xFF3
 12574                           intcon	equ	0xFF2
 12575                           postinc0	equ	0xFEE
 12576                           wreg	equ	0xFE8
 12577                           indf1	equ	0xFE7
 12578                           postdec1	equ	0xFE5
 12579                           fsr1h	equ	0xFE2
 12580                           fsr1l	equ	0xFE1
 12581                           indf2	equ	0xFDF
 12582                           postinc2	equ	0xFDE
 12583                           postdec2	equ	0xFDD
 12584                           plusw2	equ	0xFDB
 12585                           fsr2h	equ	0xFDA
 12586                           fsr2l	equ	0xFD9
 12587                           status	equ	0xFD8
 12588                           
 12589 ;; *************** function _memset *****************
 12590 ;; Defined at:
 12591 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 12592 ;; Parameters:    Size  Location     Type
 12593 ;;  p1              2   34[COMRAM] PTR void 
 12594 ;;		 -> UEP1(1), RAM(2047), USBAlternateInterface(2), BDT(48), 
 12595 ;;  c               2   36[COMRAM] int 
 12596 ;;  n               2   38[COMRAM] unsigned int 
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;  p               2   40[COMRAM] PTR unsigned char 
 12599 ;;		 -> UEP1(1), RAM(2047), USBAlternateInterface(2), BDT(48), 
 12600 ;; Return value:  Size  Location     Type
 12601 ;;                  2   34[COMRAM] PTR void 
 12602 ;; Registers used:
 12603 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12604 ;; Tracked objects:
 12605 ;;		On entry : 0/0
 12606 ;;		On exit  : 0/0
 12607 ;;		Unchanged: 0/0
 12608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12609 ;;      Params:         6       0       0       0       0       0       0       0       0
 12610 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12612 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12613 ;;Total ram usage:        8 bytes
 12614 ;; Hardware stack levels used:    1
 12615 ;; Hardware stack levels required when called:    4
 12616 ;; This function calls:
 12617 ;;		Nothing
 12618 ;; This function is called by:
 12619 ;;		_USBDeviceInit
 12620 ;;		_USBStdSetCfgHandler
 12621 ;; This function uses a non-reentrant model
 12622 ;;
 12623                           
 12624                           	psect	text57
 12625  003174                     __ptext57:
 12626                           	opt stack 0
 12627  003174                     _memset:
 12628                           	opt stack 23
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;incstack = 0
 12632  003174  C023  F029         	movff	memset@p1,memset@p
 12633  003178  C024  F02A         	movff	memset@p1+1,memset@p+1
 12634  00317C  D009               	goto	l3896
 12635  00317E                     l3892:
 12636  00317E  C029  FFD9         	movff	memset@p,fsr2l
 12637  003182  C02A  FFDA         	movff	memset@p+1,fsr2h
 12638  003186  C025  FFDF         	movff	memset@c,indf2
 12639  00318A  4A29               	infsnz	memset@p,f,c
 12640  00318C  2A2A               	incf	memset@p+1,f,c
 12641  00318E  D000               	goto	l3896
 12642  003190                     l3896:
 12643  003190  0627               	decf	memset@n,f,c
 12644  003192  A0D8               	btfss	status,0,c
 12645  003194  0628               	decf	memset@n+1,f,c
 12646  003196  2827               	incf	memset@n,w,c
 12647  003198  E1F2               	bnz	l3892
 12648  00319A  2828               	incf	memset@n+1,w,c
 12649  00319C  A4D8               	btfss	status,2,c
 12650  00319E  D7EF               	goto	l3892
 12651                           
 12652                           ;	Return value of _memset is never used
 12653  0031A0  0012               	return		;funcret
 12654  0031A2                     __end_of_memset:
 12655                           	opt stack 0
 12656                           tblptru	equ	0xFF8
 12657                           tblptrh	equ	0xFF7
 12658                           tblptrl	equ	0xFF6
 12659                           tablat	equ	0xFF5
 12660                           prodh	equ	0xFF4
 12661                           prodl	equ	0xFF3
 12662                           intcon	equ	0xFF2
 12663                           postinc0	equ	0xFEE
 12664                           wreg	equ	0xFE8
 12665                           indf1	equ	0xFE7
 12666                           postdec1	equ	0xFE5
 12667                           fsr1h	equ	0xFE2
 12668                           fsr1l	equ	0xFE1
 12669                           indf2	equ	0xFDF
 12670                           postinc2	equ	0xFDE
 12671                           postdec2	equ	0xFDD
 12672                           plusw2	equ	0xFDB
 12673                           fsr2h	equ	0xFDA
 12674                           fsr2l	equ	0xFD9
 12675                           status	equ	0xFD8
 12676                           
 12677 ;; *************** function _USBDisableInterrupts *****************
 12678 ;; Defined at:
 12679 ;;		line 31 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb_hal_fixes.c"
 12680 ;; Parameters:    Size  Location     Type
 12681 ;;		None
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;		None
 12684 ;; Return value:  Size  Location     Type
 12685 ;;		None               void
 12686 ;; Registers used:
 12687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12688 ;; Tracked objects:
 12689 ;;		On entry : 0/0
 12690 ;;		On exit  : 0/0
 12691 ;;		Unchanged: 0/0
 12692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12693 ;;      Params:         0       0       0       0       0       0       0       0       0
 12694 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12696 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12697 ;;Total ram usage:        0 bytes
 12698 ;; Hardware stack levels used:    1
 12699 ;; Hardware stack levels required when called:    4
 12700 ;; This function calls:
 12701 ;;		Nothing
 12702 ;; This function is called by:
 12703 ;;		_USBDeviceInit
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           	psect	text58
 12708  003114                     __ptext58:
 12709                           	opt stack 0
 12710  003114                     _USBDisableInterrupts:
 12711                           	opt stack 23
 12712                           
 12713                           ;usb_hal_fixes.c: 32: if (pic18_devid == 0x02E0) {
 12714                           
 12715                           ;incstack = 0
 12716  003114  0EE0               	movlw	224
 12717  003116  0100               	movlb	0	; () banked
 12718  003118  19F1               	xorwf	_pic18_devid& (0+255),w,b
 12719  00311A  E10C               	bnz	l4334
 12720  00311C  0E02               	movlw	2
 12721  00311E  0100               	movlb	0	; () banked
 12722  003120  19F2               	xorwf	(_pic18_devid+1)& (0+255),w,b
 12723  003122  A4D8               	btfss	status,2,c
 12724  003124  D007               	goto	l4334
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;usb_hal_fixes.c: 33: *PIE3_R &= 0b11111011;
 12728  003126  C0C1  FFD9         	movff	_PIE3_R,fsr2l
 12729  00312A  C0C2  FFDA         	movff	_PIE3_R+1,fsr2h
 12730  00312E  0EFB               	movlw	251
 12731  003130  16DF               	andwf	indf2,f,c
 12732                           
 12733                           ;usb_hal_fixes.c: 34: } else {
 12734  003132  0012               	return	
 12735  003134                     l4334:
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;usb_hal_fixes.c: 35: *PIR2_R &= 0b11011111;
 12739  003134  C0C3  FFD9         	movff	_PIR2_R,fsr2l
 12740  003138  C0C4  FFDA         	movff	_PIR2_R+1,fsr2h
 12741  00313C  0EDF               	movlw	223
 12742  00313E  16DF               	andwf	indf2,f,c
 12743  003140  0012               	return	
 12744                           
 12745                           ; BSR set to: 0
 12746                           
 12747                           ; BSR set to: 0
 12748  003142  0012               	return		;funcret
 12749  003144                     __end_of_USBDisableInterrupts:
 12750                           	opt stack 0
 12751                           tblptru	equ	0xFF8
 12752                           tblptrh	equ	0xFF7
 12753                           tblptrl	equ	0xFF6
 12754                           tablat	equ	0xFF5
 12755                           prodh	equ	0xFF4
 12756                           prodl	equ	0xFF3
 12757                           intcon	equ	0xFF2
 12758                           postinc0	equ	0xFEE
 12759                           wreg	equ	0xFE8
 12760                           indf1	equ	0xFE7
 12761                           postdec1	equ	0xFE5
 12762                           fsr1h	equ	0xFE2
 12763                           fsr1l	equ	0xFE1
 12764                           indf2	equ	0xFDF
 12765                           postinc2	equ	0xFDE
 12766                           postdec2	equ	0xFDD
 12767                           plusw2	equ	0xFDB
 12768                           fsr2h	equ	0xFDA
 12769                           fsr2l	equ	0xFD9
 12770                           status	equ	0xFD8
 12771                           
 12772 ;; *************** function _OpenSPI1 *****************
 12773 ;; Defined at:
 12774 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1open.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;  sync_mode       1    wreg     unsigned char 
 12777 ;;  bus_mode        1   34[COMRAM] unsigned char 
 12778 ;;  smp_phase       1   35[COMRAM] unsigned char 
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;  sync_mode       1   36[COMRAM] unsigned char 
 12781 ;; Return value:  Size  Location     Type
 12782 ;;		None               void
 12783 ;; Registers used:
 12784 ;;		wreg, status,2, status,0
 12785 ;; Tracked objects:
 12786 ;;		On entry : 0/0
 12787 ;;		On exit  : 0/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12790 ;;      Params:         2       0       0       0       0       0       0       0       0
 12791 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12793 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12794 ;;Total ram usage:        3 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:    4
 12797 ;; This function calls:
 12798 ;;		Nothing
 12799 ;; This function is called by:
 12800 ;;		_InitializeSystem
 12801 ;; This function uses a non-reentrant model
 12802 ;;
 12803                           
 12804                           	psect	text59
 12805  002ED6                     __ptext59:
 12806                           	opt stack 0
 12807  002ED6                     _OpenSPI1:
 12808                           	opt stack 25
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;incstack = 0
 12812                           ;OpenSPI1@sync_mode stored from wreg
 12813  002ED6  6E25               	movwf	OpenSPI1@sync_mode,c
 12814  002ED8  0E3F               	movlw	63
 12815  002EDA  16C7               	andwf	4039,f,c	;volatile
 12816  002EDC  0E00               	movlw	0
 12817  002EDE  6EC6               	movwf	4038,c	;volatile
 12818  002EE0  5025               	movf	OpenSPI1@sync_mode,w,c
 12819  002EE2  12C6               	iorwf	4038,f,c	;volatile
 12820  002EE4  5024               	movf	OpenSPI1@smp_phase,w,c
 12821  002EE6  12C7               	iorwf	4039,f,c	;volatile
 12822  002EE8  D005               	goto	l5158
 12823  002EEA                     l1128:
 12824  002EEA  8CC7               	bsf	4039,6,c	;volatile
 12825  002EEC  D013               	goto	l5162
 12826  002EEE                     l1130:
 12827  002EEE  8CC7               	bsf	4039,6,c	;volatile
 12828  002EF0                     l1131:
 12829  002EF0  88C6               	bsf	4038,4,c	;volatile
 12830  002EF2  D010               	goto	l5162
 12831  002EF4                     l5158:
 12832  002EF4  5023               	movf	OpenSPI1@bus_mode,w,c
 12833                           
 12834                           ; Switch size 1, requested type "space"
 12835                           ; Number of cases is 3, Range of values is 0 to 3
 12836                           ; switch strategies available:
 12837                           ; Name         Instructions Cycles
 12838                           ; simple_byte           10     6 (average)
 12839                           ;	Chosen strategy is simple_byte
 12840  002EF6  0A00               	xorlw	0	; case 0
 12841  002EF8  B4D8               	btfsc	status,2,c
 12842  002EFA  D7F7               	goto	l1128
 12843  002EFC  0A02               	xorlw	2	; case 2
 12844  002EFE  B4D8               	btfsc	status,2,c
 12845  002F00  D7F6               	goto	l1130
 12846  002F02  0A01               	xorlw	1	; case 3
 12847  002F04  B4D8               	btfsc	status,2,c
 12848  002F06  D7F4               	goto	l1131
 12849  002F08  D005               	goto	l5162
 12850  002F0A                     l1134:
 12851  002F0A  8A92               	bsf	3986,5,c	;volatile
 12852  002F0C                     l1136:
 12853  002F0C  8493               	bsf	3987,2,c	;volatile
 12854  002F0E  D00A               	goto	l1135
 12855  002F10                     l1137:
 12856  002F10  9493               	bcf	3987,2,c	;volatile
 12857  002F12  D008               	goto	l1135
 12858  002F14                     l5162:
 12859  002F14  5025               	movf	OpenSPI1@sync_mode,w,c
 12860                           
 12861                           ; Switch size 1, requested type "space"
 12862                           ; Number of cases is 2, Range of values is 4 to 5
 12863                           ; switch strategies available:
 12864                           ; Name         Instructions Cycles
 12865                           ; simple_byte            7     4 (average)
 12866                           ;	Chosen strategy is simple_byte
 12867  002F16  0A04               	xorlw	4	; case 4
 12868  002F18  B4D8               	btfsc	status,2,c
 12869  002F1A  D7F7               	goto	l1134
 12870  002F1C  0A01               	xorlw	1	; case 5
 12871  002F1E  B4D8               	btfsc	status,2,c
 12872  002F20  D7F5               	goto	l1136
 12873  002F22  D7F6               	goto	l1137
 12874  002F24                     l1135:
 12875  002F24  8093               	bsf	3987,0,c	;volatile
 12876  002F26  9693               	bcf	3987,3,c	;volatile
 12877  002F28  8AC6               	bsf	4038,5,c	;volatile
 12878  002F2A  0012               	return		;funcret
 12879  002F2C                     __end_of_OpenSPI1:
 12880                           	opt stack 0
 12881                           tblptru	equ	0xFF8
 12882                           tblptrh	equ	0xFF7
 12883                           tblptrl	equ	0xFF6
 12884                           tablat	equ	0xFF5
 12885                           prodh	equ	0xFF4
 12886                           prodl	equ	0xFF3
 12887                           intcon	equ	0xFF2
 12888                           postinc0	equ	0xFEE
 12889                           wreg	equ	0xFE8
 12890                           indf1	equ	0xFE7
 12891                           postdec1	equ	0xFE5
 12892                           fsr1h	equ	0xFE2
 12893                           fsr1l	equ	0xFE1
 12894                           indf2	equ	0xFDF
 12895                           postinc2	equ	0xFDE
 12896                           postdec2	equ	0xFDD
 12897                           plusw2	equ	0xFDB
 12898                           fsr2h	equ	0xFDA
 12899                           fsr2l	equ	0xFD9
 12900                           status	equ	0xFD8
 12901                           
 12902 ;; *************** function _LowPriorityISRCode *****************
 12903 ;; Defined at:
 12904 ;;		line 66 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;		None
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;		None
 12909 ;; Return value:  Size  Location     Type
 12910 ;;		None               void
 12911 ;; Registers used:
 12912 ;;		None
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12918 ;;      Params:         0       0       0       0       0       0       0       0       0
 12919 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12920 ;;      Temps:         17       0       0       0       0       0       0       0       0
 12921 ;;      Totals:        17       0       0       0       0       0       0       0       0
 12922 ;;Total ram usage:       17 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:    3
 12925 ;; This function calls:
 12926 ;;		Nothing
 12927 ;; This function is called by:
 12928 ;;		Interrupt level 1
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           	psect	intcodelo
 12933  000018                     __pintcodelo:
 12934                           	opt stack 0
 12935  000018                     _LowPriorityISRCode:
 12936                           	opt stack 16
 12937                           
 12938                           ;incstack = 0
 12939  000018  CFD8 F001          	movff	status,??_LowPriorityISRCode
 12940  00001C  CFE8 F002          	movff	wreg,??_LowPriorityISRCode+1
 12941  000020  CFE0 F003          	movff	bsr,??_LowPriorityISRCode+2
 12942  000024  CFFA F004          	movff	pclath,??_LowPriorityISRCode+3
 12943  000028  CFFB F005          	movff	pclatu,??_LowPriorityISRCode+4
 12944  00002C  CFE9 F006          	movff	fsr0l,??_LowPriorityISRCode+5
 12945  000030  CFEA F007          	movff	fsr0h,??_LowPriorityISRCode+6
 12946  000034  CFE1 F008          	movff	fsr1l,??_LowPriorityISRCode+7
 12947  000038  CFE2 F009          	movff	fsr1h,??_LowPriorityISRCode+8
 12948  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriorityISRCode+9
 12949  000040  CFDA F00B          	movff	fsr2h,??_LowPriorityISRCode+10
 12950  000044  CFF3 F00C          	movff	prodl,??_LowPriorityISRCode+11
 12951  000048  CFF4 F00D          	movff	prodh,??_LowPriorityISRCode+12
 12952  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriorityISRCode+13
 12953  000050  CFF7 F00F          	movff	tblptrh,??_LowPriorityISRCode+14
 12954  000054  CFF8 F010          	movff	tblptru,??_LowPriorityISRCode+15
 12955  000058  CFF5 F011          	movff	tablat,??_LowPriorityISRCode+16
 12956                           
 12957                           ;karate.c: 68: if (PIR1bits.TMR2IF) {
 12958  00005C  A29E               	btfss	3998,1,c	;volatile
 12959  00005E  D002               	goto	i1l686
 12960                           
 12961                           ;karate.c: 70: PIR1bits.TMR2IF = 0;
 12962  000060  929E               	bcf	3998,1,c	;volatile
 12963  000062  D000               	goto	i1l686
 12964  000064                     i1l686:
 12965  000064  C011  FFF5         	movff	??_LowPriorityISRCode+16,tablat
 12966  000068  C010  FFF8         	movff	??_LowPriorityISRCode+15,tblptru
 12967  00006C  C00F  FFF7         	movff	??_LowPriorityISRCode+14,tblptrh
 12968  000070  C00E  FFF6         	movff	??_LowPriorityISRCode+13,tblptrl
 12969  000074  C00D  FFF4         	movff	??_LowPriorityISRCode+12,prodh
 12970  000078  C00C  FFF3         	movff	??_LowPriorityISRCode+11,prodl
 12971  00007C  C00B  FFDA         	movff	??_LowPriorityISRCode+10,fsr2h
 12972  000080  C00A  FFD9         	movff	??_LowPriorityISRCode+9,fsr2l
 12973  000084  C009  FFE2         	movff	??_LowPriorityISRCode+8,fsr1h
 12974  000088  C008  FFE1         	movff	??_LowPriorityISRCode+7,fsr1l
 12975  00008C  C007  FFEA         	movff	??_LowPriorityISRCode+6,fsr0h
 12976  000090  C006  FFE9         	movff	??_LowPriorityISRCode+5,fsr0l
 12977  000094  C005  FFFB         	movff	??_LowPriorityISRCode+4,pclatu
 12978  000098  C004  FFFA         	movff	??_LowPriorityISRCode+3,pclath
 12979  00009C  C003  FFE0         	movff	??_LowPriorityISRCode+2,bsr
 12980  0000A0  C002  FFE8         	movff	??_LowPriorityISRCode+1,wreg
 12981  0000A4  C001  FFD8         	movff	??_LowPriorityISRCode,status
 12982  0000A8  0010               	retfie	
 12983  0000AA                     __end_of_LowPriorityISRCode:
 12984                           	opt stack 0
 12985                           pclatu	equ	0xFFB
 12986                           pclath	equ	0xFFA
 12987                           tblptru	equ	0xFF8
 12988                           tblptrh	equ	0xFF7
 12989                           tblptrl	equ	0xFF6
 12990                           tablat	equ	0xFF5
 12991                           prodh	equ	0xFF4
 12992                           prodl	equ	0xFF3
 12993                           intcon	equ	0xFF2
 12994                           postinc0	equ	0xFEE
 12995                           fsr0h	equ	0xFEA
 12996                           fsr0l	equ	0xFE9
 12997                           wreg	equ	0xFE8
 12998                           indf1	equ	0xFE7
 12999                           postdec1	equ	0xFE5
 13000                           fsr1h	equ	0xFE2
 13001                           fsr1l	equ	0xFE1
 13002                           bsr	equ	0xFE0
 13003                           indf2	equ	0xFDF
 13004                           postinc2	equ	0xFDE
 13005                           postdec2	equ	0xFDD
 13006                           plusw2	equ	0xFDB
 13007                           fsr2h	equ	0xFDA
 13008                           fsr2l	equ	0xFD9
 13009                           status	equ	0xFD8
 13010                           
 13011 ;; *************** function _HighPriorityISRCode *****************
 13012 ;; Defined at:
 13013 ;;		line 45 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;		None               void
 13020 ;; Registers used:
 13021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13029 ;;      Temps:         14       0       0       0       0       0       0       0       0
 13030 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13031 ;;Total ram usage:       14 bytes
 13032 ;; Hardware stack levels used:    1
 13033 ;; Hardware stack levels required when called:    2
 13034 ;; This function calls:
 13035 ;;		i2_tlc5947_latch
 13036 ;;		i2_tlc5947_update
 13037 ;; This function is called by:
 13038 ;;		Interrupt level 2
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           	psect	intcode
 13043  000008                     __pintcode:
 13044                           	opt stack 0
 13045  000008                     _HighPriorityISRCode:
 13046                           	opt stack 16
 13047                           
 13048                           ;incstack = 0
 13049  000008  CFFA F015          	movff	pclath,??_HighPriorityISRCode
 13050  00000C  CFFB F016          	movff	pclatu,??_HighPriorityISRCode+1
 13051  000010  CFE9 F017          	movff	fsr0l,??_HighPriorityISRCode+2
 13052  000014  EF0E  F015         	goto	int_func
 13053                           pclatu	equ	0xFFB
 13054                           pclath	equ	0xFFA
 13055                           tblptru	equ	0xFF8
 13056                           tblptrh	equ	0xFF7
 13057                           tblptrl	equ	0xFF6
 13058                           tablat	equ	0xFF5
 13059                           prodh	equ	0xFF4
 13060                           prodl	equ	0xFF3
 13061                           intcon	equ	0xFF2
 13062                           postinc0	equ	0xFEE
 13063                           fsr0h	equ	0xFEA
 13064                           fsr0l	equ	0xFE9
 13065                           wreg	equ	0xFE8
 13066                           indf1	equ	0xFE7
 13067                           postdec1	equ	0xFE5
 13068                           fsr1h	equ	0xFE2
 13069                           fsr1l	equ	0xFE1
 13070                           bsr	equ	0xFE0
 13071                           indf2	equ	0xFDF
 13072                           postinc2	equ	0xFDE
 13073                           postdec2	equ	0xFDD
 13074                           plusw2	equ	0xFDB
 13075                           fsr2h	equ	0xFDA
 13076                           fsr2l	equ	0xFD9
 13077                           status	equ	0xFD8
 13078                           
 13079                           	psect	intcode_body
 13080  002A1C                     __pintcode_body:
 13081                           	opt stack 16
 13082  002A1C                     int_func:
 13083                           	opt stack 16
 13084  002A1C  CFEA F018          	movff	fsr0h,??_HighPriorityISRCode+3
 13085  002A20  CFE1 F019          	movff	fsr1l,??_HighPriorityISRCode+4
 13086  002A24  CFE2 F01A          	movff	fsr1h,??_HighPriorityISRCode+5
 13087  002A28  CFD9 F01B          	movff	fsr2l,??_HighPriorityISRCode+6
 13088  002A2C  CFDA F01C          	movff	fsr2h,??_HighPriorityISRCode+7
 13089  002A30  CFF3 F01D          	movff	prodl,??_HighPriorityISRCode+8
 13090  002A34  CFF4 F01E          	movff	prodh,??_HighPriorityISRCode+9
 13091  002A38  CFF6 F01F          	movff	tblptrl,??_HighPriorityISRCode+10
 13092  002A3C  CFF7 F020          	movff	tblptrh,??_HighPriorityISRCode+11
 13093  002A40  CFF8 F021          	movff	tblptru,??_HighPriorityISRCode+12
 13094  002A44  CFF5 F022          	movff	tablat,??_HighPriorityISRCode+13
 13095                           
 13096                           ;karate.c: 47: if (PIR2bits.TMR3IF) {
 13097  002A48  A2A1               	btfss	4001,1,c	;volatile
 13098  002A4A  D012               	goto	i2l682
 13099                           
 13100                           ;karate.c: 49: TMR3H = tmr3h_cal;
 13101  002A4C  C0A1  FFB3         	movff	_tmr3h_cal,4019	;volatile
 13102                           
 13103                           ;karate.c: 50: TMR3L = tmr3l_cal;
 13104  002A50  C0A2  FFB2         	movff	_tmr3l_cal,4018	;volatile
 13105                           
 13106                           ;karate.c: 53: if (tlc_request >= 0) {
 13107  002A54  0100               	movlb	0	; () banked
 13108  002A56  BFA0               	btfsc	_tlc_request& (0+255),7,b
 13109  002A58  D009               	goto	i2l5682
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;karate.c: 54: tlc5947_latch();
 13113  002A5A  ECFC  F018         	call	i2_tlc5947_latch	;wreg free
 13114                           
 13115                           ;karate.c: 57: if (tlc_request == 1) {
 13116  002A5E  0100               	movlb	0	; () banked
 13117  002A60  05A0               	decf	_tlc_request& (0+255),w,b
 13118  002A62  A4D8               	btfss	status,2,c
 13119  002A64  D003               	goto	i2l5682
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;karate.c: 58: tlc5947_update();
 13123  002A66  ECA2  F018         	call	i2_tlc5947_update	;wreg free
 13124  002A6A  D000               	goto	i2l5682
 13125  002A6C                     i2l5682:
 13126                           
 13127                           ;karate.c: 59: }
 13128                           ;karate.c: 60: }
 13129                           ;karate.c: 62: PIR2bits.TMR3IF = 0;
 13130  002A6C  92A1               	bcf	4001,1,c	;volatile
 13131  002A6E  D000               	goto	i2l682
 13132  002A70                     i2l682:
 13133  002A70  C022  FFF5         	movff	??_HighPriorityISRCode+13,tablat
 13134  002A74  C021  FFF8         	movff	??_HighPriorityISRCode+12,tblptru
 13135  002A78  C020  FFF7         	movff	??_HighPriorityISRCode+11,tblptrh
 13136  002A7C  C01F  FFF6         	movff	??_HighPriorityISRCode+10,tblptrl
 13137  002A80  C01E  FFF4         	movff	??_HighPriorityISRCode+9,prodh
 13138  002A84  C01D  FFF3         	movff	??_HighPriorityISRCode+8,prodl
 13139  002A88  C01C  FFDA         	movff	??_HighPriorityISRCode+7,fsr2h
 13140  002A8C  C01B  FFD9         	movff	??_HighPriorityISRCode+6,fsr2l
 13141  002A90  C01A  FFE2         	movff	??_HighPriorityISRCode+5,fsr1h
 13142  002A94  C019  FFE1         	movff	??_HighPriorityISRCode+4,fsr1l
 13143  002A98  C018  FFEA         	movff	??_HighPriorityISRCode+3,fsr0h
 13144  002A9C  C017  FFE9         	movff	??_HighPriorityISRCode+2,fsr0l
 13145  002AA0  C016  FFFB         	movff	??_HighPriorityISRCode+1,pclatu
 13146  002AA4  C015  FFFA         	movff	??_HighPriorityISRCode,pclath
 13147  002AA8  0011               	retfie		f
 13148  002AAA                     __end_of_HighPriorityISRCode:
 13149                           	opt stack 0
 13150                           pclatu	equ	0xFFB
 13151                           pclath	equ	0xFFA
 13152                           tblptru	equ	0xFF8
 13153                           tblptrh	equ	0xFF7
 13154                           tblptrl	equ	0xFF6
 13155                           tablat	equ	0xFF5
 13156                           prodh	equ	0xFF4
 13157                           prodl	equ	0xFF3
 13158                           intcon	equ	0xFF2
 13159                           postinc0	equ	0xFEE
 13160                           fsr0h	equ	0xFEA
 13161                           fsr0l	equ	0xFE9
 13162                           wreg	equ	0xFE8
 13163                           indf1	equ	0xFE7
 13164                           postdec1	equ	0xFE5
 13165                           fsr1h	equ	0xFE2
 13166                           fsr1l	equ	0xFE1
 13167                           bsr	equ	0xFE0
 13168                           indf2	equ	0xFDF
 13169                           postinc2	equ	0xFDE
 13170                           postdec2	equ	0xFDD
 13171                           plusw2	equ	0xFDB
 13172                           fsr2h	equ	0xFDA
 13173                           fsr2l	equ	0xFD9
 13174                           status	equ	0xFD8
 13175                           
 13176 ;; *************** function i2_tlc5947_update *****************
 13177 ;; Defined at:
 13178 ;;		line 175 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  tlc5947_upda    1   19[COMRAM] unsigned char 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;		None               void
 13185 ;; Registers used:
 13186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0
 13193 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13195 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13196 ;;Total ram usage:        1 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    1
 13199 ;; This function calls:
 13200 ;;		i2_WriteSPI1
 13201 ;; This function is called by:
 13202 ;;		_HighPriorityISRCode
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text62
 13207  003144                     __ptext62:
 13208                           	opt stack 0
 13209  003144                     i2_tlc5947_update:
 13210                           	opt stack 16
 13211                           
 13212                           ;tlc5947.c: 177: uint8_t x;
 13213                           ;tlc5947.c: 179: for (x = 0; x < tlc_nbytes; x++) {
 13214                           
 13215                           ;incstack = 0
 13216  003144  0E00               	movlw	0
 13217  003146  6E14               	movwf	i2tlc5947_update@x,c
 13218  003148  D00D               	goto	i2l5582
 13219  00314A                     i2l5578:
 13220                           
 13221                           ;tlc5947.c: 180: WriteSPI1(tlc_memory[x]);
 13222  00314A  5014               	movf	i2tlc5947_update@x,w,c
 13223  00314C  0D01               	mullw	1
 13224  00314E  0E80               	movlw	low _tlc_memory
 13225  003150  24F3               	addwf	prodl,w,c
 13226  003152  6ED9               	movwf	fsr2l,c
 13227  003154  0E01               	movlw	high _tlc_memory
 13228  003156  20F4               	addwfc	prodh,w,c
 13229  003158  6EDA               	movwf	fsr2h,c
 13230  00315A  50DF               	movf	indf2,w,c
 13231  00315C  EC37  F019         	call	i2_WriteSPI1
 13232  003160  2A14               	incf	i2tlc5947_update@x,f,c
 13233  003162  D000               	goto	i2l5582
 13234  003164                     i2l5582:
 13235  003164  505F               	movf	_tlc_nbytes,w,c
 13236  003166  5C14               	subwf	i2tlc5947_update@x,w,c
 13237  003168  A0D8               	btfss	status,0,c
 13238  00316A  D7EF               	goto	i2l5578
 13239                           
 13240                           ;tlc5947.c: 181: }
 13241                           ;tlc5947.c: 182: tlc_request = 0;
 13242  00316C  0E00               	movlw	0
 13243  00316E  0100               	movlb	0	; () banked
 13244  003170  6FA0               	movwf	_tlc_request& (0+255),b
 13245                           
 13246                           ; BSR set to: 0
 13247  003172  0012               	return		;funcret
 13248  003174                     __end_ofi2_tlc5947_update:
 13249                           	opt stack 0
 13250                           pclatu	equ	0xFFB
 13251                           pclath	equ	0xFFA
 13252                           tblptru	equ	0xFF8
 13253                           tblptrh	equ	0xFF7
 13254                           tblptrl	equ	0xFF6
 13255                           tablat	equ	0xFF5
 13256                           prodh	equ	0xFF4
 13257                           prodl	equ	0xFF3
 13258                           intcon	equ	0xFF2
 13259                           postinc0	equ	0xFEE
 13260                           fsr0h	equ	0xFEA
 13261                           fsr0l	equ	0xFE9
 13262                           wreg	equ	0xFE8
 13263                           indf1	equ	0xFE7
 13264                           postdec1	equ	0xFE5
 13265                           fsr1h	equ	0xFE2
 13266                           fsr1l	equ	0xFE1
 13267                           bsr	equ	0xFE0
 13268                           indf2	equ	0xFDF
 13269                           postinc2	equ	0xFDE
 13270                           postdec2	equ	0xFDD
 13271                           plusw2	equ	0xFDB
 13272                           fsr2h	equ	0xFDA
 13273                           fsr2l	equ	0xFD9
 13274                           status	equ	0xFD8
 13275                           
 13276 ;; *************** function i2_WriteSPI1 *****************
 13277 ;; Defined at:
 13278 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1writ.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;  data_out        1    wreg     unsigned char 
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;  data_out        1   18[COMRAM] unsigned char 
 13283 ;;  WriteSPI1       1   17[COMRAM] unsigned char 
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      char 
 13286 ;; Registers used:
 13287 ;;		wreg
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0
 13294 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13296 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13297 ;;Total ram usage:        2 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; This function calls:
 13300 ;;		Nothing
 13301 ;; This function is called by:
 13302 ;;		i2_tlc5947_update
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text63
 13307  00326E                     __ptext63:
 13308                           	opt stack 0
 13309  00326E                     i2_WriteSPI1:
 13310                           	opt stack 16
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;incstack = 0
 13314                           ;i2WriteSPI1@data_out stored from wreg
 13315  00326E  6E13               	movwf	i2WriteSPI1@data_out,c
 13316  003270  CFC9 F012          	movff	4041,i2WriteSPI1@TempVar	;volatile
 13317  003274  969E               	bcf	3998,3,c	;volatile
 13318  003276  9EC6               	bcf	4038,7,c	;volatile
 13319  003278  C013  FFC9         	movff	i2WriteSPI1@data_out,4041	;volatile
 13320  00327C  BEC6               	btfsc	4038,7,c	;volatile
 13321  00327E  0012               	return	
 13322  003280  D002               	goto	i2l1162
 13323                           
 13324                           ;	Return value of i2_WriteSPI1 is never used
 13325  003282  0012               	return	
 13326  003284  D000               	goto	i2l1162
 13327  003286                     i2l1162:
 13328  003286  B69E               	btfsc	3998,3,c	;volatile
 13329  003288  0012               	return	
 13330  00328A  D7FD               	goto	i2l1162
 13331  00328C  0012               	return	
 13332                           
 13333                           ;	Return value of i2_WriteSPI1 is never used
 13334  00328E  0012               	return		;funcret
 13335  003290                     __end_ofi2_WriteSPI1:
 13336                           	opt stack 0
 13337                           pclatu	equ	0xFFB
 13338                           pclath	equ	0xFFA
 13339                           tblptru	equ	0xFF8
 13340                           tblptrh	equ	0xFF7
 13341                           tblptrl	equ	0xFF6
 13342                           tablat	equ	0xFF5
 13343                           prodh	equ	0xFF4
 13344                           prodl	equ	0xFF3
 13345                           intcon	equ	0xFF2
 13346                           postinc0	equ	0xFEE
 13347                           fsr0h	equ	0xFEA
 13348                           fsr0l	equ	0xFE9
 13349                           wreg	equ	0xFE8
 13350                           indf1	equ	0xFE7
 13351                           postdec1	equ	0xFE5
 13352                           fsr1h	equ	0xFE2
 13353                           fsr1l	equ	0xFE1
 13354                           bsr	equ	0xFE0
 13355                           indf2	equ	0xFDF
 13356                           postinc2	equ	0xFDE
 13357                           postdec2	equ	0xFDD
 13358                           plusw2	equ	0xFDB
 13359                           fsr2h	equ	0xFDA
 13360                           fsr2l	equ	0xFD9
 13361                           status	equ	0xFD8
 13362                           
 13363 ;; *************** function i2_tlc5947_latch *****************
 13364 ;; Defined at:
 13365 ;;		line 185 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;		None
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;		None
 13370 ;; Return value:  Size  Location     Type
 13371 ;;		None               void
 13372 ;; Registers used:
 13373 ;;		wreg, status,2, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13379 ;;      Params:         0       0       0       0       0       0       0       0       0
 13380 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13381 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13382 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13383 ;;Total ram usage:        0 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:    1
 13386 ;; This function calls:
 13387 ;;		i2_Delay100TCYx
 13388 ;;		i2_Delay10TCYx
 13389 ;; This function is called by:
 13390 ;;		_HighPriorityISRCode
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           	psect	text64
 13395  0031F8                     __ptext64:
 13396                           	opt stack 0
 13397  0031F8                     i2_tlc5947_latch:
 13398                           	opt stack 16
 13399                           
 13400                           ;tlc5947.c: 187: LATBbits.LATB5 = 1;;
 13401                           
 13402                           ;incstack = 0
 13403  0031F8  8A8A               	bsf	3978,5,c	;volatile
 13404                           
 13405                           ;tlc5947.c: 188: Delay100TCYx (pwr_delay);
 13406  0031FA  0100               	movlb	0	; () banked
 13407  0031FC  518E               	movf	_pwr_delay& (0+255),w,b
 13408  0031FE  ECA1  F019         	call	i2_Delay100TCYx
 13409                           
 13410                           ;tlc5947.c: 190: LATCbits.LATC0 = 1;;
 13411  003202  808B               	bsf	3979,0,c	;volatile
 13412                           
 13413                           ;tlc5947.c: 191: LATBbits.LATB3 = 1;;
 13414  003204  868A               	bsf	3978,3,c	;volatile
 13415                           
 13416                           ;tlc5947.c: 192: Delay10TCYx(40);
 13417  003206  0E28               	movlw	40
 13418  003208  EC98  F019         	call	i2_Delay10TCYx
 13419                           
 13420                           ;tlc5947.c: 193: LATBbits.LATB3 = 0;;
 13421  00320C  968A               	bcf	3978,3,c	;volatile
 13422                           
 13423                           ;tlc5947.c: 194: Delay10TCYx(40);
 13424  00320E  0E28               	movlw	40
 13425  003210  EC98  F019         	call	i2_Delay10TCYx
 13426                           
 13427                           ;tlc5947.c: 195: LATCbits.LATC0 = 0;;
 13428  003214  908B               	bcf	3979,0,c	;volatile
 13429                           
 13430                           ;tlc5947.c: 197: Delay100TCYx(pwr_delay);
 13431  003216  0100               	movlb	0	; () banked
 13432  003218  518E               	movf	_pwr_delay& (0+255),w,b
 13433  00321A  ECA1  F019         	call	i2_Delay100TCYx
 13434                           
 13435                           ;tlc5947.c: 198: LATBbits.LATB5 = 0;;
 13436  00321E  9A8A               	bcf	3978,5,c	;volatile
 13437  003220  0012               	return		;funcret
 13438  003222                     __end_ofi2_tlc5947_latch:
 13439                           	opt stack 0
 13440                           pclatu	equ	0xFFB
 13441                           pclath	equ	0xFFA
 13442                           tblptru	equ	0xFF8
 13443                           tblptrh	equ	0xFF7
 13444                           tblptrl	equ	0xFF6
 13445                           tablat	equ	0xFF5
 13446                           prodh	equ	0xFF4
 13447                           prodl	equ	0xFF3
 13448                           intcon	equ	0xFF2
 13449                           postinc0	equ	0xFEE
 13450                           fsr0h	equ	0xFEA
 13451                           fsr0l	equ	0xFE9
 13452                           wreg	equ	0xFE8
 13453                           indf1	equ	0xFE7
 13454                           postdec1	equ	0xFE5
 13455                           fsr1h	equ	0xFE2
 13456                           fsr1l	equ	0xFE1
 13457                           bsr	equ	0xFE0
 13458                           indf2	equ	0xFDF
 13459                           postinc2	equ	0xFDE
 13460                           postdec2	equ	0xFDD
 13461                           plusw2	equ	0xFDB
 13462                           fsr2h	equ	0xFDA
 13463                           fsr2l	equ	0xFD9
 13464                           status	equ	0xFD8
 13465                           
 13466 ;; *************** function i2_Delay10TCYx *****************
 13467 ;; Defined at:
 13468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10tcyx.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;  unit            1    wreg     unsigned char 
 13471 ;; Auto vars:     Size  Location     Type
 13472 ;;  unit            1   17[COMRAM] unsigned char 
 13473 ;; Return value:  Size  Location     Type
 13474 ;;		None               void
 13475 ;; Registers used:
 13476 ;;		wreg
 13477 ;; Tracked objects:
 13478 ;;		On entry : 0/0
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13482 ;;      Params:         0       0       0       0       0       0       0       0       0
 13483 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13484 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13485 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13486 ;;Total ram usage:        1 bytes
 13487 ;; Hardware stack levels used:    1
 13488 ;; This function calls:
 13489 ;;		Nothing
 13490 ;; This function is called by:
 13491 ;;		i2_tlc5947_latch
 13492 ;; This function uses a non-reentrant model
 13493 ;;
 13494                           
 13495                           	psect	text65
 13496  003330                     __ptext65:
 13497                           	opt stack 0
 13498  003330                     i2_Delay10TCYx:
 13499                           	opt stack 16
 13500                           
 13501                           ;incstack = 0
 13502                           ;i2Delay10TCYx@unit stored from wreg
 13503  003330  6E12               	movwf	i2Delay10TCYx@unit,c
 13504  003332  0E03               	movlw	3
 13505  003334                     i2u490_47:
 13506  003334  2EE8               	decfsz	wreg,f,c
 13507  003336  D7FE               	goto	i2u490_47
 13508  003338  F000               	nop	
 13509  00333A  2E12               	decfsz	i2Delay10TCYx@unit,f,c
 13510  00333C  D7FA               	goto	i2l5432
 13511  00333E  0012               	return	
 13512  003340  0012               	return		;funcret
 13513  003342                     __end_ofi2_Delay10TCYx:
 13514                           	opt stack 0
 13515                           pclatu	equ	0xFFB
 13516                           pclath	equ	0xFFA
 13517                           tblptru	equ	0xFF8
 13518                           tblptrh	equ	0xFF7
 13519                           tblptrl	equ	0xFF6
 13520                           tablat	equ	0xFF5
 13521                           prodh	equ	0xFF4
 13522                           prodl	equ	0xFF3
 13523                           intcon	equ	0xFF2
 13524                           postinc0	equ	0xFEE
 13525                           fsr0h	equ	0xFEA
 13526                           fsr0l	equ	0xFE9
 13527                           wreg	equ	0xFE8
 13528                           indf1	equ	0xFE7
 13529                           postdec1	equ	0xFE5
 13530                           fsr1h	equ	0xFE2
 13531                           fsr1l	equ	0xFE1
 13532                           bsr	equ	0xFE0
 13533                           indf2	equ	0xFDF
 13534                           postinc2	equ	0xFDE
 13535                           postdec2	equ	0xFDD
 13536                           plusw2	equ	0xFDB
 13537                           fsr2h	equ	0xFDA
 13538                           fsr2l	equ	0xFD9
 13539                           status	equ	0xFD8
 13540                           
 13541 ;; *************** function i2_Delay100TCYx *****************
 13542 ;; Defined at:
 13543 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;  unit            1    wreg     unsigned char 
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;  unit            1   17[COMRAM] unsigned char 
 13548 ;; Return value:  Size  Location     Type
 13549 ;;		None               void
 13550 ;; Registers used:
 13551 ;;		wreg
 13552 ;; Tracked objects:
 13553 ;;		On entry : 0/0
 13554 ;;		On exit  : 0/0
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13557 ;;      Params:         0       0       0       0       0       0       0       0       0
 13558 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13560 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13561 ;;Total ram usage:        1 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; This function calls:
 13564 ;;		Nothing
 13565 ;; This function is called by:
 13566 ;;		i2_tlc5947_latch
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text66
 13571  003342                     __ptext66:
 13572                           	opt stack 0
 13573  003342                     i2_Delay100TCYx:
 13574                           	opt stack 16
 13575                           
 13576                           ;incstack = 0
 13577                           ;i2Delay100TCYx@unit stored from wreg
 13578  003342  6E12               	movwf	i2Delay100TCYx@unit,c
 13579  003344  0E21               	movlw	33
 13580  003346                     i2u491_47:
 13581  003346  2EE8               	decfsz	wreg,f,c
 13582  003348  D7FE               	goto	i2u491_47
 13583  00334A  F000               	nop	
 13584  00334C  2E12               	decfsz	i2Delay100TCYx@unit,f,c
 13585  00334E  D7FA               	goto	i2l5428
 13586  003350  0012               	return	
 13587  003352  0012               	return		;funcret
 13588  003354                     __end_ofi2_Delay100TCYx:
 13589                           	opt stack 0
 13590                           pclatu	equ	0xFFB
 13591                           pclath	equ	0xFFA
 13592                           tblptru	equ	0xFF8
 13593                           tblptrh	equ	0xFF7
 13594                           tblptrl	equ	0xFF6
 13595                           tablat	equ	0xFF5
 13596                           prodh	equ	0xFF4
 13597                           prodl	equ	0xFF3
 13598                           intcon	equ	0xFF2
 13599                           postinc0	equ	0xFEE
 13600                           fsr0h	equ	0xFEA
 13601                           fsr0l	equ	0xFE9
 13602                           wreg	equ	0xFE8
 13603                           indf1	equ	0xFE7
 13604                           postdec1	equ	0xFE5
 13605                           fsr1h	equ	0xFE2
 13606                           fsr1l	equ	0xFE1
 13607                           bsr	equ	0xFE0
 13608                           indf2	equ	0xFDF
 13609                           postinc2	equ	0xFDE
 13610                           postdec2	equ	0xFDD
 13611                           plusw2	equ	0xFDB
 13612                           fsr2h	equ	0xFDA
 13613                           fsr2l	equ	0xFD9
 13614                           status	equ	0xFD8
 13615                           pclatu	equ	0xFFB
 13616                           pclath	equ	0xFFA
 13617                           tblptru	equ	0xFF8
 13618                           tblptrh	equ	0xFF7
 13619                           tblptrl	equ	0xFF6
 13620                           tablat	equ	0xFF5
 13621                           prodh	equ	0xFF4
 13622                           prodl	equ	0xFF3
 13623                           intcon	equ	0xFF2
 13624                           postinc0	equ	0xFEE
 13625                           fsr0h	equ	0xFEA
 13626                           fsr0l	equ	0xFE9
 13627                           wreg	equ	0xFE8
 13628                           indf1	equ	0xFE7
 13629                           postdec1	equ	0xFE5
 13630                           fsr1h	equ	0xFE2
 13631                           fsr1l	equ	0xFE1
 13632                           bsr	equ	0xFE0
 13633                           indf2	equ	0xFDF
 13634                           postinc2	equ	0xFDE
 13635                           postdec2	equ	0xFDD
 13636                           plusw2	equ	0xFDB
 13637                           fsr2h	equ	0xFDA
 13638                           fsr2l	equ	0xFD9
 13639                           status	equ	0xFD8
 13640                           
 13641                           	psect	rparam
 13642  0000                     pclatu	equ	0xFFB
 13643                           pclath	equ	0xFFA
 13644                           tblptru	equ	0xFF8
 13645                           tblptrh	equ	0xFF7
 13646                           tblptrl	equ	0xFF6
 13647                           tablat	equ	0xFF5
 13648                           prodh	equ	0xFF4
 13649                           prodl	equ	0xFF3
 13650                           intcon	equ	0xFF2
 13651                           postinc0	equ	0xFEE
 13652                           fsr0h	equ	0xFEA
 13653                           fsr0l	equ	0xFE9
 13654                           wreg	equ	0xFE8
 13655                           indf1	equ	0xFE7
 13656                           postdec1	equ	0xFE5
 13657                           fsr1h	equ	0xFE2
 13658                           fsr1l	equ	0xFE1
 13659                           bsr	equ	0xFE0
 13660                           indf2	equ	0xFDF
 13661                           postinc2	equ	0xFDE
 13662                           postdec2	equ	0xFDD
 13663                           plusw2	equ	0xFDB
 13664                           fsr2h	equ	0xFDA
 13665                           fsr2l	equ	0xFD9
 13666                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    171
    Data        649
    BSS         372
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      95
    BANK0           160     19     147
    BANK1           256      0     221
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 2047
		 -> UEP1(SFR_1[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP1(SFR_1[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    PIR3_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIE3_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIR2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    PIE2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    IOCB_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ANSELA_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ANSELC_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    ACTCON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    OSCCON2_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    T3GCON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> CDCBufferOut(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> CDCBufferIn(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1284_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1284_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1284_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1284_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR_1[1]), RAM(DATA[2047]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 38
		 -> sd003(CODE[10]), sd002(CODE[24]), sd001(CODE[38]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR_1[1]), RAM(DATA[2047]), 

    U1STAT_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> USTAT(SFR_1[1]), RAM(DATA[2047]), 

    U1IE_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), UIE(SFR_1[1]), 

    U1CON_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UCON(SFR_1[1]), RAM(DATA[2047]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    U1ADDR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UADDR(SFR_1[1]), RAM(DATA[2047]), 

    U1EIE_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEIE(SFR_1[1]), RAM(DATA[2047]), 

    U1CNFG1_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UCFG(SFR_1[1]), RAM(DATA[2047]), 

    sp__memset	PTR void  size(2) Largest target is 2047
		 -> UEP1(SFR_1[1]), RAM(DATA[2047]), USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), 

    U1EP1_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEP1(SFR_1[1]), RAM(DATA[2047]), 

    U1EP0_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEP0(SFR_1[1]), RAM(DATA[2047]), 

    U1IR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), UIR(SFR_1[1]), 

    U1EIR_R	PTR volatile unsigned char  size(2) Largest target is 2047
		 -> UEIR(SFR_1[1]), RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    _getsUSBUSART->_USBTransferOnePacket
    _comm_send_rply->_CDCTxService
    _comm_send_dat->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _InitializeSystem->_tlc5947_pwm_readback
    _tlc5947_pwm_readback->_tlc5947_setChannel
    _tlc5947_setChannel->_gamma_lookup
    _tlc5947_latch->_Delay100TCYx
    _tlc5947_latch->_Delay10TCYx
    _tlc5947_count_channels->___awdiv
    _tlc5947_update->_WriteSPI1
    _USBDeviceInit->_memset

Critical Paths under _HighPriorityISRCode in COMRAM

    _HighPriorityISRCode->i2_tlc5947_update
    i2_tlc5947_update->i2_WriteSPI1
    i2_tlc5947_latch->i2_Delay100TCYx
    i2_tlc5947_latch->i2_Delay10TCYx

Critical Paths under _LowPriorityISRCode in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ProcessIO
    _ProcessIO->_ProcessCDC
    _ProcessCDC->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _HighPriorityISRCode in BANK0

    None.

Critical Paths under _LowPriorityISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriorityISRCode in BANK1

    None.

Critical Paths under _LowPriorityISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriorityISRCode in BANK2

    None.

Critical Paths under _LowPriorityISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriorityISRCode in BANK3

    None.

Critical Paths under _LowPriorityISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriorityISRCode in BANK4

    None.

Critical Paths under _LowPriorityISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriorityISRCode in BANK5

    None.

Critical Paths under _LowPriorityISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriorityISRCode in BANK6

    None.

Critical Paths under _LowPriorityISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriorityISRCode in BANK7

    None.

Critical Paths under _LowPriorityISRCode in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   97590
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            1     1      0   93297
                                             18 BANK0      1     1      0
                     _BlinkUSBStatus
                       _CDCTxService
                         _ProcessCDC
                    _SwitchIsPressed
                     _USBDeviceTasks
                 _tlc5947_setChannel
 ---------------------------------------------------------------------------------
 (2) _SwitchIsPressed                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ProcessCDC                                          15    15      0   50888
                                              3 BANK0     15    15      0
                            _BusyADC
                           _Busy_eep
                         _ConvertADC
                        _Delay10TCYx
                            _ReadADC
                         _Read_b_eep
                     _USBDeviceTasks
                        _Write_b_eep
                      _comm_send_dat
                     _comm_send_rply
                       _getsUSBUSART
             _tlc5947_count_channels
               _tlc5947_pwm_readback
                 _tlc5947_setChannel
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1936
                                             41 COMRAM     6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _comm_send_rply                                       1     1      0    2250
                                             46 COMRAM     1     1      0
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _comm_send_dat                                        2     2      0    2386
                                             46 COMRAM     2     2      0
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     400
                                             34 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         5     5      0    1828
                                             41 COMRAM     5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Write_b_eep                                          4     1      3     246
                                             34 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       1     1      0   39128
                                              2 BANK0      1     1      0
               _USBClearUSBInterrupt
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   22440
                                             60 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               0     0      0   22143
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   0     0      0   16959
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  1     1      0    6346
                                             54 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               3     3      0      46
                                             34 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  2     2      0       0
                                             34 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              6     6      0    5475
                                             54 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5092
                                             46 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            0     0      0    2400
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                 7     3      4    1667
                                             34 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    4     3      1     733
                                             42 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 8     7      1     400
                                             34 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  2     2      0     114
                                             34 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  1     1      0     115
                                             35 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  1     1      0      92
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBClearUSBInterrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Read_b_eep                                           2     0      2     111
                                             34 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             34 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BlinkUSBStatus                                       1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0    4293
                           _OpenSPI1
                      _USBDeviceInit
                     _USBRegisterFix
                       _readDeviceID
             _tlc5947_count_channels
               _tlc5947_pwm_readback
 ---------------------------------------------------------------------------------
 (3) _tlc5947_pwm_readback                                 7     7      0    1884
                                             46 COMRAM     7     7      0
                        _Delay10TCYx
                            ___lwdiv
                      _tlc5947_latch
                 _tlc5947_setChannel
                     _tlc5947_update
 ---------------------------------------------------------------------------------
 (2) _tlc5947_setChannel                                   9     8      1    1363
                                             37 COMRAM     9     8      1
                       _gamma_lookup
 ---------------------------------------------------------------------------------
 (3) _gamma_lookup                                         3     1      2      22
                                             34 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _tlc5947_latch                                        0     0      0      44
                       _Delay100TCYx
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay10TCYx                                          1     1      0      22
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Delay100TCYx                                         1     1      0      22
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     340
                                             34 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tlc5947_count_channels                               3     3      0     707
                                             42 COMRAM     3     3      0
                           _ReadSPI1
                          _WriteSPI1
                            ___awdiv
                     _tlc5947_update
 ---------------------------------------------------------------------------------
 (4) _tlc5947_update                                       1     1      0      69
                                             36 COMRAM     1     1      0
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (5) _WriteSPI1                                            2     2      0      23
                                             34 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     478
                                             34 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _ReadSPI1                                             1     1      0       1
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _readDeviceID                                         5     5      0      70
                                             34 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBRegisterFix                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1366
                                             42 COMRAM     1     1      0
               _USBDisableInterrupts
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1164
                                             34 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _USBDisableInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI1                                             3     1      2     266
                                             34 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _LowPriorityISRCode                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HighPriorityISRCode                                14    14      0     113
                                             20 COMRAM    14    14      0
                    i2_tlc5947_latch
                   i2_tlc5947_update
 ---------------------------------------------------------------------------------
 (14) i2_tlc5947_update                                    1     1      0      69
                                             19 COMRAM     1     1      0
                        i2_WriteSPI1
 ---------------------------------------------------------------------------------
 (15) i2_WriteSPI1                                         2     2      0      23
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_tlc5947_latch                                     0     0      0      44
                     i2_Delay100TCYx
                      i2_Delay10TCYx
 ---------------------------------------------------------------------------------
 (15) i2_Delay10TCYx                                       1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_Delay100TCYx                                      1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _OpenSPI1
     _USBDeviceInit
       _USBDisableInterrupts
       _memset
     _USBRegisterFix
     _readDeviceID
     _tlc5947_count_channels
       _ReadSPI1
       _WriteSPI1
       ___awdiv
       _tlc5947_update
         _WriteSPI1
     _tlc5947_pwm_readback
       _Delay10TCYx
       ___lwdiv
       _tlc5947_latch
         _Delay100TCYx
         _Delay10TCYx
       _tlc5947_setChannel
         _gamma_lookup
       _tlc5947_update
         _WriteSPI1
   _ProcessIO
     _BlinkUSBStatus
     _CDCTxService
       _USBTransferOnePacket
     _ProcessCDC
       _BusyADC
       _Busy_eep
       _ConvertADC
       _Delay10TCYx
       _ReadADC
       _Read_b_eep
       _USBDeviceTasks
         _USBClearUSBInterrupt
         _USBCtrlEPAllowStatusStage
         _USBCtrlEPService
           _USBCtrlTrfInHandler
             _USBCtrlTrfTxService
           _USBCtrlTrfOutHandler
             _USBCtrlTrfRxService
               _USBCtrlEPAllowStatusStage
           _USBCtrlTrfSetupHandler
             _USBCheckStdRequest
               _USBStdFeatureReqHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBStdGetDscHandler
               _USBStdGetStatusHandler
               _USBStdSetCfgHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
                 _memset
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBCtrlEPServiceComplete
               _USBCtrlEPAllowDataStage
                 _USBCtrlTrfTxService
               _USBCtrlEPAllowStatusStage
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
         _USBDeviceInit
           _USBDisableInterrupts
           _memset
         _USBStallHandler
         _USBSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBWakeFromSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _Write_b_eep
       _comm_send_dat
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _comm_send_rply
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _getsUSBUSART
         _USBTransferOnePacket
       _tlc5947_count_channels
         _ReadSPI1
         _WriteSPI1
         ___awdiv
         _tlc5947_update
           _WriteSPI1
       _tlc5947_pwm_readback
         _Delay10TCYx
         ___lwdiv
         _tlc5947_latch
           _Delay100TCYx
           _Delay10TCYx
         _tlc5947_setChannel
           _gamma_lookup
         _tlc5947_update
           _WriteSPI1
       _tlc5947_setChannel
         _gamma_lookup
     _SwitchIsPressed
     _USBDeviceTasks
       _USBClearUSBInterrupt
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
         _USBDisableInterrupts
         _memset
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _tlc5947_setChannel
       _gamma_lookup

 _LowPriorityISRCode (ROOT)

 _HighPriorityISRCode (ROOT)
   i2_tlc5947_latch
     i2_Delay100TCYx
     i2_Delay10TCYx
   i2_tlc5947_update
     i2_WriteSPI1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0     200      23       50.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      DD       7       86.3%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      93       5       91.9%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      5F       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     24F      14        0.0%
DATA                 0      0     44F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jun 25 21:00:35 2016

                         ReadSPI1@TempVar 0023             __size_of_USBDisableInterrupts 0030  
                            _update_count 0092                                _USB_SD_Ptr 0801  
                __size_of_SwitchIsPressed 002C                            _BlinkUSBStatus 2F7E  
                            ___awdiv@sign 0028                                        bsr 000FE0  
                           _USBDeviceInit 15A4                             _tlc5947_latch 31CE  
                      __size_of_CDCInitEP 006C                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                            ?_comm_send_dat 0001  
    USER_USB_CALLBACK_EVENT_HANDLER@event 002F      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0031  
                                     l132 162C                                       l212 1D6A  
                                     l150 10BE                                       l161 1180  
                                     l325 2318                                       l430 248A  
             __end_of_USBStdGetDscHandler 1ACC                                       l159 116C  
                                     l248 1BDC                                       l280 2718  
                                     l354 0D82                                       l275 26FE  
                                     l339 1EEA                                       l428 244E  
                                     l348 1F3C                                       l373 0F52  
                                     l278 2790                                       l279 2714  
                                     l721 1E20                                       l482 1760  
                                     l732 2FC4                                       l734 2FC8  
                                     l718 1E00                                       l815 2C00  
                                     l487 17A8                                       l824 27F6  
                                     l912 2AB6                                       _BDT 000400  
                                     l988 0CBC                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _UIE 000F64                                       _UIR 000F65  
                              _USBSuspend 3080                      __size_of_Write_b_eep 003A  
                    USBStdSetCfgHandler@i 0037                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 0FEC  
                          _USBDeviceState 0097                               i2_WriteSPI1 326E  
                 __size_of_USBRegisterFix 0100                     ??_USBCtrlTrfRxService 0023  
                          _tlc5947_update 30E4                            ??_getsUSBUSART 002D  
                USBEnableEndpoint@options 002B                              __CFG_LVP$OFF 000000  
                __size_ofi2_tlc5947_latch 002A                           ?_comm_send_rply 0001  
                                    l1130 2EEE                                      l1131 2EF0  
                                    l1109 306E                                      l1134 2F0A  
                                    l1135 2F24                                      l1136 2F0C  
                                    l1128 2EEA                                      l1137 2F10  
                                    l1145 32DA                                      l1162 3264  
                                    l1082 3374                                      l4004 28A2  
                                    l4024 1FFA                                      l4008 28BC  
                                    l5010 27C4                                      l4106 2778  
                                    l4050 2076                                      l4034 202E  
                                    l4210 1D14                                      l5020 27E2  
                                    l4140 0E36                                      l4124 0D7A  
                                    l4028 2002                                      l4300 1EFA  
              USBConfigureEndpoint@handle 0029                                      l4150 0E5E  
                                    l4070 1A4E                                      l4062 19CA  
                                    l4310 1F12                                      l4302 1F00  
                                    l4222 1D80                                      l4230 1D94  
                                    l4206 1D0A                                      l5024 27EE  
                                    l4160 0EB2                                      l4152 0E80  
                                    l4144 0E3E                                      l4080 1AAA  
                                    l4072 1A54                                      l4312 1F1A  
                                    l5200 08DA                                      l5026 27F2  
                                    l4402 22DE                                      l4162 0ED0  
                                    l4146 0E42                                      l4138 0DF8  
                                    l4058 19B8                                      l4090 2706  
                                    l4314 1F20                                      l5050 2F56  
                                    l4084 1AB0                                      l4324 1F56  
                                    l4334 3134                                      l4430 330E  
                                    l4510 30D4                                      l4414 2324  
                                    l4254 1AF0                                      l4166 0EEA  
                                    l4078 1AA4                                      l5070 2AD6  
                                    l5230 09A4                                      l5214 0954  
                                    l4408 22FE                                      l4280 1B9E  
                                    l4264 1B26                                      l3800 2FDC  
                                    l4192 0FB6                                      l4176 0F30  
                                    l4096 2736                                      l4328 1F74  
                                    l4520 303C                                      l4600 1748  
                                    l5080 2B0C                                      l5056 2F74  
                                    l5048 2F50                                      l5304 0B1E  
                                    l5240 09CE                                      l5162 2F14  
                                    l5170 1C76                                      l5146 2CE6  
                                    l4434 3320                                      l4258 1B00  
                                    l4194 0FC4                                      l4186 0F6E  
                                    l4178 0F3E                                      l4098 2758  
                                    l4522 3040                                      l4610 176A  
                                    l5074 2AF6                                      l5402 0CC2  
                                    l5330 0B76                                      l5306 0B26  
                                    l5250 09F8                                      l5242 09D8  
                                    l5226 0994                                      l5410 0CDA  
                                    l5218 0972                                      l1699 2E74  
                                    l4460 1626                                      l4276 1B84  
                                    l3804 2FEC                                      l3820 24FA  
                                    l3812 24CE                                      l3900 2D68  
                                    l4188 0F8C                                      l4604 1754  
                                    l5076 2AFA                                      l5404 0CCA  
                                    l5316 0B46                                      l5412 0D3C  
                                    l5158 2EF4                                      l4702 1452  
                                    l5502 1960                                      l4390 229E  
                                    l4374 2D5A                                      l4366 2D10  
                                    l3814 24E8                                      l3902 2D6E  
                                    l4630 17D2                                      l4622 17AE  
                                    l5086 2B2A                                      l5078 2B06  
                                    l5406 0CD2                                      l5318 0B4E  
                                    l5270 0A74                                      l5246 09EE  
                                    l5414 0D44                                      l5182 31C8  
                                    l4480 1676                                      l4456 160C  
                                    l4712 1490                                      l4704 1458  
                                    l5504 1966                                      l3832 2556  
                                    l4544 2EC4                                      l4640 1802  
                                    l4616 1796                                      l5336 0B9C  
                                    l5328 0B6E                                      l5264 0A52  
                                    l5416 0D4C                                      l4490 16DA  
                                    l4722 150E                                      l4714 14D4  
                                    l3930 20C6                                      l3834 256C  
                                    l3842 2404                                      l3906 2D74  
                                    l4298 1EF4                                      l4562 21D4  
                                    l4546 2ED2                                      l4650 1830  
                                    l5346 0BC6                                      l5338 0BA4  
                                    l5274 0AAA                                      l5282 0ACA  
                                    l5266 0A5A                                      l5258 0A3E  
                                    l4484 167E                                      l4468 1640  
                                    l4476 1658                                      l4732 1568  
                                    l4724 1540                                      l5460 18F0  
                                    l3940 20F2                                      l4388 2296  
                                    l3860 2442                                      l3852 242C  
                                    l4580 2242                                      l4820 1014  
                                    l5380 0C54                                      l5372 0C32  
                                    l5364 0C12                                      l5356 0BF2  
                                    l5348 0BCE                                      l5284 0AD2  
                                    l4806 2E68                                      l4734 15A0  
                                    l5462 18F6                                      l3950 2136  
                                    l3926 20BA                                      l3790 2952  
                                    l3846 2416                                      l4574 2222  
                                    l4566 21DC                                      l4830 1062  
                                    l4638 17F6                                      l5382 0C5C  
                                    l5374 0C3A                                      l5366 0C1A  
                                    l5358 0BFA                                      l5294 0AFC  
                                    l4752 299C                                      l4680 30EA  
                                    l5456 18B0                                      l3792 296C  
                                    l4656 1842                                      l4648 1826  
                                    l5296 0B04                                      l5560 1EA2  
                                    l5474 1920                                      l4578 223C  
                                    l4930 11D0                                      l4914 1176  
                                    l4906 115E                                      l4826 1052  
                                    l4834 1078                                      l4658 1848  
                                    l3892 317E                                      l4764 29C4  
                                    l4780 2A00                                      l4684 3104  
                                    l5476 192A                                      l3948 212A  
                                    l3868 2474                                      l3876 2492  
                                    l5732 2D8C                                      l4940 1208  
                                    l5572 1ECC                                      l5556 1E2E  
                                    l5548 1E04                                      l4766 29CE  
                                    l4758 29AE                                      l4694 142E  
                                    l3958 216E                                      l3974 2372  
                                    l5734 2DBC                                      l4934 11E0  
                                    l4854 10B4                                      l4846 10A6  
                                    l4598 173E                                      l4950 2666  
                                    l3896 3190                                      l4784 2A10  
                                    l4776 29F4                                      l4768 29D6  
                                    l4936 1200                                      l4928 11B8  
                                    l5568 1EBC                                      l4794 2E38  
                                    l4882 1106                                      l4962 26C2  
                                    l5690 32EE                                      l4796 2E42  
                                    l4892 1124                                      l4876 10E0  
                                    l4868 10D2                                      l4956 2694  
                                    l4948 265C                                      l4982 2BE0  
                                    l4798 2E4A                                      l4958 269A  
                                    l4966 26EA                                      l5686 32EA  
                                    l4888 1116                                      l4994 2C08  
                                    l4978 2BD8                                      l4898 1130  
                                    _DDRA 000F92                                      _DDRB 000F93  
                                    _DDRC 000F94                                      _DDRD 000F95  
                                    _DDRE 000F96                                      _LATC 000F8B  
                                    u4030 2652                                      u2610 211A  
                                    u4220 336C                                      u2630 215E  
                                    u4038 2654                                      u3440 1734  
                                    _PIE2 000FA0                                      u2617 2110  
                                    u4401 093E                                      u4330 2FA6  
                                    u4340 2FB8                                      u4332 2FA8  
                                    u2637 2154                                      u4342 2FBA  
                                    u3615 14B0                                      u4255 307A  
                                    u2760 1A1C                                      u4256 307C  
                                    u3448 1736                                      u2770 1A4A  
                                    u4290 31AA                                      u4275 2CEE  
                                    u3635 1500                                      u2790 1A9A  
                                    u2767 1A12                                      u4296 31AC  
                                    u2777 1A40                                      u2797 1A90  
                   ??_USBCtrlTrfTxService 0023                                      u4887 3310  
                                    _UCFG 000F62                                      u4897 3322  
                                    _UEP0 000F6A                                      _UEP1 000F6B  
                                    _UEIE 000F66                                      _UEIR 000F67  
                                    _UCON 000F60                           _CDCDataInHandle 0088  
  USBStdFeatureReqHandler@current_ep_data 003A                                      _pDst 008C  
                                    _main 32E4                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 0078                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                           __CFG_ICPRT$ON 000000                     ?_USBClearUSBInterrupt 0001  
              __end_of_USBCheckStdRequest 1FBA                    ??_USBCtrlTrfOutHandler 0025  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000010  
                         __end_of_BusyADC 3372                 ??_USBStdFeatureReqHandler 0037  
                  __end_of_BlinkUSBStatus 2FCA                           __end_of_ReadADC 3364  
                             _Delay10TCYx 330C                  ??_USBStdGetStatusHandler 0023  
                          ?_USBDeviceInit 0001                            ?_tlc5947_latch 0001  
                                   ?_main 0001                             _USB_In_Buffer 0200  
                         __end_of___awdiv 2A1C                                     _EEADR 000FA9  
                   __size_of_Delay100TCYx 0012         __size_of_USBCtrlEPServiceComplete 00FC  
                         ___awdiv@divisor 0025                    __end_of_USBDeviceTasks 120E  
                                   _T2CON 000FBA                                     _T3CON 000FB1  
               ?_USBCtrlEPServiceComplete 0001                           __end_of___lwdiv 2E7E  
                                   i1l686 0064                                     i2l682 2A70  
                                   _UADDR 000F63                           ___awdiv@counter 0027  
                       i2Delay10TCYx@unit 0012                            __pidataBIGRAMl 120E  
                                   _TMR3H 000FB3                                     _TMR3L 000FB2  
                                   _TRISC 000F94                                     _USTAT 000F61  
                  __end_of_tlc5947_update 3114                             __CFG_WRT0$OFF 000000  
      __size_of_USBCtrlEPAllowStatusStage 00C8                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000           __end_of_USBCtrlEPAllowDataStage 28F0  
                                   _sd000 08A8                                     _sd001 084E  
                                   _sd002 0874                                     _sd003 089E  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            Read_b_eep@badd 0023  
                          __CFG_EBTRB$OFF 000000                    Write_b_eep@GIE_BIT_VAL 0026  
                __end_ofi2_tlc5947_update 3174                                _ConvertADC 337A  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 2C9E                                     status 000FD8  
                          __CFG_T3CMX$RB5 000000                           putUSBUSART@data 0023  
                    __end_of_gamma_lookup 32CE              __size_of_USBStdSetCfgHandler 00E2  
                         __initialization 2578                           ?_BlinkUSBStatus 0001  
                            _Delay100TCYx 331E                              __end_of_main 32F8  
                   _control_signal_bitmap 009A                          __end_of_ReadSPI1 32E4  
                              _Read_b_eep 32F8                            _pattern_number 009E  
                           ?_readDeviceID 0001                          __end_of_Busy_eep 337A  
                         ??_comm_send_dat 002F                   __size_ofi2_Delay100TCYx 0012  
               __size_of_USBCtrlEPService 00DC               __size_of_LowPriorityISRCode 0092  
                        __end_of_OpenSPI1 2F2C                                    ??_main 003E  
               __size_of_InitializeSystem 013E                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                         ??_SwitchIsPressed 0023  
                             ?_USBSuspend 0001                              _CDCBufferOut 0140  
                         ?_tlc5947_update 0001                            __CFG_SDOMX$RC7 000000  
                         __CFG_CCP2MX$RC1 000000                              _cdc_mem_type 0099  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 0044  
                       _getsUSBUSART$1647 002E                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _EEDATA 000FA8  
                                  _EECON2 000FA7                          ___awdiv@dividend 0023  
                         getsUSBUSART@len 002C                                    _U1IE_R 00D5  
                                  _IOCB_R 00BB                     __size_of_CDCTxService 0156  
                                  _U1IR_R 00D7                                    i2l1162 3286  
                          __CFG_WDTEN$OFF 000000                                    i2l5432 3332  
                                  _PIE2_R 00BF                                    i2l5428 3344  
                                  _PIE3_R 00C1                                    i2l5582 3164  
                                  i2l5578 314A                                    i2l5682 2A6C  
                                  _TABLAT 000FF5                                    _PIR2_R 00C3  
                                  _PIR3_R 00C5                                    _OSCCON 000FD3  
                           CDCTxService@i 002D                                 ??_BusyADC 0023  
                               ??_ReadADC 0025                         ??i2_tlc5947_latch 0013  
                  ??_USBClearUSBInterrupt 0023                         _shortPacketStatus 0055  
                          __CFG_XINST$OFF 000000                          OpenSPI1@bus_mode 0023  
                         USBDeviceTasks@i 00E0               USBStdFeatureReqHandler@pUEP 0038  
                USBTransferOnePacket@data 0024                USBCtrlTrfInHandler@lastDTS 0024  
                         ??_USBDeviceInit 002B                           ??_tlc5947_latch 0024  
                            ?_putUSBUSART 0023                            ??_readDeviceID 0023  
                               ??___awdiv 0027                            __CFG_STVREN$ON 000000  
                   __end_ofi2_Delay10TCYx 3342                      __end_of_getsUSBUSART 26F0  
                               ??___lwdiv 0027                         _USBEnableEndpoint 2FCA  
         __size_of_USBStdGetStatusHandler 00B6                                    _memset 3174  
                                  clear_0 257E                                    clear_1 258A  
                                  clear_2 2596                                    clear_3 25A2  
                        ___awdiv@quotient 0029                                _ProcessCDC 08AE  
                              ProcessIO@x 00F0                        ?_USBEnableEndpoint 002B  
           __size_of_USBTransferOnePacket 00C0                              __pdataCOMRAM 005D  
                      __size_of_ProcessIO 00EC                              _CDCTxService 1714  
                            _txmiss_count 0090                              __mediumconst 0000  
                         tlc5947_update@x 0025                            _USBRegisterFix 1BEE  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 002C  
                 ?_tlc5947_count_channels 0001                               _CtrlTrfData 000438  
                             ?_ConvertADC 0001                      _controlTransferState 0054  
                    __CFG_LS48MHZ$SYS48X8 000000                __end_of_tlc5947_setChannel 15A4  
                              __accesstop 0060                   __end_of__initialization 262A  
                      __size_of_WriteSPI1 0022                           __CFG_PBADEN$OFF 000000  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0058  
                     __size_of_USBSuspend 0034              __size_of_HighPriorityISRCode 2AA2  
            __end_of_tlc5947_pwm_readback 2854                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 300A                          __CFG_nPWRTEN$OFF 000000  
                           __end_of_sd000 08AC                             __end_of_sd001 0874  
                           __end_of_sd002 088C                             __end_of_sd003 08A8  
                            __pidataBANK0 3222                              __pidataBANK1 2DC4  
        __size_of_USBCtrlEPAllowDataStage 009C                               ?_Read_b_eep 0023  
           __size_of_USBConfigureEndpoint 0096               __end_of_USBCtrlTrfInHandler 232C  
                         __CFG_PCLKEN$OFF 000000                   ProcessCDC@boot_request0 00EB  
                 ProcessCDC@boot_request1 00EC                    __end_of_USBRegisterFix 1CEE  
                          __CFG_nLPBOR$ON 000000                          ??_comm_send_rply 002F  
                       _CDCTxService$1695 002B                                _cdc_notice 0060  
          __end_of_tlc5947_count_channels 2C32                                _cdc_rx_len 0051  
                              _cdc_tx_len 0053              __end_of_USBDisableInterrupts 3144  
                            ?i2_WriteSPI1 0001                  ??_USBCtrlTrfSetupHandler 003D  
                          _USB_Out_Buffer 0240                    _USBStdGetStatusHandler 26F0  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                          WriteSPI1@TempVar 0023  
                               ?_ReadSPI1 0001                     __size_of_gamma_lookup 001E  
                               ?_Busy_eep 0001                                 ?_OpenSPI1 0023  
             __size_of_USBWakeFromSuspend 003C                               _pBDTEntryIn 003E  
                       __end_of_ProcessIO 1ED6          __end_of_USBCtrlEPServiceComplete 1DEA  
             __size_of_USBCheckCDCRequest 00C4                         __CFG_PLLSEL$PLL3X 000000  
                    USBCtrlTrfRxService@i 0023                              ?_Delay10TCYx 0001  
                          i2_Delay100TCYx 3342                                   ?_memset 0023  
                              _device_dsc 088C                       __size_of_ConvertADC 0004  
                             ?_ProcessCDC 0001                          _USBCtrlEPService 217A  
                           ??_Write_b_eep 0026                                _ep_data_in 007C  
                       __end_of_WriteSPI1 326E                          _InitializeSystem 186A  
                                 _U1EP0_R 005D                                   _U1EP1_R 00D3  
                                 _U1EIE_R 00CF               __end_of_USBCtrlTrfRxService 1BEE  
                                 _U1EIR_R 00D1                                   _U1CON_R 00CD  
                      _USBCheckStdRequest 1ED6                         _configDescriptor1 080B  
                         ?_USBRegisterFix 0001                       i2WriteSPI1@data_out 0013  
                  _tlc_pwm_readback_value 004A               __end_of_USBCtrlTrfTxService 217A  
                     _USBStdSetCfgHandler 1FBA                            comm_send_dat@i 002F  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                            _gamma_lookup 32B0                                   _TBLPTRU 000FF8  
                                 _OSCTUNE 000F9B                                   _SSP1BUF 000FC9  
                                 _SSPCON1 000FC6                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 0124                                   _UIEbits 000F64  
                                 _SSPSTAT 000FC7                      __end_of_readDeviceID 2D02  
                                 _UIRbits 000F65                         ?i2_tlc5947_update 0001  
                     __size_of_Read_b_eep 0014                                ??_ReadSPI1 0023  
                           _cdc_trf_state 0052                                ??_Busy_eep 0023  
                      ??i2_tlc5947_update 0014                                   _BusyADC 3364  
                        ??_BlinkUSBStatus 0023                                   _ReadADC 3354  
                              ??_OpenSPI1 0025                                   _pCDCDst 0082  
                                 _pCDCSrc 0085                     __size_of_getsUSBUSART 00BC  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 2C32                                   __Lparam 0000  
                         _SwitchIsPressed 31A2                __size_of_USBEnableEndpoint 0040  
                  __end_ofi2_Delay100TCYx 3354                         _green_led_counter 009C  
                    ??_USBCheckStdRequest 003D             __size_of_USBCtrlTrfOutHandler 0062  
                                 ___awdiv 2986                          ??_USBDeviceTasks 003E  
                                 ___lwdiv 2E22                         ??_USBStallHandler 0023  
                            __psmallconst 0800                      __size_of_putUSBUSART 0020  
                                 __pcinit 2578                        getsUSBUSART@buffer 002A  
                        ??_tlc5947_update 0025                           __size_of_memset 002E  
                         Delay10TCYx@unit 0023                 __end_of_configDescriptor1 084E  
                                 __ramtop 0800                                 _U1CNFG1_R 00CB  
                                 __ptext0 32E4                                   __ptext1 1DEA  
                                 __ptext2 31A2                                   __ptext3 08AE  
                                 __ptext4 2634                                   __ptext5 2F2C  
                                 __ptext6 2AAA                                   __ptext7 3290  
                                 __ptext8 1714                                   __ptext9 3046  
                                 _inPipes 0056               _USBDeferOUTDataStagePackets 004D  
                            ??_USBSuspend 0037                                   _old_sw2 009D  
                         i2_tlc5947_latch 31F8                       __end_of_Write_b_eep 3080  
                          ProcessCDC@csum 00E5                        __end_of_USB_CD_Ptr 080B  
                    _tlc5947_pwm_readback 27A6           __size_of_USBCtrlTrfSetupHandler 0088  
                          __pintcode_body 2A1C                      end_of_initialization 262A  
                            _getsUSBUSART 2634                        __end_of_USB_SD_Ptr 0809  
                           __pdataBIGRAMl 0580                       _pBDTEntryEP0OutNext 0048  
                                 memset@c 0025                                   memset@n 0027  
                                 memset@p 0029                             __Lmediumconst 0000  
                                 int_func 2A1C                         OpenSPI1@smp_phase 0024  
                     __size_of_ProcessCDC 04A8           _dummy_encapsulated_cmd_response 00A3  
                ?_USBStdFeatureReqHandler 0001                     ??_USBStdSetCfgHandler 0037  
                               _OSCCON2_R 00BD                                ?_CDCInitEP 0001  
                        comm_send_dat@len 0030                        __end_of_USBSuspend 30B4  
                 _USBCtrlEPAllowDataStage 2854                      _USBDisableInterrupts 3114  
                              _tlc_memory 0180                                   postdec1 000FE5  
                                 postdec2 000FDD                                _tlc_nbytes 005F  
                         ?i2_Delay100TCYx 0001                                   postinc0 000FEE  
                                 postinc2 000FDE                __end_of_LowPriorityISRCode 00AA  
                       OpenSPI1@sync_mode 0025                  _USBCtrlEPServiceComplete 1CEE  
              _USBStatusStageEnabledFlag1 004F                _USBStatusStageEnabledFlag2 0050  
                      USBEnableEndpoint@p 002C                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                     __end_of_comm_send_dat 2B34  
                               _PORTCbits 000F82                          comm_send_rply@cc 002F  
          tlc5947_count_channels@old_data 002B                       _HighPriorityISRCode 0008  
                               _TRISAbits 000F92                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                        _BothEP0OutUOWNsSet 0094  
                   ?_tlc5947_pwm_readback 0001                 USBConfigureEndpoint@EPNum 0028  
                            ??_ConvertADC 0023                ?_USBCtrlEPAllowStatusStage 0001  
                    __size_ofi2_WriteSPI1 0022       USER_USB_CALLBACK_EVENT_HANDLER@size 0033  
                               _USTATcopy 00B4                   __end_of_SwitchIsPressed 31CE  
            __end_of_USBTransferOnePacket 2578                      ?_HighPriorityISRCode 0001  
                       putUSBUSART@length 0025             __size_of_USBClearUSBInterrupt 0030  
                   ?_USBDisableInterrupts 0001                          Delay100TCYx@unit 0023  
                  _USBCtrlTrfSetupHandler 2B34                        _tlc5947_setChannel 140E  
                            ??_Read_b_eep 0025                     __end_of_USBDeviceInit 1714  
                   __end_of_tlc5947_latch 31F8                         _readDeviceID$2794 0027  
                    __size_of_Delay10TCYx 0012                             __pidataCOMRAM 337E  
                 __end_ofi2_tlc5947_latch 3222                        __end_of_ConvertADC 337E  
                             _Write_b_eep 3046                 tlc5947_count_channels@pos 002D  
                          __end_of_memset 31A2                       ?_tlc5947_setChannel 0026  
                       _USBBusIsSuspended 0096                     __size_of_readDeviceID 0064  
                     start_initialization 2578                   ?_USBStdGetStatusHandler 0001  
           USBCtrlTrfRxService@byteToRead 0024                    tlc5947_setChannel@mpos 002E  
                             _cdc_data_rx 000540                               _cdc_data_tx 000500  
            __end_of_USBConfigureEndpoint 2986           __end_of_USBStdFeatureReqHandler 0FEC  
                  __size_ofi2_Delay10TCYx 0012         __end_of_USBCtrlEPAllowStatusStage 23F4  
                             _CDCBufferIn 0100                  __end_of_USBCtrlEPService 2256  
                      __end_of_Read_b_eep 330C                      ??_tlc5947_setChannel 0027  
                __end_of_InitializeSystem 19A8                         __size_of_ReadSPI1 0016  
               ??_USBCtrlEPAllowDataStage 0024                         __size_of_Busy_eep 0008  
                   ??_HighPriorityISRCode 0015                               ??_CDCInitEP 002F  
                          USBDeviceInit@i 002B                    _pBDTEntryEP0OutCurrent 0046  
                       __size_of_OpenSPI1 0056                   USBTransferOnePacket@dir 0023  
                 USBTransferOnePacket@len 0026                       _USBStdGetDscHandler 19A8  
                               _ProcessIO 1DEA                          ??_USBRegisterFix 0023  
                             __pdataBANK0 00B5                               __pdataBANK1 0180  
                            _readDeviceID 2C9E                                  ??_memset 0029  
                            ??_ProcessCDC 00E1                    _USBActiveConfiguration 005C  
          __end_of_USBStdGetStatusHandler 27A6                               __pbssCOMRAM 003E  
                  ??_tlc5947_pwm_readback 002F                             __pcstackBANK0 00DE  
            __size_of_USBCtrlTrfInHandler 00D6                                 _WriteSPI1 324C  
                    ?_USBStdGetDscHandler 0001                __end_of_USBWakeFromSuspend 3046  
                        ?_SwitchIsPressed 0001                           _USBStallHandler 2E7E  
                            _pBDTEntryOut 0072                                  ?_BusyADC 0001  
                                ?_ReadADC 0023                __end_of_USBCheckCDCRequest 24B8  
                      __end_of_ProcessCDC 0D56                                 __pnvBANK0 00F1  
                       WriteSPI1@data_out 0024                    ??_USBDisableInterrupts 0023  
                      i2WriteSPI1@TempVar 0012                          ___lwdiv@dividend 0023  
                           ?_Delay100TCYx 0001                                 __pintcode 0008  
                               _pic18_rev 009F                                  ?___awdiv 0023  
                              ?_ProcessIO 0001                 __size_ofi2_tlc5947_update 0030  
                                ?___lwdiv 0023                             i2_Delay10TCYx 3330  
                             __pintcodelo 0018                               _gamma_table 0580  
                        ?i2_tlc5947_latch 0001                                 _led_count 008A  
                             _pic18_devid 00F1                      _USBTransferOnePacket 24B8  
                             __smallconst 0800                tlc5947_count_channels@data 002C  
                                _ACTCON_R 00B5                                ?_WriteSPI1 0001  
            __end_of_USBCtrlTrfOutHandler 2D64                     ??_USBStdGetDscHandler 0023  
                             _ep_data_out 007F                                  _ANSELA_R 00B7  
                                _ANSELC_R 00B9                          ___lwdiv@quotient 0027  
                                _DDRAbits 000F92                                  _DDRBbits 000F93  
                                _U1ADDR_R 00C9              __size_of_USBCtrlTrfRxService 0122  
           USBConfigureEndpoint@direction 0023                                  _T3GCON_R 00C7  
            __size_of_USBCtrlTrfTxService 00DE                             ProcessCDC@cmd 00EA  
                           ProcessCDC@len 00EF                   __size_of_comm_send_rply 0052  
                                _U1STAT_R 00D9                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                ??_USBCtrlEPServiceComplete 0024  
                        ??i2_Delay100TCYx 0012                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                               _tmr3h_cal 00A1                                 _tmr3l_cal 00A2  
                          ??_Delay100TCYx 0023                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u490_47 3334  
                                i2u491_47 3346                 USBCtrlEPService@setup_cnt 003D  
                           gamma_lookup@c 0025                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0026                          __CFG_WDTPS$32768 000000  
              _USBDeferINDataStagePackets 004C                                  _SSP1CON1 000FC6  
             __size_of_USBCheckStdRequest 00E4                            ?i2_Delay10TCYx 0001  
                                _SSP1STAT 000FC7                                  _UCONbits 000F60  
                    _USBConfigureEndpoint 28F0                  ??_tlc5947_count_channels 002B  
                           _tlc_nchannels 00DD          __size_of_USBStdFeatureReqHandler 0296  
                              _ADCON0bits 000FC2                     ?_USBTransferOnePacket 0023  
                               _pwr_delay 008E                           Write_b_eep@badd 0023  
                         Write_b_eep@bdat 0025                             ?_CDCTxService 0001  
                            _RemoteWakeup 0095                         __CFG_CFGPLLEN$OFF 000000  
                      _LowPriorityISRCode 0018                   __end_of_USBStallHandler 2ED6  
                               copy_data0 25BC                                 copy_data1 25E0  
                               copy_data2 2600               ??_USBCtrlEPAllowStatusStage 0023  
             __end_of_USBStdSetCfgHandler 209C                                  _ReadSPI1 32CE  
                   tlc5947_setChannel@col 002B                     tlc5947_setChannel@val 0026  
                   tlc5947_setChannel@pos 002D                       ?_LowPriorityISRCode 0001  
                                _Busy_eep 3372                        __end_of_device_dsc 089E  
                              _EECON1bits 000FA6                                  _OpenSPI1 2ED6  
                        __size_of_BusyADC 000E                   ?_USBCtrlTrfSetupHandler 0001  
                        __size_of_ReadADC 0010                   USBStdGetStatusHandler@p 0024  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0027                        __CFG_BOREN$SBORDIS 000000  
                                _SetupPkt 000430                               ??_ProcessIO 003E  
                   ?_USBConfigureEndpoint 0023                          __size_of___awdiv 0096  
                 __size_of_BlinkUSBStatus 004C                          __size_of___lwdiv 005C  
                    ??_LowPriorityISRCode 0001                              ?_Write_b_eep 0023  
                     __end_of_putUSBUSART 32B0                               _line_coding 00AB  
                          ??_CDCTxService 002A              __end_of_USBClearUSBInterrupt 30E4  
                           ??i2_WriteSPI1 0012                   __size_of_USBDeviceTasks 0222  
                             ??_WriteSPI1 0023                           ___lwdiv@divisor 0025  
                         ___lwdiv@counter 0029                                  __ptext10 0FEC  
                                __ptext11 300A                                  __ptext20 26F0  
                                __ptext12 3080                                  __ptext21 19A8  
                                __ptext13 2E7E                                  __ptext30 1ACC  
                                __ptext22 0D56                                  __ptext14 217A  
                                __ptext31 232C                                  __ptext23 2D64  
                                __ptext15 2B34                                  __ptext40 2F7E  
                                __ptext32 2256                                  __ptext24 23F4  
                                __ptext16 1CEE                                  __ptext41 186A  
                                __ptext33 209C                                  __ptext25 2C32  
                                __ptext17 2854                                  __ptext50 30E4  
                                __ptext42 27A6                                  __ptext34 30B4  
                                __ptext26 24B8                                  __ptext18 1ED6  
                                __ptext51 324C                                  __ptext43 140E  
                                __ptext35 32F8                                  __ptext27 2FCA  
                                __ptext19 1FBA                                  __ptext52 2986  
                                __ptext44 32B0                                  __ptext36 3354  
                                __ptext28 28F0                                  __ptext53 32CE  
                                __ptext45 31CE                                  __ptext37 337A  
                                __ptext29 2D02                                  __ptext62 3144  
                                __ptext54 2C9E                                  __ptext46 330C  
                                __ptext38 3372                                  __ptext63 326E  
                                __ptext55 1BEE                                  __ptext47 331E  
                                __ptext39 3364                                  __ptext64 31F8  
                                __ptext56 15A4                                  __ptext48 2E22  
                                __ptext65 3330                                  __ptext57 3174  
                                __ptext49 2BBC                                  __ptext66 3342  
                                __ptext58 3114                                  __ptext59 2ED6  
                            _SSP1CON1bits 000FC6                   __size_of_tlc5947_update 0030  
          __end_of_USBCtrlTrfSetupHandler 2BBC                             __size_of_main 0014  
                       ?_USBCtrlEPService 0001                    __size_of_comm_send_dat 008A  
                       ?_InitializeSystem 0001                              ProcessCDC@_c 00E6  
                            ProcessCDC@_x 00EE                              ProcessCDC@_y 00E8  
                      ??_USBCtrlEPService 00DE                         _tcl5947_testbyte0 00DB  
                       _tcl5947_testbyte1 00DC                       _USBCtrlTrfInHandler 2256  
                      ??_InitializeSystem 0036                           ??i2_Delay10TCYx 0012  
                           ??_Delay10TCYx 0023                                  _outPipes 006A  
                    _USBCtrlTrfOutHandler 2D02                          i2_tlc5947_update 3144  
               _USBCtrlEPAllowStatusStage 232C                              _SSP1STATbits 000FC7  
                  ??_USBTransferOnePacket 0027           __size_of_tlc5947_count_channels 0076  
                      i2Delay100TCYx@unit 0012                      tlc5947_setChannel@ch 002A  
               _USBDeferStatusStagePacket 004E                  CDCTxService@byte_to_send 002E  
                              _INTCONbits 000FF2                     tlc5947_pwm_readback@i 0035  
                    ?_USBCtrlTrfInHandler 0001                             ?_gamma_lookup 0023  
           USBCtrlTrfTxService@byteToSend 0023                      __end_of_Delay100TCYx 3330  
                                memset@p1 0023                        readDeviceID@devID1 0025  
                      readDeviceID@devID2 0026                          ?_USBStallHandler 0001  
                       i2tlc5947_update@x 0014                  USBStdFeatureReqHandler@p 003B  
                                intlevel1 0000                                  intlevel2 0000  
             __end_of_HighPriorityISRCode 2AAA                    __size_of_USBDeviceInit 0170  
                          _comm_send_rply 2F2C                    __size_of_tlc5947_latch 002A  
                     __end_ofi2_WriteSPI1 3290   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 2DC4  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0060         ??_USER_USB_CALLBACK_EVENT_HANDLER 0035  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 002F           _USER_USB_CALLBACK_EVENT_HANDLER 2D64  
             __size_of_tlc5947_setChannel 0196                    ??_USBConfigureEndpoint 0024  
                   ?_USBCtrlTrfOutHandler 0001                               _putUSBUSART 3290  
                    __CFG_CPUDIV$NOCLKDIV 000000                       _USBCtrlTrfRxService 1ACC  
                      _USBWakeFromSuspend 300A                   _USBStdFeatureReqHandler 0D56  
                             _tlc_request 00A0                        _USBCheckCDCRequest 23F4  
                     _USBCtrlTrfTxService 209C                       __end_of_Delay10TCYx 331E  
                           _comm_send_dat 2AAA                       ?_USBWakeFromSuspend 0001  
                          ??_gamma_lookup 0025                     ??_USBCtrlTrfInHandler 0024  
                   _USBAlternateInterface 00B2                              _test_pattern 01C8  
                      ProcessCDC@checksum 00E7                       ?_USBCheckCDCRequest 0001  
                     USBEnableEndpoint@ep 002E                           _endpoint_number 009B  
           __size_of_tlc5947_pwm_readback 00AE                      ?_USBCtrlTrfRxService 0001  
                  __end_of_comm_send_rply 2F7E                             ?_getsUSBUSART 002A  
                      __CFG_FOSC$INTOSCIO 000000                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001                    _tlc5947_count_channels 2BBC  
            _USBStatusStageTimeoutCounter 0098                      ??_USBWakeFromSuspend 0037  
              USBTransferOnePacket@handle 0028                      __end_of_CDCTxService 186A  
                    ??_USBCheckCDCRequest 0023                                _USB_CD_Ptr 0809  
                      ProcessCDC@numBytes 00ED                      _USBClearUSBInterrupt 30B4  
