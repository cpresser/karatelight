

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 05 20:37:05 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1
     7                           	psect	idataBIGRAMl,global,class=CODE,delta=1
     8                           	psect	idataBANK0,global,class=CODE,delta=1
     9                           	psect	idataBANK1,global,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBIGRAMl,global,class=BIGRAM,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    92                           	dabs	1,0x400,48,_BDT
    93                           	dabs	1,0x438,8,_CtrlTrfData
    94                           	dabs	1,0x430,8,_SetupPkt
    95  0000                     
    96                           	psect	eeprom_data
    97  F00000  34 00 00 00 00 00 00 00 	db	52,0,0,0,0,0,0,0	;# 
    98  0000                     
    99                           	psect	idataCOMRAM
   100  003456                     __pidataCOMRAM:
   101                           	opt stack 0
   102                           
   103                           ;initializer for _tlc_nbytes
   104  003456  48                 	db	72
   105                           
   106                           	psect	idataBIGRAMl
   107  001250                     __pidataBIGRAMl:
   108                           	opt stack 0
   109                           
   110                           ;initializer for _gamma_table
   111  001250  0000               	dw	0
   112  001252  0000               	dw	0
   113  001254  0000               	dw	0
   114  001256  0000               	dw	0
   115  001258  0000               	dw	0
   116  00125A  0000               	dw	0
   117  00125C  0000               	dw	0
   118  00125E  0001               	dw	1
   119  001260  0001               	dw	1
   120  001262  0001               	dw	1
   121  001264  0001               	dw	1
   122  001266  0002               	dw	2
   123  001268  0002               	dw	2
   124  00126A  0002               	dw	2
   125  00126C  0003               	dw	3
   126  00126E  0003               	dw	3
   127  001270  0004               	dw	4
   128  001272  0005               	dw	5
   129  001274  0005               	dw	5
   130  001276  0006               	dw	6
   131  001278  0007               	dw	7
   132  00127A  0008               	dw	8
   133  00127C  0009               	dw	9
   134  00127E  000A               	dw	10
   135  001280  000B               	dw	11
   136  001282  000C               	dw	12
   137  001284  000E               	dw	14
   138  001286  000F               	dw	15
   139  001288  0010               	dw	16
   140  00128A  0012               	dw	18
   141  00128C  0013               	dw	19
   142  00128E  0015               	dw	21
   143  001290  0017               	dw	23
   144  001292  0019               	dw	25
   145  001294  001B               	dw	27
   146  001296  001D               	dw	29
   147  001298  001F               	dw	31
   148  00129A  0021               	dw	33
   149  00129C  0023               	dw	35
   150  00129E  0025               	dw	37
   151  0012A0  0028               	dw	40
   152  0012A2  002A               	dw	42
   153  0012A4  002D               	dw	45
   154  0012A6  0030               	dw	48
   155  0012A8  0033               	dw	51
   156  0012AA  0036               	dw	54
   157  0012AC  0039               	dw	57
   158  0012AE  003C               	dw	60
   159  0012B0  003F               	dw	63
   160  0012B2  0042               	dw	66
   161  0012B4  0046               	dw	70
   162  0012B6  0049               	dw	73
   163  0012B8  004D               	dw	77
   164  0012BA  0051               	dw	81
   165  0012BC  0055               	dw	85
   166  0012BE  0058               	dw	88
   167  0012C0  005D               	dw	93
   168  0012C2  0061               	dw	97
   169  0012C4  0065               	dw	101
   170  0012C6  0069               	dw	105
   171  0012C8  006E               	dw	110
   172  0012CA  0073               	dw	115
   173  0012CC  0077               	dw	119
   174  0012CE  007C               	dw	124
   175  0012D0  0081               	dw	129
   176  0012D2  0086               	dw	134
   177  0012D4  008C               	dw	140
   178  0012D6  0091               	dw	145
   179  0012D8  0096               	dw	150
   180  0012DA  009C               	dw	156
   181  0012DC  00A2               	dw	162
   182  0012DE  00A8               	dw	168
   183  0012E0  00AD               	dw	173
   184  0012E2  00B4               	dw	180
   185  0012E4  00BA               	dw	186
   186  0012E6  00C0               	dw	192
   187  0012E8  00C7               	dw	199
   188  0012EA  00CD               	dw	205
   189  0012EC  00D4               	dw	212
   190  0012EE  00DB               	dw	219
   191  0012F0  00E2               	dw	226
   192  0012F2  00E9               	dw	233
   193  0012F4  00F0               	dw	240
   194  0012F6  00F8               	dw	248
   195  0012F8  00FF               	dw	255
   196  0012FA  0107               	dw	263
   197  0012FC  010E               	dw	270
   198  0012FE  0116               	dw	278
   199  001300  011E               	dw	286
   200  001302  0127               	dw	295
   201  001304  012F               	dw	303
   202  001306  0138               	dw	312
   203  001308  0140               	dw	320
   204  00130A  0149               	dw	329
   205  00130C  0152               	dw	338
   206  00130E  015B               	dw	347
   207  001310  0164               	dw	356
   208  001312  016D               	dw	365
   209  001314  0177               	dw	375
   210  001316  0181               	dw	385
   211  001318  018A               	dw	394
   212  00131A  0194               	dw	404
   213  00131C  019E               	dw	414
   214  00131E  01A9               	dw	425
   215  001320  01B3               	dw	435
   216  001322  01BE               	dw	446
   217  001324  01C8               	dw	456
   218  001326  01D3               	dw	467
   219  001328  01DE               	dw	478
   220  00132A  01E9               	dw	489
   221  00132C  01F4               	dw	500
   222  00132E  0200               	dw	512
   223  001330  020C               	dw	524
   224  001332  0217               	dw	535
   225  001334  0223               	dw	547
   226  001336  022F               	dw	559
   227  001338  023C               	dw	572
   228  00133A  0248               	dw	584
   229  00133C  0254               	dw	596
   230  00133E  0261               	dw	609
   231  001340  026E               	dw	622
   232  001342  027B               	dw	635
   233  001344  0288               	dw	648
   234  001346  0296               	dw	662
   235  001348  02A3               	dw	675
   236  00134A  02B1               	dw	689
   237  00134C  02BF               	dw	703
   238  00134E  02CD               	dw	717
   239  001350  02DB               	dw	731
   240  001352  02E9               	dw	745
   241  001354  02F8               	dw	760
   242  001356  0307               	dw	775
   243  001358  0315               	dw	789
   244  00135A  0325               	dw	805
   245  00135C  0334               	dw	820
   246  00135E  0343               	dw	835
   247  001360  0353               	dw	851
   248  001362  0362               	dw	866
   249  001364  0372               	dw	882
   250  001366  0382               	dw	898
   251  001368  0393               	dw	915
   252  00136A  03A3               	dw	931
   253  00136C  03B4               	dw	948
   254  00136E  03C4               	dw	964
   255  001370  03D5               	dw	981
   256  001372  03E6               	dw	998
   257  001374  03F8               	dw	1016
   258  001376  0409               	dw	1033
   259  001378  041B               	dw	1051
   260  00137A  042D               	dw	1069
   261  00137C  043F               	dw	1087
   262  00137E  0451               	dw	1105
   263  001380  0463               	dw	1123
   264  001382  0476               	dw	1142
   265  001384  0489               	dw	1161
   266  001386  049C               	dw	1180
   267  001388  04AF               	dw	1199
   268  00138A  04C2               	dw	1218
   269  00138C  04D6               	dw	1238
   270  00138E  04E9               	dw	1257
   271  001390  04FD               	dw	1277
   272  001392  0511               	dw	1297
   273  001394  0525               	dw	1317
   274  001396  053A               	dw	1338
   275  001398  054E               	dw	1358
   276  00139A  0563               	dw	1379
   277  00139C  0578               	dw	1400
   278  00139E  058D               	dw	1421
   279  0013A0  05A3               	dw	1443
   280  0013A2  05B8               	dw	1464
   281  0013A4  05CE               	dw	1486
   282  0013A6  05E4               	dw	1508
   283  0013A8  05FA               	dw	1530
   284  0013AA  0610               	dw	1552
   285  0013AC  0627               	dw	1575
   286  0013AE  063E               	dw	1598
   287  0013B0  0655               	dw	1621
   288  0013B2  066C               	dw	1644
   289  0013B4  0683               	dw	1667
   290  0013B6  069B               	dw	1691
   291  0013B8  06B2               	dw	1714
   292  0013BA  06CA               	dw	1738
   293  0013BC  06E2               	dw	1762
   294  0013BE  06FB               	dw	1787
   295  0013C0  0713               	dw	1811
   296  0013C2  072C               	dw	1836
   297  0013C4  0745               	dw	1861
   298  0013C6  075E               	dw	1886
   299  0013C8  0777               	dw	1911
   300  0013CA  0791               	dw	1937
   301  0013CC  07AA               	dw	1962
   302  0013CE  07C4               	dw	1988
   303  0013D0  07DE               	dw	2014
   304  0013D2  07F9               	dw	2041
   305  0013D4  0813               	dw	2067
   306  0013D6  082E               	dw	2094
   307  0013D8  0849               	dw	2121
   308  0013DA  0864               	dw	2148
   309  0013DC  0880               	dw	2176
   310  0013DE  089B               	dw	2203
   311  0013E0  08B7               	dw	2231
   312  0013E2  08D3               	dw	2259
   313  0013E4  08EF               	dw	2287
   314  0013E6  090B               	dw	2315
   315  0013E8  0928               	dw	2344
   316  0013EA  0945               	dw	2373
   317  0013EC  0962               	dw	2402
   318  0013EE  097F               	dw	2431
   319  0013F0  099D               	dw	2461
   320  0013F2  09BA               	dw	2490
   321  0013F4  09D8               	dw	2520
   322  0013F6  09F6               	dw	2550
   323  0013F8  0A15               	dw	2581
   324  0013FA  0A33               	dw	2611
   325  0013FC  0A52               	dw	2642
   326  0013FE  0A71               	dw	2673
   327  001400  0A90               	dw	2704
   328  001402  0AB0               	dw	2736
   329  001404  0ACF               	dw	2767
   330  001406  0AEF               	dw	2799
   331  001408  0B0F               	dw	2831
   332  00140A  0B2F               	dw	2863
   333  00140C  0B50               	dw	2896
   334  00140E  0B71               	dw	2929
   335  001410  0B92               	dw	2962
   336  001412  0BB3               	dw	2995
   337  001414  0BD4               	dw	3028
   338  001416  0BF6               	dw	3062
   339  001418  0C18               	dw	3096
   340  00141A  0C3A               	dw	3130
   341  00141C  0C5C               	dw	3164
   342  00141E  0C7E               	dw	3198
   343  001420  0CA1               	dw	3233
   344  001422  0CC4               	dw	3268
   345  001424  0CE7               	dw	3303
   346  001426  0D0B               	dw	3339
   347  001428  0D2E               	dw	3374
   348  00142A  0D52               	dw	3410
   349  00142C  0D76               	dw	3446
   350  00142E  0D9B               	dw	3483
   351  001430  0DBF               	dw	3519
   352  001432  0DE4               	dw	3556
   353  001434  0E09               	dw	3593
   354  001436  0E2E               	dw	3630
   355  001438  0E54               	dw	3668
   356  00143A  0E79               	dw	3705
   357  00143C  0E9F               	dw	3743
   358  00143E  0EC5               	dw	3781
   359  001440  0EEC               	dw	3820
   360  001442  0F12               	dw	3858
   361  001444  0F39               	dw	3897
   362  001446  0F60               	dw	3936
   363  001448  0F88               	dw	3976
   364  00144A  0FAF               	dw	4015
   365  00144C  0FD7               	dw	4055
   366  00144E  0FFF               	dw	4095
   367                           
   368                           	psect	idataBANK0
   369  00338C                     __pidataBANK0:
   370                           	opt stack 0
   371                           
   372                           ;initializer for _test_pattern
   373  00338C  FF                 	db	255
   374  00338D  00                 	db	0
   375  00338E  00                 	db	0
   376  00338F  00                 	db	0
   377  003390  FF                 	db	255
   378  003391  00                 	db	0
   379  003392  00                 	db	0
   380  003393  00                 	db	0
   381  003394  FF                 	db	255
   382  003395  FF                 	db	255
   383  003396  00                 	db	0
   384  003397  FF                 	db	255
   385  003398  00                 	db	0
   386  003399  FF                 	db	255
   387  00339A  FF                 	db	255
   388  00339B  FF                 	db	255
   389  00339C  FF                 	db	255
   390  00339D  00                 	db	0
   391  00339E  FF                 	db	255
   392  00339F  FF                 	db	255
   393  0033A0  FF                 	db	255
   394                           
   395                           ;initializer for _tcl5947_testbyte0
   396  0033A1  23                 	db	35
   397                           
   398                           ;initializer for _tcl5947_testbyte1
   399  0033A2  42                 	db	66
   400                           
   401                           ;initializer for _tlc_nchannels
   402  0033A3  30                 	db	48
   403                           
   404                           	psect	idataBANK1
   405  00305A                     __pidataBANK1:
   406                           	opt stack 0
   407                           
   408                           ;initializer for _tlc_memory
   409  00305A  FF                 	db	255
   410  00305B  FF                 	db	255
   411  00305C  FF                 	db	255
   412  00305D  FF                 	db	255
   413  00305E  FF                 	db	255
   414  00305F  FF                 	db	255
   415  003060  FF                 	db	255
   416  003061  FF                 	db	255
   417  003062  FF                 	db	255
   418  003063  FF                 	db	255
   419  003064  FF                 	db	255
   420  003065  FF                 	db	255
   421  003066  FF                 	db	255
   422  003067  FF                 	db	255
   423  003068  FF                 	db	255
   424  003069  FF                 	db	255
   425  00306A  FF                 	db	255
   426  00306B  FF                 	db	255
   427  00306C  FF                 	db	255
   428  00306D  FF                 	db	255
   429  00306E  FF                 	db	255
   430  00306F  FF                 	db	255
   431  003070  FF                 	db	255
   432  003071  FF                 	db	255
   433  003072  FF                 	db	255
   434  003073  FF                 	db	255
   435  003074  FF                 	db	255
   436  003075  FF                 	db	255
   437  003076  FF                 	db	255
   438  003077  FF                 	db	255
   439  003078  FF                 	db	255
   440  003079  FF                 	db	255
   441  00307A  FF                 	db	255
   442  00307B  FF                 	db	255
   443  00307C  FF                 	db	255
   444  00307D  FF                 	db	255
   445  00307E  FF                 	db	255
   446  00307F  FF                 	db	255
   447  003080  FF                 	db	255
   448  003081  FF                 	db	255
   449  003082  FF                 	db	255
   450  003083  FF                 	db	255
   451  003084  FF                 	db	255
   452  003085  FF                 	db	255
   453  003086  FF                 	db	255
   454  003087  FF                 	db	255
   455  003088  FF                 	db	255
   456  003089  FF                 	db	255
   457  00308A  FF                 	db	255
   458  00308B  FF                 	db	255
   459  00308C  FF                 	db	255
   460  00308D  FF                 	db	255
   461  00308E  FF                 	db	255
   462  00308F  FF                 	db	255
   463  003090  FF                 	db	255
   464  003091  FF                 	db	255
   465  003092  FF                 	db	255
   466  003093  FF                 	db	255
   467  003094  FF                 	db	255
   468  003095  FF                 	db	255
   469  003096  FF                 	db	255
   470  003097  FF                 	db	255
   471  003098  FF                 	db	255
   472  003099  FF                 	db	255
   473  00309A  FF                 	db	255
   474  00309B  FF                 	db	255
   475  00309C  FF                 	db	255
   476  00309D  FF                 	db	255
   477  00309E  FF                 	db	255
   478  00309F  FF                 	db	255
   479  0030A0  FF                 	db	255
   480  0030A1  FF                 	db	255
   481                           
   482                           	psect	smallconst
   483  000800                     __psmallconst:
   484                           	opt stack 0
   485  000800  00                 	db	0
   486  000801                     _USB_SD_Ptr:
   487                           	opt stack 0
   488  000801  C6                 	db	low _sd000
   489  000802  08                 	db	high _sd000
   490  000803  4C                 	db	low _sd001
   491  000804  08                 	db	high _sd001
   492  000805  80                 	db	low _sd002
   493  000806  08                 	db	high _sd002
   494  000807                     __end_of_USB_SD_Ptr:
   495                           	opt stack 0
   496  000807                     _USB_CD_Ptr:
   497                           	opt stack 0
   498  000807  09                 	db	low _configDescriptor1
   499  000808  08                 	db	high _configDescriptor1
   500  000809                     __end_of_USB_CD_Ptr:
   501                           	opt stack 0
   502  000809                     _configDescriptor1:
   503                           	opt stack 0
   504  000809  09                 	db	9
   505  00080A  02                 	db	2
   506  00080B  43                 	db	67
   507  00080C  00                 	db	0
   508  00080D  02                 	db	2
   509  00080E  01                 	db	1
   510  00080F  00                 	db	0
   511  000810  C0                 	db	192
   512  000811  32                 	db	50
   513  000812  09                 	db	9
   514  000813  04                 	db	4
   515  000814  00                 	db	0
   516  000815  00                 	db	0
   517  000816  01                 	db	1
   518  000817  02                 	db	2
   519  000818  02                 	db	2
   520  000819  01                 	db	1
   521  00081A  00                 	db	0
   522  00081B  05                 	db	5
   523  00081C  24                 	db	36
   524  00081D  00                 	db	0
   525  00081E  10                 	db	16
   526  00081F  01                 	db	1
   527  000820  04                 	db	4
   528  000821  24                 	db	36
   529  000822  02                 	db	2
   530  000823  02                 	db	2
   531  000824  05                 	db	5
   532  000825  24                 	db	36
   533  000826  06                 	db	6
   534  000827  00                 	db	0
   535  000828  01                 	db	1
   536  000829  05                 	db	5
   537  00082A  24                 	db	36
   538  00082B  01                 	db	1
   539  00082C  00                 	db	0
   540  00082D  01                 	db	1
   541  00082E  07                 	db	7
   542  00082F  05                 	db	5
   543  000830  81                 	db	129
   544  000831  03                 	db	3
   545  000832  08                 	db	8
   546  000833  00                 	db	0
   547  000834  02                 	db	2
   548  000835  09                 	db	9
   549  000836  04                 	db	4
   550  000837  01                 	db	1
   551  000838  00                 	db	0
   552  000839  02                 	db	2
   553  00083A  0A                 	db	10
   554  00083B  00                 	db	0
   555  00083C  00                 	db	0
   556  00083D  00                 	db	0
   557  00083E  07                 	db	7
   558  00083F  05                 	db	5
   559  000840  02                 	db	2
   560  000841  02                 	db	2
   561  000842  40                 	db	64
   562  000843  00                 	db	0
   563  000844  00                 	db	0
   564  000845  07                 	db	7
   565  000846  05                 	db	5
   566  000847  82                 	db	130
   567  000848  02                 	db	2
   568  000849  40                 	db	64
   569  00084A  00                 	db	0
   570  00084B  00                 	db	0
   571  00084C                     __end_of_configDescriptor1:
   572                           	opt stack 0
   573  00084C                     _sd001:
   574                           	opt stack 0
   575  00084C  34                 	db	52
   576  00084D  03                 	db	3
   577  00084E  004D               	dw	77
   578  000850  0069               	dw	105
   579  000852  0063               	dw	99
   580  000854  0072               	dw	114
   581  000856  006F               	dw	111
   582  000858  0063               	dw	99
   583  00085A  0068               	dw	104
   584  00085C  0069               	dw	105
   585  00085E  0070               	dw	112
   586  000860  0020               	dw	32
   587  000862  0054               	dw	84
   588  000864  0065               	dw	101
   589  000866  0063               	dw	99
   590  000868  0068               	dw	104
   591  00086A  006E               	dw	110
   592  00086C  006F               	dw	111
   593  00086E  006C               	dw	108
   594  000870  006F               	dw	111
   595  000872  0067               	dw	103
   596  000874  0079               	dw	121
   597  000876  0020               	dw	32
   598  000878  0049               	dw	73
   599  00087A  006E               	dw	110
   600  00087C  0063               	dw	99
   601  00087E  002E               	dw	46
   602  000880                     __end_of_sd001:
   603                           	opt stack 0
   604  000880                     _sd002:
   605                           	opt stack 0
   606  000880  34                 	db	52
   607  000881  03                 	db	3
   608  000882  0043               	dw	67
   609  000884  0044               	dw	68
   610  000886  0043               	dw	67
   611  000888  0020               	dw	32
   612  00088A  0052               	dw	82
   613  00088C  0053               	dw	83
   614  00088E  002D               	dw	45
   615  000890  0032               	dw	50
   616  000892  0033               	dw	51
   617  000894  0032               	dw	50
   618  000896  0020               	dw	32
   619  000898  0045               	dw	69
   620  00089A  006D               	dw	109
   621  00089C  0075               	dw	117
   622  00089E  006C               	dw	108
   623  0008A0  0061               	dw	97
   624  0008A2  0074               	dw	116
   625  0008A4  0069               	dw	105
   626  0008A6  006F               	dw	111
   627  0008A8  006E               	dw	110
   628  0008AA  0020               	dw	32
   629  0008AC  0044               	dw	68
   630  0008AE  0065               	dw	101
   631  0008B0  006D               	dw	109
   632  0008B2  006F               	dw	111
   633  0008B4                     __end_of_sd002:
   634                           	opt stack 0
   635  0008B4                     _device_dsc:
   636                           	opt stack 0
   637  0008B4  12                 	db	18
   638  0008B5  01                 	db	1
   639  0008B6  0200               	dw	512
   640  0008B8  02                 	db	2
   641  0008B9  00                 	db	0
   642  0008BA  00                 	db	0
   643  0008BB  08                 	db	8
   644  0008BC  04D8               	dw	1240
   645  0008BE  000A               	dw	10
   646  0008C0  0100               	dw	256
   647  0008C2  01                 	db	1
   648  0008C3  02                 	db	2
   649  0008C4  00                 	db	0
   650  0008C5  01                 	db	1
   651  0008C6                     __end_of_device_dsc:
   652                           	opt stack 0
   653  0008C6                     _sd000:
   654                           	opt stack 0
   655  0008C6  04                 	db	4
   656  0008C7  03                 	db	3
   657  0008C8  0409               	dw	1033
   658  0008CA                     __end_of_sd000:
   659                           	opt stack 0
   660  0000                     _ANSELAbits	set	3931
   661  0000                     _ANSELCbits	set	3933
   662  0000                     _ACTCON	set	4021
   663  0000                     _ADCON0	set	4034
   664  0000                     _ADCON0bits	set	4034
   665  0000                     _ADCON1	set	4033
   666  0000                     _ADCON2	set	4032
   667  0000                     _ADRESH	set	4036
   668  0000                     _ADRESL	set	4035
   669  0000                     _DDRA	set	3986
   670  0000                     _DDRAbits	set	3986
   671  0000                     _DDRB	set	3987
   672  0000                     _DDRBbits	set	3987
   673  0000                     _DDRC	set	3988
   674  0000                     _DDRD	set	3989
   675  0000                     _DDRE	set	3990
   676  0000                     _EEADR	set	4009
   677  0000                     _EECON1bits	set	4006
   678  0000                     _EECON2	set	4007
   679  0000                     _EEDATA	set	4008
   680  0000                     _INTCONbits	set	4082
   681  0000                     _IOCBbits	set	3974
   682  0000                     _IPR1bits	set	3999
   683  0000                     _IPR3bits	set	4005
   684  0000                     _LATBbits	set	3978
   685  0000                     _LATC	set	3979
   686  0000                     _LATCbits	set	3979
   687  0000                     _OSCCON	set	4051
   688  0000                     _OSCCON2	set	4050
   689  0000                     _OSCCON2bits	set	4050
   690  0000                     _OSCTUNE	set	3995
   691  0000                     _PIE1bits	set	3997
   692  0000                     _PIE2bits	set	4000
   693  0000                     _PIE3bits	set	4003
   694  0000                     _PIR1bits	set	3998
   695  0000                     _PIR2bits	set	4001
   696  0000                     _PIR3bits	set	4004
   697  0000                     _PORTAbits	set	3968
   698  0000                     _PORTBbits	set	3969
   699  0000                     _PORTCbits	set	3970
   700  0000                     _PR2	set	4027
   701  0000                     _RCONbits	set	4048
   702  0000                     _SSP1BUF	set	4041
   703  0000                     _SSP1CON1	set	4038
   704  0000                     _SSP1CON1bits	set	4038
   705  0000                     _SSP1STAT	set	4039
   706  0000                     _SSP1STATbits	set	4039
   707  0000                     _T2CON	set	4026
   708  0000                     _T3CON	set	4017
   709  0000                     _T3CONbits	set	4017
   710  0000                     _T3GCON	set	4020
   711  0000                     _T3GCONbits	set	4020
   712  0000                     _TABLAT	set	4085
   713  0000                     _TBLPTRH	set	4087
   714  0000                     _TBLPTRL	set	4086
   715  0000                     _TBLPTRU	set	4088
   716  0000                     _TMR3H	set	4019
   717  0000                     _TMR3L	set	4018
   718  0000                     _TRISAbits	set	3986
   719  0000                     _TRISBbits	set	3987
   720  0000                     _TRISC	set	3988
   721  0000                     _TRISCbits	set	3988
   722  0000                     _UADDR	set	3939
   723  0000                     _UCFG	set	3938
   724  0000                     _UCON	set	3936
   725  0000                     _UCONbits	set	3936
   726  0000                     _UEIE	set	3942
   727  0000                     _UEIR	set	3943
   728  0000                     _UEP0bits	set	3946
   729  0000                     _UIE	set	3940
   730  0000                     _UIEbits	set	3940
   731  0000                     _UIR	set	3941
   732  0000                     _UIRbits	set	3941
   733  0000                     _USTAT	set	3937
   734  0000                     _UEP0	set	3946
   735  0000                     _UEP1	set	3947
   736                           
   737                           ; #config settings
   738  0008CA  00                 	db	0	; dummy byte at the end
   739  0000                     
   740                           	psect	cinit
   741  0028EC                     __pcinit:
   742                           	opt stack 0
   743  0028EC                     start_initialization:
   744                           	opt stack 0
   745  0028EC                     __initialization:
   746                           	opt stack 0
   747                           
   748                           ; Clear objects allocated to BANK2 (256 bytes)
   749  0028EC  EE02  F000         	lfsr	0,__pbssBANK2
   750  0028F0  EE11 F000          	lfsr	1,256
   751  0028F4                     clear_0:
   752  0028F4  6AEE               	clrf	postinc0,c
   753  0028F6  50E5               	movf	postdec1,w,c
   754  0028F8  50E1               	movf	fsr1l,w,c
   755  0028FA  E1FC               	bnz	clear_0
   756  0028FC  50E2               	movf	fsr1h,w,c
   757  0028FE  E1FA               	bnz	clear_0
   758                           
   759                           ; Clear objects allocated to BANK1 (128 bytes)
   760  002900  EE01  F000         	lfsr	0,__pbssBANK1
   761  002904  0E80               	movlw	128
   762  002906                     clear_1:
   763  002906  6AEE               	clrf	postinc0,c
   764  002908  06E8               	decf	wreg,f,c
   765  00290A  E1FD               	bnz	clear_1
   766                           
   767                           ; Clear objects allocated to BANK0 (84 bytes)
   768  00290C  EE00  F060         	lfsr	0,__pbssBANK0
   769  002910  0E54               	movlw	84
   770  002912                     clear_2:
   771  002912  6AEE               	clrf	postinc0,c
   772  002914  06E8               	decf	wreg,f,c
   773  002916  E1FD               	bnz	clear_2
   774                           
   775                           ; Clear objects allocated to COMRAM (33 bytes)
   776  002918  EE00  F023         	lfsr	0,__pbssCOMRAM
   777  00291C  0E21               	movlw	33
   778  00291E                     clear_3:
   779  00291E  6AEE               	clrf	postinc0,c
   780  002920  06E8               	decf	wreg,f,c
   781  002922  E1FD               	bnz	clear_3
   782                           
   783                           ; Initialize objects allocated to BIGRAMl (512 bytes)
   784                           ; load TBLPTR registers with __pidataBIGRAMl
   785  002924  0E50               	movlw	low __pidataBIGRAMl
   786  002926  6EF6               	movwf	tblptrl,c
   787  002928  0E12               	movlw	high __pidataBIGRAMl
   788  00292A  6EF7               	movwf	tblptrh,c
   789  00292C  0E00               	movlw	low (__pidataBIGRAMl shr (0+16))
   790  00292E  6EF8               	movwf	tblptru,c
   791  002930  EE04  F040         	lfsr	0,__pdataBIGRAMl
   792  002934  EE12 F000          	lfsr	1,512
   793  002938                     copy_data0:
   794  002938  0009               	tblrd		*+
   795  00293A  CFF5 FFEE          	movff	tablat,postinc0
   796  00293E  50E5               	movf	postdec1,w,c
   797  002940  50E1               	movf	fsr1l,w,c
   798  002942  E1FA               	bnz	copy_data0
   799  002944  50E2               	movf	fsr1h,w,c
   800  002946  E1F8               	bnz	copy_data0
   801                           
   802                           ; Initialize objects allocated to BANK1 (72 bytes)
   803                           ; load TBLPTR registers with __pidataBANK1
   804  002948  0E5A               	movlw	low __pidataBANK1
   805  00294A  6EF6               	movwf	tblptrl,c
   806  00294C  0E30               	movlw	high __pidataBANK1
   807  00294E  6EF7               	movwf	tblptrh,c
   808  002950  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   809  002952  6EF8               	movwf	tblptru,c
   810  002954  EE01  F080         	lfsr	0,__pdataBANK1
   811  002958  EE10 F048          	lfsr	1,72
   812  00295C                     copy_data1:
   813  00295C  0009               	tblrd		*+
   814  00295E  CFF5 FFEE          	movff	tablat,postinc0
   815  002962  50E5               	movf	postdec1,w,c
   816  002964  50E1               	movf	fsr1l,w,c
   817  002966  E1FA               	bnz	copy_data1
   818                           
   819                           ; Initialize objects allocated to BANK0 (24 bytes)
   820                           ; load TBLPTR registers with __pidataBANK0
   821  002968  0E8C               	movlw	low __pidataBANK0
   822  00296A  6EF6               	movwf	tblptrl,c
   823  00296C  0E33               	movlw	high __pidataBANK0
   824  00296E  6EF7               	movwf	tblptrh,c
   825  002970  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   826  002972  6EF8               	movwf	tblptru,c
   827  002974  EE00  F0E2         	lfsr	0,__pdataBANK0
   828  002978  EE10 F018          	lfsr	1,24
   829  00297C                     copy_data2:
   830  00297C  0009               	tblrd		*+
   831  00297E  CFF5 FFEE          	movff	tablat,postinc0
   832  002982  50E5               	movf	postdec1,w,c
   833  002984  50E1               	movf	fsr1l,w,c
   834  002986  E1FA               	bnz	copy_data2
   835                           
   836                           ; Initialize objects allocated to COMRAM (1 bytes)
   837                           ; load TBLPTR registers with __pidataCOMRAM
   838  002988  0E56               	movlw	low __pidataCOMRAM
   839  00298A  6EF6               	movwf	tblptrl,c
   840  00298C  0E34               	movlw	high __pidataCOMRAM
   841  00298E  6EF7               	movwf	tblptrh,c
   842  002990  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   843  002992  6EF8               	movwf	tblptru,c
   844  002994  0009               	tblrd		*+	;fetch initializer
   845  002996  CFF5 F044          	movff	tablat,__pdataCOMRAM
   846  00299A                     end_of_initialization:
   847                           	opt stack 0
   848  00299A                     __end_of__initialization:
   849                           	opt stack 0
   850  00299A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   851  00299C  6EF8               	movwf	tblptru,c
   852  00299E  0100               	movlb	0
   853  0029A0  EF93  F019         	goto	_main	;jump to C main() function
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           postdec1	equ	0xFE5
   861                           fsr1h	equ	0xFE2
   862                           fsr1l	equ	0xFE1
   863                           
   864                           	psect	bssCOMRAM
   865  000023                     __pbssCOMRAM:
   866                           	opt stack 0
   867  000023                     _outPipes:
   868                           	opt stack 0
   869  000023                     	ds	8
   870  00002B                     _pBDTEntryIn:
   871                           	opt stack 0
   872  00002B                     	ds	6
   873  000031                     _pBDTEntryEP0OutCurrent:
   874                           	opt stack 0
   875  000031                     	ds	2
   876  000033                     _pBDTEntryEP0OutNext:
   877                           	opt stack 0
   878  000033                     	ds	2
   879  000035                     _USBDeferStatusStagePacket:
   880                           	opt stack 0
   881  000035                     	ds	1
   882  000036                     _cdc_rx_len:
   883                           	opt stack 0
   884  000036                     	ds	1
   885  000037                     _cdc_trf_state:
   886                           	opt stack 0
   887  000037                     	ds	1
   888  000038                     _cdc_tx_len:
   889                           	opt stack 0
   890  000038                     	ds	1
   891  000039                     _controlTransferState:
   892                           	opt stack 0
   893  000039                     	ds	1
   894  00003A                     _pwr_delay:
   895                           	opt stack 0
   896  00003A                     	ds	1
   897  00003B                     _shortPacketStatus:
   898                           	opt stack 0
   899  00003B                     	ds	1
   900  00003C                     _tlc_request:
   901                           	opt stack 0
   902  00003C                     	ds	1
   903  00003D                     _inPipes:
   904                           	opt stack 0
   905  00003D                     	ds	6
   906  000043                     _USBActiveConfiguration:
   907                           	opt stack 0
   908  000043                     	ds	1
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1h	equ	0xFE2
   917                           fsr1l	equ	0xFE1
   918                           
   919                           	psect	dataCOMRAM
   920  000044                     __pdataCOMRAM:
   921                           	opt stack 0
   922  000044                     _tlc_nbytes:
   923                           	opt stack 0
   924  000044                     	ds	1
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           postdec1	equ	0xFE5
   932                           fsr1h	equ	0xFE2
   933                           fsr1l	equ	0xFE1
   934                           
   935                           	psect	bssBANK0
   936  000060                     __pbssBANK0:
   937                           	opt stack 0
   938  000060                     _cdc_notice:
   939                           	opt stack 0
   940  000060                     	ds	10
   941  00006A                     _pBDTEntryOut:
   942                           	opt stack 0
   943  00006A                     	ds	6
   944  000070                     _BaudRateGen:
   945                           	opt stack 0
   946  000070                     	ds	4
   947  000074                     _ep_data_in:
   948                           	opt stack 0
   949  000074                     	ds	3
   950  000077                     _ep_data_out:
   951                           	opt stack 0
   952  000077                     	ds	3
   953  00007A                     _pCDCDst:
   954                           	opt stack 0
   955  00007A                     	ds	3
   956  00007D                     _pCDCSrc:
   957                           	opt stack 0
   958  00007D                     	ds	3
   959  000080                     _CDCDataInHandle:
   960                           	opt stack 0
   961  000080                     	ds	2
   962  000082                     _CDCDataOutHandle:
   963                           	opt stack 0
   964  000082                     	ds	2
   965  000084                     _led_count:
   966                           	opt stack 0
   967  000084                     	ds	2
   968  000086                     _pDst:
   969                           	opt stack 0
   970  000086                     	ds	2
   971  000088                     _pic18_devid:
   972                           	opt stack 0
   973  000088                     	ds	2
   974  00008A                     _tlc_pwm_readback_value:
   975                           	opt stack 0
   976  00008A                     	ds	2
   977  00008C                     _txmiss_count:
   978                           	opt stack 0
   979  00008C                     	ds	2
   980  00008E                     _update_count:
   981                           	opt stack 0
   982  00008E                     	ds	2
   983  000090                     _BothEP0OutUOWNsSet:
   984                           	opt stack 0
   985  000090                     	ds	1
   986  000091                     _RemoteWakeup:
   987                           	opt stack 0
   988  000091                     	ds	1
   989  000092                     _USBBusIsSuspended:
   990                           	opt stack 0
   991  000092                     	ds	1
   992  000093                     _USBDeferINDataStagePackets:
   993                           	opt stack 0
   994  000093                     	ds	1
   995  000094                     _USBDeferOUTDataStagePackets:
   996                           	opt stack 0
   997  000094                     	ds	1
   998  000095                     _USBDeviceState:
   999                           	opt stack 0
  1000  000095                     	ds	1
  1001  000096                     _USBStatusStageEnabledFlag1:
  1002                           	opt stack 0
  1003  000096                     	ds	1
  1004  000097                     _USBStatusStageEnabledFlag2:
  1005                           	opt stack 0
  1006  000097                     	ds	1
  1007  000098                     _USBStatusStageTimeoutCounter:
  1008                           	opt stack 0
  1009  000098                     	ds	1
  1010  000099                     _cdc_mem_type:
  1011                           	opt stack 0
  1012  000099                     	ds	1
  1013  00009A                     _control_signal_bitmap:
  1014                           	opt stack 0
  1015  00009A                     	ds	1
  1016  00009B                     _endpoint_number:
  1017                           	opt stack 0
  1018  00009B                     	ds	1
  1019  00009C                     _green_led_counter:
  1020                           	opt stack 0
  1021  00009C                     	ds	1
  1022  00009D                     _old_sw2:
  1023                           	opt stack 0
  1024  00009D                     	ds	1
  1025  00009E                     _pattern_number:
  1026                           	opt stack 0
  1027  00009E                     	ds	1
  1028  00009F                     _pic18_rev:
  1029                           	opt stack 0
  1030  00009F                     	ds	1
  1031  0000A0                     _tmr3h_cal:
  1032                           	opt stack 0
  1033  0000A0                     	ds	1
  1034  0000A1                     _tmr3l_cal:
  1035                           	opt stack 0
  1036  0000A1                     	ds	1
  1037  0000A2                     _dummy_encapsulated_cmd_response:
  1038                           	opt stack 0
  1039  0000A2                     	ds	8
  1040  0000AA                     _line_coding:
  1041                           	opt stack 0
  1042  0000AA                     	ds	7
  1043  0000B1                     _USBAlternateInterface:
  1044                           	opt stack 0
  1045  0000B1                     	ds	2
  1046  0000B3                     _USTATcopy:
  1047                           	opt stack 0
  1048  0000B3                     	ds	1
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           postdec1	equ	0xFE5
  1056                           fsr1h	equ	0xFE2
  1057                           fsr1l	equ	0xFE1
  1058                           
  1059                           	psect	dataBANK0
  1060  0000E2                     __pdataBANK0:
  1061                           	opt stack 0
  1062  0000E2                     _test_pattern:
  1063                           	opt stack 0
  1064  0000E2                     	ds	21
  1065  0000F7                     _tcl5947_testbyte0:
  1066                           	opt stack 0
  1067  0000F7                     	ds	1
  1068  0000F8                     _tcl5947_testbyte1:
  1069                           	opt stack 0
  1070  0000F8                     	ds	1
  1071  0000F9                     _tlc_nchannels:
  1072                           	opt stack 0
  1073  0000F9                     	ds	1
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           postinc0	equ	0xFEE
  1079                           wreg	equ	0xFE8
  1080                           postdec1	equ	0xFE5
  1081                           fsr1h	equ	0xFE2
  1082                           fsr1l	equ	0xFE1
  1083                           
  1084                           	psect	bssBANK1
  1085  000100                     __pbssBANK1:
  1086                           	opt stack 0
  1087  000100                     _CDCBufferIn:
  1088                           	opt stack 0
  1089  000100                     	ds	64
  1090  000140                     _CDCBufferOut:
  1091                           	opt stack 0
  1092  000140                     	ds	64
  1093                           tblptru	equ	0xFF8
  1094                           tblptrh	equ	0xFF7
  1095                           tblptrl	equ	0xFF6
  1096                           tablat	equ	0xFF5
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           postdec1	equ	0xFE5
  1100                           fsr1h	equ	0xFE2
  1101                           fsr1l	equ	0xFE1
  1102                           
  1103                           	psect	dataBANK1
  1104  000180                     __pdataBANK1:
  1105                           	opt stack 0
  1106  000180                     _tlc_memory:
  1107                           	opt stack 0
  1108  000180                     	ds	72
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           postdec1	equ	0xFE5
  1116                           fsr1h	equ	0xFE2
  1117                           fsr1l	equ	0xFE1
  1118                           
  1119                           	psect	bssBANK2
  1120  000200                     __pbssBANK2:
  1121                           	opt stack 0
  1122  000200                     _USB_In_Buffer:
  1123                           	opt stack 0
  1124  000200                     	ds	64
  1125  000240                     _USB_Out_Buffer:
  1126                           	opt stack 0
  1127  000240                     	ds	64
  1128  000280                     _cdc_data_rx:
  1129                           	opt stack 0
  1130  000280                     	ds	64
  1131  0002C0                     _cdc_data_tx:
  1132                           	opt stack 0
  1133  0002C0                     	ds	64
  1134                           tblptru	equ	0xFF8
  1135                           tblptrh	equ	0xFF7
  1136                           tblptrl	equ	0xFF6
  1137                           tablat	equ	0xFF5
  1138                           postinc0	equ	0xFEE
  1139                           wreg	equ	0xFE8
  1140                           postdec1	equ	0xFE5
  1141                           fsr1h	equ	0xFE2
  1142                           fsr1l	equ	0xFE1
  1143                           
  1144                           	psect	dataBIGRAMl
  1145  000440                     __pdataBIGRAMl:
  1146                           	opt stack 0
  1147  000440                     _gamma_table:
  1148                           	opt stack 0
  1149  000440                     	ds	512
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postdec1	equ	0xFE5
  1157                           fsr1h	equ	0xFE2
  1158                           fsr1l	equ	0xFE1
  1159                           
  1160                           	psect	cstackBANK0
  1161  0000B4                     __pcstackBANK0:
  1162                           	opt stack 0
  1163  0000B4                     ??_BlinkUSBStatus:
  1164  0000B4                     ??_USBStdGetDscHandler:
  1165  0000B4                     ??_USBStdGetStatusHandler:
  1166  0000B4                     ?_readDeviceID:
  1167                           	opt stack 0
  1168  0000B4                     ?_ReadADC:
  1169                           	opt stack 0
  1170  0000B4                     ?_gamma_lookup:
  1171                           	opt stack 0
  1172  0000B4                     ?_USBTransferOnePacket:
  1173                           	opt stack 0
  1174  0000B4                     ?___awdiv:
  1175                           	opt stack 0
  1176  0000B4                     ?___lwdiv:
  1177                           	opt stack 0
  1178  0000B4                     USBTransferOnePacket@dir:
  1179                           	opt stack 0
  1180  0000B4                     USBConfigureEndpoint@direction:
  1181                           	opt stack 0
  1182  0000B4                     USBCtrlTrfTxService@byteToSend:
  1183                           	opt stack 0
  1184  0000B4                     USBCtrlTrfRxService@i:
  1185                           	opt stack 0
  1186  0000B4                     OpenSPI1@bus_mode:
  1187                           	opt stack 0
  1188  0000B4                     ReadSPI1@TempVar:
  1189                           	opt stack 0
  1190  0000B4                     WriteSPI1@TempVar:
  1191                           	opt stack 0
  1192  0000B4                     OpenTimer3@config1:
  1193                           	opt stack 0
  1194  0000B4                     Delay100TCYx@unit:
  1195                           	opt stack 0
  1196  0000B4                     Delay10TCYx@unit:
  1197                           	opt stack 0
  1198  0000B4                     putUSBUSART@data:
  1199                           	opt stack 0
  1200  0000B4                     Read_b_eep@badd:
  1201                           	opt stack 0
  1202  0000B4                     Write_b_eep@badd:
  1203                           	opt stack 0
  1204  0000B4                     ___awdiv@dividend:
  1205                           	opt stack 0
  1206  0000B4                     ___lwdiv@dividend:
  1207                           	opt stack 0
  1208  0000B4                     memset@p1:
  1209                           	opt stack 0
  1210                           
  1211                           ; 2 bytes @ 0x0
  1212  0000B4                     	ds	1
  1213  0000B5                     ??_OpenTimer3:
  1214  0000B5                     ??_USBConfigureEndpoint:
  1215  0000B5                     USBCtrlTrfRxService@byteToRead:
  1216                           	opt stack 0
  1217  0000B5                     USBCtrlTrfInHandler@lastDTS:
  1218                           	opt stack 0
  1219  0000B5                     OpenSPI1@smp_phase:
  1220                           	opt stack 0
  1221  0000B5                     WriteSPI1@data_out:
  1222                           	opt stack 0
  1223  0000B5                     USBTransferOnePacket@data:
  1224                           	opt stack 0
  1225  0000B5                     USBStdGetStatusHandler@p:
  1226                           	opt stack 0
  1227                           
  1228                           ; 2 bytes @ 0x1
  1229  0000B5                     	ds	1
  1230  0000B6                     ??_readDeviceID:
  1231  0000B6                     ??_ReadADC:
  1232  0000B6                     gamma_lookup@c:
  1233                           	opt stack 0
  1234  0000B6                     tlc5947_update@x:
  1235                           	opt stack 0
  1236  0000B6                     putUSBUSART@length:
  1237                           	opt stack 0
  1238  0000B6                     Write_b_eep@bdat:
  1239                           	opt stack 0
  1240  0000B6                     OpenSPI1@sync_mode:
  1241                           	opt stack 0
  1242  0000B6                     OpenTimer3@config:
  1243                           	opt stack 0
  1244  0000B6                     ___awdiv@divisor:
  1245                           	opt stack 0
  1246  0000B6                     ___lwdiv@divisor:
  1247                           	opt stack 0
  1248  0000B6                     memset@c:
  1249                           	opt stack 0
  1250                           
  1251                           ; 2 bytes @ 0x2
  1252  0000B6                     	ds	1
  1253  0000B7                     USBTransferOnePacket@len:
  1254                           	opt stack 0
  1255  0000B7                     Write_b_eep@GIE_BIT_VAL:
  1256                           	opt stack 0
  1257                           
  1258                           ; 1 bytes @ 0x3
  1259  0000B7                     	ds	1
  1260  0000B8                     USBTransferOnePacket@ep:
  1261                           	opt stack 0
  1262  0000B8                     ___awdiv@counter:
  1263                           	opt stack 0
  1264  0000B8                     ___lwdiv@counter:
  1265                           	opt stack 0
  1266  0000B8                     memset@n:
  1267                           	opt stack 0
  1268                           
  1269                           ; 2 bytes @ 0x4
  1270  0000B8                     	ds	1
  1271  0000B9                     USBConfigureEndpoint@EPNum:
  1272                           	opt stack 0
  1273  0000B9                     ___awdiv@sign:
  1274                           	opt stack 0
  1275  0000B9                     USBTransferOnePacket@handle:
  1276                           	opt stack 0
  1277  0000B9                     ___lwdiv@quotient:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x5
  1281  0000B9                     	ds	1
  1282  0000BA                     readDeviceID@pic18_devid:
  1283                           	opt stack 0
  1284  0000BA                     USBConfigureEndpoint@handle:
  1285                           	opt stack 0
  1286  0000BA                     ___awdiv@quotient:
  1287                           	opt stack 0
  1288  0000BA                     memset@p:
  1289                           	opt stack 0
  1290                           
  1291                           ; 2 bytes @ 0x6
  1292  0000BA                     	ds	1
  1293  0000BB                     ??_CDCTxService:
  1294  0000BB                     getsUSBUSART@buffer:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x7
  1298  0000BB                     	ds	1
  1299  0000BC                     readDeviceID@devID1:
  1300                           	opt stack 0
  1301  0000BC                     tlc5947_setChannel@val:
  1302                           	opt stack 0
  1303  0000BC                     tlc5947_count_channels@old_data:
  1304                           	opt stack 0
  1305  0000BC                     USBDeviceInit@i:
  1306                           	opt stack 0
  1307  0000BC                     USBEnableEndpoint@options:
  1308                           	opt stack 0
  1309  0000BC                     _CDCTxService$3255:
  1310                           	opt stack 0
  1311                           
  1312                           ; 2 bytes @ 0x8
  1313  0000BC                     	ds	1
  1314  0000BD                     ??_tlc5947_setChannel:
  1315  0000BD                     readDeviceID@devID2:
  1316                           	opt stack 0
  1317  0000BD                     tlc5947_count_channels@data:
  1318                           	opt stack 0
  1319  0000BD                     getsUSBUSART@len:
  1320                           	opt stack 0
  1321  0000BD                     USBEnableEndpoint@p:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x9
  1325  0000BD                     	ds	1
  1326  0000BE                     ??_getsUSBUSART:
  1327  0000BE                     tlc5947_count_channels@pos:
  1328                           	opt stack 0
  1329  0000BE                     CDCTxService@i:
  1330                           	opt stack 0
  1331                           
  1332                           ; 1 bytes @ 0xA
  1333  0000BE                     	ds	1
  1334  0000BF                     USBEnableEndpoint@ep:
  1335                           	opt stack 0
  1336  0000BF                     CDCTxService@byte_to_send:
  1337                           	opt stack 0
  1338  0000BF                     _getsUSBUSART$3207:
  1339                           	opt stack 0
  1340                           
  1341                           ; 2 bytes @ 0xB
  1342  0000BF                     	ds	1
  1343  0000C0                     tlc5947_setChannel@ch:
  1344                           	opt stack 0
  1345  0000C0                     comm_send_rply@cc:
  1346                           	opt stack 0
  1347  0000C0                     comm_send_dat@i:
  1348                           	opt stack 0
  1349  0000C0                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0xC
  1353  0000C0                     	ds	1
  1354  0000C1                     comm_send_dat@len:
  1355                           	opt stack 0
  1356  0000C1                     tlc5947_setChannel@col:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0xD
  1360  0000C1                     	ds	1
  1361  0000C2                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0xE
  1365  0000C2                     	ds	1
  1366  0000C3                     tlc5947_setChannel@pos:
  1367                           	opt stack 0
  1368                           
  1369                           ; 1 bytes @ 0xF
  1370  0000C3                     	ds	1
  1371  0000C4                     ??_tlc5947_pwm_readback:
  1372  0000C4                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x10
  1376  0000C4                     	ds	2
  1377  0000C6                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1378                           
  1379                           ; 0 bytes @ 0x12
  1380  0000C6                     	ds	2
  1381  0000C8                     ??_USBStdFeatureReqHandler:
  1382  0000C8                     USBStdSetCfgHandler@i:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0x14
  1386  0000C8                     	ds	1
  1387  0000C9                     USBStdFeatureReqHandler@pUEP:
  1388                           	opt stack 0
  1389                           
  1390                           ; 2 bytes @ 0x15
  1391  0000C9                     	ds	1
  1392  0000CA                     tlc5947_pwm_readback@i:
  1393                           	opt stack 0
  1394                           
  1395                           ; 1 bytes @ 0x16
  1396  0000CA                     	ds	1
  1397  0000CB                     USBStdFeatureReqHandler@current_ep_data:
  1398                           	opt stack 0
  1399                           
  1400                           ; 1 bytes @ 0x17
  1401  0000CB                     	ds	1
  1402  0000CC                     USBStdFeatureReqHandler@p:
  1403                           	opt stack 0
  1404                           
  1405                           ; 2 bytes @ 0x18
  1406  0000CC                     	ds	2
  1407  0000CE                     ??_USBCtrlEPService:
  1408  0000CE                     
  1409                           ; 0 bytes @ 0x1A
  1410  0000CE                     	ds	2
  1411  0000D0                     USBCtrlEPService@setup_cnt:
  1412                           	opt stack 0
  1413                           
  1414                           ; 1 bytes @ 0x1C
  1415  0000D0                     	ds	1
  1416  0000D1                     USBDeviceTasks@i:
  1417                           	opt stack 0
  1418                           
  1419                           ; 1 bytes @ 0x1D
  1420  0000D1                     	ds	1
  1421  0000D2                     ??_ProcessCDC:
  1422                           
  1423                           ; 0 bytes @ 0x1E
  1424  0000D2                     	ds	4
  1425  0000D6                     ProcessCDC@csum:
  1426                           	opt stack 0
  1427                           
  1428                           ; 1 bytes @ 0x22
  1429  0000D6                     	ds	1
  1430  0000D7                     ProcessCDC@_c:
  1431                           	opt stack 0
  1432                           
  1433                           ; 1 bytes @ 0x23
  1434  0000D7                     	ds	1
  1435  0000D8                     ProcessCDC@checksum:
  1436                           	opt stack 0
  1437                           
  1438                           ; 1 bytes @ 0x24
  1439  0000D8                     	ds	1
  1440  0000D9                     ProcessCDC@cmd:
  1441                           	opt stack 0
  1442                           
  1443                           ; 1 bytes @ 0x25
  1444  0000D9                     	ds	1
  1445  0000DA                     ProcessCDC@boot_request0:
  1446                           	opt stack 0
  1447                           
  1448                           ; 1 bytes @ 0x26
  1449  0000DA                     	ds	1
  1450  0000DB                     ProcessCDC@boot_request1:
  1451                           	opt stack 0
  1452                           
  1453                           ; 1 bytes @ 0x27
  1454  0000DB                     	ds	1
  1455  0000DC                     ProcessCDC@_y:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x28
  1459  0000DC                     	ds	2
  1460  0000DE                     ProcessCDC@numBytes:
  1461                           	opt stack 0
  1462                           
  1463                           ; 1 bytes @ 0x2A
  1464  0000DE                     	ds	1
  1465  0000DF                     ProcessCDC@_x:
  1466                           	opt stack 0
  1467                           
  1468                           ; 1 bytes @ 0x2B
  1469  0000DF                     	ds	1
  1470  0000E0                     ProcessCDC@len:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0x2C
  1474  0000E0                     	ds	1
  1475  0000E1                     ProcessIO@x:
  1476                           	opt stack 0
  1477                           
  1478                           ; 1 bytes @ 0x2D
  1479  0000E1                     	ds	1
  1480  0000E2                     tblptru	equ	0xFF8
  1481                           tblptrh	equ	0xFF7
  1482                           tblptrl	equ	0xFF6
  1483                           tablat	equ	0xFF5
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           postdec1	equ	0xFE5
  1487                           fsr1h	equ	0xFE2
  1488                           fsr1l	equ	0xFE1
  1489                           
  1490                           ; 0 bytes @ 0x2E
  1491                           
  1492                           	psect	cstackCOMRAM
  1493  000001                     __pcstackCOMRAM:
  1494                           	opt stack 0
  1495  000001                     ??_LowPriorityISRCode:
  1496  000001                     
  1497                           ; 1 bytes @ 0x0
  1498  000001                     	ds	17
  1499  000012                     i2WriteSPI1@TempVar:
  1500                           	opt stack 0
  1501  000012                     i2Delay100TCYx@unit:
  1502                           	opt stack 0
  1503  000012                     i2Delay10TCYx@unit:
  1504                           	opt stack 0
  1505                           
  1506                           ; 1 bytes @ 0x11
  1507  000012                     	ds	1
  1508  000013                     i2WriteSPI1@data_out:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0x12
  1512  000013                     	ds	1
  1513  000014                     i2tlc5947_update@x:
  1514                           	opt stack 0
  1515                           
  1516                           ; 1 bytes @ 0x13
  1517  000014                     	ds	1
  1518  000015                     ??_HighPriorityISRCode:
  1519                           
  1520                           ; 0 bytes @ 0x14
  1521  000015                     	ds	14
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           postdec1	equ	0xFE5
  1529                           fsr1h	equ	0xFE2
  1530                           fsr1l	equ	0xFE1
  1531                           
  1532 ;;
  1533 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1534 ;;
  1535 ;; *************** function _main *****************
  1536 ;; Defined at:
  1537 ;;		line 70 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;		None               void
  1544 ;; Registers used:
  1545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels required when called:   15
  1557 ;; This function calls:
  1558 ;;		_InitializeSystem
  1559 ;;		_ProcessIO
  1560 ;;		_USBDeviceAttach
  1561 ;; This function is called by:
  1562 ;;		Startup code after reset
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text0
  1567  003326                     __ptext0:
  1568                           	opt stack 0
  1569  003326                     _main:
  1570                           	opt stack 16
  1571                           
  1572                           ;karate.c: 72: InitializeSystem();
  1573                           
  1574                           ;incstack = 0
  1575  003326  EC47  F011         	call	_InitializeSystem	;wreg free
  1576  00332A  D000               	goto	l7265
  1577  00332C                     l7265:
  1578                           
  1579                           ;karate.c: 75: if(PORTCbits.RC6 && (USBDeviceState == DETACHED_STATE)) {
  1580  00332C  AC82               	btfss	3970,6,c	;volatile
  1581  00332E  D007               	goto	l7271
  1582  003330  0100               	movlb	0	; () banked
  1583  003332  5195               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1584  003334  A4D8               	btfss	status,2,c
  1585  003336  D003               	goto	l7271
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;karate.c: 76: USBDeviceAttach();
  1589  003338  EC93  F018         	call	_USBDeviceAttach	;wreg free
  1590  00333C  D000               	goto	l7271
  1591  00333E                     l7271:
  1592                           
  1593                           ;karate.c: 77: }
  1594                           ;karate.c: 79: ProcessIO();
  1595  00333E  EC8E  F00E         	call	_ProcessIO	;wreg free
  1596  003342  D7F4               	goto	l7265
  1597  003344  EF55  F000         	goto	start
  1598  003348                     __end_of_main:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1h	equ	0xFE2
  1608                           fsr1l	equ	0xFE1
  1609                           status	equ	0xFD8
  1610                           
  1611 ;; *************** function _USBDeviceAttach *****************
  1612 ;; Defined at:
  1613 ;;		line 1352 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, status,2
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1630 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    4
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text1
  1642  003126                     __ptext1:
  1643                           	opt stack 0
  1644  003126                     _USBDeviceAttach:
  1645                           	opt stack 26
  1646                           
  1647                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  1648                           
  1649                           ;incstack = 0
  1650  003126  0100               	movlb	0	; () banked
  1651  003128  5195               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1652  00312A  A4D8               	btfss	status,2,c
  1653  00312C  0012               	return	
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;usb_device.c: 1356: {
  1657                           ;usb_device.c: 1357: if(PORTCbits.RC6 == 1)
  1658  00312E  AC82               	btfss	3970,6,c	;volatile
  1659  003130  0012               	return	
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;usb_device.c: 1358: {
  1663                           ;usb_device.c: 1360: UCON = 0;
  1664  003132  0E00               	movlw	0
  1665  003134  6E60               	movwf	3936,c	;volatile
  1666                           
  1667                           ;usb_device.c: 1363: UIE = 0;
  1668  003136  0E00               	movlw	0
  1669  003138  6E64               	movwf	3940,c	;volatile
  1670                           
  1671                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1672  00313A  0E16               	movlw	22
  1673  00313C  6E62               	movwf	3938,c	;volatile
  1674  00313E  0E9F               	movlw	159
  1675  003140  6E66               	movwf	3942,c	;volatile
  1676  003142  0E7B               	movlw	123
  1677  003144  6E64               	movwf	3940,c	;volatile
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1681  003146  8ED0               	bsf	4048,7,c	;volatile
  1682                           
  1683                           ; BSR set to: 0
  1684  003148  84A5               	bsf	4005,2,c	;volatile
  1685                           
  1686                           ; BSR set to: 0
  1687  00314A  84A3               	bsf	4003,2,c	;volatile
  1688                           
  1689                           ; BSR set to: 0
  1690  00314C  8EF2               	bsf	intcon,7,c	;volatile
  1691                           
  1692                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1693  00314E  D001               	goto	l503
  1694  003150                     l504:
  1695  003150  8660               	bsf	3936,3,c	;volatile
  1696  003152                     l503:
  1697  003152  A660               	btfss	3936,3,c	;volatile
  1698  003154  D7FD               	goto	l504
  1699                           
  1700                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1701  003156  0E01               	movlw	1
  1702  003158  0100               	movlb	0	; () banked
  1703  00315A  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
  1704                           
  1705                           ; BSR set to: 0
  1706  00315C  0012               	return	
  1707                           
  1708                           ; BSR set to: 0
  1709                           
  1710                           ; BSR set to: 0
  1711  00315E  0012               	return		;funcret
  1712  003160                     __end_of_USBDeviceAttach:
  1713                           	opt stack 0
  1714                           tblptru	equ	0xFF8
  1715                           tblptrh	equ	0xFF7
  1716                           tblptrl	equ	0xFF6
  1717                           tablat	equ	0xFF5
  1718                           intcon	equ	0xFF2
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           postdec1	equ	0xFE5
  1722                           fsr1h	equ	0xFE2
  1723                           fsr1l	equ	0xFE1
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function _ProcessIO *****************
  1727 ;; Defined at:
  1728 ;;		line 203 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  x               1   45[BANK0 ] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;		None               void
  1735 ;; Registers used:
  1736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1742 ;;      Params:         0       0       0       0       0       0       0       0       0
  1743 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1745 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1746 ;;Total ram usage:        1 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:   14
  1749 ;; This function calls:
  1750 ;;		_BlinkUSBStatus
  1751 ;;		_CDCTxService
  1752 ;;		_ProcessCDC
  1753 ;;		_SwitchIsPressed
  1754 ;;		_USBDeviceTasks
  1755 ;;		_tlc5947_setChannel
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text2
  1762  001D1C                     __ptext2:
  1763                           	opt stack 0
  1764  001D1C                     _ProcessIO:
  1765                           	opt stack 16
  1766                           
  1767                           ;karate.c: 205: unsigned char x;
  1768                           ;karate.c: 208: USBDeviceTasks();
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;incstack = 0
  1772  001D1C  ECED  F00A         	call	_USBDeviceTasks	;wreg free
  1773                           
  1774                           ;karate.c: 211: BlinkUSBStatus();
  1775  001D20  ECE0  F017         	call	_BlinkUSBStatus	;wreg free
  1776                           
  1777                           ;karate.c: 214: if (green_led_counter > 0) {
  1778  001D24  0100               	movlb	0	; () banked
  1779  001D26  519C               	movf	_green_led_counter& (0+255),w,b
  1780  001D28  B4D8               	btfsc	status,2,c
  1781  001D2A  D003               	goto	l191
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;karate.c: 215: green_led_counter--;
  1785  001D2C  0100               	movlb	0	; () banked
  1786  001D2E  079C               	decf	_green_led_counter& (0+255),f,b
  1787                           
  1788                           ;karate.c: 216: } else {
  1789  001D30  D002               	goto	l7237
  1790  001D32                     l191:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;karate.c: 217: LATCbits.LATC2 = 0;;
  1794  001D32  948B               	bcf	3979,2,c	;volatile
  1795  001D34  D000               	goto	l7237
  1796  001D36                     l7237:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;karate.c: 218: }
  1800                           ;karate.c: 221: if (SwitchIsPressed()) {
  1801  001D36  EC33  F019         	call	_SwitchIsPressed	;wreg free
  1802  001D3A  0900               	iorlw	0
  1803  001D3C  B4D8               	btfsc	status,2,c
  1804  001D3E  D059               	goto	l7255
  1805                           
  1806                           ;karate.c: 222: pattern_number++;
  1807  001D40  0100               	movlb	0	; () banked
  1808  001D42  2B9E               	incf	_pattern_number& (0+255),f,b
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;karate.c: 223: if (pattern_number > 6) {
  1812  001D44  0E06               	movlw	6
  1813  001D46  0100               	movlb	0	; () banked
  1814  001D48  659E               	cpfsgt	_pattern_number& (0+255),b
  1815  001D4A  D003               	goto	l194
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;karate.c: 224: pattern_number = 0;
  1819  001D4C  0E00               	movlw	0
  1820  001D4E  0100               	movlb	0	; () banked
  1821  001D50  6F9E               	movwf	_pattern_number& (0+255),b
  1822  001D52                     l194:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;karate.c: 225: }
  1826                           ;karate.c: 227: tlc_request = 0;
  1827  001D52  0E00               	movlw	0
  1828  001D54  6E3C               	movwf	_tlc_request,c
  1829                           
  1830                           ;karate.c: 228: for (x=0; x < tlc_nchannels; x+=3) {
  1831  001D56  0E00               	movlw	0
  1832  001D58  0100               	movlb	0	; () banked
  1833  001D5A  6FE1               	movwf	ProcessIO@x& (0+255),b
  1834  001D5C  D03D               	goto	l7249
  1835  001D5E                     l7245:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;karate.c: 229: tlc5947_setChannel(x+0, test_pattern[0 + pattern_number*3]);
  1839  001D5E  0100               	movlb	0	; () banked
  1840  001D60  519E               	movf	_pattern_number& (0+255),w,b
  1841  001D62  0D03               	mullw	3
  1842  001D64  0EE2               	movlw	low _test_pattern
  1843  001D66  24F3               	addwf	prodl,w,c
  1844  001D68  6ED9               	movwf	fsr2l,c
  1845  001D6A  0E00               	movlw	high _test_pattern
  1846  001D6C  20F4               	addwfc	prodh,w,c
  1847  001D6E  6EDA               	movwf	fsr2h,c
  1848  001D70  50DF               	movf	indf2,w,c
  1849  001D72  0100               	movlb	0	; () banked
  1850  001D74  6FBC               	movwf	tlc5947_setChannel@val& (0+255),b
  1851  001D76  0100               	movlb	0	; () banked
  1852  001D78  51E1               	movf	ProcessIO@x& (0+255),w,b
  1853  001D7A  EC41  F006         	call	_tlc5947_setChannel
  1854                           
  1855                           ;karate.c: 230: tlc5947_setChannel(x+1, test_pattern[1 + pattern_number*3]);
  1856  001D7E  0100               	movlb	0	; () banked
  1857  001D80  519E               	movf	_pattern_number& (0+255),w,b
  1858  001D82  0D03               	mullw	3
  1859  001D84  0E01               	movlw	1
  1860  001D86  26F3               	addwf	prodl,f,c
  1861  001D88  0E00               	movlw	0
  1862  001D8A  22F4               	addwfc	prodh,f,c
  1863  001D8C  0EE2               	movlw	low _test_pattern
  1864  001D8E  24F3               	addwf	prodl,w,c
  1865  001D90  6ED9               	movwf	fsr2l,c
  1866  001D92  0E00               	movlw	high _test_pattern
  1867  001D94  20F4               	addwfc	prodh,w,c
  1868  001D96  6EDA               	movwf	fsr2h,c
  1869  001D98  50DF               	movf	indf2,w,c
  1870  001D9A  0100               	movlb	0	; () banked
  1871  001D9C  6FBC               	movwf	tlc5947_setChannel@val& (0+255),b
  1872  001D9E  0100               	movlb	0	; () banked
  1873  001DA0  29E1               	incf	ProcessIO@x& (0+255),w,b
  1874  001DA2  EC41  F006         	call	_tlc5947_setChannel
  1875                           
  1876                           ;karate.c: 231: tlc5947_setChannel(x+2, test_pattern[2 + pattern_number*3]);
  1877  001DA6  0100               	movlb	0	; () banked
  1878  001DA8  519E               	movf	_pattern_number& (0+255),w,b
  1879  001DAA  0D03               	mullw	3
  1880  001DAC  0E02               	movlw	2
  1881  001DAE  26F3               	addwf	prodl,f,c
  1882  001DB0  0E00               	movlw	0
  1883  001DB2  22F4               	addwfc	prodh,f,c
  1884  001DB4  0EE2               	movlw	low _test_pattern
  1885  001DB6  24F3               	addwf	prodl,w,c
  1886  001DB8  6ED9               	movwf	fsr2l,c
  1887  001DBA  0E00               	movlw	high _test_pattern
  1888  001DBC  20F4               	addwfc	prodh,w,c
  1889  001DBE  6EDA               	movwf	fsr2h,c
  1890  001DC0  50DF               	movf	indf2,w,c
  1891  001DC2  0100               	movlb	0	; () banked
  1892  001DC4  6FBC               	movwf	tlc5947_setChannel@val& (0+255),b
  1893  001DC6  0100               	movlb	0	; () banked
  1894  001DC8  51E1               	movf	ProcessIO@x& (0+255),w,b
  1895  001DCA  0F02               	addlw	2
  1896  001DCC  EC41  F006         	call	_tlc5947_setChannel
  1897  001DD0  0E03               	movlw	3
  1898  001DD2  0100               	movlb	0	; () banked
  1899  001DD4  27E1               	addwf	ProcessIO@x& (0+255),f,b
  1900  001DD6  D000               	goto	l7249
  1901  001DD8                     l7249:
  1902                           
  1903                           ; BSR set to: 0
  1904  001DD8  0100               	movlb	0	; () banked
  1905  001DDA  51F9               	movf	_tlc_nchannels& (0+255),w,b
  1906  001DDC  0100               	movlb	0	; () banked
  1907  001DDE  5DE1               	subwf	ProcessIO@x& (0+255),w,b
  1908  001DE0  A0D8               	btfss	status,0,c
  1909  001DE2  D7BD               	goto	l7245
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;karate.c: 232: }
  1913                           ;karate.c: 233: tlc_request = 1;
  1914                           
  1915                           ; BSR set to: 0
  1916  001DE4  0E01               	movlw	1
  1917  001DE6  6E3C               	movwf	_tlc_request,c
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;karate.c: 236: LATCbits.LATC2 = 1;;
  1921  001DE8  848B               	bsf	3979,2,c	;volatile
  1922                           
  1923                           ;karate.c: 237: green_led_counter = 128;
  1924  001DEA  0E80               	movlw	128
  1925  001DEC  0100               	movlb	0	; () banked
  1926  001DEE  6F9C               	movwf	_green_led_counter& (0+255),b
  1927  001DF0  D000               	goto	l7255
  1928  001DF2                     l7255:
  1929                           
  1930                           ;karate.c: 238: }
  1931                           ;karate.c: 241: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  1932  001DF2  0E1F               	movlw	31
  1933  001DF4  0100               	movlb	0	; () banked
  1934  001DF6  6595               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
  1935  001DF8  0012               	return	
  1936                           
  1937                           ; BSR set to: 0
  1938  001DFA  B260               	btfsc	3936,1,c	;volatile
  1939  001DFC  0012               	return	
  1940  001DFE  D001               	goto	l7259
  1941                           
  1942                           ; BSR set to: 0
  1943  001E00  0012               	return	
  1944  001E02                     l7259:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;karate.c: 244: ProcessCDC();
  1948  001E02  EC66  F004         	call	_ProcessCDC	;wreg free
  1949                           
  1950                           ;karate.c: 245: CDCTxService();
  1951  001E06  EC28  F00A         	call	_CDCTxService	;wreg free
  1952  001E0A  0012               	return		;funcret
  1953  001E0C                     __end_of_ProcessIO:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           prodh	equ	0xFF4
  1960                           prodl	equ	0xFF3
  1961                           intcon	equ	0xFF2
  1962                           postinc0	equ	0xFEE
  1963                           wreg	equ	0xFE8
  1964                           postdec1	equ	0xFE5
  1965                           fsr1h	equ	0xFE2
  1966                           fsr1l	equ	0xFE1
  1967                           indf2	equ	0xFDF
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _SwitchIsPressed *****************
  1973 ;; Defined at:
  1974 ;;		line 174 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      unsigned char 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1991 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        0 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    4
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_ProcessIO
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text3
  2003  003266                     __ptext3:
  2004                           	opt stack 0
  2005  003266                     _SwitchIsPressed:
  2006                           	opt stack 25
  2007                           
  2008                           ;karate.c: 176: if(PORTAbits.RA1 != old_sw2) {
  2009                           
  2010                           ;incstack = 0
  2011  003266  A280               	btfss	3968,1,c	;volatile
  2012  003268  D002               	goto	u6550
  2013  00326A  0E01               	movlw	1
  2014  00326C  D001               	goto	u6556
  2015  00326E                     u6550:
  2016  00326E  0E00               	movlw	0
  2017  003270                     u6556:
  2018  003270  0100               	movlb	0	; () banked
  2019  003272  199D               	xorwf	_old_sw2& (0+255),w,b
  2020  003274  B4D8               	btfsc	status,2,c
  2021  003276  D00A               	goto	l6929
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;karate.c: 177: old_sw2 = PORTAbits.RA1;
  2025  003278  0E00               	movlw	0
  2026  00327A  B280               	btfsc	3968,1,c	;volatile
  2027  00327C  0E01               	movlw	1
  2028  00327E  0100               	movlb	0	; () banked
  2029  003280  6F9D               	movwf	_old_sw2& (0+255),b
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;karate.c: 178: if(PORTAbits.RA1 == 0) {
  2033  003282  B280               	btfsc	3968,1,c	;volatile
  2034  003284  D003               	goto	l6929
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;karate.c: 179: return 1;
  2038  003286  0E01               	movlw	1
  2039                           
  2040                           ; BSR set to: 0
  2041  003288  0012               	return	
  2042                           
  2043                           ; BSR set to: 0
  2044  00328A  D000               	goto	l6929
  2045  00328C                     l6929:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;karate.c: 180: }
  2049                           ;karate.c: 181: }
  2050                           ;karate.c: 182: return 0;
  2051  00328C  0E00               	movlw	0
  2052  00328E  0012               	return	
  2053                           
  2054                           ; BSR set to: 0
  2055                           
  2056                           ; BSR set to: 0
  2057  003290  0012               	return		;funcret
  2058  003292                     __end_of_SwitchIsPressed:
  2059                           	opt stack 0
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           prodh	equ	0xFF4
  2065                           prodl	equ	0xFF3
  2066                           intcon	equ	0xFF2
  2067                           postinc0	equ	0xFEE
  2068                           wreg	equ	0xFE8
  2069                           postdec1	equ	0xFE5
  2070                           fsr1h	equ	0xFE2
  2071                           fsr1l	equ	0xFE1
  2072                           indf2	equ	0xFDF
  2073                           fsr2h	equ	0xFDA
  2074                           fsr2l	equ	0xFD9
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _ProcessCDC *****************
  2078 ;; Defined at:
  2079 ;;		line 67 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  _y              2   40[BANK0 ] unsigned int 
  2084 ;;  len             1   44[BANK0 ] unsigned char 
  2085 ;;  _x              1   43[BANK0 ] unsigned char 
  2086 ;;  numBytes        1   42[BANK0 ] unsigned char 
  2087 ;;  boot_request    1   39[BANK0 ] unsigned char 
  2088 ;;  boot_request    1   38[BANK0 ] unsigned char 
  2089 ;;  cmd             1   37[BANK0 ] unsigned char 
  2090 ;;  checksum        1   36[BANK0 ] unsigned char 
  2091 ;;  _c              1   35[BANK0 ] unsigned char 
  2092 ;;  csum            1   34[BANK0 ] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;		None               void
  2095 ;; Registers used:
  2096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0
  2103 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2104 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2105 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2106 ;;Total ram usage:       15 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:   13
  2109 ;; This function calls:
  2110 ;;		_BusyADC
  2111 ;;		_Busy_eep
  2112 ;;		_ConvertADC
  2113 ;;		_Delay10TCYx
  2114 ;;		_ReadADC
  2115 ;;		_Read_b_eep
  2116 ;;		_USBDeviceTasks
  2117 ;;		_Write_b_eep
  2118 ;;		_comm_send_dat
  2119 ;;		_comm_send_rply
  2120 ;;		_getsUSBUSART
  2121 ;;		_tlc5947_count_channels
  2122 ;;		_tlc5947_pwm_readback
  2123 ;;		_tlc5947_setChannel
  2124 ;; This function is called by:
  2125 ;;		_ProcessIO
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text4
  2130  0008CC                     __ptext4:
  2131                           	opt stack 0
  2132  0008CC                     _ProcessCDC:
  2133                           	opt stack 16
  2134                           
  2135                           ;comm.c: 69: unsigned char numBytes, len, cmd, csum;
  2136                           ;comm.c: 70: unsigned char _x,_c = 0;
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;incstack = 0
  2140  0008CC  0E00               	movlw	0
  2141  0008CE  0100               	movlb	0	; () banked
  2142  0008D0  6FD7               	movwf	ProcessCDC@_c& (0+255),b
  2143                           
  2144                           ;comm.c: 71: unsigned int _y = 0;
  2145  0008D2  0E00               	movlw	0
  2146  0008D4  0100               	movlb	0	; () banked
  2147  0008D6  6FDD               	movwf	(ProcessCDC@_y+1)& (0+255),b
  2148  0008D8  0E00               	movlw	0
  2149  0008DA  6FDC               	movwf	ProcessCDC@_y& (0+255),b
  2150                           
  2151                           ;comm.c: 73: unsigned char checksum;
  2152                           ;comm.c: 74: unsigned char boot_request0 = 0x23;
  2153  0008DC  0E23               	movlw	35
  2154  0008DE  0100               	movlb	0	; () banked
  2155  0008E0  6FDA               	movwf	ProcessCDC@boot_request0& (0+255),b
  2156                           
  2157                           ;comm.c: 75: unsigned char boot_request1 = 0x42;
  2158  0008E2  0E42               	movlw	66
  2159  0008E4  0100               	movlb	0	; () banked
  2160  0008E6  6FDB               	movwf	ProcessCDC@boot_request1& (0+255),b
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;comm.c: 78: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2164  0008E8  0E1F               	movlw	31
  2165  0008EA  0100               	movlb	0	; () banked
  2166  0008EC  6595               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
  2167  0008EE  0012               	return	
  2168                           
  2169                           ; BSR set to: 0
  2170  0008F0  B260               	btfsc	3936,1,c	;volatile
  2171  0008F2  0012               	return	
  2172  0008F4  D001               	goto	l6947
  2173                           
  2174                           ; BSR set to: 0
  2175  0008F6  0012               	return	
  2176  0008F8                     l6947:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;comm.c: 81: numBytes = getsUSBUSART(CDCBufferIn, 64);
  2180  0008F8  0E00               	movlw	low _CDCBufferIn
  2181  0008FA  0100               	movlb	0	; () banked
  2182  0008FC  6FBB               	movwf	getsUSBUSART@buffer& (0+255),b
  2183  0008FE  0E01               	movlw	high _CDCBufferIn
  2184  000900  0100               	movlb	0	; () banked
  2185  000902  6FBC               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
  2186  000904  0E40               	movlw	64
  2187  000906  0100               	movlb	0	; () banked
  2188  000908  6FBD               	movwf	getsUSBUSART@len& (0+255),b
  2189  00090A  ECF3  F00F         	call	_getsUSBUSART	;wreg free
  2190  00090E  0100               	movlb	0	; () banked
  2191  000910  6FDE               	movwf	ProcessCDC@numBytes& (0+255),b
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;comm.c: 84: if (numBytes >= 0x04){
  2195  000912  0E03               	movlw	3
  2196  000914  0100               	movlb	0	; () banked
  2197  000916  65DE               	cpfsgt	ProcessCDC@numBytes& (0+255),b
  2198  000918  0012               	return	
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;comm.c: 85: comm_send_rply(0x03);
  2202  00091A  0E03               	movlw	3
  2203  00091C  EC89  F017         	call	_comm_send_rply
  2204                           
  2205                           ;comm.c: 86: if (CDCBufferIn[0x00] == 0xAA) {
  2206  000920  0EAA               	movlw	170
  2207  000922  0101               	movlb	1	; () banked
  2208  000924  1900               	xorwf	_CDCBufferIn& (0+255),w,b
  2209  000926  A4D8               	btfss	status,2,c
  2210  000928  D1A7               	goto	l7119
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;comm.c: 87: len = CDCBufferIn[0x03];
  2214  00092A  C103  F0E0         	movff	_CDCBufferIn+3,ProcessCDC@len
  2215                           
  2216                           ;comm.c: 88: cmd = CDCBufferIn[0x01];
  2217  00092E  C101  F0D9         	movff	_CDCBufferIn+1,ProcessCDC@cmd
  2218                           
  2219                           ;comm.c: 89: csum = CDCBufferIn[0x02];
  2220  000932  C102  F0D6         	movff	_CDCBufferIn+2,ProcessCDC@csum
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;comm.c: 90: if ((len + 0x04) == numBytes) {
  2224  000936  0100               	movlb	0	; () banked
  2225  000938  51DE               	movf	ProcessCDC@numBytes& (0+255),w,b
  2226  00093A  0100               	movlb	0	; () banked
  2227  00093C  6FD2               	movwf	??_ProcessCDC& (0+255),b
  2228  00093E  6BD3               	clrf	(??_ProcessCDC+1)& (0+255),b
  2229  000940  0100               	movlb	0	; () banked
  2230  000942  51E0               	movf	ProcessCDC@len& (0+255),w,b
  2231  000944  0100               	movlb	0	; () banked
  2232  000946  6FD4               	movwf	(??_ProcessCDC+2)& (0+255),b
  2233  000948  6BD5               	clrf	(??_ProcessCDC+3)& (0+255),b
  2234  00094A  0E04               	movlw	4
  2235  00094C  0100               	movlb	0	; () banked
  2236  00094E  27D4               	addwf	(??_ProcessCDC+2)& (0+255),f,b
  2237  000950  0E00               	movlw	0
  2238  000952  23D5               	addwfc	(??_ProcessCDC+3)& (0+255),f,b
  2239  000954  0100               	movlb	0	; () banked
  2240  000956  51D2               	movf	??_ProcessCDC& (0+255),w,b
  2241  000958  0100               	movlb	0	; () banked
  2242  00095A  19D4               	xorwf	(??_ProcessCDC+2)& (0+255),w,b
  2243  00095C  E105               	bnz	u6661
  2244  00095E  0100               	movlb	0	; () banked
  2245  000960  51D3               	movf	(??_ProcessCDC+1)& (0+255),w,b
  2246  000962  0100               	movlb	0	; () banked
  2247  000964  19D5               	xorwf	(??_ProcessCDC+3)& (0+255),w,b
  2248  000966  A4D8               	btfss	status,2,c
  2249  000968                     u6661:
  2250  000968  D183               	goto	l7117
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;comm.c: 93: checksum= CDCBufferIn[0x00] ^ CDCBufferIn[0x01];
  2254  00096A  0101               	movlb	1	; () banked
  2255  00096C  5101               	movf	(_CDCBufferIn+1)& (0+255),w,b
  2256  00096E  0101               	movlb	1	; () banked
  2257  000970  1900               	xorwf	_CDCBufferIn& (0+255),w,b
  2258  000972  0100               	movlb	0	; () banked
  2259  000974  6FD8               	movwf	ProcessCDC@checksum& (0+255),b
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;comm.c: 94: for (_x = 0x03; _x < numBytes; _x++) {
  2263  000976  0E03               	movlw	3
  2264  000978  0100               	movlb	0	; () banked
  2265  00097A  6FDF               	movwf	ProcessCDC@_x& (0+255),b
  2266  00097C  D00F               	goto	l6967
  2267  00097E                     l6963:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;comm.c: 95: checksum ^= CDCBufferIn[_x];
  2271  00097E  0100               	movlb	0	; () banked
  2272  000980  51DF               	movf	ProcessCDC@_x& (0+255),w,b
  2273  000982  0D01               	mullw	1
  2274  000984  0E00               	movlw	low _CDCBufferIn
  2275  000986  24F3               	addwf	prodl,w,c
  2276  000988  6ED9               	movwf	fsr2l,c
  2277  00098A  0E01               	movlw	high _CDCBufferIn
  2278  00098C  20F4               	addwfc	prodh,w,c
  2279  00098E  6EDA               	movwf	fsr2h,c
  2280  000990  50DF               	movf	indf2,w,c
  2281  000992  0100               	movlb	0	; () banked
  2282  000994  1BD8               	xorwf	ProcessCDC@checksum& (0+255),f,b
  2283                           
  2284                           ; BSR set to: 0
  2285  000996  0100               	movlb	0	; () banked
  2286  000998  2BDF               	incf	ProcessCDC@_x& (0+255),f,b
  2287  00099A  D000               	goto	l6967
  2288  00099C                     l6967:
  2289                           
  2290                           ; BSR set to: 0
  2291  00099C  0100               	movlb	0	; () banked
  2292  00099E  51DE               	movf	ProcessCDC@numBytes& (0+255),w,b
  2293  0009A0  0100               	movlb	0	; () banked
  2294  0009A2  5DDF               	subwf	ProcessCDC@_x& (0+255),w,b
  2295  0009A4  A0D8               	btfss	status,0,c
  2296  0009A6  D7EB               	goto	l6963
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;comm.c: 96: }
  2300                           ;comm.c: 97: if (csum == checksum) {
  2301                           
  2302                           ; BSR set to: 0
  2303  0009A8  0100               	movlb	0	; () banked
  2304  0009AA  51D8               	movf	ProcessCDC@checksum& (0+255),w,b
  2305  0009AC  0100               	movlb	0	; () banked
  2306  0009AE  19D6               	xorwf	ProcessCDC@csum& (0+255),w,b
  2307  0009B0  A4D8               	btfss	status,2,c
  2308  0009B2  D15A               	goto	l7115
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;comm.c: 98: LATCbits.LATC2 = 1;;
  2312  0009B4  848B               	bsf	3979,2,c	;volatile
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;comm.c: 99: green_led_counter=128;
  2316  0009B6  0E80               	movlw	128
  2317  0009B8  0100               	movlb	0	; () banked
  2318  0009BA  6F9C               	movwf	_green_led_counter& (0+255),b
  2319                           
  2320                           ;comm.c: 101: switch (cmd) {
  2321  0009BC  D12D               	goto	l7113
  2322  0009BE                     l6975:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;comm.c: 103: if (len == 0) {
  2326  0009BE  0100               	movlb	0	; () banked
  2327  0009C0  51E0               	movf	ProcessCDC@len& (0+255),w,b
  2328  0009C2  0100               	movlb	0	; () banked
  2329  0009C4  A4D8               	btfss	status,2,c
  2330  0009C6  D018               	goto	l6989
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;comm.c: 104: ConvertADC();
  2334  0009C8  EC29  F01A         	call	_ConvertADC	;wreg free
  2335                           
  2336                           ;comm.c: 105: while (BusyADC());
  2337  0009CC  D000               	goto	l6979
  2338  0009CE                     l6979:
  2339  0009CE  EC19  F01A         	call	_BusyADC	;wreg free
  2340  0009D2  0900               	iorlw	0
  2341  0009D4  A4D8               	btfss	status,2,c
  2342  0009D6  D7FB               	goto	l6979
  2343                           
  2344                           ;comm.c: 106: _y = ReadADC();
  2345  0009D8  ECFD  F019         	call	_ReadADC	;wreg free
  2346  0009DC  C0B4  F0DC         	movff	?_ReadADC,ProcessCDC@_y
  2347  0009E0  C0B5  F0DD         	movff	?_ReadADC+1,ProcessCDC@_y+1
  2348                           
  2349                           ;comm.c: 107: CDCBufferOut[0x04 + 0] = (unsigned char)(_y & 0xFF);
  2350  0009E4  C0DC  F144         	movff	ProcessCDC@_y,_CDCBufferOut+4
  2351                           
  2352                           ;comm.c: 108: CDCBufferOut[0x04 + 1] = (unsigned char)(_y>>8 & 0xFF);
  2353  0009E8  0100               	movlb	0	; () banked
  2354  0009EA  51DD               	movf	(ProcessCDC@_y+1)& (0+255),w,b
  2355  0009EC  0101               	movlb	1	; () banked
  2356  0009EE  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2357                           
  2358                           ; BSR set to: 1
  2359                           ;comm.c: 109: comm_send_dat(2);
  2360  0009F0  0E02               	movlw	2
  2361  0009F2  ECD2  F014         	call	_comm_send_dat
  2362                           
  2363                           ;comm.c: 110: } else {
  2364  0009F6  0012               	return	
  2365  0009F8                     l6989:
  2366                           
  2367                           ;comm.c: 111: comm_send_rply(0x03);
  2368  0009F8  0E03               	movlw	3
  2369  0009FA  EC89  F017         	call	_comm_send_rply
  2370                           
  2371                           ;comm.c: 112: }
  2372                           ;comm.c: 113: break;
  2373  0009FE  0012               	return	
  2374                           
  2375                           ;comm.c: 115: case 0x20:
  2376  000A00  D000               	goto	l6991
  2377  000A02                     l6991:
  2378                           
  2379                           ;comm.c: 116: case 0x21:
  2380                           ;comm.c: 117: if (len == 32) {
  2381  000A02  0E20               	movlw	32
  2382  000A04  0100               	movlb	0	; () banked
  2383  000A06  19E0               	xorwf	ProcessCDC@len& (0+255),w,b
  2384  000A08  A4D8               	btfss	status,2,c
  2385  000A0A  D037               	goto	l7013
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;comm.c: 118: tlc_request = 0;
  2389  000A0C  0E00               	movlw	0
  2390  000A0E  6E3C               	movwf	_tlc_request,c
  2391                           
  2392                           ;comm.c: 119: for (_x=0; _x<32; _x++) {
  2393  000A10  0E00               	movlw	0
  2394  000A12  0100               	movlb	0	; () banked
  2395  000A14  6FDF               	movwf	ProcessCDC@_x& (0+255),b
  2396  000A16                     l6995:
  2397                           
  2398                           ; BSR set to: 0
  2399  000A16  0E1F               	movlw	31
  2400  000A18  0100               	movlb	0	; () banked
  2401  000A1A  65DF               	cpfsgt	ProcessCDC@_x& (0+255),b
  2402  000A1C  D001               	goto	l6999
  2403                           
  2404                           ; BSR set to: 0
  2405  000A1E  D024               	goto	l7007
  2406  000A20                     l6999:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;comm.c: 120: _c = _x + (cmd - 0x20) * 32;
  2410  000A20  0100               	movlb	0	; () banked
  2411  000A22  39D9               	swapf	ProcessCDC@cmd& (0+255),w,b
  2412  000A24  46E8               	rlncf	wreg,f,c
  2413  000A26  0BE0               	andlw	224
  2414  000A28  0100               	movlb	0	; () banked
  2415  000A2A  25DF               	addwf	ProcessCDC@_x& (0+255),w,b
  2416  000A2C  0100               	movlb	0	; () banked
  2417  000A2E  6FD7               	movwf	ProcessCDC@_c& (0+255),b
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;comm.c: 121: tlc5947_setChannel(_c, CDCBufferIn[0x04 + _x]);
  2421  000A30  0100               	movlb	0	; () banked
  2422  000A32  51DF               	movf	ProcessCDC@_x& (0+255),w,b
  2423  000A34  0100               	movlb	0	; () banked
  2424  000A36  6FD2               	movwf	??_ProcessCDC& (0+255),b
  2425  000A38  6BD3               	clrf	(??_ProcessCDC+1)& (0+255),b
  2426  000A3A  0E04               	movlw	4
  2427  000A3C  0100               	movlb	0	; () banked
  2428  000A3E  27D2               	addwf	??_ProcessCDC& (0+255),f,b
  2429  000A40  0E00               	movlw	0
  2430  000A42  23D3               	addwfc	(??_ProcessCDC+1)& (0+255),f,b
  2431  000A44  0E00               	movlw	low _CDCBufferIn
  2432  000A46  0100               	movlb	0	; () banked
  2433  000A48  25D2               	addwf	??_ProcessCDC& (0+255),w,b
  2434  000A4A  6ED9               	movwf	fsr2l,c
  2435  000A4C  0E01               	movlw	high _CDCBufferIn
  2436  000A4E  0100               	movlb	0	; () banked
  2437  000A50  21D3               	addwfc	(??_ProcessCDC+1)& (0+255),w,b
  2438  000A52  6EDA               	movwf	fsr2h,c
  2439  000A54  50DF               	movf	indf2,w,c
  2440  000A56  0100               	movlb	0	; () banked
  2441  000A58  6FBC               	movwf	tlc5947_setChannel@val& (0+255),b
  2442  000A5A  0100               	movlb	0	; () banked
  2443  000A5C  51D7               	movf	ProcessCDC@_c& (0+255),w,b
  2444  000A5E  EC41  F006         	call	_tlc5947_setChannel
  2445  000A62  0100               	movlb	0	; () banked
  2446  000A64  2BDF               	incf	ProcessCDC@_x& (0+255),f,b
  2447  000A66  D7D7               	goto	l6995
  2448  000A68                     l7007:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;comm.c: 122: }
  2452                           ;comm.c: 123: tlc_request = 1;
  2453  000A68  0E01               	movlw	1
  2454  000A6A  6E3C               	movwf	_tlc_request,c
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;comm.c: 124: update_count++;
  2458  000A6C  0100               	movlb	0	; () banked
  2459  000A6E  4B8E               	infsnz	_update_count& (0+255),f,b
  2460  000A70  2B8F               	incf	(_update_count+1)& (0+255),f,b
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;comm.c: 126: comm_send_rply(0x01);
  2464  000A72  0E01               	movlw	1
  2465  000A74  EC89  F017         	call	_comm_send_rply
  2466                           
  2467                           ;comm.c: 127: } else {
  2468  000A78  0012               	return	
  2469  000A7A                     l7013:
  2470                           
  2471                           ;comm.c: 128: comm_send_rply(0x03);
  2472  000A7A  0E03               	movlw	3
  2473  000A7C  EC89  F017         	call	_comm_send_rply
  2474                           
  2475                           ;comm.c: 129: }
  2476                           ;comm.c: 130: break;
  2477  000A80  0012               	return	
  2478  000A82                     l7015:
  2479                           
  2480                           ;comm.c: 133: if (len == 0) {
  2481  000A82  0100               	movlb	0	; () banked
  2482  000A84  51E0               	movf	ProcessCDC@len& (0+255),w,b
  2483  000A86  0100               	movlb	0	; () banked
  2484  000A88  A4D8               	btfss	status,2,c
  2485  000A8A  D00B               	goto	l7025
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;comm.c: 134: tlc5947_count_channels();
  2489  000A8C  EC41  F016         	call	_tlc5947_count_channels	;wreg free
  2490                           
  2491                           ;comm.c: 135: CDCBufferOut[0x04 + 0] = tlc_nchannels;
  2492  000A90  C0F9  F144         	movff	_tlc_nchannels,_CDCBufferOut+4
  2493                           
  2494                           ;comm.c: 136: CDCBufferOut[0x04 + 1] = 0;
  2495  000A94  0E00               	movlw	0
  2496  000A96  0101               	movlb	1	; () banked
  2497  000A98  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;comm.c: 137: comm_send_dat(2);
  2501  000A9A  0E02               	movlw	2
  2502  000A9C  ECD2  F014         	call	_comm_send_dat
  2503                           
  2504                           ;comm.c: 138: } else {
  2505  000AA0  0012               	return	
  2506  000AA2                     l7025:
  2507                           
  2508                           ;comm.c: 139: comm_send_rply(0x03);
  2509  000AA2  0E03               	movlw	3
  2510  000AA4  EC89  F017         	call	_comm_send_rply
  2511                           
  2512                           ;comm.c: 140: }
  2513                           ;comm.c: 141: break;
  2514  000AA8  0012               	return	
  2515  000AAA                     l7027:
  2516                           
  2517                           ;comm.c: 144: if (len == 0) {
  2518  000AAA  0100               	movlb	0	; () banked
  2519  000AAC  51E0               	movf	ProcessCDC@len& (0+255),w,b
  2520  000AAE  0100               	movlb	0	; () banked
  2521  000AB0  A4D8               	btfss	status,2,c
  2522  000AB2  D00C               	goto	l7037
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;comm.c: 145: tlc5947_pwm_readback();
  2526  000AB4  EC1D  F012         	call	_tlc5947_pwm_readback	;wreg free
  2527                           
  2528                           ;comm.c: 146: CDCBufferOut[0x04 + 0] = (unsigned char)(tlc_pwm_readback_value & 0xFF);
  2529  000AB8  C08A  F144         	movff	_tlc_pwm_readback_value,_CDCBufferOut+4
  2530                           
  2531                           ;comm.c: 147: CDCBufferOut[0x04 + 1] = (unsigned char)(tlc_pwm_readback_value>>8 & 0xFF)
      +                          ;
  2532  000ABC  0100               	movlb	0	; () banked
  2533  000ABE  518B               	movf	(_tlc_pwm_readback_value+1)& (0+255),w,b
  2534  000AC0  0101               	movlb	1	; () banked
  2535  000AC2  6F45               	movwf	(_CDCBufferOut+5)& (0+255),b
  2536                           
  2537                           ; BSR set to: 1
  2538                           ;comm.c: 148: comm_send_dat(2);
  2539  000AC4  0E02               	movlw	2
  2540  000AC6  ECD2  F014         	call	_comm_send_dat
  2541                           
  2542                           ;comm.c: 149: } else {
  2543  000ACA  0012               	return	
  2544  000ACC                     l7037:
  2545                           
  2546                           ;comm.c: 150: comm_send_rply(0x03);
  2547  000ACC  0E03               	movlw	3
  2548  000ACE  EC89  F017         	call	_comm_send_rply
  2549                           
  2550                           ;comm.c: 151: }
  2551                           ;comm.c: 152: break;
  2552  000AD2  0012               	return	
  2553  000AD4                     l7039:
  2554                           
  2555                           ;comm.c: 155: if (len == 2) {
  2556  000AD4  0E02               	movlw	2
  2557  000AD6  0100               	movlb	0	; () banked
  2558  000AD8  19E0               	xorwf	ProcessCDC@len& (0+255),w,b
  2559  000ADA  A4D8               	btfss	status,2,c
  2560  000ADC  D00E               	goto	l7045
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;comm.c: 156: tmr3l_cal = CDCBufferIn[0x04 + 0]^0xFF;
  2564  000ADE  0101               	movlb	1	; () banked
  2565  000AE0  5104               	movf	(_CDCBufferIn+4)& (0+255),w,b
  2566  000AE2  0AFF               	xorlw	255
  2567  000AE4  0100               	movlb	0	; () banked
  2568  000AE6  6FA1               	movwf	_tmr3l_cal& (0+255),b
  2569                           
  2570                           ;comm.c: 157: tmr3h_cal = CDCBufferIn[0x04 + 1]^0xFF;
  2571  000AE8  0101               	movlb	1	; () banked
  2572  000AEA  5105               	movf	(_CDCBufferIn+5)& (0+255),w,b
  2573  000AEC  0AFF               	xorlw	255
  2574  000AEE  0100               	movlb	0	; () banked
  2575  000AF0  6FA0               	movwf	_tmr3h_cal& (0+255),b
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;comm.c: 158: comm_send_rply(0x01);
  2579  000AF2  0E01               	movlw	1
  2580  000AF4  EC89  F017         	call	_comm_send_rply
  2581                           
  2582                           ;comm.c: 159: } else {
  2583  000AF8  0012               	return	
  2584  000AFA                     l7045:
  2585                           
  2586                           ;comm.c: 160: comm_send_rply(0x03);
  2587  000AFA  0E03               	movlw	3
  2588  000AFC  EC89  F017         	call	_comm_send_rply
  2589                           
  2590                           ;comm.c: 161: }
  2591                           ;comm.c: 162: break;
  2592  000B00  0012               	return	
  2593  000B02                     l7047:
  2594                           
  2595                           ;comm.c: 165: if (len == 1) {
  2596  000B02  0100               	movlb	0	; () banked
  2597  000B04  05E0               	decf	ProcessCDC@len& (0+255),w,b
  2598  000B06  A4D8               	btfss	status,2,c
  2599  000B08  D00E               	goto	l7055
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;comm.c: 166: Busy_eep();
  2603  000B0A  EC25  F01A         	call	_Busy_eep	;wreg free
  2604                           
  2605                           ;comm.c: 167: CDCBufferOut[0x04] = Read_b_eep(CDCBufferIn[0x04]);
  2606  000B0E  C104  F0B4         	movff	_CDCBufferIn+4,Read_b_eep@badd
  2607  000B12  0100               	movlb	0	; () banked
  2608  000B14  6BB5               	clrf	(Read_b_eep@badd+1)& (0+255),b
  2609  000B16  ECF3  F019         	call	_Read_b_eep	;wreg free
  2610  000B1A  0101               	movlb	1	; () banked
  2611  000B1C  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2612                           
  2613                           ; BSR set to: 1
  2614                           ;comm.c: 168: comm_send_dat(1);
  2615  000B1E  0E01               	movlw	1
  2616  000B20  ECD2  F014         	call	_comm_send_dat
  2617                           
  2618                           ;comm.c: 169: } else {
  2619  000B24  0012               	return	
  2620  000B26                     l7055:
  2621                           
  2622                           ;comm.c: 170: comm_send_rply(0x03);
  2623  000B26  0E03               	movlw	3
  2624  000B28  EC89  F017         	call	_comm_send_rply
  2625                           
  2626                           ;comm.c: 171: }
  2627                           ;comm.c: 172: break;
  2628  000B2C  0012               	return	
  2629  000B2E                     l7057:
  2630                           
  2631                           ;comm.c: 175: if (len == 2) {
  2632  000B2E  0E02               	movlw	2
  2633  000B30  0100               	movlb	0	; () banked
  2634  000B32  19E0               	xorwf	ProcessCDC@len& (0+255),w,b
  2635  000B34  A4D8               	btfss	status,2,c
  2636  000B36  D00E               	goto	l7065
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;comm.c: 176: Busy_eep();
  2640  000B38  EC25  F01A         	call	_Busy_eep	;wreg free
  2641                           
  2642                           ;comm.c: 177: Write_b_eep(CDCBufferIn[0x04], CDCBufferIn[0x04+1]);
  2643  000B3C  C104  F0B4         	movff	_CDCBufferIn+4,Write_b_eep@badd
  2644  000B40  0100               	movlb	0	; () banked
  2645  000B42  6BB5               	clrf	(Write_b_eep@badd+1)& (0+255),b
  2646  000B44  C105  F0B6         	movff	_CDCBufferIn+5,Write_b_eep@bdat
  2647  000B48  EC73  F018         	call	_Write_b_eep	;wreg free
  2648                           
  2649                           ;comm.c: 178: comm_send_rply(0x01);
  2650  000B4C  0E01               	movlw	1
  2651  000B4E  EC89  F017         	call	_comm_send_rply
  2652                           
  2653                           ;comm.c: 179: } else {
  2654  000B52  0012               	return	
  2655  000B54                     l7065:
  2656                           
  2657                           ;comm.c: 180: comm_send_rply(0x03);
  2658  000B54  0E03               	movlw	3
  2659  000B56  EC89  F017         	call	_comm_send_rply
  2660                           
  2661                           ;comm.c: 181: }
  2662                           ;comm.c: 182: break;
  2663  000B5A  0012               	return	
  2664  000B5C                     l7067:
  2665                           
  2666                           ;comm.c: 185: if (len == 0) {
  2667  000B5C  0100               	movlb	0	; () banked
  2668  000B5E  51E0               	movf	ProcessCDC@len& (0+255),w,b
  2669  000B60  0100               	movlb	0	; () banked
  2670  000B62  A4D8               	btfss	status,2,c
  2671  000B64  D007               	goto	l7073
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;comm.c: 186: CDCBufferOut[0x04] = 0x34;
  2675  000B66  0E34               	movlw	52
  2676  000B68  0101               	movlb	1	; () banked
  2677  000B6A  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;comm.c: 187: comm_send_dat(1);
  2681  000B6C  0E01               	movlw	1
  2682  000B6E  ECD2  F014         	call	_comm_send_dat
  2683                           
  2684                           ;comm.c: 188: } else {
  2685  000B72  0012               	return	
  2686  000B74                     l7073:
  2687                           
  2688                           ;comm.c: 189: comm_send_rply(0x03);
  2689  000B74  0E03               	movlw	3
  2690  000B76  EC89  F017         	call	_comm_send_rply
  2691                           
  2692                           ;comm.c: 190: }
  2693                           ;comm.c: 191: break;
  2694  000B7A  0012               	return	
  2695  000B7C                     l7075:
  2696                           
  2697                           ;comm.c: 194: if (len == 0) {
  2698  000B7C  0100               	movlb	0	; () banked
  2699  000B7E  51E0               	movf	ProcessCDC@len& (0+255),w,b
  2700  000B80  0100               	movlb	0	; () banked
  2701  000B82  A4D8               	btfss	status,2,c
  2702  000B84  D007               	goto	l7081
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;comm.c: 195: CDCBufferOut[0x04] = 0x01;
  2706  000B86  0E01               	movlw	1
  2707  000B88  0101               	movlb	1	; () banked
  2708  000B8A  6F44               	movwf	(_CDCBufferOut+4)& (0+255),b
  2709                           
  2710                           ; BSR set to: 1
  2711                           ;comm.c: 196: comm_send_dat(1);
  2712  000B8C  0E01               	movlw	1
  2713  000B8E  ECD2  F014         	call	_comm_send_dat
  2714                           
  2715                           ;comm.c: 197: } else {
  2716  000B92  0012               	return	
  2717  000B94                     l7081:
  2718                           
  2719                           ;comm.c: 198: comm_send_rply(0x03);
  2720  000B94  0E03               	movlw	3
  2721  000B96  EC89  F017         	call	_comm_send_rply
  2722                           
  2723                           ;comm.c: 199: }
  2724                           ;comm.c: 200: break;
  2725  000B9A  0012               	return	
  2726  000B9C                     l7083:
  2727                           
  2728                           ;comm.c: 203: if (len == 0) {
  2729  000B9C  0100               	movlb	0	; () banked
  2730  000B9E  51E0               	movf	ProcessCDC@len& (0+255),w,b
  2731  000BA0  0100               	movlb	0	; () banked
  2732  000BA2  A4D8               	btfss	status,2,c
  2733  000BA4  D008               	goto	l7089
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;comm.c: 204: CDCBufferOut[0x04 + 0] = boot_request0;
  2737  000BA6  C0DA  F144         	movff	ProcessCDC@boot_request0,_CDCBufferOut+4
  2738                           
  2739                           ;comm.c: 205: CDCBufferOut[0x04 + 1] = boot_request1;
  2740  000BAA  C0DB  F145         	movff	ProcessCDC@boot_request1,_CDCBufferOut+5
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;comm.c: 206: comm_send_dat(2);
  2744  000BAE  0E02               	movlw	2
  2745  000BB0  ECD2  F014         	call	_comm_send_dat
  2746                           
  2747                           ;comm.c: 207: } else {
  2748  000BB4  0012               	return	
  2749  000BB6                     l7089:
  2750                           
  2751                           ;comm.c: 208: comm_send_rply(0x03);
  2752  000BB6  0E03               	movlw	3
  2753  000BB8  EC89  F017         	call	_comm_send_rply
  2754                           
  2755                           ;comm.c: 209: }
  2756                           ;comm.c: 210: break;
  2757  000BBC  0012               	return	
  2758  000BBE                     l7091:
  2759                           
  2760                           ;comm.c: 213: if (len == 2) {
  2761  000BBE  0E02               	movlw	2
  2762  000BC0  0100               	movlb	0	; () banked
  2763  000BC2  19E0               	xorwf	ProcessCDC@len& (0+255),w,b
  2764  000BC4  A4D8               	btfss	status,2,c
  2765  000BC6  D020               	goto	l7107
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;comm.c: 214: if ((CDCBufferIn[0x04] == boot_request0) && (CDCBufferIn[0x04 + 1] == boot
      +                          _request1)) {
  2769  000BC8  0100               	movlb	0	; () banked
  2770  000BCA  51DA               	movf	ProcessCDC@boot_request0& (0+255),w,b
  2771  000BCC  0101               	movlb	1	; () banked
  2772  000BCE  1904               	xorwf	(_CDCBufferIn+4)& (0+255),w,b
  2773  000BD0  A4D8               	btfss	status,2,c
  2774  000BD2  D016               	goto	l7105
  2775                           
  2776                           ; BSR set to: 1
  2777  000BD4  0100               	movlb	0	; () banked
  2778  000BD6  51DB               	movf	ProcessCDC@boot_request1& (0+255),w,b
  2779  000BD8  0101               	movlb	1	; () banked
  2780  000BDA  1905               	xorwf	(_CDCBufferIn+5)& (0+255),w,b
  2781  000BDC  A4D8               	btfss	status,2,c
  2782  000BDE  D010               	goto	l7105
  2783                           
  2784                           ; BSR set to: 1
  2785                           ;comm.c: 215: INTCONbits.GIE = 0;
  2786  000BE0  9EF2               	bcf	intcon,7,c	;volatile
  2787                           
  2788                           ; BSR set to: 1
  2789                           ;comm.c: 216: UCON = 0; UIE = 0; USBDeviceState = DETACHED_STATE;;
  2790  000BE2  0E00               	movlw	0
  2791  000BE4  6E60               	movwf	3936,c	;volatile
  2792  000BE6  0E00               	movlw	0
  2793  000BE8  6E64               	movwf	3940,c	;volatile
  2794  000BEA  0E00               	movlw	0
  2795  000BEC  0100               	movlb	0	; () banked
  2796  000BEE  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;comm.c: 217: USBDeviceTasks();
  2800  000BF0  ECED  F00A         	call	_USBDeviceTasks	;wreg free
  2801                           
  2802                           ;comm.c: 218: Delay10TCYx(18);
  2803  000BF4  0E12               	movlw	18
  2804  000BF6  ECD2  F019         	call	_Delay10TCYx
  2805  000BFA  EF92 F003          	goto	1828	;# 
  2806                           
  2807                           ;comm.c: 220: } else {
  2808  000BFE  0012               	return	
  2809  000C00                     l7105:
  2810                           
  2811                           ;comm.c: 222: comm_send_rply(0x02);
  2812  000C00  0E02               	movlw	2
  2813  000C02  EC89  F017         	call	_comm_send_rply
  2814                           
  2815                           ;comm.c: 223: }
  2816                           ;comm.c: 224: } else {
  2817  000C06  0012               	return	
  2818  000C08                     l7107:
  2819                           
  2820                           ;comm.c: 225: comm_send_rply(0x03);
  2821  000C08  0E03               	movlw	3
  2822  000C0A  EC89  F017         	call	_comm_send_rply
  2823                           
  2824                           ;comm.c: 226: }
  2825                           ;comm.c: 227: break;
  2826  000C0E  0012               	return	
  2827  000C10                     l7109:
  2828                           
  2829                           ;comm.c: 231: comm_send_rply(0xFF);
  2830  000C10  0EFF               	movlw	255
  2831  000C12  EC89  F017         	call	_comm_send_rply
  2832                           
  2833                           ;comm.c: 233: }
  2834                           
  2835                           ;comm.c: 232: break;
  2836  000C16  0012               	return	
  2837  000C18                     l7113:
  2838  000C18  0100               	movlb	0	; () banked
  2839  000C1A  51D9               	movf	ProcessCDC@cmd& (0+255),w,b
  2840                           
  2841                           ; Switch size 1, requested type "space"
  2842                           ; Number of cases is 12, Range of values is 1 to 129
  2843                           ; switch strategies available:
  2844                           ; Name         Instructions Cycles
  2845                           ; simple_byte           37    19 (average)
  2846                           ;	Chosen strategy is simple_byte
  2847  000C1C  0A01               	xorlw	1	; case 1
  2848  000C1E  B4D8               	btfsc	status,2,c
  2849  000C20  D79D               	goto	l7067
  2850  000C22  0A03               	xorlw	3	; case 2
  2851  000C24  B4D8               	btfsc	status,2,c
  2852  000C26  D7AA               	goto	l7075
  2853  000C28  0A16               	xorlw	22	; case 20
  2854  000C2A  B4D8               	btfsc	status,2,c
  2855  000C2C  D73E               	goto	l7027
  2856  000C2E  0A01               	xorlw	1	; case 21
  2857  000C30  B4D8               	btfsc	status,2,c
  2858  000C32  D750               	goto	l7039
  2859  000C34  0A35               	xorlw	53	; case 32
  2860  000C36  B4D8               	btfsc	status,2,c
  2861  000C38  D6E4               	goto	l6991
  2862  000C3A  0A01               	xorlw	1	; case 33
  2863  000C3C  B4D8               	btfsc	status,2,c
  2864  000C3E  D6E1               	goto	l6991
  2865  000C40  0A11               	xorlw	17	; case 48
  2866  000C42  B4D8               	btfsc	status,2,c
  2867  000C44  D71E               	goto	l7015
  2868  000C46  0A70               	xorlw	112	; case 64
  2869  000C48  B4D8               	btfsc	status,2,c
  2870  000C4A  D6B9               	goto	l6975
  2871  000C4C  0A10               	xorlw	16	; case 80
  2872  000C4E  B4D8               	btfsc	status,2,c
  2873  000C50  D758               	goto	l7047
  2874  000C52  0A01               	xorlw	1	; case 81
  2875  000C54  B4D8               	btfsc	status,2,c
  2876  000C56  D76B               	goto	l7057
  2877  000C58  0AD1               	xorlw	209	; case 128
  2878  000C5A  B4D8               	btfsc	status,2,c
  2879  000C5C  D79F               	goto	l7083
  2880  000C5E  0A01               	xorlw	1	; case 129
  2881  000C60  B4D8               	btfsc	status,2,c
  2882  000C62  D7AD               	goto	l7091
  2883  000C64  D7D5               	goto	l7109
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;comm.c: 234: } else {
  2887  000C66  0012               	return	
  2888  000C68                     l7115:
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;comm.c: 236: comm_send_rply(0x04);
  2892  000C68  0E04               	movlw	4
  2893  000C6A  EC89  F017         	call	_comm_send_rply
  2894                           
  2895                           ;comm.c: 237: }
  2896                           ;comm.c: 238: } else {
  2897  000C6E  0012               	return	
  2898  000C70                     l7117:
  2899                           
  2900                           ;comm.c: 240: comm_send_rply(0x03);
  2901  000C70  0E03               	movlw	3
  2902  000C72  EC89  F017         	call	_comm_send_rply
  2903                           
  2904                           ;comm.c: 241: }
  2905                           ;comm.c: 243: } else {
  2906  000C76  0012               	return	
  2907  000C78                     l7119:
  2908                           
  2909                           ;comm.c: 245: len = 0;
  2910  000C78  0E00               	movlw	0
  2911  000C7A  0100               	movlb	0	; () banked
  2912  000C7C  6FE0               	movwf	ProcessCDC@len& (0+255),b
  2913                           
  2914                           ; BSR set to: 0
  2915  000C7E  0012               	return	
  2916                           
  2917                           ; BSR set to: 0
  2918  000C80  0012               	return		;funcret
  2919  000C82                     __end_of_ProcessCDC:
  2920                           	opt stack 0
  2921                           tblptru	equ	0xFF8
  2922                           tblptrh	equ	0xFF7
  2923                           tblptrl	equ	0xFF6
  2924                           tablat	equ	0xFF5
  2925                           prodh	equ	0xFF4
  2926                           prodl	equ	0xFF3
  2927                           intcon	equ	0xFF2
  2928                           postinc0	equ	0xFEE
  2929                           wreg	equ	0xFE8
  2930                           postdec1	equ	0xFE5
  2931                           fsr1h	equ	0xFE2
  2932                           fsr1l	equ	0xFE1
  2933                           indf2	equ	0xFDF
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _getsUSBUSART *****************
  2939 ;; Defined at:
  2940 ;;		line 542 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
  2943 ;;		 -> CDCBufferIn(64), 
  2944 ;;  len             1    9[BANK0 ] unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      unsigned char 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2956 ;;      Params:         0       3       0       0       0       0       0       0       0
  2957 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2958 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2959 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2960 ;;Total ram usage:        6 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    5
  2963 ;; This function calls:
  2964 ;;		_USBTransferOnePacket
  2965 ;; This function is called by:
  2966 ;;		_ProcessCDC
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text5
  2971  001FE6                     __ptext5:
  2972                           	opt stack 0
  2973  001FE6                     _getsUSBUSART:
  2974                           	opt stack 23
  2975                           
  2976                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  2977                           
  2978                           ;incstack = 0
  2979  001FE6  0E00               	movlw	0
  2980  001FE8  6E36               	movwf	_cdc_rx_len,c
  2981                           
  2982                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  2983  001FEA  0100               	movlb	0	; () banked
  2984  001FEC  5182               	movf	_CDCDataOutHandle& (0+255),w,b
  2985  001FEE  0100               	movlb	0	; () banked
  2986  001FF0  1183               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  2987  001FF2  B4D8               	btfsc	status,2,c
  2988  001FF4  D013               	goto	l6755
  2989                           
  2990                           ; BSR set to: 0
  2991  001FF6  C082  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2992  001FFA  C083  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2993  001FFE  0100               	movlb	0	; () banked
  2994  002000  AEDF               	btfss	indf2,7,c
  2995  002002  D004               	goto	u6360
  2996  002004  0100               	movlb	0	; () banked
  2997  002006  6BBE               	clrf	??_getsUSBUSART& (0+255),b
  2998  002008  2BBE               	incf	??_getsUSBUSART& (0+255),f,b
  2999  00200A  D002               	goto	u6368
  3000  00200C                     u6360:
  3001  00200C  0100               	movlb	0	; () banked
  3002  00200E  6BBE               	clrf	??_getsUSBUSART& (0+255),b
  3003  002010                     u6368:
  3004  002010  0100               	movlb	0	; () banked
  3005  002012  51BE               	movf	??_getsUSBUSART& (0+255),w,b
  3006  002014  0100               	movlb	0	; () banked
  3007  002016  6FBF               	movwf	_getsUSBUSART$3207& (0+255),b
  3008  002018  6BC0               	clrf	(_getsUSBUSART$3207+1)& (0+255),b
  3009  00201A  D006               	goto	l6757
  3010  00201C                     l6755:
  3011                           
  3012                           ; BSR set to: 0
  3013  00201C  0E00               	movlw	0
  3014  00201E  0100               	movlb	0	; () banked
  3015  002020  6FC0               	movwf	(_getsUSBUSART$3207+1)& (0+255),b
  3016  002022  0E00               	movlw	0
  3017  002024  6FBF               	movwf	_getsUSBUSART$3207& (0+255),b
  3018  002026  D000               	goto	l6757
  3019  002028                     l6757:
  3020                           
  3021                           ; BSR set to: 0
  3022  002028  0100               	movlb	0	; () banked
  3023  00202A  51BF               	movf	_getsUSBUSART$3207& (0+255),w,b
  3024  00202C  0100               	movlb	0	; () banked
  3025  00202E  11C0               	iorwf	(_getsUSBUSART$3207+1)& (0+255),w,b
  3026  002030  A4D8               	btfss	status,2,c
  3027  002032  D049               	goto	l6773
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;usb_device_cdc.c: 547: {
  3031                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3032  002034  0100               	movlb	0	; () banked
  3033  002036  EE20 F001          	lfsr	2,1
  3034  00203A  5182               	movf	_CDCDataOutHandle& (0+255),w,b
  3035  00203C  26D9               	addwf	fsr2l,f,c
  3036  00203E  5183               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  3037  002040  22DA               	addwfc	fsr2h,f,c
  3038  002042  0100               	movlb	0	; () banked
  3039  002044  51BD               	movf	getsUSBUSART@len& (0+255),w,b
  3040  002046  5CDE               	subwf	postinc2,w,c
  3041  002048  B0D8               	btfsc	status,0,c
  3042  00204A  D00B               	goto	l6763
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3046  00204C  0100               	movlb	0	; () banked
  3047  00204E  EE20 F001          	lfsr	2,1
  3048  002052  5182               	movf	_CDCDataOutHandle& (0+255),w,b
  3049  002054  26D9               	addwf	fsr2l,f,c
  3050  002056  5183               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  3051  002058  22DA               	addwfc	fsr2h,f,c
  3052  00205A  50DF               	movf	indf2,w,c
  3053  00205C  0100               	movlb	0	; () banked
  3054  00205E  6FBD               	movwf	getsUSBUSART@len& (0+255),b
  3055  002060  D000               	goto	l6763
  3056  002062                     l6763:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3060  002062  0E00               	movlw	0
  3061  002064  6E36               	movwf	_cdc_rx_len,c
  3062  002066  D016               	goto	l6769
  3063  002068                     l6765:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3067  002068  5036               	movf	_cdc_rx_len,w,c
  3068  00206A  0D01               	mullw	1
  3069  00206C  0E80               	movlw	low _cdc_data_rx
  3070  00206E  24F3               	addwf	prodl,w,c
  3071  002070  6ED9               	movwf	fsr2l,c
  3072  002072  0E02               	movlw	high _cdc_data_rx
  3073  002074  20F4               	addwfc	prodh,w,c
  3074  002076  6EDA               	movwf	fsr2h,c
  3075  002078  5036               	movf	_cdc_rx_len,w,c
  3076  00207A  0D01               	mullw	1
  3077  00207C  50F3               	movf	prodl,w,c
  3078  00207E  0100               	movlb	0	; () banked
  3079  002080  25BB               	addwf	getsUSBUSART@buffer& (0+255),w,b
  3080  002082  6EE1               	movwf	fsr1l,c
  3081  002084  50F4               	movf	prodh,w,c
  3082  002086  0100               	movlb	0	; () banked
  3083  002088  21BC               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  3084  00208A  6EE2               	movwf	fsr1h,c
  3085  00208C  CFDF FFE7          	movff	indf2,indf1
  3086                           
  3087                           ; BSR set to: 0
  3088  002090  2A36               	incf	_cdc_rx_len,f,c
  3089  002092  D000               	goto	l6769
  3090  002094                     l6769:
  3091                           
  3092                           ; BSR set to: 0
  3093  002094  0100               	movlb	0	; () banked
  3094  002096  51BD               	movf	getsUSBUSART@len& (0+255),w,b
  3095  002098  5C36               	subwf	_cdc_rx_len,w,c
  3096  00209A  A0D8               	btfss	status,0,c
  3097  00209C  D7E5               	goto	l6765
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3101                           
  3102                           ; BSR set to: 0
  3103  00209E  0E00               	movlw	0
  3104  0020A0  0100               	movlb	0	; () banked
  3105  0020A2  6FB4               	movwf	USBTransferOnePacket@dir& (0+255),b
  3106  0020A4  0E80               	movlw	low _cdc_data_rx
  3107  0020A6  0100               	movlb	0	; () banked
  3108  0020A8  6FB5               	movwf	USBTransferOnePacket@data& (0+255),b
  3109  0020AA  0E02               	movlw	high _cdc_data_rx
  3110  0020AC  0100               	movlb	0	; () banked
  3111  0020AE  6FB6               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3112  0020B0  0E40               	movlw	64
  3113  0020B2  0100               	movlb	0	; () banked
  3114  0020B4  6FB7               	movwf	USBTransferOnePacket@len& (0+255),b
  3115  0020B6  0E02               	movlw	2
  3116  0020B8  ECD8  F010         	call	_USBTransferOnePacket
  3117  0020BC  C0B4  F082         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  3118  0020C0  C0B5  F083         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  3119  0020C4  D000               	goto	l6773
  3120  0020C6                     l6773:
  3121                           
  3122                           ;usb_device_cdc.c: 567: }
  3123                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  3124  0020C6  5036               	movf	_cdc_rx_len,w,c
  3125  0020C8  0012               	return	
  3126  0020CA  0012               	return		;funcret
  3127  0020CC                     __end_of_getsUSBUSART:
  3128                           	opt stack 0
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           prodh	equ	0xFF4
  3134                           prodl	equ	0xFF3
  3135                           intcon	equ	0xFF2
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           indf1	equ	0xFE7
  3139                           postdec1	equ	0xFE5
  3140                           fsr1h	equ	0xFE2
  3141                           fsr1l	equ	0xFE1
  3142                           indf2	equ	0xFDF
  3143                           postinc2	equ	0xFDE
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _comm_send_rply *****************
  3149 ;; Defined at:
  3150 ;;		line 20 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  cc              1    wreg     unsigned char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  cc              1   12[BANK0 ] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;		None               void
  3157 ;; Registers used:
  3158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0
  3165 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3167 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        1 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    6
  3171 ;; This function calls:
  3172 ;;		_CDCTxService
  3173 ;;		_putUSBUSART
  3174 ;; This function is called by:
  3175 ;;		_ProcessCDC
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text6
  3180  002F12                     __ptext6:
  3181                           	opt stack 0
  3182  002F12                     _comm_send_rply:
  3183                           	opt stack 22
  3184                           
  3185                           ;incstack = 0
  3186                           ;comm_send_rply@cc stored from wreg
  3187  002F12  0100               	movlb	0	; () banked
  3188  002F14  6FC0               	movwf	comm_send_rply@cc& (0+255),b
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;comm.c: 22: CDCBufferOut[0x00] = 0x55;
  3192  002F16  0E55               	movlw	85
  3193  002F18  0101               	movlb	1	; () banked
  3194  002F1A  6F40               	movwf	_CDCBufferOut& (0+255),b
  3195                           
  3196                           ; BSR set to: 1
  3197                           ;comm.c: 23: CDCBufferOut[0x01] = cc;
  3198  002F1C  C0C0  F141         	movff	comm_send_rply@cc,_CDCBufferOut+1
  3199                           
  3200                           ; BSR set to: 1
  3201                           ;comm.c: 24: CDCBufferOut[0x03] = 0x00;
  3202  002F20  0E00               	movlw	0
  3203  002F22  0101               	movlb	1	; () banked
  3204  002F24  6F43               	movwf	(_CDCBufferOut+3)& (0+255),b
  3205                           
  3206                           ; BSR set to: 1
  3207                           ;comm.c: 25: CDCBufferOut[0x02] = CDCBufferOut[0x00] ^ CDCBufferOut[0x01] ^ CDCBufferOut
      +                          [0x03];
  3208  002F26  0101               	movlb	1	; () banked
  3209  002F28  5141               	movf	(_CDCBufferOut+1)& (0+255),w,b
  3210  002F2A  0101               	movlb	1	; () banked
  3211  002F2C  1943               	xorwf	(_CDCBufferOut+3)& (0+255),w,b
  3212  002F2E  0101               	movlb	1	; () banked
  3213  002F30  1940               	xorwf	_CDCBufferOut& (0+255),w,b
  3214  002F32  0101               	movlb	1	; () banked
  3215  002F34  6F42               	movwf	(_CDCBufferOut+2)& (0+255),b
  3216                           
  3217                           ;comm.c: 27: while (!(cdc_trf_state == 0)) CDCTxService();
  3218  002F36  D003               	goto	l6787
  3219  002F38                     l6785:
  3220  002F38  EC28  F00A         	call	_CDCTxService	;wreg free
  3221  002F3C  D000               	goto	l6787
  3222  002F3E                     l6787:
  3223  002F3E  5037               	movf	_cdc_trf_state,w,c
  3224  002F40  A4D8               	btfss	status,2,c
  3225  002F42  D7FA               	goto	l6785
  3226                           
  3227                           ;comm.c: 29: if((cdc_trf_state == 0)) {
  3228  002F44  5037               	movf	_cdc_trf_state,w,c
  3229  002F46  A4D8               	btfss	status,2,c
  3230  002F48  D00C               	goto	l6793
  3231                           
  3232                           ;comm.c: 30: putUSBUSART(CDCBufferOut, 4);
  3233  002F4A  0E40               	movlw	low _CDCBufferOut
  3234  002F4C  0100               	movlb	0	; () banked
  3235  002F4E  6FB4               	movwf	putUSBUSART@data& (0+255),b
  3236  002F50  0E01               	movlw	high _CDCBufferOut
  3237  002F52  0100               	movlb	0	; () banked
  3238  002F54  6FB5               	movwf	(putUSBUSART@data+1)& (0+255),b
  3239  002F56  0E04               	movlw	4
  3240  002F58  0100               	movlb	0	; () banked
  3241  002F5A  6FB6               	movwf	putUSBUSART@length& (0+255),b
  3242  002F5C  EC6F  F019         	call	_putUSBUSART	;wreg free
  3243                           
  3244                           ;comm.c: 31: } else {
  3245  002F60  0012               	return	
  3246  002F62                     l6793:
  3247                           
  3248                           ;comm.c: 32: txmiss_count++;
  3249  002F62  0100               	movlb	0	; () banked
  3250  002F64  4B8C               	infsnz	_txmiss_count& (0+255),f,b
  3251  002F66  2B8D               	incf	(_txmiss_count+1)& (0+255),f,b
  3252  002F68  0012               	return	
  3253                           
  3254                           ; BSR set to: 0
  3255  002F6A  0012               	return		;funcret
  3256  002F6C                     __end_of_comm_send_rply:
  3257                           	opt stack 0
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           prodh	equ	0xFF4
  3263                           prodl	equ	0xFF3
  3264                           intcon	equ	0xFF2
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           indf1	equ	0xFE7
  3268                           postdec1	equ	0xFE5
  3269                           fsr1h	equ	0xFE2
  3270                           fsr1l	equ	0xFE1
  3271                           indf2	equ	0xFDF
  3272                           postinc2	equ	0xFDE
  3273                           fsr2h	equ	0xFDA
  3274                           fsr2l	equ	0xFD9
  3275                           status	equ	0xFD8
  3276                           
  3277 ;; *************** function _comm_send_dat *****************
  3278 ;; Defined at:
  3279 ;;		line 36 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/comm.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  len             1    wreg     unsigned char 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  len             1   13[BANK0 ] unsigned char 
  3284 ;;  i               1   12[BANK0 ] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;		None               void
  3287 ;; Registers used:
  3288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3294 ;;      Params:         0       0       0       0       0       0       0       0       0
  3295 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3297 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3298 ;;Total ram usage:        2 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    6
  3301 ;; This function calls:
  3302 ;;		_CDCTxService
  3303 ;;		_putUSBUSART
  3304 ;; This function is called by:
  3305 ;;		_ProcessCDC
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text7
  3310  0029A4                     __ptext7:
  3311                           	opt stack 0
  3312  0029A4                     _comm_send_dat:
  3313                           	opt stack 22
  3314                           
  3315                           ;incstack = 0
  3316                           ;comm_send_dat@len stored from wreg
  3317  0029A4  0100               	movlb	0	; () banked
  3318  0029A6  6FC1               	movwf	comm_send_dat@len& (0+255),b
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;comm.c: 38: unsigned char i;
  3322                           ;comm.c: 39: if (len >60) {
  3323  0029A8  0E3C               	movlw	60
  3324  0029AA  0100               	movlb	0	; () banked
  3325  0029AC  65C1               	cpfsgt	comm_send_dat@len& (0+255),b
  3326  0029AE  D003               	goto	l904
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;comm.c: 40: len = 60;
  3330  0029B0  0E3C               	movlw	60
  3331  0029B2  0100               	movlb	0	; () banked
  3332  0029B4  6FC1               	movwf	comm_send_dat@len& (0+255),b
  3333  0029B6                     l904:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;comm.c: 41: }
  3337                           ;comm.c: 43: CDCBufferOut[0x00] = 0x55;
  3338  0029B6  0E55               	movlw	85
  3339  0029B8  0101               	movlb	1	; () banked
  3340  0029BA  6F40               	movwf	_CDCBufferOut& (0+255),b
  3341                           
  3342                           ;comm.c: 44: CDCBufferOut[0x01] = 0x20;
  3343  0029BC  0E20               	movlw	32
  3344  0029BE  0101               	movlb	1	; () banked
  3345  0029C0  6F41               	movwf	(_CDCBufferOut+1)& (0+255),b
  3346                           
  3347                           ; BSR set to: 1
  3348                           ;comm.c: 45: CDCBufferOut[0x03] = len;
  3349  0029C2  C0C1  F143         	movff	comm_send_dat@len,_CDCBufferOut+3
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;comm.c: 47: len+=4;
  3353  0029C6  0E04               	movlw	4
  3354  0029C8  0100               	movlb	0	; () banked
  3355  0029CA  27C1               	addwf	comm_send_dat@len& (0+255),f,b
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;comm.c: 49: CDCBufferOut[0x02] = 0;
  3359  0029CC  0E00               	movlw	0
  3360  0029CE  0101               	movlb	1	; () banked
  3361  0029D0  6F42               	movwf	(_CDCBufferOut+2)& (0+255),b
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;comm.c: 50: for (i = 0 ; i < len; i++) {
  3365  0029D2  0E00               	movlw	0
  3366  0029D4  0100               	movlb	0	; () banked
  3367  0029D6  6FC0               	movwf	comm_send_dat@i& (0+255),b
  3368  0029D8  D015               	goto	l6813
  3369  0029DA                     l6807:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;comm.c: 51: if (i != 0x02) {
  3373  0029DA  0E02               	movlw	2
  3374  0029DC  0100               	movlb	0	; () banked
  3375  0029DE  19C0               	xorwf	comm_send_dat@i& (0+255),w,b
  3376  0029E0  B4D8               	btfsc	status,2,c
  3377  0029E2  D00D               	goto	l6811
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;comm.c: 52: CDCBufferOut[0x02] ^= CDCBufferOut[i];
  3381  0029E4  0100               	movlb	0	; () banked
  3382  0029E6  51C0               	movf	comm_send_dat@i& (0+255),w,b
  3383  0029E8  0D01               	mullw	1
  3384  0029EA  0E40               	movlw	low _CDCBufferOut
  3385  0029EC  24F3               	addwf	prodl,w,c
  3386  0029EE  6ED9               	movwf	fsr2l,c
  3387  0029F0  0E01               	movlw	high _CDCBufferOut
  3388  0029F2  20F4               	addwfc	prodh,w,c
  3389  0029F4  6EDA               	movwf	fsr2h,c
  3390  0029F6  50DF               	movf	indf2,w,c
  3391  0029F8  0101               	movlb	1	; () banked
  3392  0029FA  1B42               	xorwf	(_CDCBufferOut+2)& (0+255),f,b
  3393  0029FC  D000               	goto	l6811
  3394  0029FE                     l6811:
  3395  0029FE  0100               	movlb	0	; () banked
  3396  002A00  2BC0               	incf	comm_send_dat@i& (0+255),f,b
  3397  002A02  D000               	goto	l6813
  3398  002A04                     l6813:
  3399                           
  3400                           ; BSR set to: 0
  3401  002A04  0100               	movlb	0	; () banked
  3402  002A06  51C1               	movf	comm_send_dat@len& (0+255),w,b
  3403  002A08  0100               	movlb	0	; () banked
  3404  002A0A  5DC0               	subwf	comm_send_dat@i& (0+255),w,b
  3405  002A0C  B0D8               	btfsc	status,0,c
  3406  002A0E  D005               	goto	l6817
  3407  002A10  D7E4               	goto	l6807
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;comm.c: 53: }
  3411                           ;comm.c: 54: }
  3412                           ;comm.c: 56: while (!(cdc_trf_state == 0)) CDCTxService();
  3413  002A12  D003               	goto	l6817
  3414  002A14                     l6815:
  3415  002A14  EC28  F00A         	call	_CDCTxService	;wreg free
  3416  002A18  D000               	goto	l6817
  3417  002A1A                     l6817:
  3418  002A1A  5037               	movf	_cdc_trf_state,w,c
  3419  002A1C  A4D8               	btfss	status,2,c
  3420  002A1E  D7FA               	goto	l6815
  3421                           
  3422                           ;comm.c: 58: if((cdc_trf_state == 0)) {
  3423  002A20  5037               	movf	_cdc_trf_state,w,c
  3424  002A22  A4D8               	btfss	status,2,c
  3425  002A24  D00B               	goto	l6823
  3426                           
  3427                           ;comm.c: 59: putUSBUSART(CDCBufferOut, len);
  3428  002A26  0E40               	movlw	low _CDCBufferOut
  3429  002A28  0100               	movlb	0	; () banked
  3430  002A2A  6FB4               	movwf	putUSBUSART@data& (0+255),b
  3431  002A2C  0E01               	movlw	high _CDCBufferOut
  3432  002A2E  0100               	movlb	0	; () banked
  3433  002A30  6FB5               	movwf	(putUSBUSART@data+1)& (0+255),b
  3434  002A32  C0C1  F0B6         	movff	comm_send_dat@len,putUSBUSART@length
  3435  002A36  EC6F  F019         	call	_putUSBUSART	;wreg free
  3436                           
  3437                           ;comm.c: 60: } else {
  3438  002A3A  0012               	return	
  3439  002A3C                     l6823:
  3440                           
  3441                           ;comm.c: 61: txmiss_count++;
  3442  002A3C  0100               	movlb	0	; () banked
  3443  002A3E  4B8C               	infsnz	_txmiss_count& (0+255),f,b
  3444  002A40  2B8D               	incf	(_txmiss_count+1)& (0+255),f,b
  3445  002A42  0012               	return	
  3446                           
  3447                           ; BSR set to: 0
  3448  002A44  0012               	return		;funcret
  3449  002A46                     __end_of_comm_send_dat:
  3450                           	opt stack 0
  3451                           tblptru	equ	0xFF8
  3452                           tblptrh	equ	0xFF7
  3453                           tblptrl	equ	0xFF6
  3454                           tablat	equ	0xFF5
  3455                           prodh	equ	0xFF4
  3456                           prodl	equ	0xFF3
  3457                           intcon	equ	0xFF2
  3458                           postinc0	equ	0xFEE
  3459                           wreg	equ	0xFE8
  3460                           indf1	equ	0xFE7
  3461                           postdec1	equ	0xFE5
  3462                           fsr1h	equ	0xFE2
  3463                           fsr1l	equ	0xFE1
  3464                           indf2	equ	0xFDF
  3465                           postinc2	equ	0xFDE
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _putUSBUSART *****************
  3471 ;; Defined at:
  3472 ;;		line 613 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  data            2    0[BANK0 ] PTR unsigned char 
  3475 ;;		 -> CDCBufferOut(64), 
  3476 ;;  length          1    2[BANK0 ] unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;		None               void
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3488 ;;      Params:         0       3       0       0       0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3491 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3492 ;;Total ram usage:        3 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    4
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_comm_send_rply
  3499 ;;		_comm_send_dat
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text8
  3504  0032DE                     __ptext8:
  3505                           	opt stack 0
  3506  0032DE                     _putUSBUSART:
  3507                           	opt stack 23
  3508                           
  3509                           ;usb_device_cdc.c: 638: {PIE3bits.USBIE = 0;};
  3510                           
  3511                           ;incstack = 0
  3512  0032DE  94A3               	bcf	4003,2,c	;volatile
  3513                           
  3514                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  3515  0032E0  5037               	movf	_cdc_trf_state,w,c
  3516  0032E2  A4D8               	btfss	status,2,c
  3517  0032E4  D00C               	goto	l6553
  3518                           
  3519                           ;usb_device_cdc.c: 640: {
  3520                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3521  0032E6  C0B4  F07D         	movff	putUSBUSART@data,_pCDCSrc
  3522  0032EA  C0B5  F07E         	movff	putUSBUSART@data+1,_pCDCSrc+1
  3523  0032EE  C0B6  F038         	movff	putUSBUSART@length,_cdc_tx_len
  3524  0032F2  0E01               	movlw	1
  3525  0032F4  0100               	movlb	0	; () banked
  3526  0032F6  6F99               	movwf	_cdc_mem_type& (0+255),b
  3527                           
  3528                           ; BSR set to: 0
  3529  0032F8  0E01               	movlw	1
  3530  0032FA  6E37               	movwf	_cdc_trf_state,c
  3531  0032FC  D000               	goto	l6553
  3532  0032FE                     l6553:
  3533                           
  3534                           ;usb_device_cdc.c: 642: }
  3535                           ;usb_device_cdc.c: 643: {PIE3bits.USBIE = 1;};
  3536  0032FE  84A3               	bsf	4003,2,c	;volatile
  3537  003300  0012               	return		;funcret
  3538  003302                     __end_of_putUSBUSART:
  3539                           	opt stack 0
  3540                           tblptru	equ	0xFF8
  3541                           tblptrh	equ	0xFF7
  3542                           tblptrl	equ	0xFF6
  3543                           tablat	equ	0xFF5
  3544                           prodh	equ	0xFF4
  3545                           prodl	equ	0xFF3
  3546                           intcon	equ	0xFF2
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           indf1	equ	0xFE7
  3550                           postdec1	equ	0xFE5
  3551                           fsr1h	equ	0xFE2
  3552                           fsr1l	equ	0xFE1
  3553                           indf2	equ	0xFDF
  3554                           postinc2	equ	0xFDE
  3555                           fsr2h	equ	0xFDA
  3556                           fsr2l	equ	0xFD9
  3557                           status	equ	0xFD8
  3558                           
  3559 ;; *************** function _CDCTxService *****************
  3560 ;; Defined at:
  3561 ;;		line 893 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
  3566 ;;  i               1   10[BANK0 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;		None               void
  3569 ;; Registers used:
  3570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0
  3577 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3578 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3579 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3580 ;;Total ram usage:        5 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    5
  3583 ;; This function calls:
  3584 ;;		_USBTransferOnePacket
  3585 ;; This function is called by:
  3586 ;;		_ProcessIO
  3587 ;;		_comm_send_rply
  3588 ;;		_comm_send_dat
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text9
  3593  001450                     __ptext9:
  3594                           	opt stack 0
  3595  001450                     _CDCTxService:
  3596                           	opt stack 22
  3597                           
  3598                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  3599                           ;usb_device_cdc.c: 896: uint8_t i;
  3600                           ;usb_device_cdc.c: 898: {PIE3bits.USBIE = 0;};
  3601                           
  3602                           ;incstack = 0
  3603  001450  94A3               	bcf	4003,2,c	;volatile
  3604                           
  3605                           ;usb_device_cdc.c: 900: {};
  3606                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  3607  001452  0100               	movlb	0	; () banked
  3608  001454  5180               	movf	_CDCDataInHandle& (0+255),w,b
  3609  001456  0100               	movlb	0	; () banked
  3610  001458  1181               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3611  00145A  B4D8               	btfsc	status,2,c
  3612  00145C  D013               	goto	l6399
  3613                           
  3614                           ; BSR set to: 0
  3615  00145E  C080  FFD9         	movff	_CDCDataInHandle,fsr2l
  3616  001462  C081  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3617  001466  0100               	movlb	0	; () banked
  3618  001468  AEDF               	btfss	indf2,7,c
  3619  00146A  D004               	goto	u5770
  3620  00146C  0100               	movlb	0	; () banked
  3621  00146E  6BBB               	clrf	??_CDCTxService& (0+255),b
  3622  001470  2BBB               	incf	??_CDCTxService& (0+255),f,b
  3623  001472  D002               	goto	u5778
  3624  001474                     u5770:
  3625  001474  0100               	movlb	0	; () banked
  3626  001476  6BBB               	clrf	??_CDCTxService& (0+255),b
  3627  001478                     u5778:
  3628  001478  0100               	movlb	0	; () banked
  3629  00147A  51BB               	movf	??_CDCTxService& (0+255),w,b
  3630  00147C  0100               	movlb	0	; () banked
  3631  00147E  6FBC               	movwf	_CDCTxService$3255& (0+255),b
  3632  001480  6BBD               	clrf	(_CDCTxService$3255+1)& (0+255),b
  3633  001482  D006               	goto	l6401
  3634  001484                     l6399:
  3635                           
  3636                           ; BSR set to: 0
  3637  001484  0E00               	movlw	0
  3638  001486  0100               	movlb	0	; () banked
  3639  001488  6FBD               	movwf	(_CDCTxService$3255+1)& (0+255),b
  3640  00148A  0E00               	movlw	0
  3641  00148C  6FBC               	movwf	_CDCTxService$3255& (0+255),b
  3642  00148E  D000               	goto	l6401
  3643  001490                     l6401:
  3644                           
  3645                           ; BSR set to: 0
  3646  001490  0100               	movlb	0	; () banked
  3647  001492  51BC               	movf	_CDCTxService$3255& (0+255),w,b
  3648  001494  0100               	movlb	0	; () banked
  3649  001496  11BD               	iorwf	(_CDCTxService$3255+1)& (0+255),w,b
  3650  001498  B4D8               	btfsc	status,2,c
  3651  00149A  D002               	goto	l6405
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;usb_device_cdc.c: 903: {
  3655                           ;usb_device_cdc.c: 904: {PIE3bits.USBIE = 1;};
  3656  00149C  84A3               	bsf	4003,2,c	;volatile
  3657                           
  3658                           ;usb_device_cdc.c: 905: return;
  3659  00149E  0012               	return	
  3660  0014A0                     l6405:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;usb_device_cdc.c: 906: }
  3664                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  3665  0014A0  0E03               	movlw	3
  3666  0014A2  1837               	xorwf	_cdc_trf_state,w,c
  3667  0014A4  A4D8               	btfss	status,2,c
  3668  0014A6  D002               	goto	l800
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  3672  0014A8  0E00               	movlw	0
  3673  0014AA  6E37               	movwf	_cdc_trf_state,c
  3674  0014AC                     l800:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  3678  0014AC  5037               	movf	_cdc_trf_state,w,c
  3679  0014AE  A4D8               	btfss	status,2,c
  3680  0014B0  D002               	goto	l6411
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;usb_device_cdc.c: 920: {
  3684                           ;usb_device_cdc.c: 921: {PIE3bits.USBIE = 1;};
  3685  0014B2  84A3               	bsf	4003,2,c	;volatile
  3686                           
  3687                           ;usb_device_cdc.c: 922: return;
  3688  0014B4  0012               	return	
  3689  0014B6                     l6411:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;usb_device_cdc.c: 923: }
  3693                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  3694  0014B6  0E02               	movlw	2
  3695  0014B8  1837               	xorwf	_cdc_trf_state,w,c
  3696  0014BA  A4D8               	btfss	status,2,c
  3697  0014BC  D016               	goto	l6417
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;usb_device_cdc.c: 929: {
  3701                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3702  0014BE  0E01               	movlw	1
  3703  0014C0  0100               	movlb	0	; () banked
  3704  0014C2  6FB4               	movwf	USBTransferOnePacket@dir& (0+255),b
  3705  0014C4  0E00               	movlw	0
  3706  0014C6  0100               	movlb	0	; () banked
  3707  0014C8  6FB5               	movwf	USBTransferOnePacket@data& (0+255),b
  3708  0014CA  0E00               	movlw	0
  3709  0014CC  0100               	movlb	0	; () banked
  3710  0014CE  6FB6               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3711  0014D0  0E00               	movlw	0
  3712  0014D2  0100               	movlb	0	; () banked
  3713  0014D4  6FB7               	movwf	USBTransferOnePacket@len& (0+255),b
  3714  0014D6  0E02               	movlw	2
  3715  0014D8  ECD8  F010         	call	_USBTransferOnePacket
  3716  0014DC  C0B4  F080         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3717  0014E0  C0B5  F081         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3718                           
  3719                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  3720  0014E4  0E03               	movlw	3
  3721  0014E6  6E37               	movwf	_cdc_trf_state,c
  3722                           
  3723                           ;usb_device_cdc.c: 933: }
  3724  0014E8  D076               	goto	l6461
  3725  0014EA                     l6417:
  3726                           
  3727                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  3728  0014EA  0437               	decf	_cdc_trf_state,w,c
  3729  0014EC  A4D8               	btfss	status,2,c
  3730  0014EE  D073               	goto	l6461
  3731                           
  3732                           ;usb_device_cdc.c: 935: {
  3733                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  3734  0014F0  0E40               	movlw	64
  3735  0014F2  6438               	cpfsgt	_cdc_tx_len,c
  3736  0014F4  D004               	goto	l805
  3737                           
  3738                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  3739  0014F6  0E40               	movlw	64
  3740  0014F8  0100               	movlb	0	; () banked
  3741  0014FA  6FBF               	movwf	CDCTxService@byte_to_send& (0+255),b
  3742  0014FC  D003               	goto	l6423
  3743  0014FE                     l805:
  3744                           
  3745                           ;usb_device_cdc.c: 941: else
  3746                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  3747  0014FE  C038  F0BF         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3748  001502  D000               	goto	l6423
  3749  001504                     l6423:
  3750                           
  3751                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  3752  001504  0100               	movlb	0	; () banked
  3753  001506  51BF               	movf	CDCTxService@byte_to_send& (0+255),w,b
  3754  001508  0800               	sublw	0
  3755  00150A  2438               	addwf	_cdc_tx_len,w,c
  3756  00150C  6E38               	movwf	_cdc_tx_len,c
  3757                           
  3758                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3759  00150E  0EC0               	movlw	low _cdc_data_tx
  3760  001510  0100               	movlb	0	; () banked
  3761  001512  6F7A               	movwf	_pCDCDst& (0+255),b
  3762  001514  0E02               	movlw	high _cdc_data_tx
  3763  001516  0100               	movlb	0	; () banked
  3764  001518  6F7B               	movwf	(_pCDCDst+1)& (0+255),b
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;usb_device_cdc.c: 951: i = byte_to_send;
  3768  00151A  C0BF  F0BE         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  3772  00151E  0100               	movlb	0	; () banked
  3773  001520  5199               	movf	_cdc_mem_type& (0+255),w,b
  3774  001522  0100               	movlb	0	; () banked
  3775  001524  B4D8               	btfsc	status,2,c
  3776  001526  D015               	goto	l6439
  3777  001528  D02F               	goto	l6449
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;usb_device_cdc.c: 953: {
  3781                           ;usb_device_cdc.c: 954: while(i)
  3782  00152A  D013               	goto	l6439
  3783  00152C                     l6431:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;usb_device_cdc.c: 955: {
  3787                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  3788  00152C  C07D  FFD9         	movff	_pCDCSrc,fsr2l
  3789  001530  C07E  FFDA         	movff	_pCDCSrc+1,fsr2h
  3790  001534  C07A  FFE1         	movff	_pCDCDst,fsr1l
  3791  001538  C07B  FFE2         	movff	_pCDCDst+1,fsr1h
  3792  00153C  CFDF FFE7          	movff	indf2,indf1
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  3796  001540  0100               	movlb	0	; () banked
  3797  001542  4B7A               	infsnz	_pCDCDst& (0+255),f,b
  3798  001544  2B7B               	incf	(_pCDCDst+1)& (0+255),f,b
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  3802  001546  0100               	movlb	0	; () banked
  3803  001548  4B7D               	infsnz	_pCDCSrc& (0+255),f,b
  3804  00154A  2B7E               	incf	(_pCDCSrc+1)& (0+255),f,b
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;usb_device_cdc.c: 959: i--;
  3808  00154C  0100               	movlb	0	; () banked
  3809  00154E  07BE               	decf	CDCTxService@i& (0+255),f,b
  3810  001550  D000               	goto	l6439
  3811  001552                     l6439:
  3812                           
  3813                           ; BSR set to: 0
  3814  001552  0100               	movlb	0	; () banked
  3815  001554  51BE               	movf	CDCTxService@i& (0+255),w,b
  3816  001556  0100               	movlb	0	; () banked
  3817  001558  B4D8               	btfsc	status,2,c
  3818  00155A  D01D               	goto	l6451
  3819  00155C  D7E7               	goto	l6431
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;usb_device_cdc.c: 960: }
  3823                           ;usb_device_cdc.c: 961: }
  3824  00155E  D01B               	goto	l6451
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;usb_device_cdc.c: 962: else
  3828                           ;usb_device_cdc.c: 963: {
  3829                           ;usb_device_cdc.c: 964: while(i)
  3830  001560  D013               	goto	l6449
  3831  001562                     l6441:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;usb_device_cdc.c: 965: {
  3835                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  3836  001562  C07D  FFD9         	movff	_pCDCSrc,fsr2l
  3837  001566  C07E  FFDA         	movff	_pCDCSrc+1,fsr2h
  3838  00156A  C07A  FFE1         	movff	_pCDCDst,fsr1l
  3839  00156E  C07B  FFE2         	movff	_pCDCDst+1,fsr1h
  3840  001572  CFDF FFE7          	movff	indf2,indf1
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  3844  001576  0100               	movlb	0	; () banked
  3845  001578  4B7A               	infsnz	_pCDCDst& (0+255),f,b
  3846  00157A  2B7B               	incf	(_pCDCDst+1)& (0+255),f,b
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  3850  00157C  0100               	movlb	0	; () banked
  3851  00157E  4B7D               	infsnz	_pCDCSrc& (0+255),f,b
  3852  001580  2B7E               	incf	(_pCDCSrc+1)& (0+255),f,b
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;usb_device_cdc.c: 969: i--;
  3856  001582  0100               	movlb	0	; () banked
  3857  001584  07BE               	decf	CDCTxService@i& (0+255),f,b
  3858  001586  D000               	goto	l6449
  3859  001588                     l6449:
  3860                           
  3861                           ; BSR set to: 0
  3862  001588  0100               	movlb	0	; () banked
  3863  00158A  51BE               	movf	CDCTxService@i& (0+255),w,b
  3864  00158C  0100               	movlb	0	; () banked
  3865  00158E  B4D8               	btfsc	status,2,c
  3866  001590  D002               	goto	l6451
  3867  001592  D7E7               	goto	l6441
  3868                           
  3869                           ; BSR set to: 0
  3870  001594  D000               	goto	l6451
  3871  001596                     l6451:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;usb_device_cdc.c: 970: }
  3875                           ;usb_device_cdc.c: 971: }
  3876                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  3877  001596  5038               	movf	_cdc_tx_len,w,c
  3878  001598  A4D8               	btfss	status,2,c
  3879  00159A  D00A               	goto	l6459
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;usb_device_cdc.c: 978: {
  3883                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  3884  00159C  0E40               	movlw	64
  3885  00159E  0100               	movlb	0	; () banked
  3886  0015A0  19BF               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  3887  0015A2  A4D8               	btfss	status,2,c
  3888  0015A4  D002               	goto	l6457
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  3892  0015A6  0E02               	movlw	2
  3893  0015A8  D001               	goto	L1
  3894  0015AA                     l6457:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;usb_device_cdc.c: 981: else
  3898                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  3899  0015AA  0E03               	movlw	3
  3900  0015AC                     L1:
  3901  0015AC  6E37               	movwf	_cdc_trf_state,c
  3902                           
  3903                           ; BSR set to: 0
  3904  0015AE  D000               	goto	l6459
  3905  0015B0                     l6459:
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;usb_device_cdc.c: 983: }
  3909                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3910  0015B0  0E01               	movlw	1
  3911  0015B2  0100               	movlb	0	; () banked
  3912  0015B4  6FB4               	movwf	USBTransferOnePacket@dir& (0+255),b
  3913  0015B6  0EC0               	movlw	low _cdc_data_tx
  3914  0015B8  0100               	movlb	0	; () banked
  3915  0015BA  6FB5               	movwf	USBTransferOnePacket@data& (0+255),b
  3916  0015BC  0E02               	movlw	high _cdc_data_tx
  3917  0015BE  0100               	movlb	0	; () banked
  3918  0015C0  6FB6               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3919  0015C2  C0BF  F0B7         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3920  0015C6  0E02               	movlw	2
  3921  0015C8  ECD8  F010         	call	_USBTransferOnePacket
  3922  0015CC  C0B4  F080         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3923  0015D0  C0B5  F081         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3924  0015D4  D000               	goto	l6461
  3925  0015D6                     l6461:
  3926                           
  3927                           ;usb_device_cdc.c: 986: }
  3928                           ;usb_device_cdc.c: 988: {PIE3bits.USBIE = 1;};
  3929  0015D6  84A3               	bsf	4003,2,c	;volatile
  3930  0015D8  0012               	return		;funcret
  3931  0015DA                     __end_of_CDCTxService:
  3932                           	opt stack 0
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           indf1	equ	0xFE7
  3943                           postdec1	equ	0xFE5
  3944                           fsr1h	equ	0xFE2
  3945                           fsr1l	equ	0xFE1
  3946                           indf2	equ	0xFDF
  3947                           postinc2	equ	0xFDE
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function _Write_b_eep *****************
  3953 ;; Defined at:
  3954 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\write_B.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  badd            2    0[BANK0 ] unsigned int 
  3957 ;;  bdat            1    2[BANK0 ] unsigned char 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  GIE_BIT_VAL     1    3[BANK0 ] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;		None               void
  3962 ;; Registers used:
  3963 ;;		wreg, status,2
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3969 ;;      Params:         0       3       0       0       0       0       0       0       0
  3970 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3972 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3973 ;;Total ram usage:        4 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    4
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_ProcessCDC
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text10
  3984  0030E6                     __ptext10:
  3985                           	opt stack 0
  3986  0030E6                     _Write_b_eep:
  3987                           	opt stack 24
  3988                           
  3989                           ;incstack = 0
  3990  0030E6  0E00               	movlw	0
  3991  0030E8  0100               	movlb	0	; () banked
  3992  0030EA  6FB7               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  3993                           
  3994                           ; BSR set to: 0
  3995  0030EC  C0B4  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  3996                           
  3997                           ; BSR set to: 0
  3998  0030F0  C0B6  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  3999                           
  4000                           ; BSR set to: 0
  4001  0030F4  9EA6               	bcf	4006,7,c	;volatile
  4002                           
  4003                           ; BSR set to: 0
  4004  0030F6  9CA6               	bcf	4006,6,c	;volatile
  4005                           
  4006                           ; BSR set to: 0
  4007  0030F8  84A6               	bsf	4006,2,c	;volatile
  4008                           
  4009                           ; BSR set to: 0
  4010  0030FA  0E00               	movlw	0
  4011  0030FC  BEF2               	btfsc	intcon,7,c	;volatile
  4012  0030FE  0E01               	movlw	1
  4013  003100  0100               	movlb	0	; () banked
  4014  003102  6FB7               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  4015                           
  4016                           ; BSR set to: 0
  4017  003104  9EF2               	bcf	intcon,7,c	;volatile
  4018                           
  4019                           ; BSR set to: 0
  4020  003106  0E55               	movlw	85
  4021  003108  6EA7               	movwf	4007,c	;volatile
  4022                           
  4023                           ; BSR set to: 0
  4024  00310A  0EAA               	movlw	170
  4025  00310C  6EA7               	movwf	4007,c	;volatile
  4026                           
  4027                           ; BSR set to: 0
  4028  00310E  82A6               	bsf	4006,1,c	;volatile
  4029  003110  D000               	goto	l1023
  4030  003112                     l1023:
  4031  003112  B2A6               	btfsc	4006,1,c	;volatile
  4032  003114  D7FE               	goto	l1023
  4033  003116  0100               	movlb	0	; () banked
  4034  003118  B1B7               	btfsc	Write_b_eep@GIE_BIT_VAL& (0+255),0,b
  4035  00311A  D002               	bra	u6505
  4036  00311C  9EF2               	bcf	intcon,7,c	;volatile
  4037  00311E  D001               	bra	u6506
  4038  003120                     u6505:
  4039  003120  8EF2               	bsf	intcon,7,c	;volatile
  4040  003122                     u6506:
  4041  003122  94A6               	bcf	4006,2,c	;volatile
  4042  003124  0012               	return		;funcret
  4043  003126                     __end_of_Write_b_eep:
  4044                           	opt stack 0
  4045                           tblptru	equ	0xFF8
  4046                           tblptrh	equ	0xFF7
  4047                           tblptrl	equ	0xFF6
  4048                           tablat	equ	0xFF5
  4049                           prodh	equ	0xFF4
  4050                           prodl	equ	0xFF3
  4051                           intcon	equ	0xFF2
  4052                           postinc0	equ	0xFEE
  4053                           wreg	equ	0xFE8
  4054                           indf1	equ	0xFE7
  4055                           postdec1	equ	0xFE5
  4056                           fsr1h	equ	0xFE2
  4057                           fsr1l	equ	0xFE1
  4058                           indf2	equ	0xFDF
  4059                           postinc2	equ	0xFDE
  4060                           fsr2h	equ	0xFDA
  4061                           fsr2l	equ	0xFD9
  4062                           status	equ	0xFD8
  4063                           
  4064 ;; *************** function _USBDeviceTasks *****************
  4065 ;; Defined at:
  4066 ;;		line 489 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  i               1   29[BANK0 ] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;		None               void
  4073 ;; Registers used:
  4074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4080 ;;      Params:         0       0       0       0       0       0       0       0       0
  4081 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4083 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4084 ;;Total ram usage:        1 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:   12
  4087 ;; This function calls:
  4088 ;;		_USBCtrlEPAllowStatusStage
  4089 ;;		_USBCtrlEPService
  4090 ;;		_USBDeviceInit
  4091 ;;		_USBStallHandler
  4092 ;;		_USBSuspend
  4093 ;;		_USBWakeFromSuspend
  4094 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4095 ;; This function is called by:
  4096 ;;		_ProcessIO
  4097 ;;		_ProcessCDC
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text11
  4102  0015DA                     __ptext11:
  4103                           	opt stack 0
  4104  0015DA                     _USBDeviceTasks:
  4105                           	opt stack 17
  4106                           
  4107                           ;usb_device.c: 491: uint8_t i;
  4108                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
  4109                           
  4110                           ;incstack = 0
  4111  0015DA  0100               	movlb	0	; () banked
  4112  0015DC  0595               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4113  0015DE  B4D8               	btfsc	status,2,c
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;usb_device.c: 603: {
  4117                           ;usb_device.c: 613: if(!UCONbits.SE0)
  4118  0015E0  BA60               	btfsc	3936,5,c	;volatile
  4119  0015E2  D008               	goto	l6657
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;usb_device.c: 614: {
  4123                           ;usb_device.c: 615: {UIR = 0;};
  4124  0015E4  0E00               	movlw	0
  4125  0015E6  6E65               	movwf	3941,c	;volatile
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
  4129  0015E8  8064               	bsf	3940,0,c	;volatile
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
  4133  0015EA  8864               	bsf	3940,4,c	;volatile
  4134                           
  4135                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
  4136  0015EC  0E02               	movlw	2
  4137  0015EE  0100               	movlb	0	; () banked
  4138  0015F0  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
  4139                           
  4140                           ; BSR set to: 0
  4141  0015F2  D000               	goto	l6657
  4142  0015F4                     l6657:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;usb_device.c: 622: }
  4146                           ;usb_device.c: 623: }
  4147                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4148  0015F4  B465               	btfsc	3941,2,c	;volatile
  4149                           
  4150                           ; BSR set to: 0
  4151  0015F6  A464               	btfss	3940,2,c	;volatile
  4152  0015F8  D004               	goto	l6665
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;usb_device.c: 640: {
  4156                           ;usb_device.c: 641: (UIR &= 0xFB);
  4157  0015FA  9465               	bcf	3941,2,c	;volatile
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;usb_device.c: 645: USBWakeFromSuspend();
  4161  0015FC  ECB0  F018         	call	_USBWakeFromSuspend	;wreg free
  4162  001600  D000               	goto	l6665
  4163  001602                     l6665:
  4164                           
  4165                           ;usb_device.c: 647: }
  4166                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
  4167  001602  A260               	btfss	3936,1,c	;volatile
  4168  001604  D002               	goto	l454
  4169                           
  4170                           ;usb_device.c: 653: {
  4171                           ;usb_device.c: 654: PIR3bits.USBIF = 0;;
  4172  001606  94A4               	bcf	4004,2,c	;volatile
  4173                           
  4174                           ;usb_device.c: 655: return;
  4175  001608  0012               	return	
  4176  00160A                     l454:
  4177                           
  4178                           ;usb_device.c: 656: }
  4179                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4180  00160A  B065               	btfsc	3941,0,c	;volatile
  4181  00160C  A064               	btfss	3940,0,c	;volatile
  4182  00160E  D008               	goto	l6679
  4183                           
  4184                           ;usb_device.c: 669: {
  4185                           ;usb_device.c: 670: USBDeviceInit();
  4186  001610  ECAD  F00B         	call	_USBDeviceInit	;wreg free
  4187                           
  4188                           ;usb_device.c: 674: {PIE3bits.USBIE = 1;};
  4189  001614  84A3               	bsf	4003,2,c	;volatile
  4190                           
  4191                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
  4192  001616  0E04               	movlw	4
  4193  001618  0100               	movlb	0	; () banked
  4194  00161A  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;usb_device.c: 686: (UIR &= 0xFE);
  4198  00161C  9065               	bcf	3941,0,c	;volatile
  4199  00161E  D000               	goto	l6679
  4200  001620                     l6679:
  4201                           
  4202                           ;usb_device.c: 687: }
  4203                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4204  001620  B865               	btfsc	3941,4,c	;volatile
  4205  001622  A864               	btfss	3940,4,c	;volatile
  4206  001624  D004               	goto	l6687
  4207                           
  4208                           ;usb_device.c: 693: {
  4209                           ;usb_device.c: 698: USBSuspend();
  4210  001626  EC03  F019         	call	_USBSuspend	;wreg free
  4211                           
  4212                           ;usb_device.c: 701: (UIR &= 0xEF);
  4213  00162A  9865               	bcf	3941,4,c	;volatile
  4214  00162C  D000               	goto	l6687
  4215  00162E                     l6687:
  4216                           
  4217                           ;usb_device.c: 702: }
  4218                           ;usb_device.c: 704: if(UIRbits.SOFIF)
  4219  00162E  AC65               	btfss	3941,6,c	;volatile
  4220  001630  D024               	goto	l6703
  4221                           
  4222                           ;usb_device.c: 705: {
  4223                           ;usb_device.c: 706: if(UIEbits.SOFIE)
  4224  001632  AC64               	btfss	3940,6,c	;volatile
  4225  001634  D013               	goto	l6693
  4226                           
  4227                           ;usb_device.c: 707: {
  4228                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4229  001636  0E00               	movlw	0
  4230  001638  0100               	movlb	0	; () banked
  4231  00163A  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  4232  00163C  0E73               	movlw	115
  4233  00163E  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  4234  001640  0E00               	movlw	0
  4235  001642  0100               	movlb	0	; () banked
  4236  001644  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  4237  001646  0E00               	movlw	0
  4238  001648  0100               	movlb	0	; () banked
  4239  00164A  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  4240  00164C  0E00               	movlw	0
  4241  00164E  0100               	movlb	0	; () banked
  4242  001650  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  4243  001652  0E01               	movlw	1
  4244  001654  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  4245  001656  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4246  00165A  D000               	goto	l6693
  4247  00165C                     l6693:
  4248                           
  4249                           ;usb_device.c: 709: }
  4250                           ;usb_device.c: 710: (UIR &= 0xBF);
  4251  00165C  9C65               	bcf	3941,6,c	;volatile
  4252                           
  4253                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4254  00165E  0100               	movlb	0	; () banked
  4255  001660  5198               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
  4256  001662  B4D8               	btfsc	status,2,c
  4257  001664  D003               	goto	l6699
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;usb_device.c: 736: {
  4261                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4262  001666  0100               	movlb	0	; () banked
  4263  001668  0798               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
  4264  00166A  D000               	goto	l6699
  4265  00166C                     l6699:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;usb_device.c: 738: }
  4269                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4270  00166C  0100               	movlb	0	; () banked
  4271  00166E  5198               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
  4272  001670  A4D8               	btfss	status,2,c
  4273  001672  D003               	goto	l6703
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;usb_device.c: 745: {
  4277                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4278  001674  ECB5  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4279  001678  D000               	goto	l6703
  4280  00167A                     l6703:
  4281                           
  4282                           ;usb_device.c: 747: }
  4283                           ;usb_device.c: 749: }
  4284                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4285  00167A  BA65               	btfsc	3941,5,c	;volatile
  4286  00167C  AA64               	btfss	3940,5,c	;volatile
  4287  00167E  D003               	goto	l6709
  4288                           
  4289                           ;usb_device.c: 752: {
  4290                           ;usb_device.c: 753: USBStallHandler();
  4291  001680  EC51  F018         	call	_USBStallHandler	;wreg free
  4292  001684  D000               	goto	l6709
  4293  001686                     l6709:
  4294                           
  4295                           ;usb_device.c: 754: }
  4296                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4297  001686  B265               	btfsc	3941,1,c	;volatile
  4298  001688  A264               	btfss	3940,1,c	;volatile
  4299  00168A  D014               	goto	l6717
  4300                           
  4301                           ;usb_device.c: 757: {
  4302                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4303  00168C  0E7F               	movlw	127
  4304  00168E  0100               	movlb	0	; () banked
  4305  001690  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  4306  001692  69C0               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  4307  001694  0E00               	movlw	0
  4308  001696  0100               	movlb	0	; () banked
  4309  001698  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  4310  00169A  0E00               	movlw	0
  4311  00169C  0100               	movlb	0	; () banked
  4312  00169E  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  4313  0016A0  0E00               	movlw	0
  4314  0016A2  0100               	movlb	0	; () banked
  4315  0016A4  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  4316  0016A6  0E01               	movlw	1
  4317  0016A8  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  4318  0016AA  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4319                           
  4320                           ;usb_device.c: 759: {UEIR = 0;};
  4321  0016AE  0E00               	movlw	0
  4322  0016B0  6E67               	movwf	3943,c	;volatile
  4323  0016B2  D000               	goto	l6717
  4324  0016B4                     l6717:
  4325                           
  4326                           ;usb_device.c: 767: }
  4327                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4328  0016B4  0E04               	movlw	4
  4329  0016B6  0100               	movlb	0	; () banked
  4330  0016B8  6195               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4331  0016BA  D002               	goto	l464
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;usb_device.c: 775: {
  4335                           ;usb_device.c: 776: PIR3bits.USBIF = 0;;
  4336  0016BC  94A4               	bcf	4004,2,c	;volatile
  4337                           
  4338                           ;usb_device.c: 777: return;
  4339  0016BE  0012               	return	
  4340  0016C0                     l464:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;usb_device.c: 778: }
  4344                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4345  0016C0  A664               	btfss	3940,3,c	;volatile
  4346  0016C2  D049               	goto	l465
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;usb_device.c: 784: {
  4350                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4351  0016C4  0E00               	movlw	0
  4352  0016C6  0100               	movlb	0	; () banked
  4353  0016C8  6FD1               	movwf	USBDeviceTasks@i& (0+255),b
  4354  0016CA                     l6723:
  4355                           
  4356                           ; BSR set to: 0
  4357  0016CA  0E03               	movlw	3
  4358  0016CC  0100               	movlb	0	; () banked
  4359  0016CE  65D1               	cpfsgt	USBDeviceTasks@i& (0+255),b
  4360  0016D0  D001               	goto	l466
  4361                           
  4362                           ; BSR set to: 0
  4363  0016D2  D041               	goto	l465
  4364  0016D4                     l466:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;usb_device.c: 786: {
  4368                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4369  0016D4  A665               	btfss	3941,3,c	;volatile
  4370  0016D6  D03F               	goto	l465
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;usb_device.c: 788: {
  4374                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4375  0016D8  CF61 F0B3          	movff	3937,_USTATcopy	;volatile
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4379  0016DC  0100               	movlb	0	; () banked
  4380  0016DE  31B3               	rrcf	_USTATcopy& (0+255),w,b	;volatile
  4381  0016E0  32E8               	rrcf	wreg,f,c
  4382  0016E2  32E8               	rrcf	wreg,f,c
  4383  0016E4  0B0F               	andlw	15
  4384  0016E6  0100               	movlb	0	; () banked
  4385  0016E8  6F9B               	movwf	_endpoint_number& (0+255),b	;volatile
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;usb_device.c: 793: (UIR &= 0xF7);
  4389  0016EA  9665               	bcf	3941,3,c	;volatile
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4393  0016EC  0100               	movlb	0	; () banked
  4394  0016EE  B5B3               	btfsc	_USTATcopy& (0+255),2,b	;volatile
  4395  0016F0  D008               	goto	l6737
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;usb_device.c: 799: {
  4399                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4400  0016F2  0100               	movlb	0	; () banked
  4401  0016F4  519B               	movf	_endpoint_number& (0+255),w,b	;volatile
  4402  0016F6  0D01               	mullw	1
  4403  0016F8  0E77               	movlw	low _ep_data_out
  4404  0016FA  24F3               	addwf	prodl,w,c
  4405  0016FC  6ED9               	movwf	fsr2l,c
  4406  0016FE  0E00               	movlw	high _ep_data_out
  4407  001700  D007               	goto	L2
  4408  001702                     l6737:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;usb_device.c: 802: else
  4412                           ;usb_device.c: 803: {
  4413                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4414  001702  0100               	movlb	0	; () banked
  4415  001704  519B               	movf	_endpoint_number& (0+255),w,b	;volatile
  4416  001706  0D01               	mullw	1
  4417  001708  0E74               	movlw	low _ep_data_in
  4418  00170A  24F3               	addwf	prodl,w,c
  4419  00170C  6ED9               	movwf	fsr2l,c
  4420  00170E  0E00               	movlw	high _ep_data_in
  4421  001710                     L2:
  4422  001710  20F4               	addwfc	prodh,w,c
  4423  001712  6EDA               	movwf	fsr2h,c
  4424  001714  0100               	movlb	0	; () banked
  4425  001716  70DF               	btg	indf2,0,c
  4426  001718  D000               	goto	l6739
  4427  00171A                     l6739:
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;usb_device.c: 805: }
  4431                           ;usb_device.c: 810: if(endpoint_number == 0)
  4432  00171A  0100               	movlb	0	; () banked
  4433  00171C  519B               	movf	_endpoint_number& (0+255),w,b	;volatile
  4434  00171E  A4D8               	btfss	status,2,c
  4435  001720  D003               	goto	l6743
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;usb_device.c: 811: {
  4439                           ;usb_device.c: 812: USBCtrlEPService();
  4440  001722  EC66  F010         	call	_USBCtrlEPService	;wreg free
  4441                           
  4442                           ;usb_device.c: 813: }
  4443  001726  D014               	goto	l6745
  4444  001728                     l6743:
  4445                           
  4446                           ;usb_device.c: 814: else
  4447                           ;usb_device.c: 815: {
  4448                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4449  001728  0E00               	movlw	0
  4450  00172A  0100               	movlb	0	; () banked
  4451  00172C  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  4452  00172E  0E72               	movlw	114
  4453  001730  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  4454  001732  0EB3               	movlw	low _USTATcopy
  4455  001734  0100               	movlb	0	; () banked
  4456  001736  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  4457  001738  0E00               	movlw	high _USTATcopy
  4458  00173A  0100               	movlb	0	; () banked
  4459  00173C  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  4460  00173E  0E00               	movlw	0
  4461  001740  0100               	movlb	0	; () banked
  4462  001742  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  4463  001744  0E00               	movlw	0
  4464  001746  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  4465  001748  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4466                           
  4467                           ;usb_device.c: 817: }
  4468                           ;usb_device.c: 818: }
  4469  00174C  D001               	goto	l6745
  4470                           
  4471                           ;usb_device.c: 819: else
  4472                           ;usb_device.c: 820: {
  4473                           ;usb_device.c: 821: break;
  4474  00174E  D003               	goto	l465
  4475  001750                     l6745:
  4476  001750  0100               	movlb	0	; () banked
  4477  001752  2BD1               	incf	USBDeviceTasks@i& (0+255),f,b
  4478  001754  D7BA               	goto	l6723
  4479  001756                     l465:
  4480                           
  4481                           ;usb_device.c: 822: }
  4482                           ;usb_device.c: 823: }
  4483                           ;usb_device.c: 824: }
  4484                           ;usb_device.c: 826: PIR3bits.USBIF = 0;;
  4485  001756  94A4               	bcf	4004,2,c	;volatile
  4486  001758  0012               	return		;funcret
  4487  00175A                     __end_of_USBDeviceTasks:
  4488                           	opt stack 0
  4489                           tblptru	equ	0xFF8
  4490                           tblptrh	equ	0xFF7
  4491                           tblptrl	equ	0xFF6
  4492                           tablat	equ	0xFF5
  4493                           prodh	equ	0xFF4
  4494                           prodl	equ	0xFF3
  4495                           intcon	equ	0xFF2
  4496                           postinc0	equ	0xFEE
  4497                           wreg	equ	0xFE8
  4498                           indf1	equ	0xFE7
  4499                           postdec1	equ	0xFE5
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           fsr2h	equ	0xFDA
  4505                           fsr2l	equ	0xFD9
  4506                           status	equ	0xFD8
  4507                           
  4508 ;; *************** function _USBWakeFromSuspend *****************
  4509 ;; Defined at:
  4510 ;;		line 2302 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;		None               void
  4517 ;; Registers used:
  4518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    8
  4531 ;; This function calls:
  4532 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4533 ;; This function is called by:
  4534 ;;		_USBDeviceTasks
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text12
  4539  003160                     __ptext12:
  4540                           	opt stack 0
  4541  003160                     _USBWakeFromSuspend:
  4542                           	opt stack 20
  4543                           
  4544                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
  4545                           
  4546                           ;incstack = 0
  4547  003160  0E00               	movlw	0
  4548  003162  0100               	movlb	0	; () banked
  4549  003164  6F92               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4553  003166  0E00               	movlw	0
  4554  003168  0100               	movlb	0	; () banked
  4555  00316A  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  4556  00316C  0E74               	movlw	116
  4557  00316E  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  4558  003170  0E00               	movlw	0
  4559  003172  0100               	movlb	0	; () banked
  4560  003174  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  4561  003176  0E00               	movlw	0
  4562  003178  0100               	movlb	0	; () banked
  4563  00317A  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  4564  00317C  0E00               	movlw	0
  4565  00317E  0100               	movlb	0	; () banked
  4566  003180  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  4567  003182  0E00               	movlw	0
  4568  003184  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  4569  003186  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4570                           
  4571                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
  4572  00318A  9260               	bcf	3936,1,c	;volatile
  4573                           
  4574                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
  4575  00318C  9464               	bcf	3940,2,c	;volatile
  4576                           
  4577                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
  4578  00318E  D002               	goto	l6481
  4579  003190                     l6479:
  4580                           
  4581                           ;usb_device.c: 2342: {
  4582                           ;usb_device.c: 2343: (UIR &= 0xFB);
  4583  003190  9465               	bcf	3941,2,c	;volatile
  4584  003192  D000               	goto	l6481
  4585  003194                     l6481:
  4586  003194  B465               	btfsc	3941,2,c	;volatile
  4587  003196  D7FC               	goto	l6479
  4588  003198  0012               	return		;funcret
  4589  00319A                     __end_of_USBWakeFromSuspend:
  4590                           	opt stack 0
  4591                           tblptru	equ	0xFF8
  4592                           tblptrh	equ	0xFF7
  4593                           tblptrl	equ	0xFF6
  4594                           tablat	equ	0xFF5
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           intcon	equ	0xFF2
  4598                           postinc0	equ	0xFEE
  4599                           wreg	equ	0xFE8
  4600                           indf1	equ	0xFE7
  4601                           postdec1	equ	0xFE5
  4602                           fsr1h	equ	0xFE2
  4603                           fsr1l	equ	0xFE1
  4604                           indf2	equ	0xFDF
  4605                           postinc2	equ	0xFDE
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _USBSuspend *****************
  4611 ;; Defined at:
  4612 ;;		line 2245 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    8
  4633 ;; This function calls:
  4634 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4635 ;; This function is called by:
  4636 ;;		_USBDeviceTasks
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text13
  4641  003206                     __ptext13:
  4642                           	opt stack 0
  4643  003206                     _USBSuspend:
  4644                           	opt stack 20
  4645                           
  4646                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4647                           
  4648                           ;incstack = 0
  4649  003206  8464               	bsf	3940,2,c	;volatile
  4650                           
  4651                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4652  003208  9865               	bcf	3941,4,c	;volatile
  4653                           
  4654                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4655  00320A  8260               	bsf	3936,1,c	;volatile
  4656                           
  4657                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4658  00320C  0E01               	movlw	1
  4659  00320E  0100               	movlb	0	; () banked
  4660  003210  6F92               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4664  003212  0E00               	movlw	0
  4665  003214  0100               	movlb	0	; () banked
  4666  003216  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  4667  003218  0E75               	movlw	117
  4668  00321A  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  4669  00321C  0E00               	movlw	0
  4670  00321E  0100               	movlb	0	; () banked
  4671  003220  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  4672  003222  0E00               	movlw	0
  4673  003224  0100               	movlb	0	; () banked
  4674  003226  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  4675  003228  0E00               	movlw	0
  4676  00322A  0100               	movlb	0	; () banked
  4677  00322C  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  4678  00322E  0E00               	movlw	0
  4679  003230  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  4680  003232  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4681  003236  0012               	return		;funcret
  4682  003238                     __end_of_USBSuspend:
  4683                           	opt stack 0
  4684                           tblptru	equ	0xFF8
  4685                           tblptrh	equ	0xFF7
  4686                           tblptrl	equ	0xFF6
  4687                           tablat	equ	0xFF5
  4688                           prodh	equ	0xFF4
  4689                           prodl	equ	0xFF3
  4690                           intcon	equ	0xFF2
  4691                           postinc0	equ	0xFEE
  4692                           wreg	equ	0xFE8
  4693                           indf1	equ	0xFE7
  4694                           postdec1	equ	0xFE5
  4695                           fsr1h	equ	0xFE2
  4696                           fsr1l	equ	0xFE1
  4697                           indf2	equ	0xFDF
  4698                           postinc2	equ	0xFDE
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function _USBStallHandler *****************
  4704 ;; Defined at:
  4705 ;;		line 2202 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4721 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4722 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4723 ;;Total ram usage:        1 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    4
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_USBDeviceTasks
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text14
  4734  0030A2                     __ptext14:
  4735                           	opt stack 0
  4736  0030A2                     _USBStallHandler:
  4737                           	opt stack 24
  4738                           
  4739                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  4740                           
  4741                           ;incstack = 0
  4742  0030A2  A06A               	btfss	3946,0,c	;volatile
  4743  0030A4  D01E               	goto	l604
  4744                           
  4745                           ;usb_device.c: 2215: {
  4746                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4747  0030A6  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4748  0030AA  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4749  0030AE  0E80               	movlw	128
  4750  0030B0  18DE               	xorwf	postinc2,w,c
  4751  0030B2  A4D8               	btfss	status,2,c
  4752  0030B4  D015               	goto	l6503
  4753  0030B6  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  4754  0030BA  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  4755  0030BE  0E84               	movlw	132
  4756  0030C0  18DE               	xorwf	postinc2,w,c
  4757  0030C2  A4D8               	btfss	status,2,c
  4758  0030C4  D00D               	goto	l6503
  4759                           
  4760                           ;usb_device.c: 2218: {
  4761                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4762  0030C6  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4763  0030CA  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4764  0030CE  0E0C               	movlw	12
  4765  0030D0  6EDF               	movwf	indf2,c
  4766                           
  4767                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4768  0030D2  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4769  0030D6  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4770  0030DA  0E00               	movlw	0
  4771  0030DC  8EDB               	bsf	plusw2,7,c
  4772  0030DE  D000               	goto	l6503
  4773  0030E0                     l6503:
  4774                           
  4775                           ;usb_device.c: 2222: }
  4776                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  4777  0030E0  906A               	bcf	3946,0,c	;volatile
  4778  0030E2                     l604:
  4779                           
  4780                           ;usb_device.c: 2224: }
  4781                           ;usb_device.c: 2226: (UIR &= 0xDF);
  4782  0030E2  9A65               	bcf	3941,5,c	;volatile
  4783  0030E4  0012               	return		;funcret
  4784  0030E6                     __end_of_USBStallHandler:
  4785                           	opt stack 0
  4786                           tblptru	equ	0xFF8
  4787                           tblptrh	equ	0xFF7
  4788                           tblptrl	equ	0xFF6
  4789                           tablat	equ	0xFF5
  4790                           prodh	equ	0xFF4
  4791                           prodl	equ	0xFF3
  4792                           intcon	equ	0xFF2
  4793                           postinc0	equ	0xFEE
  4794                           wreg	equ	0xFE8
  4795                           indf1	equ	0xFE7
  4796                           postdec1	equ	0xFE5
  4797                           fsr1h	equ	0xFE2
  4798                           fsr1l	equ	0xFE1
  4799                           indf2	equ	0xFDF
  4800                           postinc2	equ	0xFDE
  4801                           plusw2	equ	0xFDB
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _USBCtrlEPService *****************
  4807 ;; Defined at:
  4808 ;;		line 2369 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  setup_cnt       1   28[BANK0 ] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;		None               void
  4815 ;; Registers used:
  4816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4822 ;;      Params:         0       0       0       0       0       0       0       0       0
  4823 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4824 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4825 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4826 ;;Total ram usage:        3 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:   11
  4829 ;; This function calls:
  4830 ;;		_USBCtrlTrfInHandler
  4831 ;;		_USBCtrlTrfOutHandler
  4832 ;;		_USBCtrlTrfSetupHandler
  4833 ;; This function is called by:
  4834 ;;		_USBDeviceTasks
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text15
  4839  0020CC                     __ptext15:
  4840                           	opt stack 0
  4841  0020CC                     _USBCtrlEPService:
  4842                           	opt stack 17
  4843                           
  4844                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
  4845                           
  4846                           ;incstack = 0
  4847  0020CC  0E2D               	movlw	45
  4848  0020CE  0100               	movlb	0	; () banked
  4849  0020D0  6F98               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
  4853  0020D2  C0B3  F0CE         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  4854  0020D6  0EFD               	movlw	253
  4855  0020D8  0100               	movlb	0	; () banked
  4856  0020DA  17CE               	andwf	??_USBCtrlEPService& (0+255),f,b
  4857  0020DC  A4D8               	btfss	status,2,c
  4858  0020DE  D05E               	goto	l6537
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;usb_device.c: 2380: {
  4862                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4863  0020E0  C0B3  F0CE         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  4864  0020E4  0100               	movlb	0	; () banked
  4865  0020E6  90D8               	bcf	status,0,c
  4866  0020E8  33CE               	rrcf	??_USBCtrlEPService& (0+255),f,b
  4867  0020EA  0E3F               	movlw	63
  4868  0020EC  0100               	movlb	0	; () banked
  4869  0020EE  17CE               	andwf	??_USBCtrlEPService& (0+255),f,b
  4870  0020F0  0100               	movlb	0	; () banked
  4871  0020F2  51CE               	movf	??_USBCtrlEPService& (0+255),w,b
  4872  0020F4  0D04               	mullw	4
  4873  0020F6  0E00               	movlw	0
  4874  0020F8  24F3               	addwf	prodl,w,c
  4875  0020FA  6E31               	movwf	_pBDTEntryEP0OutCurrent,c
  4876  0020FC  0E04               	movlw	4
  4877  0020FE  20F4               	addwfc	prodh,w,c
  4878  002100  6E32               	movwf	_pBDTEntryEP0OutCurrent+1,c
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4882  002102  C031  F033         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  4883  002106  C032  F034         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  4887  00210A  0E04               	movlw	4
  4888  00210C  1A33               	xorwf	_pBDTEntryEP0OutNext,f,c
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4892  00210E  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4893  002112  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4894  002116  30DF               	rrcf	indf2,w,c
  4895  002118  32E8               	rrcf	wreg,f,c
  4896  00211A  0B0F               	andlw	15
  4897  00211C  0A0D               	xorlw	13
  4898  00211E  A4D8               	btfss	status,2,c
  4899  002120  D03A               	goto	l6535
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;usb_device.c: 2397: {
  4903                           ;usb_device.c: 2398: unsigned char setup_cnt;
  4904                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  4905  002122  0E00               	movlw	0
  4906  002124  0100               	movlb	0	; () banked
  4907  002126  6FD0               	movwf	USBCtrlEPService@setup_cnt& (0+255),b
  4908  002128                     l6519:
  4909                           
  4910                           ; BSR set to: 0
  4911  002128  0E07               	movlw	7
  4912  00212A  0100               	movlb	0	; () banked
  4913  00212C  65D0               	cpfsgt	USBCtrlEPService@setup_cnt& (0+255),b
  4914  00212E  D001               	goto	l6523
  4915                           
  4916                           ; BSR set to: 0
  4917  002130  D025               	goto	l6531
  4918  002132                     l6523:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;usb_device.c: 2405: {
  4922                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  4923  002132  EE20 F002          	lfsr	2,2
  4924  002136  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  4925  002138  26D9               	addwf	fsr2l,f,c
  4926  00213A  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  4927  00213C  22DA               	addwfc	fsr2h,f,c
  4928  00213E  CFDE F0CE          	movff	postinc2,??_USBCtrlEPService
  4929  002142  CFDD F0CF          	movff	postdec2,??_USBCtrlEPService+1
  4930  002146  C0CE  FFD9         	movff	??_USBCtrlEPService,fsr2l
  4931  00214A  C0CF  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
  4932  00214E  0100               	movlb	0	; () banked
  4933  002150  51D0               	movf	USBCtrlEPService@setup_cnt& (0+255),w,b
  4934  002152  0D01               	mullw	1
  4935  002154  0E30               	movlw	48
  4936  002156  24F3               	addwf	prodl,w,c
  4937  002158  6EE1               	movwf	fsr1l,c
  4938  00215A  0E04               	movlw	4
  4939  00215C  20F4               	addwfc	prodh,w,c
  4940  00215E  6EE2               	movwf	fsr1h,c
  4941  002160  CFDF FFE7          	movff	indf2,indf1
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
  4945  002164  EE20 F002          	lfsr	2,2
  4946  002168  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  4947  00216A  26D9               	addwf	fsr2l,f,c
  4948  00216C  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  4949  00216E  22DA               	addwfc	fsr2h,f,c
  4950  002170  2ADE               	incf	postinc2,f,c
  4951  002172  0E00               	movlw	0
  4952  002174  22DD               	addwfc	postdec2,f,c
  4953                           
  4954                           ; BSR set to: 0
  4955  002176  0100               	movlb	0	; () banked
  4956  002178  2BD0               	incf	USBCtrlEPService@setup_cnt& (0+255),f,b
  4957  00217A  D7D6               	goto	l6519
  4958  00217C                     l6531:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;usb_device.c: 2408: }
  4962                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  4963  00217C  EE20 F002          	lfsr	2,2
  4964  002180  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  4965  002182  26D9               	addwf	fsr2l,f,c
  4966  002184  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  4967  002186  22DA               	addwfc	fsr2h,f,c
  4968  002188  0E30               	movlw	48
  4969  00218A  6EDE               	movwf	postinc2,c
  4970  00218C  0E04               	movlw	4
  4971  00218E  6EDD               	movwf	postdec2,c
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
  4975  002190  EC73  F015         	call	_USBCtrlTrfSetupHandler	;wreg free
  4976                           
  4977                           ;usb_device.c: 2413: }
  4978  002194  0012               	return	
  4979  002196                     l6535:
  4980                           
  4981                           ;usb_device.c: 2414: else
  4982                           ;usb_device.c: 2415: {
  4983                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
  4984  002196  EC28  F017         	call	_USBCtrlTrfOutHandler	;wreg free
  4985                           
  4986                           ;usb_device.c: 2418: }
  4987                           ;usb_device.c: 2419: }
  4988  00219A  0012               	return	
  4989  00219C                     l6537:
  4990                           
  4991                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
  4992  00219C  0100               	movlb	0	; () banked
  4993  00219E  51B3               	movf	_USTATcopy& (0+255),w,b	;volatile
  4994  0021A0  0BFD               	andlw	253
  4995  0021A2  0A04               	xorlw	4
  4996  0021A4  A4D8               	btfss	status,2,c
  4997  0021A6  0012               	return	
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;usb_device.c: 2421: {
  5001                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
  5002  0021A8  EC54  F013         	call	_USBCtrlTrfInHandler	;wreg free
  5003  0021AC  0012               	return	
  5004  0021AE  0012               	return		;funcret
  5005  0021B0                     __end_of_USBCtrlEPService:
  5006                           	opt stack 0
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           prodh	equ	0xFF4
  5012                           prodl	equ	0xFF3
  5013                           intcon	equ	0xFF2
  5014                           postinc0	equ	0xFEE
  5015                           wreg	equ	0xFE8
  5016                           indf1	equ	0xFE7
  5017                           postdec1	equ	0xFE5
  5018                           fsr1h	equ	0xFE2
  5019                           fsr1l	equ	0xFE1
  5020                           indf2	equ	0xFDF
  5021                           postinc2	equ	0xFDE
  5022                           postdec2	equ	0xFDD
  5023                           plusw2	equ	0xFDB
  5024                           fsr2h	equ	0xFDA
  5025                           fsr2l	equ	0xFD9
  5026                           status	equ	0xFD8
  5027                           
  5028 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5029 ;; Defined at:
  5030 ;;		line 2469 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;		None               void
  5037 ;; Registers used:
  5038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:   10
  5051 ;; This function calls:
  5052 ;;		_USBCheckStdRequest
  5053 ;;		_USBCtrlEPServiceComplete
  5054 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5055 ;; This function is called by:
  5056 ;;		_USBCtrlEPService
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text16
  5061  002AE6                     __ptext16:
  5062                           	opt stack 0
  5063  002AE6                     _USBCtrlTrfSetupHandler:
  5064                           	opt stack 17
  5065                           
  5066                           ;usb_device.c: 2474: shortPacketStatus = 0;
  5067                           
  5068                           ;incstack = 0
  5069  002AE6  0E00               	movlw	0
  5070  002AE8  6E3B               	movwf	_shortPacketStatus,c	;volatile
  5071                           
  5072                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
  5073  002AEA  0E00               	movlw	0
  5074  002AEC  6E35               	movwf	_USBDeferStatusStagePacket,c	;volatile
  5075                           
  5076                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
  5077  002AEE  0E00               	movlw	0
  5078  002AF0  0100               	movlb	0	; () banked
  5079  002AF2  6F93               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  5080                           
  5081                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
  5082  002AF4  0E00               	movlw	0
  5083  002AF6  0100               	movlb	0	; () banked
  5084  002AF8  6F94               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5085                           
  5086                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
  5087  002AFA  0E00               	movlw	0
  5088  002AFC  0100               	movlb	0	; () banked
  5089  002AFE  6F90               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
  5090                           
  5091                           ;usb_device.c: 2479: controlTransferState = 0;
  5092  002B00  0E00               	movlw	0
  5093  002B02  6E39               	movwf	_controlTransferState,c	;volatile
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5097  002B04  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  5098  002B08  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5099  002B0C  0E7F               	movlw	127
  5100  002B0E  16DF               	andwf	indf2,f,c
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5104  002B10  0E04               	movlw	4
  5105  002B12  1A2B               	xorwf	_pBDTEntryIn,f,c
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5109  002B14  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  5110  002B18  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5111  002B1C  0E7F               	movlw	127
  5112  002B1E  16DF               	andwf	indf2,f,c
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5116  002B20  0E04               	movlw	4
  5117  002B22  1A2B               	xorwf	_pBDTEntryIn,f,c
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5121  002B24  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5122  002B28  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5123  002B2C  0E7F               	movlw	127
  5124  002B2E  16DF               	andwf	indf2,f,c
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
  5128  002B30  0E00               	movlw	0
  5129  002B32  6E40               	movwf	_inPipes+3,c	;volatile
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
  5133  002B34  0E00               	movlw	0
  5134  002B36  6E42               	movwf	_inPipes+5,c	;volatile
  5135  002B38  0E00               	movlw	0
  5136  002B3A  6E41               	movwf	_inPipes+4,c	;volatile
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
  5140  002B3C  0E00               	movlw	0
  5141  002B3E  6E26               	movwf	_outPipes+3,c	;volatile
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
  5145  002B40  0E00               	movlw	0
  5146  002B42  6E28               	movwf	_outPipes+5,c	;volatile
  5147  002B44  0E00               	movlw	0
  5148  002B46  6E27               	movwf	_outPipes+4,c	;volatile
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;usb_device.c: 2503: USBCheckStdRequest();
  5152  002B48  EC7D  F00F         	call	_USBCheckStdRequest	;wreg free
  5153                           
  5154                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5155  002B4C  0E00               	movlw	0
  5156  002B4E  0100               	movlb	0	; () banked
  5157  002B50  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5158  002B52  0E03               	movlw	3
  5159  002B54  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5160  002B56  0E00               	movlw	0
  5161  002B58  0100               	movlb	0	; () banked
  5162  002B5A  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5163  002B5C  0E00               	movlw	0
  5164  002B5E  0100               	movlb	0	; () banked
  5165  002B60  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5166  002B62  0E00               	movlw	0
  5167  002B64  0100               	movlb	0	; () banked
  5168  002B66  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5169  002B68  0E00               	movlw	0
  5170  002B6A  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5171  002B6C  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5172                           
  5173                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
  5174  002B70  EC09  F00E         	call	_USBCtrlEPServiceComplete	;wreg free
  5175  002B74  0012               	return		;funcret
  5176  002B76                     __end_of_USBCtrlTrfSetupHandler:
  5177                           	opt stack 0
  5178                           tblptru	equ	0xFF8
  5179                           tblptrh	equ	0xFF7
  5180                           tblptrl	equ	0xFF6
  5181                           tablat	equ	0xFF5
  5182                           prodh	equ	0xFF4
  5183                           prodl	equ	0xFF3
  5184                           intcon	equ	0xFF2
  5185                           postinc0	equ	0xFEE
  5186                           wreg	equ	0xFE8
  5187                           indf1	equ	0xFE7
  5188                           postdec1	equ	0xFE5
  5189                           fsr1h	equ	0xFE2
  5190                           fsr1l	equ	0xFE1
  5191                           indf2	equ	0xFDF
  5192                           postinc2	equ	0xFDE
  5193                           postdec2	equ	0xFDD
  5194                           plusw2	equ	0xFDB
  5195                           fsr2h	equ	0xFDA
  5196                           fsr2l	equ	0xFD9
  5197                           status	equ	0xFD8
  5198                           
  5199 ;; *************** function _USBCtrlEPServiceComplete *****************
  5200 ;; Defined at:
  5201 ;;		line 1616 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;		None               void
  5208 ;; Registers used:
  5209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5218 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    6
  5222 ;; This function calls:
  5223 ;;		_USBCtrlEPAllowDataStage
  5224 ;;		_USBCtrlEPAllowStatusStage
  5225 ;; This function is called by:
  5226 ;;		_USBCtrlTrfSetupHandler
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text17
  5231  001C12                     __ptext17:
  5232                           	opt stack 0
  5233  001C12                     _USBCtrlEPServiceComplete:
  5234                           	opt stack 20
  5235                           
  5236                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5237                           
  5238                           ;incstack = 0
  5239  001C12  9860               	bcf	3936,4,c	;volatile
  5240                           
  5241                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5242  001C14  BE40               	btfsc	_inPipes+3,7,c	;volatile
  5243  001C16  D03D               	goto	l528
  5244                           
  5245                           ;usb_device.c: 1629: {
  5246                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5247  001C18  AE26               	btfss	_outPipes+3,7,c	;volatile
  5248  001C1A  D010               	goto	l5991
  5249                           
  5250                           ;usb_device.c: 1631: {
  5251                           ;usb_device.c: 1632: controlTransferState = 2;
  5252  001C1C  0E02               	movlw	2
  5253  001C1E  6E39               	movwf	_controlTransferState,c	;volatile
  5254                           
  5255                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5256  001C20  0100               	movlb	0	; () banked
  5257  001C22  5194               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  5258  001C24  A4D8               	btfss	status,2,c
  5259  001C26  D003               	goto	l5987
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;usb_device.c: 1644: {
  5263                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5264  001C28  EC23  F015         	call	_USBCtrlEPAllowDataStage	;wreg free
  5265  001C2C  D000               	goto	l5987
  5266  001C2E                     l5987:
  5267                           
  5268                           ;usb_device.c: 1646: }
  5269                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5270  001C2E  0E00               	movlw	0
  5271  001C30  0100               	movlb	0	; () banked
  5272  001C32  6F97               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5276  001C34  0E00               	movlw	0
  5277  001C36  0100               	movlb	0	; () banked
  5278  001C38  6F96               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  5279                           
  5280                           ;usb_device.c: 1652: }
  5281  001C3A  0012               	return	
  5282  001C3C                     l5991:
  5283                           
  5284                           ;usb_device.c: 1653: else
  5285                           ;usb_device.c: 1654: {
  5286                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5287  001C3C  EE20 F001          	lfsr	2,1
  5288  001C40  5033               	movf	_pBDTEntryEP0OutNext,w,c
  5289  001C42  26D9               	addwf	fsr2l,f,c
  5290  001C44  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  5291  001C46  22DA               	addwfc	fsr2h,f,c
  5292  001C48  0E08               	movlw	8
  5293  001C4A  6EDF               	movwf	indf2,c
  5294                           
  5295                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5296  001C4C  EE20 F002          	lfsr	2,2
  5297  001C50  5033               	movf	_pBDTEntryEP0OutNext,w,c
  5298  001C52  26D9               	addwf	fsr2l,f,c
  5299  001C54  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  5300  001C56  22DA               	addwfc	fsr2h,f,c
  5301  001C58  0E30               	movlw	48
  5302  001C5A  6EDE               	movwf	postinc2,c
  5303  001C5C  0E04               	movlw	4
  5304  001C5E  6EDD               	movwf	postdec2,c
  5305                           
  5306                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5307  001C60  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5308  001C64  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5309  001C68  0E0C               	movlw	12
  5310  001C6A  6EDF               	movwf	indf2,c
  5311                           
  5312                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5313  001C6C  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5314  001C70  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5315  001C74  0E00               	movlw	0
  5316  001C76  8EDB               	bsf	plusw2,7,c
  5317                           
  5318                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5319  001C78  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  5320  001C7C  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5321  001C80  0E04               	movlw	4
  5322  001C82  6EDF               	movwf	indf2,c
  5323                           
  5324                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5325  001C84  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  5326  001C88  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5327  001C8C  0E00               	movlw	0
  5328  001C8E  8EDB               	bsf	plusw2,7,c
  5329                           
  5330                           ;usb_device.c: 1665: }
  5331                           ;usb_device.c: 1666: }
  5332  001C90  0012               	return	
  5333  001C92                     l528:
  5334                           
  5335                           ;usb_device.c: 1667: else
  5336                           ;usb_device.c: 1668: {
  5337                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5338  001C92  0104               	movlb	4	; () banked
  5339  001C94  AF30               	btfss	48,7,b	;volatile
  5340  001C96  D015               	goto	l6011
  5341                           
  5342                           ; BSR set to: 4
  5343                           ;usb_device.c: 1670: {
  5344                           ;usb_device.c: 1671: controlTransferState = 1;
  5345  001C98  0E01               	movlw	1
  5346  001C9A  6E39               	movwf	_controlTransferState,c	;volatile
  5347                           
  5348                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5349  001C9C  0100               	movlb	0	; () banked
  5350  001C9E  5193               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  5351  001CA0  A4D8               	btfss	status,2,c
  5352  001CA2  D003               	goto	l6003
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;usb_device.c: 1686: {
  5356                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5357  001CA4  EC23  F015         	call	_USBCtrlEPAllowDataStage	;wreg free
  5358  001CA8  D000               	goto	l6003
  5359  001CAA                     l6003:
  5360                           
  5361                           ;usb_device.c: 1688: }
  5362                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  5363  001CAA  0E00               	movlw	0
  5364  001CAC  0100               	movlb	0	; () banked
  5365  001CAE  6F97               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  5369  001CB0  0E00               	movlw	0
  5370  001CB2  0100               	movlb	0	; () banked
  5371  001CB4  6F96               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  5375  001CB6  5035               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5376  001CB8  A4D8               	btfss	status,2,c
  5377  001CBA  0012               	return	
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;usb_device.c: 1713: {
  5381                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  5382  001CBC  ECB5  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5383                           
  5384                           ;usb_device.c: 1715: }
  5385                           ;usb_device.c: 1716: }
  5386  001CC0  0012               	return	
  5387  001CC2                     l6011:
  5388                           
  5389                           ;usb_device.c: 1717: else
  5390                           ;usb_device.c: 1718: {
  5391                           ;usb_device.c: 1729: controlTransferState = 2;
  5392  001CC2  0E02               	movlw	2
  5393  001CC4  6E39               	movwf	_controlTransferState,c	;volatile
  5394                           
  5395                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  5396  001CC6  EE20 F001          	lfsr	2,1
  5397  001CCA  5033               	movf	_pBDTEntryEP0OutNext,w,c
  5398  001CCC  26D9               	addwf	fsr2l,f,c
  5399  001CCE  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  5400  001CD0  22DA               	addwfc	fsr2h,f,c
  5401  001CD2  0E08               	movlw	8
  5402  001CD4  6EDF               	movwf	indf2,c
  5403                           
  5404                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5405  001CD6  EE20 F002          	lfsr	2,2
  5406  001CDA  5033               	movf	_pBDTEntryEP0OutNext,w,c
  5407  001CDC  26D9               	addwf	fsr2l,f,c
  5408  001CDE  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  5409  001CE0  22DA               	addwfc	fsr2h,f,c
  5410  001CE2  0E30               	movlw	48
  5411  001CE4  6EDE               	movwf	postinc2,c
  5412  001CE6  0E04               	movlw	4
  5413  001CE8  6EDD               	movwf	postdec2,c
  5414                           
  5415                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5416  001CEA  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5417  001CEE  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5418  001CF2  0E04               	movlw	4
  5419  001CF4  6EDF               	movwf	indf2,c
  5420                           
  5421                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5422  001CF6  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5423  001CFA  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5424  001CFE  0E00               	movlw	0
  5425  001D00  8EDB               	bsf	plusw2,7,c
  5426                           
  5427                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  5428  001D02  0E00               	movlw	0
  5429  001D04  0100               	movlb	0	; () banked
  5430  001D06  6F97               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  5434  001D08  0E00               	movlw	0
  5435  001D0A  0100               	movlb	0	; () banked
  5436  001D0C  6F96               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  5440  001D0E  5035               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  5441  001D10  A4D8               	btfss	status,2,c
  5442  001D12  0012               	return	
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;usb_device.c: 1741: {
  5446                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  5447  001D14  ECB5  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5448  001D18  0012               	return	
  5449  001D1A  0012               	return		;funcret
  5450  001D1C                     __end_of_USBCtrlEPServiceComplete:
  5451                           	opt stack 0
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           intcon	equ	0xFF2
  5459                           postinc0	equ	0xFEE
  5460                           wreg	equ	0xFE8
  5461                           indf1	equ	0xFE7
  5462                           postdec1	equ	0xFE5
  5463                           fsr1h	equ	0xFE2
  5464                           fsr1l	equ	0xFE1
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           plusw2	equ	0xFDB
  5469                           fsr2h	equ	0xFDA
  5470                           fsr2l	equ	0xFD9
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5474 ;; Defined at:
  5475 ;;		line 1488 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;		None               void
  5482 ;; Registers used:
  5483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5493 ;;Total ram usage:        0 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    5
  5496 ;; This function calls:
  5497 ;;		_USBCtrlTrfTxService
  5498 ;; This function is called by:
  5499 ;;		_USBCtrlEPServiceComplete
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text18
  5504  002A46                     __ptext18:
  5505                           	opt stack 0
  5506  002A46                     _USBCtrlEPAllowDataStage:
  5507                           	opt stack 20
  5508                           
  5509                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5510                           
  5511                           ;incstack = 0
  5512  002A46  0E00               	movlw	0
  5513  002A48  0100               	movlb	0	; () banked
  5514  002A4A  6F93               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  5515                           
  5516                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5517  002A4C  0E00               	movlw	0
  5518  002A4E  0100               	movlb	0	; () banked
  5519  002A50  6F94               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5523  002A52  0E02               	movlw	2
  5524  002A54  1839               	xorwf	_controlTransferState,w,c	;volatile
  5525  002A56  A4D8               	btfss	status,2,c
  5526  002A58  D01F               	goto	l5785
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;usb_device.c: 1494: {
  5530                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5531  002A5A  EE20 F001          	lfsr	2,1
  5532  002A5E  5033               	movf	_pBDTEntryEP0OutNext,w,c
  5533  002A60  26D9               	addwf	fsr2l,f,c
  5534  002A62  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  5535  002A64  22DA               	addwfc	fsr2h,f,c
  5536  002A66  0E08               	movlw	8
  5537  002A68  6EDF               	movwf	indf2,c
  5538                           
  5539                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  5540  002A6A  EE20 F002          	lfsr	2,2
  5541  002A6E  5033               	movf	_pBDTEntryEP0OutNext,w,c
  5542  002A70  26D9               	addwf	fsr2l,f,c
  5543  002A72  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  5544  002A74  22DA               	addwfc	fsr2h,f,c
  5545  002A76  0E38               	movlw	56
  5546  002A78  6EDE               	movwf	postinc2,c
  5547  002A7A  0E04               	movlw	4
  5548  002A7C  6EDD               	movwf	postdec2,c
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5552  002A7E  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5553  002A82  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5554  002A86  0E48               	movlw	72
  5555  002A88  6EDF               	movwf	indf2,c
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5559  002A8A  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5560  002A8E  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5561  002A92  0E00               	movlw	0
  5562  002A94  8EDB               	bsf	plusw2,7,c
  5563                           
  5564                           ;usb_device.c: 1500: }
  5565  002A96  0012               	return	
  5566  002A98                     l5785:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;usb_device.c: 1501: else
  5570                           ;usb_device.c: 1502: {
  5571                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5572  002A98  5041               	movf	_inPipes+4,w,c	;volatile
  5573  002A9A  0104               	movlb	4	; () banked
  5574  002A9C  5D36               	subwf	54,w,b	;volatile
  5575  002A9E  5042               	movf	_inPipes+5,w,c	;volatile
  5576  002AA0  0104               	movlb	4	; () banked
  5577  002AA2  5937               	subwfb	55,w,b	;volatile
  5578  002AA4  B0D8               	btfsc	status,0,c
  5579  002AA6  D005               	goto	l5789
  5580                           
  5581                           ; BSR set to: 4
  5582                           ;usb_device.c: 1506: {
  5583                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5584  002AA8  C436 F041          	movff	1078,_inPipes+4	;volatile
  5585  002AAC  C437 F042          	movff	1079,_inPipes+5	;volatile
  5586  002AB0  D000               	goto	l5789
  5587  002AB2                     l5789:
  5588                           
  5589                           ; BSR set to: 4
  5590                           ;usb_device.c: 1508: }
  5591                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5592  002AB2  EC06  F00F         	call	_USBCtrlTrfTxService	;wreg free
  5593                           
  5594                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  5595  002AB6  EE20 F002          	lfsr	2,2
  5596  002ABA  502B               	movf	_pBDTEntryIn,w,c
  5597  002ABC  26D9               	addwf	fsr2l,f,c
  5598  002ABE  502C               	movf	_pBDTEntryIn+1,w,c
  5599  002AC0  22DA               	addwfc	fsr2h,f,c
  5600  002AC2  0E38               	movlw	56
  5601  002AC4  6EDE               	movwf	postinc2,c
  5602  002AC6  0E04               	movlw	4
  5603  002AC8  6EDD               	movwf	postdec2,c
  5604                           
  5605                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5606  002ACA  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  5607  002ACE  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5608  002AD2  0E48               	movlw	72
  5609  002AD4  6EDF               	movwf	indf2,c
  5610                           
  5611                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5612  002AD6  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  5613  002ADA  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5614  002ADE  0E00               	movlw	0
  5615  002AE0  8EDB               	bsf	plusw2,7,c
  5616  002AE2  0012               	return	
  5617  002AE4  0012               	return		;funcret
  5618  002AE6                     __end_of_USBCtrlEPAllowDataStage:
  5619                           	opt stack 0
  5620                           tblptru	equ	0xFF8
  5621                           tblptrh	equ	0xFF7
  5622                           tblptrl	equ	0xFF6
  5623                           tablat	equ	0xFF5
  5624                           prodh	equ	0xFF4
  5625                           prodl	equ	0xFF3
  5626                           intcon	equ	0xFF2
  5627                           postinc0	equ	0xFEE
  5628                           wreg	equ	0xFE8
  5629                           indf1	equ	0xFE7
  5630                           postdec1	equ	0xFE5
  5631                           fsr1h	equ	0xFE2
  5632                           fsr1l	equ	0xFE1
  5633                           indf2	equ	0xFDF
  5634                           postinc2	equ	0xFDE
  5635                           postdec2	equ	0xFDD
  5636                           plusw2	equ	0xFDB
  5637                           fsr2h	equ	0xFDA
  5638                           fsr2l	equ	0xFD9
  5639                           status	equ	0xFD8
  5640                           
  5641 ;; *************** function _USBCheckStdRequest *****************
  5642 ;; Defined at:
  5643 ;;		line 2689 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;		None
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;		None               void
  5650 ;; Registers used:
  5651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5657 ;;      Params:         0       0       0       0       0       0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5660 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5661 ;;Total ram usage:        0 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    9
  5664 ;; This function calls:
  5665 ;;		_USBStdFeatureReqHandler
  5666 ;;		_USBStdGetDscHandler
  5667 ;;		_USBStdGetStatusHandler
  5668 ;;		_USBStdSetCfgHandler
  5669 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5670 ;; This function is called by:
  5671 ;;		_USBCtrlTrfSetupHandler
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text19
  5676  001EFA                     __ptext19:
  5677                           	opt stack 0
  5678  001EFA                     _USBCheckStdRequest:
  5679                           	opt stack 17
  5680                           
  5681                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
  5682                           
  5683                           ;incstack = 0
  5684  001EFA  0104               	movlb	4	; () banked
  5685  001EFC  3930               	swapf	48,w,b	;volatile
  5686  001EFE  32E8               	rrcf	wreg,f,c
  5687  001F00  0B03               	andlw	3
  5688  001F02  0900               	iorlw	0
  5689  001F04  A4D8               	btfss	status,2,c
  5690  001F06  0012               	return	
  5691  001F08  D04B               	goto	l6109
  5692                           
  5693                           ; BSR set to: 4
  5694  001F0A  0012               	return	
  5695                           
  5696                           ; BSR set to: 4
  5697                           ;usb_device.c: 2693: switch(SetupPkt.bRequest)
  5698  001F0C  D049               	goto	l6109
  5699  001F0E                     l655:
  5700                           
  5701                           ; BSR set to: 4
  5702                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
  5703  001F0E  8E40               	bsf	_inPipes+3,7,c	;volatile
  5704                           
  5705                           ; BSR set to: 4
  5706                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
  5707  001F10  0E08               	movlw	8
  5708  001F12  0100               	movlb	0	; () banked
  5709  001F14  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
  5710                           
  5711                           ;usb_device.c: 2699: break;
  5712  001F16  0012               	return	
  5713  001F18                     l6079:
  5714                           
  5715                           ;usb_device.c: 2701: USBStdGetDscHandler();
  5716  001F18  EC59  F00C         	call	_USBStdGetDscHandler	;wreg free
  5717                           
  5718                           ;usb_device.c: 2702: break;
  5719  001F1C  0012               	return	
  5720  001F1E                     l6081:
  5721                           
  5722                           ;usb_device.c: 2704: USBStdSetCfgHandler();
  5723  001F1E  EC83  F00D         	call	_USBStdSetCfgHandler	;wreg free
  5724                           
  5725                           ;usb_device.c: 2705: break;
  5726  001F22  0012               	return	
  5727  001F24                     l6083:
  5728                           
  5729                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5730  001F24  0E43               	movlw	low _USBActiveConfiguration
  5731  001F26  6E3D               	movwf	_inPipes,c	;volatile
  5732  001F28  0E00               	movlw	high _USBActiveConfiguration
  5733  001F2A  6E3E               	movwf	_inPipes+1,c	;volatile
  5734                           
  5735                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5736  001F2C  8040               	bsf	_inPipes+3,0,c	;volatile
  5737                           
  5738                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
  5739  001F2E  0E01               	movlw	1
  5740  001F30  6E41               	movwf	_inPipes+4,c	;volatile
  5741                           
  5742                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  5743  001F32  8E40               	bsf	_inPipes+3,7,c	;volatile
  5744                           
  5745                           ;usb_device.c: 2711: break;
  5746  001F34  0012               	return	
  5747  001F36                     l6091:
  5748                           
  5749                           ;usb_device.c: 2713: USBStdGetStatusHandler();
  5750  001F36  ECB8  F013         	call	_USBStdGetStatusHandler	;wreg free
  5751                           
  5752                           ;usb_device.c: 2714: break;
  5753  001F3A  0012               	return	
  5754                           
  5755                           ;usb_device.c: 2715: case 1:
  5756  001F3C  D000               	goto	l6093
  5757  001F3E                     l6093:
  5758                           
  5759                           ;usb_device.c: 2716: case 3:
  5760                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
  5761  001F3E  ECB5  F007         	call	_USBStdFeatureReqHandler	;wreg free
  5762                           
  5763                           ;usb_device.c: 2718: break;
  5764  001F42  0012               	return	
  5765  001F44                     l6095:
  5766                           
  5767                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5768  001F44  0104               	movlb	4	; () banked
  5769  001F46  5134               	movf	52,w,b	;volatile
  5770  001F48  0D01               	mullw	1
  5771  001F4A  0EB1               	movlw	low _USBAlternateInterface
  5772  001F4C  24F3               	addwf	prodl,w,c
  5773  001F4E  6E3D               	movwf	_inPipes,c	;volatile
  5774  001F50  0E00               	movlw	high _USBAlternateInterface
  5775  001F52  20F4               	addwfc	prodh,w,c
  5776  001F54  6E3E               	movwf	_inPipes+1,c	;volatile
  5777                           
  5778                           ; BSR set to: 4
  5779                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5780  001F56  8040               	bsf	_inPipes+3,0,c	;volatile
  5781                           
  5782                           ; BSR set to: 4
  5783                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
  5784  001F58  0E01               	movlw	1
  5785  001F5A  6E41               	movwf	_inPipes+4,c	;volatile
  5786                           
  5787                           ; BSR set to: 4
  5788                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  5789  001F5C  8E40               	bsf	_inPipes+3,7,c	;volatile
  5790                           
  5791                           ;usb_device.c: 2724: break;
  5792  001F5E  0012               	return	
  5793  001F60                     l664:
  5794                           
  5795                           ; BSR set to: 4
  5796                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
  5797  001F60  8E40               	bsf	_inPipes+3,7,c	;volatile
  5798                           
  5799                           ; BSR set to: 4
  5800                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5801  001F62  0104               	movlb	4	; () banked
  5802  001F64  5134               	movf	52,w,b	;volatile
  5803  001F66  0D01               	mullw	1
  5804  001F68  0EB1               	movlw	low _USBAlternateInterface
  5805  001F6A  24F3               	addwf	prodl,w,c
  5806  001F6C  6ED9               	movwf	fsr2l,c
  5807  001F6E  0E00               	movlw	high _USBAlternateInterface
  5808  001F70  20F4               	addwfc	prodh,w,c
  5809  001F72  6EDA               	movwf	fsr2h,c
  5810  001F74  C432 FFDF          	movff	1074,indf2	;volatile
  5811                           
  5812                           ;usb_device.c: 2728: break;
  5813  001F78  0012               	return	
  5814  001F7A                     l6105:
  5815                           
  5816                           ; BSR set to: 4
  5817                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5818  001F7A  0E00               	movlw	0
  5819  001F7C  0100               	movlb	0	; () banked
  5820  001F7E  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5821  001F80  0E02               	movlw	2
  5822  001F82  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5823  001F84  0E00               	movlw	0
  5824  001F86  0100               	movlb	0	; () banked
  5825  001F88  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5826  001F8A  0E00               	movlw	0
  5827  001F8C  0100               	movlb	0	; () banked
  5828  001F8E  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5829  001F90  0E00               	movlw	0
  5830  001F92  0100               	movlb	0	; () banked
  5831  001F94  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5832  001F96  0E00               	movlw	0
  5833  001F98  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5834  001F9A  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5835                           
  5836                           ;usb_device.c: 2735: }
  5837                           
  5838                           ;usb_device.c: 2734: break;
  5839                           
  5840                           ;usb_device.c: 2733: default:
  5841                           
  5842                           ;usb_device.c: 2732: case 12:
  5843                           
  5844                           ;usb_device.c: 2731: break;
  5845  001F9E  0012               	return	
  5846  001FA0                     l6109:
  5847  001FA0  0104               	movlb	4	; () banked
  5848  001FA2  5131               	movf	49,w,b	;volatile
  5849                           
  5850                           ; Switch size 1, requested type "space"
  5851                           ; Number of cases is 11, Range of values is 0 to 12
  5852                           ; switch strategies available:
  5853                           ; Name         Instructions Cycles
  5854                           ; simple_byte           34    18 (average)
  5855                           ;	Chosen strategy is simple_byte
  5856  001FA4  0A00               	xorlw	0	; case 0
  5857  001FA6  B4D8               	btfsc	status,2,c
  5858  001FA8  D7C6               	goto	l6091
  5859  001FAA  0A01               	xorlw	1	; case 1
  5860  001FAC  B4D8               	btfsc	status,2,c
  5861  001FAE  D7C7               	goto	l6093
  5862  001FB0  0A02               	xorlw	2	; case 3
  5863  001FB2  B4D8               	btfsc	status,2,c
  5864  001FB4  D7C4               	goto	l6093
  5865  001FB6  0A06               	xorlw	6	; case 5
  5866  001FB8  B4D8               	btfsc	status,2,c
  5867  001FBA  D7A9               	goto	l655
  5868  001FBC  0A03               	xorlw	3	; case 6
  5869  001FBE  B4D8               	btfsc	status,2,c
  5870  001FC0  D7AB               	goto	l6079
  5871  001FC2  0A01               	xorlw	1	; case 7
  5872  001FC4  B4D8               	btfsc	status,2,c
  5873  001FC6  D7D9               	goto	l6105
  5874  001FC8  0A0F               	xorlw	15	; case 8
  5875  001FCA  B4D8               	btfsc	status,2,c
  5876  001FCC  D7AB               	goto	l6083
  5877  001FCE  0A01               	xorlw	1	; case 9
  5878  001FD0  B4D8               	btfsc	status,2,c
  5879  001FD2  D7A5               	goto	l6081
  5880  001FD4  0A03               	xorlw	3	; case 10
  5881  001FD6  B4D8               	btfsc	status,2,c
  5882  001FD8  D7B5               	goto	l6095
  5883  001FDA  0A01               	xorlw	1	; case 11
  5884  001FDC  B4D8               	btfsc	status,2,c
  5885  001FDE  D7C0               	goto	l664
  5886  001FE0  0A07               	xorlw	7	; case 12
  5887  001FE2  0012               	return	
  5888                           
  5889                           ; BSR set to: 4
  5890  001FE4  0012               	return		;funcret
  5891  001FE6                     __end_of_USBCheckStdRequest:
  5892                           	opt stack 0
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           postinc0	equ	0xFEE
  5901                           wreg	equ	0xFE8
  5902                           indf1	equ	0xFE7
  5903                           postdec1	equ	0xFE5
  5904                           fsr1h	equ	0xFE2
  5905                           fsr1l	equ	0xFE1
  5906                           indf2	equ	0xFDF
  5907                           postinc2	equ	0xFDE
  5908                           postdec2	equ	0xFDD
  5909                           plusw2	equ	0xFDB
  5910                           fsr2h	equ	0xFDA
  5911                           fsr2l	equ	0xFD9
  5912                           status	equ	0xFD8
  5913                           
  5914 ;; *************** function _USBStdSetCfgHandler *****************
  5915 ;; Defined at:
  5916 ;;		line 1968 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;		None
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  i               1   20[BANK0 ] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;		None               void
  5923 ;; Registers used:
  5924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5930 ;;      Params:         0       0       0       0       0       0       0       0       0
  5931 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5933 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5934 ;;Total ram usage:        1 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    8
  5937 ;; This function calls:
  5938 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5939 ;;		_memset
  5940 ;; This function is called by:
  5941 ;;		_USBCheckStdRequest
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text20
  5946  001B06                     __ptext20:
  5947                           	opt stack 0
  5948  001B06                     _USBStdSetCfgHandler:
  5949                           	opt stack 17
  5950                           
  5951                           ;usb_device.c: 1970: uint8_t i;
  5952                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  5953                           
  5954                           ;incstack = 0
  5955  001B06  8E40               	bsf	_inPipes+3,7,c	;volatile
  5956                           
  5957                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  5958  001B08  0E6B               	movlw	107
  5959  001B0A  0100               	movlb	0	; () banked
  5960  001B0C  6FB4               	movwf	memset@p1& (0+255),b
  5961  001B0E  0E0F               	movlw	15
  5962  001B10  0100               	movlb	0	; () banked
  5963  001B12  6FB5               	movwf	(memset@p1+1)& (0+255),b
  5964  001B14  0E00               	movlw	0
  5965  001B16  0100               	movlb	0	; () banked
  5966  001B18  6FB7               	movwf	(memset@c+1)& (0+255),b
  5967  001B1A  0E00               	movlw	0
  5968  001B1C  6FB6               	movwf	memset@c& (0+255),b
  5969  001B1E  0E00               	movlw	0
  5970  001B20  0100               	movlb	0	; () banked
  5971  001B22  6FB9               	movwf	(memset@n+1)& (0+255),b
  5972  001B24  0E02               	movlw	2
  5973  001B26  6FB8               	movwf	memset@n& (0+255),b
  5974  001B28  ECE8  F018         	call	_memset	;wreg free
  5975                           
  5976                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5977  001B2C  0E00               	movlw	0
  5978  001B2E  0100               	movlb	0	; () banked
  5979  001B30  6FB4               	movwf	memset@p1& (0+255),b
  5980  001B32  0E04               	movlw	4
  5981  001B34  0100               	movlb	0	; () banked
  5982  001B36  6FB5               	movwf	(memset@p1+1)& (0+255),b
  5983  001B38  0E00               	movlw	0
  5984  001B3A  0100               	movlb	0	; () banked
  5985  001B3C  6FB7               	movwf	(memset@c+1)& (0+255),b
  5986  001B3E  0E00               	movlw	0
  5987  001B40  6FB6               	movwf	memset@c& (0+255),b
  5988  001B42  0E00               	movlw	0
  5989  001B44  0100               	movlb	0	; () banked
  5990  001B46  6FB9               	movwf	(memset@n+1)& (0+255),b
  5991  001B48  0E30               	movlw	48
  5992  001B4A  6FB8               	movwf	memset@n& (0+255),b
  5993  001B4C  ECE8  F018         	call	_memset	;wreg free
  5994                           
  5995                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  5996  001B50  8C60               	bsf	3936,6,c	;volatile
  5997                           
  5998                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  5999  001B52  0E00               	movlw	0
  6000  001B54  0100               	movlb	0	; () banked
  6001  001B56  6FC8               	movwf	USBStdSetCfgHandler@i& (0+255),b
  6002  001B58                     l5805:
  6003                           
  6004                           ; BSR set to: 0
  6005  001B58  0E02               	movlw	2
  6006  001B5A  0100               	movlb	0	; () banked
  6007  001B5C  65C8               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  6008  001B5E  D001               	goto	l5809
  6009                           
  6010                           ; BSR set to: 0
  6011  001B60  D019               	goto	l5815
  6012  001B62                     l5809:
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;usb_device.c: 1988: {
  6016                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6017  001B62  0100               	movlb	0	; () banked
  6018  001B64  51C8               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  6019  001B66  0D01               	mullw	1
  6020  001B68  0E74               	movlw	low _ep_data_in
  6021  001B6A  24F3               	addwf	prodl,w,c
  6022  001B6C  6ED9               	movwf	fsr2l,c
  6023  001B6E  0E00               	movlw	high _ep_data_in
  6024  001B70  20F4               	addwfc	prodh,w,c
  6025  001B72  6EDA               	movwf	fsr2h,c
  6026  001B74  0E00               	movlw	0
  6027  001B76  6EDF               	movwf	indf2,c
  6028                           
  6029                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6030  001B78  0100               	movlb	0	; () banked
  6031  001B7A  51C8               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  6032  001B7C  0D01               	mullw	1
  6033  001B7E  0E77               	movlw	low _ep_data_out
  6034  001B80  24F3               	addwf	prodl,w,c
  6035  001B82  6ED9               	movwf	fsr2l,c
  6036  001B84  0E00               	movlw	high _ep_data_out
  6037  001B86  20F4               	addwfc	prodh,w,c
  6038  001B88  6EDA               	movwf	fsr2h,c
  6039  001B8A  0E00               	movlw	0
  6040  001B8C  6EDF               	movwf	indf2,c
  6041                           
  6042                           ; BSR set to: 0
  6043  001B8E  0100               	movlb	0	; () banked
  6044  001B90  2BC8               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  6045  001B92  D7E2               	goto	l5805
  6046  001B94                     l5815:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;usb_device.c: 1991: }
  6050                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6051  001B94  0EB1               	movlw	low _USBAlternateInterface
  6052  001B96  0100               	movlb	0	; () banked
  6053  001B98  6FB4               	movwf	memset@p1& (0+255),b
  6054  001B9A  0E00               	movlw	high _USBAlternateInterface
  6055  001B9C  0100               	movlb	0	; () banked
  6056  001B9E  6FB5               	movwf	(memset@p1+1)& (0+255),b
  6057  001BA0  0E00               	movlw	0
  6058  001BA2  0100               	movlb	0	; () banked
  6059  001BA4  6FB7               	movwf	(memset@c+1)& (0+255),b
  6060  001BA6  0E00               	movlw	0
  6061  001BA8  6FB6               	movwf	memset@c& (0+255),b
  6062  001BAA  0E00               	movlw	0
  6063  001BAC  0100               	movlb	0	; () banked
  6064  001BAE  6FB9               	movwf	(memset@n+1)& (0+255),b
  6065  001BB0  0E02               	movlw	2
  6066  001BB2  6FB8               	movwf	memset@n& (0+255),b
  6067  001BB4  ECE8  F018         	call	_memset	;wreg free
  6068                           
  6069                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6070  001BB8  9C60               	bcf	3936,6,c	;volatile
  6071                           
  6072                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6073  001BBA  0E08               	movlw	8
  6074  001BBC  6E2B               	movwf	_pBDTEntryIn,c
  6075  001BBE  0E04               	movlw	4
  6076  001BC0  6E2C               	movwf	_pBDTEntryIn+1,c
  6077                           
  6078                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6079  001BC2  0E00               	movlw	0
  6080  001BC4  6E31               	movwf	_pBDTEntryEP0OutCurrent,c
  6081  001BC6  0E04               	movlw	4
  6082  001BC8  6E32               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6083                           
  6084                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6085  001BCA  C031  F033         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6086  001BCE  C032  F034         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6087                           
  6088                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6089  001BD2  C432 F043          	movff	1074,_USBActiveConfiguration	;volatile
  6090                           
  6091                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6092  001BD6  5043               	movf	_USBActiveConfiguration,w,c	;volatile
  6093  001BD8  A4D8               	btfss	status,2,c
  6094  001BDA  D004               	goto	l5831
  6095                           
  6096                           ;usb_device.c: 2010: {
  6097                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6098  001BDC  0E10               	movlw	16
  6099  001BDE  0100               	movlb	0	; () banked
  6100  001BE0  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
  6101                           
  6102                           ;usb_device.c: 2013: }
  6103  001BE2  0012               	return	
  6104  001BE4                     l5831:
  6105                           
  6106                           ;usb_device.c: 2014: else
  6107                           ;usb_device.c: 2015: {
  6108                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6109  001BE4  0E00               	movlw	0
  6110  001BE6  0100               	movlb	0	; () banked
  6111  001BE8  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6112  001BEA  0E01               	movlw	1
  6113  001BEC  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6114  001BEE  0E43               	movlw	low _USBActiveConfiguration
  6115  001BF0  0100               	movlb	0	; () banked
  6116  001BF2  6FC2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6117  001BF4  0E00               	movlw	high _USBActiveConfiguration
  6118  001BF6  0100               	movlb	0	; () banked
  6119  001BF8  6FC3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6120  001BFA  0E00               	movlw	0
  6121  001BFC  0100               	movlb	0	; () banked
  6122  001BFE  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6123  001C00  0E01               	movlw	1
  6124  001C02  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6125  001C04  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6126                           
  6127                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6128  001C08  0E20               	movlw	32
  6129  001C0A  0100               	movlb	0	; () banked
  6130  001C0C  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
  6131  001C0E  0012               	return	
  6132                           
  6133                           ; BSR set to: 0
  6134                           
  6135                           ; BSR set to: 0
  6136  001C10  0012               	return		;funcret
  6137  001C12                     __end_of_USBStdSetCfgHandler:
  6138                           	opt stack 0
  6139                           tblptru	equ	0xFF8
  6140                           tblptrh	equ	0xFF7
  6141                           tblptrl	equ	0xFF6
  6142                           tablat	equ	0xFF5
  6143                           prodh	equ	0xFF4
  6144                           prodl	equ	0xFF3
  6145                           intcon	equ	0xFF2
  6146                           postinc0	equ	0xFEE
  6147                           wreg	equ	0xFE8
  6148                           indf1	equ	0xFE7
  6149                           postdec1	equ	0xFE5
  6150                           fsr1h	equ	0xFE2
  6151                           fsr1l	equ	0xFE1
  6152                           indf2	equ	0xFDF
  6153                           postinc2	equ	0xFDE
  6154                           postdec2	equ	0xFDD
  6155                           plusw2	equ	0xFDB
  6156                           fsr2h	equ	0xFDA
  6157                           fsr2l	equ	0xFD9
  6158                           status	equ	0xFD8
  6159                           
  6160 ;; *************** function _USBStdGetStatusHandler *****************
  6161 ;; Defined at:
  6162 ;;		line 2129 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  p               2    1[BANK0 ] PTR struct __BDT
  6167 ;;		 -> NULL(0), BDT(48), 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;		None               void
  6170 ;; Registers used:
  6171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0
  6178 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6179 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6180 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6181 ;;Total ram usage:        3 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    4
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_USBCheckStdRequest
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text21
  6192  002770                     __ptext21:
  6193                           	opt stack 0
  6194  002770                     _USBStdGetStatusHandler:
  6195                           	opt stack 21
  6196                           
  6197                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;incstack = 0
  6201  002770  0E00               	movlw	0
  6202  002772  0104               	movlb	4	; () banked
  6203  002774  6F38               	movwf	56,b	;volatile
  6204                           
  6205                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6206  002776  0E00               	movlw	0
  6207  002778  0104               	movlb	4	; () banked
  6208  00277A  6F39               	movwf	57,b	;volatile
  6209                           
  6210                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6211  00277C  D043               	goto	l5887
  6212  00277E                     l591:
  6213                           
  6214                           ; BSR set to: 4
  6215                           ;usb_device.c: 2142: if(1 == 1)
  6216  00277E  8E40               	bsf	_inPipes+3,7,c	;volatile
  6217                           
  6218                           ; BSR set to: 4
  6219                           ;usb_device.c: 2143: {
  6220                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6221  002780  0104               	movlb	4	; () banked
  6222  002782  8138               	bsf	56,0,b	;volatile
  6223  002784  D000               	goto	l5871
  6224  002786                     l5871:
  6225                           
  6226                           ; BSR set to: 4
  6227                           ;usb_device.c: 2145: }
  6228                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6229  002786  0100               	movlb	0	; () banked
  6230  002788  0591               	decf	_RemoteWakeup& (0+255),w,b	;volatile
  6231  00278A  A4D8               	btfss	status,2,c
  6232  00278C  D047               	goto	l594
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;usb_device.c: 2148: {
  6236                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6237  00278E  0104               	movlb	4	; () banked
  6238  002790  8338               	bsf	56,1,b	;volatile
  6239                           
  6240                           ; BSR set to: 4
  6241                           ;usb_device.c: 2150: }
  6242                           ;usb_device.c: 2151: break;
  6243  002792  D044               	goto	l594
  6244  002794                     l595:
  6245                           
  6246                           ; BSR set to: 4
  6247                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6248  002794  8E40               	bsf	_inPipes+3,7,c	;volatile
  6249                           
  6250                           ;usb_device.c: 2154: break;
  6251  002796  D042               	goto	l594
  6252  002798                     l596:
  6253                           
  6254                           ; BSR set to: 4
  6255                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6256  002798  8E40               	bsf	_inPipes+3,7,c	;volatile
  6257                           
  6258                           ;usb_device.c: 2160: {
  6259                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6260                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6261  00279A  0104               	movlb	4	; () banked
  6262  00279C  BF34               	btfsc	52,7,b	;volatile
  6263  00279E  D00D               	goto	l5877
  6264                           
  6265                           ; BSR set to: 4
  6266                           ;usb_device.c: 2164: {
  6267                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6268  0027A0  0104               	movlb	4	; () banked
  6269  0027A2  5134               	movf	52,w,b	;volatile
  6270  0027A4  0B0F               	andlw	15
  6271  0027A6  0100               	movlb	0	; () banked
  6272  0027A8  6FB4               	movwf	??_USBStdGetStatusHandler& (0+255),b
  6273  0027AA  0100               	movlb	0	; () banked
  6274  0027AC  51B4               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  6275  0027AE  0D02               	mullw	2
  6276  0027B0  0E6A               	movlw	low _pBDTEntryOut
  6277  0027B2  24F3               	addwf	prodl,w,c
  6278  0027B4  6ED9               	movwf	fsr2l,c
  6279  0027B6  0E00               	movlw	high _pBDTEntryOut
  6280  0027B8  D00C               	goto	L3
  6281  0027BA                     l5877:
  6282                           
  6283                           ;usb_device.c: 2167: else
  6284                           ;usb_device.c: 2168: {
  6285                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6286  0027BA  0104               	movlb	4	; () banked
  6287  0027BC  5134               	movf	52,w,b	;volatile
  6288  0027BE  0B0F               	andlw	15
  6289  0027C0  0100               	movlb	0	; () banked
  6290  0027C2  6FB4               	movwf	??_USBStdGetStatusHandler& (0+255),b
  6291  0027C4  0100               	movlb	0	; () banked
  6292  0027C6  51B4               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  6293  0027C8  0D02               	mullw	2
  6294  0027CA  0E2B               	movlw	low _pBDTEntryIn
  6295  0027CC  24F3               	addwf	prodl,w,c
  6296  0027CE  6ED9               	movwf	fsr2l,c
  6297  0027D0  0E00               	movlw	high _pBDTEntryIn
  6298  0027D2                     L3:
  6299  0027D2  20F4               	addwfc	prodh,w,c
  6300  0027D4  6EDA               	movwf	fsr2h,c
  6301  0027D6  CFDE F0B5          	movff	postinc2,USBStdGetStatusHandler@p
  6302  0027DA  CFDD F0B6          	movff	postdec2,USBStdGetStatusHandler@p+1
  6303  0027DE  D000               	goto	l5879
  6304  0027E0                     l5879:
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;usb_device.c: 2170: }
  6308                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6309  0027E0  C0B5  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6310  0027E4  C0B6  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6311  0027E8  0100               	movlb	0	; () banked
  6312  0027EA  AEDF               	btfss	indf2,7,c
  6313  0027EC  D017               	goto	l594
  6314                           
  6315                           ; BSR set to: 0
  6316  0027EE  C0B5  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6317  0027F2  C0B6  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6318  0027F6  0100               	movlb	0	; () banked
  6319  0027F8  A4DF               	btfss	indf2,2,c
  6320  0027FA  D010               	goto	l594
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6324  0027FC  0E01               	movlw	1
  6325  0027FE  0104               	movlb	4	; () banked
  6326  002800  6F38               	movwf	56,b	;volatile
  6327                           
  6328                           ; BSR set to: 4
  6329                           ;usb_device.c: 2175: }
  6330                           ;usb_device.c: 2176: }
  6331                           
  6332                           ; BSR set to: 4
  6333                           ;usb_device.c: 2174: break;
  6334  002802  D00C               	goto	l594
  6335  002804                     l5887:
  6336                           
  6337                           ; BSR set to: 4
  6338  002804  0104               	movlb	4	; () banked
  6339  002806  5130               	movf	48,w,b	;volatile
  6340  002808  0B1F               	andlw	31
  6341                           
  6342                           ; Switch size 1, requested type "space"
  6343                           ; Number of cases is 3, Range of values is 0 to 2
  6344                           ; switch strategies available:
  6345                           ; Name         Instructions Cycles
  6346                           ; simple_byte           10     6 (average)
  6347                           ;	Chosen strategy is simple_byte
  6348  00280A  0A00               	xorlw	0	; case 0
  6349  00280C  B4D8               	btfsc	status,2,c
  6350  00280E  D7B7               	goto	l591
  6351  002810  0A01               	xorlw	1	; case 1
  6352  002812  B4D8               	btfsc	status,2,c
  6353  002814  D7BF               	goto	l595
  6354  002816  0A03               	xorlw	3	; case 2
  6355  002818  B4D8               	btfsc	status,2,c
  6356  00281A  D7BE               	goto	l596
  6357  00281C                     l594:
  6358                           
  6359                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6360  00281C  AE40               	btfss	_inPipes+3,7,c	;volatile
  6361  00281E  0012               	return	
  6362                           
  6363                           ;usb_device.c: 2179: {
  6364                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6365  002820  0E38               	movlw	56
  6366  002822  6E3D               	movwf	_inPipes,c	;volatile
  6367  002824  0E04               	movlw	4
  6368  002826  6E3E               	movwf	_inPipes+1,c	;volatile
  6369                           
  6370                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6371  002828  8040               	bsf	_inPipes+3,0,c	;volatile
  6372                           
  6373                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6374  00282A  0E02               	movlw	2
  6375  00282C  6E41               	movwf	_inPipes+4,c	;volatile
  6376  00282E  0012               	return	
  6377  002830  0012               	return		;funcret
  6378  002832                     __end_of_USBStdGetStatusHandler:
  6379                           	opt stack 0
  6380                           tblptru	equ	0xFF8
  6381                           tblptrh	equ	0xFF7
  6382                           tblptrl	equ	0xFF6
  6383                           tablat	equ	0xFF5
  6384                           prodh	equ	0xFF4
  6385                           prodl	equ	0xFF3
  6386                           intcon	equ	0xFF2
  6387                           postinc0	equ	0xFEE
  6388                           wreg	equ	0xFE8
  6389                           indf1	equ	0xFE7
  6390                           postdec1	equ	0xFE5
  6391                           fsr1h	equ	0xFE2
  6392                           fsr1l	equ	0xFE1
  6393                           indf2	equ	0xFDF
  6394                           postinc2	equ	0xFDE
  6395                           postdec2	equ	0xFDD
  6396                           plusw2	equ	0xFDB
  6397                           fsr2h	equ	0xFDA
  6398                           fsr2l	equ	0xFD9
  6399                           status	equ	0xFD8
  6400                           
  6401 ;; *************** function _USBStdGetDscHandler *****************
  6402 ;; Defined at:
  6403 ;;		line 2043 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;		None
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;		None
  6408 ;; Return value:  Size  Location     Type
  6409 ;;		None               void
  6410 ;; Registers used:
  6411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6417 ;;      Params:         0       0       0       0       0       0       0       0       0
  6418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6419 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6420 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6421 ;;Total ram usage:        2 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    4
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_USBCheckStdRequest
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text22
  6432  0018B2                     __ptext22:
  6433                           	opt stack 0
  6434  0018B2                     _USBStdGetDscHandler:
  6435                           	opt stack 21
  6436                           
  6437                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6438                           
  6439                           ;incstack = 0
  6440  0018B2  0E80               	movlw	128
  6441  0018B4  0104               	movlb	4	; () banked
  6442  0018B6  1930               	xorwf	48,w,b	;volatile
  6443  0018B8  A4D8               	btfss	status,2,c
  6444  0018BA  0012               	return	
  6445                           
  6446                           ; BSR set to: 4
  6447                           ;usb_device.c: 2046: {
  6448                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6449  0018BC  0EC0               	movlw	192
  6450  0018BE  6E40               	movwf	_inPipes+3,c	;volatile
  6451                           
  6452                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6453  0018C0  D082               	goto	l5865
  6454  0018C2                     l5839:
  6455                           
  6456                           ; BSR set to: 4
  6457                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6458  0018C2  0EB4               	movlw	low _device_dsc
  6459  0018C4  6E3D               	movwf	_inPipes,c	;volatile
  6460  0018C6  0E08               	movlw	high _device_dsc
  6461  0018C8  6E3E               	movwf	_inPipes+1,c	;volatile
  6462                           
  6463                           ; BSR set to: 4
  6464                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6465  0018CA  0E00               	movlw	0
  6466  0018CC  6E42               	movwf	_inPipes+5,c	;volatile
  6467  0018CE  0E12               	movlw	18
  6468  0018D0  6E41               	movwf	_inPipes+4,c	;volatile
  6469                           
  6470                           ;usb_device.c: 2058: break;
  6471  0018D2  0012               	return	
  6472  0018D4                     l5843:
  6473                           
  6474                           ; BSR set to: 4
  6475                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6476  0018D4  0104               	movlb	4	; () banked
  6477  0018D6  5132               	movf	50,w,b	;volatile
  6478  0018D8  A4D8               	btfss	status,2,c
  6479  0018DA  D042               	goto	l5851
  6480                           
  6481                           ; BSR set to: 4
  6482                           ;usb_device.c: 2064: {
  6483                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6484  0018DC  0104               	movlb	4	; () banked
  6485  0018DE  5132               	movf	50,w,b	;volatile
  6486  0018E0  0D02               	mullw	2
  6487  0018E2  0E07               	movlw	low _USB_CD_Ptr
  6488  0018E4  24F3               	addwf	prodl,w,c
  6489  0018E6  6EF6               	movwf	tblptrl,c
  6490  0018E8  0E08               	movlw	high _USB_CD_Ptr
  6491  0018EA  20F4               	addwfc	prodh,w,c
  6492  0018EC  6EF7               	movwf	tblptrh,c
  6493  0018EE                     	if	0	;There are less than 3 active tblptr bytes
  6494  0018EE                     	endif
  6495  0018EE  0009               	tblrd		*+
  6496  0018F0  CFF5 F03D          	movff	tablat,_inPipes	;volatile
  6497  0018F4  000A               	tblrd		*-
  6498  0018F6  CFF5 F03E          	movff	tablat,_inPipes+1	;volatile
  6499                           
  6500                           ; BSR set to: 4
  6501                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6502  0018FA  0E02               	movlw	2
  6503  0018FC  243D               	addwf	_inPipes,w,c	;volatile
  6504  0018FE  0100               	movlb	0	; () banked
  6505  001900  6FB4               	movwf	??_USBStdGetDscHandler& (0+255),b
  6506  001902  0E00               	movlw	0
  6507  001904  203E               	addwfc	_inPipes+1,w,c	;volatile
  6508  001906  0100               	movlb	0	; () banked
  6509  001908  6FB5               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  6510  00190A  C0B4  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6511  00190E  C0B5  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6512  001912  6AF8               	clrf	tblptru,c
  6513  001914  0E07               	movlw	(high __ramtop+-1)
  6514  001916  64F7               	cpfsgt	tblptrh,c
  6515  001918  D003               	bra	u5067
  6516  00191A  0008               	tblrd		*
  6517  00191C  50F5               	movf	tablat,w,c
  6518  00191E  D005               	bra	u5060
  6519  001920                     u5067:
  6520  001920  CFF6 FFE1          	movff	tblptrl,fsr1l
  6521  001924  CFF7 FFE2          	movff	tblptrh,fsr1h
  6522  001928  50E7               	movf	indf1,w,c
  6523  00192A                     u5060:
  6524  00192A  6E41               	movwf	_inPipes+4,c	;volatile
  6525                           
  6526                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6527  00192C  0E03               	movlw	3
  6528  00192E  243D               	addwf	_inPipes,w,c	;volatile
  6529  001930  0100               	movlb	0	; () banked
  6530  001932  6FB4               	movwf	??_USBStdGetDscHandler& (0+255),b
  6531  001934  0E00               	movlw	0
  6532  001936  203E               	addwfc	_inPipes+1,w,c	;volatile
  6533  001938  0100               	movlb	0	; () banked
  6534  00193A  6FB5               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  6535  00193C  C0B4  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6536  001940  C0B5  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6537  001944  6AF8               	clrf	tblptru,c
  6538  001946  0E07               	movlw	(high __ramtop+-1)
  6539  001948  64F7               	cpfsgt	tblptrh,c
  6540  00194A  D003               	bra	u5077
  6541  00194C  0008               	tblrd		*
  6542  00194E  50F5               	movf	tablat,w,c
  6543  001950  D005               	bra	u5070
  6544  001952                     u5077:
  6545  001952  CFF6 FFE1          	movff	tblptrl,fsr1l
  6546  001956  CFF7 FFE2          	movff	tblptrh,fsr1h
  6547  00195A  50E7               	movf	indf1,w,c
  6548  00195C                     u5070:
  6549  00195C  6E42               	movwf	_inPipes+5,c	;volatile
  6550                           
  6551                           ;usb_device.c: 2076: }
  6552  00195E  0012               	return	
  6553  001960                     l5851:
  6554                           
  6555                           ;usb_device.c: 2077: else
  6556                           ;usb_device.c: 2078: {
  6557                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6558  001960  0E00               	movlw	0
  6559  001962  6E40               	movwf	_inPipes+3,c	;volatile
  6560                           
  6561                           ;usb_device.c: 2080: }
  6562                           ;usb_device.c: 2081: break;
  6563  001964  0012               	return	
  6564  001966                     l5853:
  6565                           
  6566                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6567  001966  0E03               	movlw	3
  6568  001968  0104               	movlb	4	; () banked
  6569  00196A  6132               	cpfslt	50,b	;volatile
  6570  00196C  D026               	goto	l5859
  6571                           
  6572                           ; BSR set to: 4
  6573                           ;usb_device.c: 2087: {
  6574                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6575  00196E  0104               	movlb	4	; () banked
  6576  001970  5132               	movf	50,w,b	;volatile
  6577  001972  0D02               	mullw	2
  6578  001974  0E01               	movlw	low _USB_SD_Ptr
  6579  001976  24F3               	addwf	prodl,w,c
  6580  001978  6EF6               	movwf	tblptrl,c
  6581  00197A  0E08               	movlw	high _USB_SD_Ptr
  6582  00197C  20F4               	addwfc	prodh,w,c
  6583  00197E  6EF7               	movwf	tblptrh,c
  6584  001980                     	if	0	;There are less than 3 active tblptr bytes
  6585  001980                     	endif
  6586  001980  0009               	tblrd		*+
  6587  001982  CFF5 F03D          	movff	tablat,_inPipes	;volatile
  6588  001986  000A               	tblrd		*-
  6589  001988  CFF5 F03E          	movff	tablat,_inPipes+1	;volatile
  6590                           
  6591                           ; BSR set to: 4
  6592                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6593  00198C  C03D  FFF6         	movff	_inPipes,tblptrl	;volatile
  6594  001990  C03E  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  6595  001994  6AF8               	clrf	tblptru,c
  6596  001996  0E07               	movlw	(high __ramtop+-1)
  6597  001998  64F7               	cpfsgt	tblptrh,c
  6598  00199A  D003               	bra	u5097
  6599  00199C  0008               	tblrd		*
  6600  00199E  50F5               	movf	tablat,w,c
  6601  0019A0  D005               	bra	u5090
  6602  0019A2                     u5097:
  6603  0019A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  6604  0019A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  6605  0019AA  50E7               	movf	indf1,w,c
  6606  0019AC                     u5090:
  6607  0019AC  0100               	movlb	0	; () banked
  6608  0019AE  6FB4               	movwf	??_USBStdGetDscHandler& (0+255),b
  6609  0019B0  0100               	movlb	0	; () banked
  6610  0019B2  51B4               	movf	??_USBStdGetDscHandler& (0+255),w,b
  6611  0019B4  6E41               	movwf	_inPipes+4,c	;volatile
  6612  0019B6  6A42               	clrf	_inPipes+5,c	;volatile
  6613                           
  6614                           ;usb_device.c: 2092: }
  6615  0019B8  0012               	return	
  6616  0019BA                     l5859:
  6617                           
  6618                           ;usb_device.c: 2102: else
  6619                           ;usb_device.c: 2103: {
  6620                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6621  0019BA  0E00               	movlw	0
  6622  0019BC  6E40               	movwf	_inPipes+3,c	;volatile
  6623                           
  6624                           ;usb_device.c: 2105: }
  6625                           ;usb_device.c: 2106: break;
  6626  0019BE  0012               	return	
  6627  0019C0                     l5861:
  6628                           
  6629                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6630  0019C0  0E00               	movlw	0
  6631  0019C2  6E40               	movwf	_inPipes+3,c	;volatile
  6632                           
  6633                           ;usb_device.c: 2110: }
  6634                           
  6635                           ;usb_device.c: 2109: break;
  6636  0019C4  0012               	return	
  6637  0019C6                     l5865:
  6638  0019C6  0104               	movlb	4	; () banked
  6639  0019C8  5133               	movf	51,w,b	;volatile
  6640                           
  6641                           ; Switch size 1, requested type "space"
  6642                           ; Number of cases is 3, Range of values is 1 to 3
  6643                           ; switch strategies available:
  6644                           ; Name         Instructions Cycles
  6645                           ; simple_byte           10     6 (average)
  6646                           ;	Chosen strategy is simple_byte
  6647  0019CA  0A01               	xorlw	1	; case 1
  6648  0019CC  B4D8               	btfsc	status,2,c
  6649  0019CE  D779               	goto	l5839
  6650  0019D0  0A03               	xorlw	3	; case 2
  6651  0019D2  B4D8               	btfsc	status,2,c
  6652  0019D4  D77F               	goto	l5843
  6653  0019D6  0A01               	xorlw	1	; case 3
  6654  0019D8  B4D8               	btfsc	status,2,c
  6655  0019DA  D7C5               	goto	l5853
  6656  0019DC  D7F1               	goto	l5861
  6657                           
  6658                           ; BSR set to: 4
  6659  0019DE  0012               	return	
  6660                           
  6661                           ; BSR set to: 4
  6662  0019E0  0012               	return		;funcret
  6663  0019E2                     __end_of_USBStdGetDscHandler:
  6664                           	opt stack 0
  6665                           tblptru	equ	0xFF8
  6666                           tblptrh	equ	0xFF7
  6667                           tblptrl	equ	0xFF6
  6668                           tablat	equ	0xFF5
  6669                           prodh	equ	0xFF4
  6670                           prodl	equ	0xFF3
  6671                           intcon	equ	0xFF2
  6672                           postinc0	equ	0xFEE
  6673                           wreg	equ	0xFE8
  6674                           indf1	equ	0xFE7
  6675                           postdec1	equ	0xFE5
  6676                           fsr1h	equ	0xFE2
  6677                           fsr1l	equ	0xFE1
  6678                           indf2	equ	0xFDF
  6679                           postinc2	equ	0xFDE
  6680                           postdec2	equ	0xFDD
  6681                           plusw2	equ	0xFDB
  6682                           fsr2h	equ	0xFDA
  6683                           fsr2l	equ	0xFD9
  6684                           status	equ	0xFD8
  6685                           
  6686 ;; *************** function _USBStdFeatureReqHandler *****************
  6687 ;; Defined at:
  6688 ;;		line 2757 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;		None
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  p               2   24[BANK0 ] PTR struct __BDT
  6693 ;;		 -> NULL(0), BDT(48), 
  6694 ;;  pUEP            2   21[BANK0 ] PTR unsigned char 
  6695 ;;		 -> UEP0(1), 
  6696 ;;  current_ep_d    1   23[BANK0 ] struct .
  6697 ;; Return value:  Size  Location     Type
  6698 ;;		None               void
  6699 ;; Registers used:
  6700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6706 ;;      Params:         0       0       0       0       0       0       0       0       0
  6707 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6708 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6709 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6710 ;;Total ram usage:        6 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    8
  6713 ;; This function calls:
  6714 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6715 ;; This function is called by:
  6716 ;;		_USBCheckStdRequest
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text23
  6721  000F6A                     __ptext23:
  6722                           	opt stack 0
  6723  000F6A                     _USBStdFeatureReqHandler:
  6724                           	opt stack 17
  6725                           
  6726                           ;usb_device.c: 2759: BDT_ENTRY *p;
  6727                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
  6728                           ;usb_device.c: 2764: unsigned char* pUEP;
  6729                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
  6730                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
  6731                           
  6732                           ;incstack = 0
  6733  000F6A  0104               	movlb	4	; () banked
  6734  000F6C  0532               	decf	50,w,b	;volatile
  6735  000F6E  A4D8               	btfss	status,2,c
  6736  000F70  D012               	goto	l670
  6737                           
  6738                           ; BSR set to: 4
  6739  000F72  0104               	movlb	4	; () banked
  6740  000F74  5130               	movf	48,w,b	;volatile
  6741  000F76  0B1F               	andlw	31
  6742  000F78  0900               	iorlw	0
  6743  000F7A  A4D8               	btfss	status,2,c
  6744  000F7C  D00C               	goto	l670
  6745                           
  6746                           ; BSR set to: 4
  6747                           ;usb_device.c: 2804: {
  6748                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
  6749  000F7E  8E40               	bsf	_inPipes+3,7,c	;volatile
  6750                           
  6751                           ; BSR set to: 4
  6752                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
  6753  000F80  0E03               	movlw	3
  6754  000F82  0104               	movlb	4	; () banked
  6755  000F84  1931               	xorwf	49,w,b	;volatile
  6756  000F86  A4D8               	btfss	status,2,c
  6757  000F88  D002               	goto	l5905
  6758                           
  6759                           ; BSR set to: 4
  6760                           ;usb_device.c: 2807: RemoteWakeup = 1;
  6761  000F8A  0E01               	movlw	1
  6762  000F8C  D001               	goto	L4
  6763  000F8E                     l5905:
  6764                           
  6765                           ;usb_device.c: 2808: else
  6766                           ;usb_device.c: 2809: RemoteWakeup = 0;
  6767  000F8E  0E00               	movlw	0
  6768  000F90                     L4:
  6769  000F90  0100               	movlb	0	; () banked
  6770  000F92  6F91               	movwf	_RemoteWakeup& (0+255),b	;volatile
  6771  000F94  D000               	goto	l670
  6772  000F96                     l670:
  6773                           
  6774                           ;usb_device.c: 2810: }
  6775                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
  6776                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
  6777                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6778                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
  6779  000F96  0104               	movlb	4	; () banked
  6780  000F98  5132               	movf	50,w,b	;volatile
  6781  000F9A  A4D8               	btfss	status,2,c
  6782  000F9C  0012               	return	
  6783                           
  6784                           ; BSR set to: 4
  6785  000F9E  0104               	movlb	4	; () banked
  6786  000FA0  5130               	movf	48,w,b	;volatile
  6787  000FA2  0B1F               	andlw	31
  6788  000FA4  0A02               	xorlw	2
  6789  000FA6  A4D8               	btfss	status,2,c
  6790  000FA8  0012               	return	
  6791                           
  6792                           ; BSR set to: 4
  6793  000FAA  0104               	movlb	4	; () banked
  6794  000FAC  5134               	movf	52,w,b	;volatile
  6795  000FAE  0B0F               	andlw	15
  6796  000FB0  0900               	iorlw	0
  6797  000FB2  B4D8               	btfsc	status,2,c
  6798  000FB4  0012               	return	
  6799                           
  6800                           ; BSR set to: 4
  6801  000FB6  0104               	movlb	4	; () banked
  6802  000FB8  5134               	movf	52,w,b	;volatile
  6803  000FBA  0B0F               	andlw	15
  6804  000FBC  0100               	movlb	0	; () banked
  6805  000FBE  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6806  000FC0  0E03               	movlw	3
  6807  000FC2  0100               	movlb	0	; () banked
  6808  000FC4  61C8               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
  6809  000FC6  0012               	return	
  6810                           
  6811                           ; BSR set to: 0
  6812  000FC8  0E20               	movlw	32
  6813  000FCA  0100               	movlb	0	; () banked
  6814  000FCC  1995               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  6815  000FCE  A4D8               	btfss	status,2,c
  6816  000FD0  0012               	return	
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;usb_device.c: 2817: {
  6820                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
  6821  000FD2  8E40               	bsf	_inPipes+3,7,c	;volatile
  6822                           
  6823                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
  6824  000FD4  0104               	movlb	4	; () banked
  6825  000FD6  BF34               	btfsc	52,7,b	;volatile
  6826  000FD8  D01F               	goto	l5919
  6827                           
  6828                           ; BSR set to: 4
  6829                           ;usb_device.c: 2824: {
  6830                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6831  000FDA  0104               	movlb	4	; () banked
  6832  000FDC  5134               	movf	52,w,b	;volatile
  6833  000FDE  0B0F               	andlw	15
  6834  000FE0  0100               	movlb	0	; () banked
  6835  000FE2  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6836  000FE4  0100               	movlb	0	; () banked
  6837  000FE6  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6838  000FE8  0D02               	mullw	2
  6839  000FEA  0E6A               	movlw	low _pBDTEntryOut
  6840  000FEC  24F3               	addwf	prodl,w,c
  6841  000FEE  6ED9               	movwf	fsr2l,c
  6842  000FF0  0E00               	movlw	high _pBDTEntryOut
  6843  000FF2  20F4               	addwfc	prodh,w,c
  6844  000FF4  6EDA               	movwf	fsr2h,c
  6845  000FF6  CFDE F0CC          	movff	postinc2,USBStdFeatureReqHandler@p
  6846  000FFA  CFDD F0CD          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6847                           
  6848                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6849  000FFE  0104               	movlb	4	; () banked
  6850  001000  5134               	movf	52,w,b	;volatile
  6851  001002  0B0F               	andlw	15
  6852  001004  0100               	movlb	0	; () banked
  6853  001006  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6854  001008  0100               	movlb	0	; () banked
  6855  00100A  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6856  00100C  0D01               	mullw	1
  6857  00100E  0E77               	movlw	low _ep_data_out
  6858  001010  24F3               	addwf	prodl,w,c
  6859  001012  6ED9               	movwf	fsr2l,c
  6860  001014  0E00               	movlw	high _ep_data_out
  6861  001016  D01E               	goto	L5
  6862  001018                     l5919:
  6863                           
  6864                           ;usb_device.c: 2828: else
  6865                           ;usb_device.c: 2829: {
  6866                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6867  001018  0104               	movlb	4	; () banked
  6868  00101A  5134               	movf	52,w,b	;volatile
  6869  00101C  0B0F               	andlw	15
  6870  00101E  0100               	movlb	0	; () banked
  6871  001020  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6872  001022  0100               	movlb	0	; () banked
  6873  001024  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6874  001026  0D02               	mullw	2
  6875  001028  0E2B               	movlw	low _pBDTEntryIn
  6876  00102A  24F3               	addwf	prodl,w,c
  6877  00102C  6ED9               	movwf	fsr2l,c
  6878  00102E  0E00               	movlw	high _pBDTEntryIn
  6879  001030  20F4               	addwfc	prodh,w,c
  6880  001032  6EDA               	movwf	fsr2h,c
  6881  001034  CFDE F0CC          	movff	postinc2,USBStdFeatureReqHandler@p
  6882  001038  CFDD F0CD          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6883                           
  6884                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6885  00103C  0104               	movlb	4	; () banked
  6886  00103E  5134               	movf	52,w,b	;volatile
  6887  001040  0B0F               	andlw	15
  6888  001042  0100               	movlb	0	; () banked
  6889  001044  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6890  001046  0100               	movlb	0	; () banked
  6891  001048  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6892  00104A  0D01               	mullw	1
  6893  00104C  0E74               	movlw	low _ep_data_in
  6894  00104E  24F3               	addwf	prodl,w,c
  6895  001050  6ED9               	movwf	fsr2l,c
  6896  001052  0E00               	movlw	high _ep_data_in
  6897  001054                     L5:
  6898  001054  20F4               	addwfc	prodh,w,c
  6899  001056  6EDA               	movwf	fsr2h,c
  6900  001058  50DF               	movf	indf2,w,c
  6901  00105A  0100               	movlb	0	; () banked
  6902  00105C  6FCB               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
  6903  00105E  D000               	goto	l5921
  6904  001060                     l5921:
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;usb_device.c: 2832: }
  6908                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
  6909  001060  0100               	movlb	0	; () banked
  6910  001062  B1CB               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
  6911  001064  D003               	goto	l5925
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;usb_device.c: 2839: {
  6915                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6916  001066  0100               	movlb	0	; () banked
  6917  001068  95CC               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
  6918                           
  6919                           ;usb_device.c: 2841: }
  6920  00106A  D003               	goto	l5927
  6921  00106C                     l5925:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;usb_device.c: 2842: else
  6925                           ;usb_device.c: 2843: {
  6926                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6927  00106C  0100               	movlb	0	; () banked
  6928  00106E  85CC               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
  6929  001070  D000               	goto	l5927
  6930  001072                     l5927:
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;usb_device.c: 2845: }
  6934                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
  6935  001072  0104               	movlb	4	; () banked
  6936  001074  BF34               	btfsc	52,7,b	;volatile
  6937  001076  D00D               	goto	l5931
  6938                           
  6939                           ; BSR set to: 4
  6940                           ;usb_device.c: 2851: {
  6941                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6942  001078  0104               	movlb	4	; () banked
  6943  00107A  5134               	movf	52,w,b	;volatile
  6944  00107C  0B0F               	andlw	15
  6945  00107E  0100               	movlb	0	; () banked
  6946  001080  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6947  001082  0100               	movlb	0	; () banked
  6948  001084  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6949  001086  0D02               	mullw	2
  6950  001088  0E6A               	movlw	low _pBDTEntryOut
  6951  00108A  24F3               	addwf	prodl,w,c
  6952  00108C  6ED9               	movwf	fsr2l,c
  6953  00108E  0E00               	movlw	high _pBDTEntryOut
  6954  001090  D00C               	goto	L6
  6955  001092                     l5931:
  6956                           
  6957                           ;usb_device.c: 2854: else
  6958                           ;usb_device.c: 2855: {
  6959                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6960  001092  0104               	movlb	4	; () banked
  6961  001094  5134               	movf	52,w,b	;volatile
  6962  001096  0B0F               	andlw	15
  6963  001098  0100               	movlb	0	; () banked
  6964  00109A  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6965  00109C  0100               	movlb	0	; () banked
  6966  00109E  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6967  0010A0  0D02               	mullw	2
  6968  0010A2  0E2B               	movlw	low _pBDTEntryIn
  6969  0010A4  24F3               	addwf	prodl,w,c
  6970  0010A6  6ED9               	movwf	fsr2l,c
  6971  0010A8  0E00               	movlw	high _pBDTEntryIn
  6972  0010AA                     L6:
  6973  0010AA  20F4               	addwfc	prodh,w,c
  6974  0010AC  6EDA               	movwf	fsr2h,c
  6975  0010AE  C0CC  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  6976  0010B2  C0CD  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  6977  0010B6  D000               	goto	l5933
  6978  0010B8                     l5933:
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;usb_device.c: 2857: }
  6982                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
  6983  0010B8  0E03               	movlw	3
  6984  0010BA  0104               	movlb	4	; () banked
  6985  0010BC  1931               	xorwf	49,w,b	;volatile
  6986  0010BE  A4D8               	btfss	status,2,c
  6987  0010C0  D035               	goto	l5947
  6988                           
  6989                           ; BSR set to: 4
  6990                           ;usb_device.c: 2861: {
  6991                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
  6992  0010C2  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6993  0010C6  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6994  0010CA  0100               	movlb	0	; () banked
  6995  0010CC  AEDF               	btfss	indf2,7,c
  6996  0010CE  D021               	goto	l5943
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;usb_device.c: 2863: {
  7000                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
  7001  0010D0  0104               	movlb	4	; () banked
  7002  0010D2  BF34               	btfsc	52,7,b	;volatile
  7003  0010D4  D00D               	goto	l5941
  7004                           
  7005                           ; BSR set to: 4
  7006                           ;usb_device.c: 2867: {
  7007                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7008  0010D6  0104               	movlb	4	; () banked
  7009  0010D8  5134               	movf	52,w,b	;volatile
  7010  0010DA  0B0F               	andlw	15
  7011  0010DC  0100               	movlb	0	; () banked
  7012  0010DE  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  7013  0010E0  0100               	movlb	0	; () banked
  7014  0010E2  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  7015  0010E4  0D01               	mullw	1
  7016  0010E6  0E77               	movlw	low _ep_data_out
  7017  0010E8  24F3               	addwf	prodl,w,c
  7018  0010EA  6ED9               	movwf	fsr2l,c
  7019  0010EC  0E00               	movlw	high _ep_data_out
  7020  0010EE  D00C               	goto	L7
  7021  0010F0                     l5941:
  7022                           
  7023                           ;usb_device.c: 2870: else
  7024                           ;usb_device.c: 2871: {
  7025                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7026  0010F0  0104               	movlb	4	; () banked
  7027  0010F2  5134               	movf	52,w,b	;volatile
  7028  0010F4  0B0F               	andlw	15
  7029  0010F6  0100               	movlb	0	; () banked
  7030  0010F8  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  7031  0010FA  0100               	movlb	0	; () banked
  7032  0010FC  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  7033  0010FE  0D01               	mullw	1
  7034  001100  0E74               	movlw	low _ep_data_in
  7035  001102  24F3               	addwf	prodl,w,c
  7036  001104  6ED9               	movwf	fsr2l,c
  7037  001106  0E00               	movlw	high _ep_data_in
  7038  001108                     L7:
  7039  001108  20F4               	addwfc	prodh,w,c
  7040  00110A  6EDA               	movwf	fsr2h,c
  7041  00110C  0100               	movlb	0	; () banked
  7042  00110E  82DF               	bsf	indf2,1,c
  7043                           
  7044                           ; BSR set to: 0
  7045  001110  D000               	goto	l5943
  7046  001112                     l5943:
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;usb_device.c: 2873: }
  7050                           ;usb_device.c: 2874: }
  7051                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
  7052  001112  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7053  001116  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7054  00111A  0E00               	movlw	0
  7055  00111C  84DB               	bsf	plusw2,2,c
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
  7059  00111E  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7060  001122  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7061  001126  0E00               	movlw	0
  7062  001128  8EDB               	bsf	plusw2,7,c
  7063                           
  7064                           ;usb_device.c: 2879: }
  7065  00112A  0012               	return	
  7066  00112C                     l5947:
  7067                           
  7068                           ;usb_device.c: 2880: else
  7069                           ;usb_device.c: 2881: {
  7070                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7071  00112C  0E04               	movlw	4
  7072  00112E  0100               	movlb	0	; () banked
  7073  001130  1BCC               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
  7077  001132  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7078  001136  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7079  00113A  0100               	movlb	0	; () banked
  7080  00113C  AEDF               	btfss	indf2,7,c
  7081  00113E  D01D               	goto	l5957
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;usb_device.c: 2888: {
  7085                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
  7086  001140  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7087  001144  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7088  001148  0E7F               	movlw	127
  7089  00114A  16DF               	andwf	indf2,f,c
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
  7093  00114C  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7094  001150  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7095  001154  0E00               	movlw	0
  7096  001156  8CDB               	bsf	plusw2,6,c
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7100  001158  0E00               	movlw	0
  7101  00115A  0100               	movlb	0	; () banked
  7102  00115C  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7103  00115E  0E05               	movlw	5
  7104  001160  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7105  001162  C0CC  F0C2         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7106  001166  C0CD  F0C3         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7107  00116A  0E00               	movlw	0
  7108  00116C  0100               	movlb	0	; () banked
  7109  00116E  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7110  001170  0E02               	movlw	2
  7111  001172  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7112  001174  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7113                           
  7114                           ;usb_device.c: 2894: }
  7115  001178  D007               	goto	l5959
  7116  00117A                     l5957:
  7117                           
  7118                           ;usb_device.c: 2895: else
  7119                           ;usb_device.c: 2896: {
  7120                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
  7121  00117A  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7122  00117E  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7123  001182  0E00               	movlw	0
  7124  001184  8CDB               	bsf	plusw2,6,c
  7125  001186  D000               	goto	l5959
  7126  001188                     l5959:
  7127                           
  7128                           ;usb_device.c: 2899: }
  7129                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7130  001188  0E04               	movlw	4
  7131  00118A  0100               	movlb	0	; () banked
  7132  00118C  1BCC               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7136  00118E  0100               	movlb	0	; () banked
  7137  001190  B3CB               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
  7138  001192  D007               	goto	l689
  7139                           
  7140                           ; BSR set to: 0
  7141  001194  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7142  001198  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7143  00119C  0100               	movlb	0	; () banked
  7144  00119E  AEDF               	btfss	indf2,7,c
  7145  0011A0  D038               	goto	l5973
  7146  0011A2                     l689:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;usb_device.c: 2910: {
  7150                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
  7151  0011A2  0104               	movlb	4	; () banked
  7152  0011A4  BF34               	btfsc	52,7,b	;volatile
  7153  0011A6  D00D               	goto	l5967
  7154                           
  7155                           ; BSR set to: 4
  7156                           ;usb_device.c: 2912: {
  7157                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7158  0011A8  0104               	movlb	4	; () banked
  7159  0011AA  5134               	movf	52,w,b	;volatile
  7160  0011AC  0B0F               	andlw	15
  7161  0011AE  0100               	movlb	0	; () banked
  7162  0011B0  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  7163  0011B2  0100               	movlb	0	; () banked
  7164  0011B4  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  7165  0011B6  0D01               	mullw	1
  7166  0011B8  0E77               	movlw	low _ep_data_out
  7167  0011BA  24F3               	addwf	prodl,w,c
  7168  0011BC  6ED9               	movwf	fsr2l,c
  7169  0011BE  0E00               	movlw	high _ep_data_out
  7170  0011C0  D00C               	goto	L8
  7171  0011C2                     l5967:
  7172                           
  7173                           ;usb_device.c: 2915: else
  7174                           ;usb_device.c: 2916: {
  7175                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7176  0011C2  0104               	movlb	4	; () banked
  7177  0011C4  5134               	movf	52,w,b	;volatile
  7178  0011C6  0B0F               	andlw	15
  7179  0011C8  0100               	movlb	0	; () banked
  7180  0011CA  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  7181  0011CC  0100               	movlb	0	; () banked
  7182  0011CE  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  7183  0011D0  0D01               	mullw	1
  7184  0011D2  0E74               	movlw	low _ep_data_in
  7185  0011D4  24F3               	addwf	prodl,w,c
  7186  0011D6  6ED9               	movwf	fsr2l,c
  7187  0011D8  0E00               	movlw	high _ep_data_in
  7188  0011DA                     L8:
  7189  0011DA  20F4               	addwfc	prodh,w,c
  7190  0011DC  6EDA               	movwf	fsr2h,c
  7191  0011DE  0100               	movlb	0	; () banked
  7192  0011E0  92DF               	bcf	indf2,1,c
  7193  0011E2  D000               	goto	l5969
  7194  0011E4                     l5969:
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;usb_device.c: 2918: }
  7198                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7199  0011E4  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7200  0011E8  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7201  0011EC  0E3B               	movlw	59
  7202  0011EE  16DF               	andwf	indf2,f,c
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7206  0011F0  0E00               	movlw	0
  7207  0011F2  0100               	movlb	0	; () banked
  7208  0011F4  6FC1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7209  0011F6  0E05               	movlw	5
  7210  0011F8  6FC0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7211  0011FA  C0CC  F0C2         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7212  0011FE  C0CD  F0C3         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7213  001202  0E00               	movlw	0
  7214  001204  0100               	movlb	0	; () banked
  7215  001206  6FC5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7216  001208  0E02               	movlw	2
  7217  00120A  6FC4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7218  00120C  ECF5  F016         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7219                           
  7220                           ;usb_device.c: 2924: }
  7221  001210  D007               	goto	l5975
  7222  001212                     l5973:
  7223                           
  7224                           ;usb_device.c: 2925: else
  7225                           ;usb_device.c: 2926: {
  7226                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7227  001212  C0CC  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7228  001216  C0CD  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7229  00121A  0E3B               	movlw	59
  7230  00121C  16DF               	andwf	indf2,f,c
  7231  00121E  D000               	goto	l5975
  7232  001220                     l5975:
  7233                           
  7234                           ;usb_device.c: 2929: }
  7235                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7236  001220  0104               	movlb	4	; () banked
  7237  001222  5134               	movf	52,w,b	;volatile
  7238  001224  0B0F               	andlw	15
  7239  001226  0100               	movlb	0	; () banked
  7240  001228  6FC8               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  7241  00122A  0100               	movlb	0	; () banked
  7242  00122C  51C8               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  7243  00122E  0D01               	mullw	1
  7244  001230  0E6A               	movlw	106
  7245  001232  24F3               	addwf	prodl,w,c
  7246  001234  0100               	movlb	0	; () banked
  7247  001236  6FC9               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
  7248  001238  0E0F               	movlw	15
  7249  00123A  20F4               	addwfc	prodh,w,c
  7250  00123C  0100               	movlb	0	; () banked
  7251  00123E  6FCA               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
  7255  001240  C0C9  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7256  001244  C0CA  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7257  001248  0EFE               	movlw	254
  7258  00124A  16DF               	andwf	indf2,f,c
  7259                           
  7260                           ; BSR set to: 0
  7261  00124C  0012               	return	
  7262                           
  7263                           ; BSR set to: 0
  7264  00124E  0012               	return		;funcret
  7265  001250                     __end_of_USBStdFeatureReqHandler:
  7266                           	opt stack 0
  7267                           tblptru	equ	0xFF8
  7268                           tblptrh	equ	0xFF7
  7269                           tblptrl	equ	0xFF6
  7270                           tablat	equ	0xFF5
  7271                           prodh	equ	0xFF4
  7272                           prodl	equ	0xFF3
  7273                           intcon	equ	0xFF2
  7274                           postinc0	equ	0xFEE
  7275                           wreg	equ	0xFE8
  7276                           indf1	equ	0xFE7
  7277                           postdec1	equ	0xFE5
  7278                           fsr1h	equ	0xFE2
  7279                           fsr1l	equ	0xFE1
  7280                           indf2	equ	0xFDF
  7281                           postinc2	equ	0xFDE
  7282                           postdec2	equ	0xFDD
  7283                           plusw2	equ	0xFDB
  7284                           fsr2h	equ	0xFDA
  7285                           fsr2l	equ	0xFD9
  7286                           status	equ	0xFD8
  7287                           
  7288 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7289 ;; Defined at:
  7290 ;;		line 260 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  event           2   12[BANK0 ] enum E7517
  7293 ;;  pdata           2   14[BANK0 ] PTR void 
  7294 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  7295 ;;  size            2   16[BANK0 ] unsigned int 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      unsigned char 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7307 ;;      Params:         0       6       0       0       0       0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7309 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7310 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7311 ;;Total ram usage:        8 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    7
  7314 ;; This function calls:
  7315 ;;		_CDCInitEP
  7316 ;;		_USBCheckCDCRequest
  7317 ;; This function is called by:
  7318 ;;		_USBDeviceTasks
  7319 ;;		_USBStdSetCfgHandler
  7320 ;;		_USBSuspend
  7321 ;;		_USBWakeFromSuspend
  7322 ;;		_USBCtrlTrfSetupHandler
  7323 ;;		_USBCheckStdRequest
  7324 ;;		_USBStdFeatureReqHandler
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text24
  7329  002DEA                     __ptext24:
  7330                           	opt stack 0
  7331  002DEA                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7332                           	opt stack 21
  7333                           
  7334                           ;karate.c: 262: switch( (int) event )
  7335                           
  7336                           ;incstack = 0
  7337  002DEA  D007               	goto	l5679
  7338                           
  7339                           ;karate.c: 278: break;
  7340                           
  7341                           ;karate.c: 276: case EVENT_RESUME:
  7342                           
  7343                           ;karate.c: 274: break;
  7344                           
  7345                           ;karate.c: 272: case EVENT_SUSPEND:
  7346                           
  7347                           ;karate.c: 270: break;
  7348                           
  7349                           ;karate.c: 267: case EVENT_SOF:
  7350                           
  7351                           ;karate.c: 265: break;
  7352                           
  7353                           ;karate.c: 263: {
  7354                           ;karate.c: 264: case EVENT_TRANSFER:
  7355  002DEC  0012               	return	
  7356  002DEE                     l5673:
  7357                           
  7358                           ;karate.c: 283: CDCInitEP();
  7359  002DEE  EC82  F016         	call	_CDCInitEP	;wreg free
  7360                           
  7361                           ;karate.c: 287: break;
  7362                           
  7363                           ;karate.c: 286: case EVENT_SET_DESCRIPTOR:
  7364                           
  7365                           ;karate.c: 284: break;
  7366  002DF2  0012               	return	
  7367  002DF4                     l5675:
  7368                           
  7369                           ;karate.c: 292: USBCheckCDCRequest();
  7370  002DF4  EC19  F014         	call	_USBCheckCDCRequest	;wreg free
  7371                           
  7372                           ;karate.c: 303: }
  7373                           
  7374                           ;karate.c: 302: break;
  7375                           
  7376                           ;karate.c: 301: default:
  7377                           
  7378                           ;karate.c: 299: break;
  7379                           
  7380                           ;karate.c: 298: case EVENT_TRANSFER_TERMINATED:
  7381                           
  7382                           ;karate.c: 296: break;
  7383                           
  7384                           ;karate.c: 295: case EVENT_BUS_ERROR:
  7385                           
  7386                           ;karate.c: 293: break;
  7387  002DF8  0012               	return	
  7388  002DFA                     l5679:
  7389  002DFA  C0C0  F0C6         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7390  002DFE  C0C1  F0C7         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7391                           
  7392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7393                           ; Switch size 1, requested type "space"
  7394                           ; Number of cases is 2, Range of values is 0 to 127
  7395                           ; switch strategies available:
  7396                           ; Name         Instructions Cycles
  7397                           ; simple_byte            7     4 (average)
  7398                           ;	Chosen strategy is simple_byte
  7399  002E02  0100               	movlb	0	; () banked
  7400  002E04  51C7               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
  7401  002E06  0A00               	xorlw	0	; case 0
  7402  002E08  B4D8               	btfsc	status,2,c
  7403  002E0A  D004               	goto	l7331
  7404  002E0C  0A7F               	xorlw	127	; case 127
  7405  002E0E  A4D8               	btfss	status,2,c
  7406  002E10  0012               	return	
  7407  002E12  D019               	goto	l7333
  7408  002E14                     l7331:
  7409                           
  7410                           ; BSR set to: 0
  7411                           ; Switch size 1, requested type "space"
  7412                           ; Number of cases is 8, Range of values is 1 to 117
  7413                           ; switch strategies available:
  7414                           ; Name         Instructions Cycles
  7415                           ; simple_byte           25    13 (average)
  7416                           ;	Chosen strategy is simple_byte
  7417  002E14  0100               	movlb	0	; () banked
  7418  002E16  51C6               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  7419  002E18  0A01               	xorlw	1	; case 1
  7420  002E1A  B4D8               	btfsc	status,2,c
  7421  002E1C  D7E8               	goto	l5673
  7422  002E1E  0A03               	xorlw	3	; case 2
  7423  002E20  B4D8               	btfsc	status,2,c
  7424  002E22  0012               	return	
  7425  002E24  0A01               	xorlw	1	; case 3
  7426  002E26  B4D8               	btfsc	status,2,c
  7427  002E28  D7E5               	goto	l5675
  7428  002E2A  0A06               	xorlw	6	; case 5
  7429  002E2C  B4D8               	btfsc	status,2,c
  7430  002E2E  0012               	return	
  7431  002E30  0A77               	xorlw	119	; case 114
  7432  002E32  B4D8               	btfsc	status,2,c
  7433  002E34  0012               	return	
  7434  002E36  0A01               	xorlw	1	; case 115
  7435  002E38  B4D8               	btfsc	status,2,c
  7436  002E3A  0012               	return	
  7437  002E3C  0A07               	xorlw	7	; case 116
  7438  002E3E  B4D8               	btfsc	status,2,c
  7439  002E40  0012               	return	
  7440  002E42  0A01               	xorlw	1	; case 117
  7441  002E44  0012               	return	
  7442  002E46                     l7333:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ; Switch size 1, requested type "space"
  7446                           ; Number of cases is 1, Range of values is 255 to 255
  7447                           ; switch strategies available:
  7448                           ; Name         Instructions Cycles
  7449                           ; simple_byte            4     3 (average)
  7450                           ;	Chosen strategy is simple_byte
  7451  002E46  0100               	movlb	0	; () banked
  7452  002E48  51C6               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  7453  002E4A  0AFF               	xorlw	255	; case 255
  7454  002E4C  0012               	return	
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;karate.c: 304: return 1;
  7458                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7459  002E4E  0012               	return		;funcret
  7460  002E50                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7461                           	opt stack 0
  7462                           tblptru	equ	0xFF8
  7463                           tblptrh	equ	0xFF7
  7464                           tblptrl	equ	0xFF6
  7465                           tablat	equ	0xFF5
  7466                           prodh	equ	0xFF4
  7467                           prodl	equ	0xFF3
  7468                           intcon	equ	0xFF2
  7469                           postinc0	equ	0xFEE
  7470                           wreg	equ	0xFE8
  7471                           indf1	equ	0xFE7
  7472                           postdec1	equ	0xFE5
  7473                           fsr1h	equ	0xFE2
  7474                           fsr1l	equ	0xFE1
  7475                           indf2	equ	0xFDF
  7476                           postinc2	equ	0xFDE
  7477                           postdec2	equ	0xFDD
  7478                           plusw2	equ	0xFDB
  7479                           fsr2h	equ	0xFDA
  7480                           fsr2l	equ	0xFD9
  7481                           status	equ	0xFD8
  7482                           
  7483 ;; *************** function _USBCheckCDCRequest *****************
  7484 ;; Defined at:
  7485 ;;		line 204 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;		None
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;		None               void
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7499 ;;      Params:         0       0       0       0       0       0       0       0       0
  7500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7502 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7503 ;;Total ram usage:        0 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    4
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text25
  7514  002832                     __ptext25:
  7515                           	opt stack 0
  7516  002832                     _USBCheckCDCRequest:
  7517                           	opt stack 23
  7518                           
  7519                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
  7520                           
  7521                           ;incstack = 0
  7522  002832  0104               	movlb	4	; () banked
  7523  002834  5130               	movf	48,w,b	;volatile
  7524  002836  0B1F               	andlw	31
  7525  002838  06E8               	decf	wreg,f,c
  7526  00283A  A4D8               	btfss	status,2,c
  7527  00283C  0012               	return	
  7528  00283E  D001               	goto	l5635
  7529                           
  7530                           ; BSR set to: 4
  7531  002840  0012               	return	
  7532  002842                     l5635:
  7533                           
  7534                           ; BSR set to: 4
  7535                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
  7536  002842  0104               	movlb	4	; () banked
  7537  002844  3930               	swapf	48,w,b	;volatile
  7538  002846  32E8               	rrcf	wreg,f,c
  7539  002848  0B03               	andlw	3
  7540  00284A  06E8               	decf	wreg,f,c
  7541  00284C  A4D8               	btfss	status,2,c
  7542  00284E  0012               	return	
  7543  002850  D001               	goto	l5639
  7544                           
  7545                           ; BSR set to: 4
  7546  002852  0012               	return	
  7547  002854                     l5639:
  7548                           
  7549                           ; BSR set to: 4
  7550                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
  7551                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
  7552  002854  0104               	movlb	4	; () banked
  7553  002856  5134               	movf	52,w,b	;volatile
  7554  002858  B4D8               	btfsc	status,2,c
  7555  00285A  D035               	goto	l5669
  7556                           
  7557                           ; BSR set to: 4
  7558  00285C  0104               	movlb	4	; () banked
  7559  00285E  0534               	decf	52,w,b	;volatile
  7560  002860  A4D8               	btfss	status,2,c
  7561  002862  0012               	return	
  7562  002864  D030               	goto	l5669
  7563                           
  7564                           ; BSR set to: 4
  7565  002866  0012               	return	
  7566                           
  7567                           ; BSR set to: 4
  7568                           ;usb_device_cdc.c: 223: switch(SetupPkt.bRequest)
  7569  002868  D02E               	goto	l5669
  7570  00286A                     l5645:
  7571                           
  7572                           ; BSR set to: 4
  7573                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7574  00286A  0EA2               	movlw	low _dummy_encapsulated_cmd_response
  7575  00286C  6E3D               	movwf	_inPipes,c	;volatile
  7576  00286E  0E00               	movlw	high _dummy_encapsulated_cmd_response
  7577  002870  6E3E               	movwf	_inPipes+1,c	;volatile
  7578                           
  7579                           ; BSR set to: 4
  7580                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
  7581  002872  0E00               	movlw	0
  7582  002874  6E42               	movwf	_inPipes+5,c	;volatile
  7583  002876  0E08               	movlw	8
  7584  002878  6E41               	movwf	_inPipes+4,c	;volatile
  7585                           
  7586                           ; BSR set to: 4
  7587                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7588  00287A  8040               	bsf	_inPipes+3,0,c	;volatile
  7589                           
  7590                           ; BSR set to: 4
  7591                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  7592  00287C  8E40               	bsf	_inPipes+3,7,c	;volatile
  7593                           
  7594                           ;usb_device_cdc.c: 232: break;
  7595  00287E  0012               	return	
  7596  002880                     l5653:
  7597                           
  7598                           ; BSR set to: 4
  7599                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7600  002880  0EA2               	movlw	low _dummy_encapsulated_cmd_response
  7601  002882  6E3D               	movwf	_inPipes,c	;volatile
  7602  002884  0E00               	movlw	high _dummy_encapsulated_cmd_response
  7603  002886  6E3E               	movwf	_inPipes+1,c	;volatile
  7604                           
  7605                           ; BSR set to: 4
  7606                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
  7607  002888  8E40               	bsf	_inPipes+3,7,c	;volatile
  7608                           
  7609                           ;usb_device_cdc.c: 237: break;
  7610  00288A  0012               	return	
  7611  00288C                     l746:
  7612                           
  7613                           ; BSR set to: 4
  7614                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
  7615  00288C  C436 F027          	movff	1078,_outPipes+4	;volatile
  7616  002890  C437 F028          	movff	1079,_outPipes+5	;volatile
  7617                           
  7618                           ; BSR set to: 4
  7619                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7620  002894  0EAA               	movlw	low _line_coding
  7621  002896  6E23               	movwf	_outPipes,c	;volatile
  7622  002898  0E00               	movlw	high _line_coding
  7623  00289A  6E24               	movwf	_outPipes+1,c	;volatile
  7624                           
  7625                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
  7626  00289C  0E00               	movlw	0
  7627  00289E  6E29               	movwf	_outPipes+6,c	;volatile
  7628  0028A0  0E00               	movlw	0
  7629  0028A2  6E2A               	movwf	_outPipes+7,c	;volatile
  7630                           
  7631                           ; BSR set to: 4
  7632                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
  7633  0028A4  8E26               	bsf	_outPipes+3,7,c	;volatile
  7634                           
  7635                           ;usb_device_cdc.c: 246: break;
  7636  0028A6  0012               	return	
  7637  0028A8                     l5661:
  7638                           
  7639                           ; BSR set to: 4
  7640                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7641  0028A8  0EAA               	movlw	low _line_coding
  7642  0028AA  6E3D               	movwf	_inPipes,c	;volatile
  7643  0028AC  0E00               	movlw	high _line_coding
  7644  0028AE  6E3E               	movwf	_inPipes+1,c	;volatile
  7645                           
  7646                           ; BSR set to: 4
  7647  0028B0  0E00               	movlw	0
  7648  0028B2  6E42               	movwf	_inPipes+5,c	;volatile
  7649  0028B4  0E07               	movlw	7
  7650  0028B6  6E41               	movwf	_inPipes+4,c	;volatile
  7651                           
  7652                           ; BSR set to: 4
  7653  0028B8  0EC1               	movlw	193
  7654  0028BA  6E40               	movwf	_inPipes+3,c	;volatile
  7655                           
  7656                           ;usb_device_cdc.c: 253: break;
  7657  0028BC  0012               	return	
  7658  0028BE                     l748:
  7659                           
  7660                           ; BSR set to: 4
  7661                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7662  0028BE  C432 F09A          	movff	1074,_control_signal_bitmap	;volatile
  7663                           
  7664                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
  7665  0028C2  8E40               	bsf	_inPipes+3,7,c	;volatile
  7666                           
  7667                           ; BSR set to: 4
  7668                           ;usb_device_cdc.c: 315: }
  7669                           
  7670                           ; BSR set to: 4
  7671                           ;usb_device_cdc.c: 314: break;
  7672                           
  7673                           ;usb_device_cdc.c: 313: default:
  7674                           
  7675                           ;usb_device_cdc.c: 289: break;
  7676  0028C4  0012               	return	
  7677  0028C6                     l5669:
  7678                           
  7679                           ; BSR set to: 4
  7680  0028C6  0104               	movlb	4	; () banked
  7681  0028C8  5131               	movf	49,w,b	;volatile
  7682                           
  7683                           ; Switch size 1, requested type "space"
  7684                           ; Number of cases is 5, Range of values is 0 to 34
  7685                           ; switch strategies available:
  7686                           ; Name         Instructions Cycles
  7687                           ; simple_byte           16     9 (average)
  7688                           ;	Chosen strategy is simple_byte
  7689  0028CA  0A00               	xorlw	0	; case 0
  7690  0028CC  B4D8               	btfsc	status,2,c
  7691  0028CE  D7CD               	goto	l5645
  7692  0028D0  0A01               	xorlw	1	; case 1
  7693  0028D2  B4D8               	btfsc	status,2,c
  7694  0028D4  D7D5               	goto	l5653
  7695  0028D6  0A21               	xorlw	33	; case 32
  7696  0028D8  B4D8               	btfsc	status,2,c
  7697  0028DA  D7D8               	goto	l746
  7698  0028DC  0A01               	xorlw	1	; case 33
  7699  0028DE  B4D8               	btfsc	status,2,c
  7700  0028E0  D7E3               	goto	l5661
  7701  0028E2  0A03               	xorlw	3	; case 34
  7702  0028E4  A4D8               	btfss	status,2,c
  7703  0028E6  0012               	return	
  7704  0028E8  D7EA               	goto	l748
  7705                           
  7706                           ; BSR set to: 4
  7707                           
  7708                           ; BSR set to: 4
  7709  0028EA  0012               	return		;funcret
  7710  0028EC                     __end_of_USBCheckCDCRequest:
  7711                           	opt stack 0
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           prodh	equ	0xFF4
  7717                           prodl	equ	0xFF3
  7718                           intcon	equ	0xFF2
  7719                           postinc0	equ	0xFEE
  7720                           wreg	equ	0xFE8
  7721                           indf1	equ	0xFE7
  7722                           postdec1	equ	0xFE5
  7723                           fsr1h	equ	0xFE2
  7724                           fsr1l	equ	0xFE1
  7725                           indf2	equ	0xFDF
  7726                           postinc2	equ	0xFDE
  7727                           postdec2	equ	0xFDD
  7728                           plusw2	equ	0xFDB
  7729                           fsr2h	equ	0xFDA
  7730                           fsr2l	equ	0xFD9
  7731                           status	equ	0xFD8
  7732                           
  7733 ;; *************** function _CDCInitEP *****************
  7734 ;; Defined at:
  7735 ;;		line 351 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device_cdc.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;		None
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;		None
  7740 ;; Return value:  Size  Location     Type
  7741 ;;		None               void
  7742 ;; Registers used:
  7743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7749 ;;      Params:         0       0       0       0       0       0       0       0       0
  7750 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7752 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7753 ;;Total ram usage:        0 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    6
  7756 ;; This function calls:
  7757 ;;		_USBEnableEndpoint
  7758 ;;		_USBTransferOnePacket
  7759 ;; This function is called by:
  7760 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text26
  7765  002D04                     __ptext26:
  7766                           	opt stack 0
  7767  002D04                     _CDCInitEP:
  7768                           	opt stack 21
  7769                           
  7770                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
  7771                           
  7772                           ; BSR set to: 4
  7773                           ;incstack = 0
  7774  002D04  0E00               	movlw	0
  7775  002D06  0100               	movlb	0	; () banked
  7776  002D08  6FAA               	movwf	_line_coding& (0+255),b
  7777  002D0A  0E4B               	movlw	75
  7778  002D0C  6FAB               	movwf	(_line_coding+1)& (0+255),b
  7779  002D0E  0E00               	movlw	0
  7780  002D10  6FAC               	movwf	(_line_coding+2)& (0+255),b
  7781  002D12  0E00               	movlw	0
  7782  002D14  6FAD               	movwf	(_line_coding+3)& (0+255),b
  7783                           
  7784                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
  7785  002D16  0E00               	movlw	0
  7786  002D18  0100               	movlb	0	; () banked
  7787  002D1A  6FAE               	movwf	(_line_coding+4)& (0+255),b
  7788                           
  7789                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
  7790  002D1C  0E00               	movlw	0
  7791  002D1E  0100               	movlb	0	; () banked
  7792  002D20  6FAF               	movwf	(_line_coding+5)& (0+255),b
  7793                           
  7794                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
  7795  002D22  0E08               	movlw	8
  7796  002D24  0100               	movlb	0	; () banked
  7797  002D26  6FB0               	movwf	(_line_coding+6)& (0+255),b
  7798                           
  7799                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
  7800  002D28  0E00               	movlw	0
  7801  002D2A  6E36               	movwf	_cdc_rx_len,c
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
  7805  002D2C  0E1A               	movlw	26
  7806  002D2E  0100               	movlb	0	; () banked
  7807  002D30  6FBC               	movwf	USBEnableEndpoint@options& (0+255),b
  7808  002D32  0E01               	movlw	1
  7809  002D34  ECB6  F017         	call	_USBEnableEndpoint
  7810                           
  7811                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7812  002D38  0E1E               	movlw	30
  7813  002D3A  0100               	movlb	0	; () banked
  7814  002D3C  6FBC               	movwf	USBEnableEndpoint@options& (0+255),b
  7815  002D3E  0E02               	movlw	2
  7816  002D40  ECB6  F017         	call	_USBEnableEndpoint
  7817                           
  7818                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7819  002D44  0E00               	movlw	0
  7820  002D46  0100               	movlb	0	; () banked
  7821  002D48  6FB4               	movwf	USBTransferOnePacket@dir& (0+255),b
  7822  002D4A  0E80               	movlw	low _cdc_data_rx
  7823  002D4C  0100               	movlb	0	; () banked
  7824  002D4E  6FB5               	movwf	USBTransferOnePacket@data& (0+255),b
  7825  002D50  0E02               	movlw	high _cdc_data_rx
  7826  002D52  0100               	movlb	0	; () banked
  7827  002D54  6FB6               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  7828  002D56  0E40               	movlw	64
  7829  002D58  0100               	movlb	0	; () banked
  7830  002D5A  6FB7               	movwf	USBTransferOnePacket@len& (0+255),b
  7831  002D5C  0E02               	movlw	2
  7832  002D5E  ECD8  F010         	call	_USBTransferOnePacket
  7833  002D62  C0B4  F082         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  7834  002D66  C0B5  F083         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  7835                           
  7836                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
  7837  002D6A  0E00               	movlw	0
  7838  002D6C  0100               	movlb	0	; () banked
  7839  002D6E  6F80               	movwf	_CDCDataInHandle& (0+255),b
  7840  002D70  0E00               	movlw	0
  7841  002D72  0100               	movlb	0	; () banked
  7842  002D74  6F81               	movwf	(_CDCDataInHandle+1)& (0+255),b
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
  7846  002D76  0E00               	movlw	0
  7847  002D78  6E37               	movwf	_cdc_trf_state,c
  7848                           
  7849                           ; BSR set to: 0
  7850  002D7A  0012               	return		;funcret
  7851  002D7C                     __end_of_CDCInitEP:
  7852                           	opt stack 0
  7853                           tblptru	equ	0xFF8
  7854                           tblptrh	equ	0xFF7
  7855                           tblptrl	equ	0xFF6
  7856                           tablat	equ	0xFF5
  7857                           prodh	equ	0xFF4
  7858                           prodl	equ	0xFF3
  7859                           intcon	equ	0xFF2
  7860                           postinc0	equ	0xFEE
  7861                           wreg	equ	0xFE8
  7862                           indf1	equ	0xFE7
  7863                           postdec1	equ	0xFE5
  7864                           fsr1h	equ	0xFE2
  7865                           fsr1l	equ	0xFE1
  7866                           indf2	equ	0xFDF
  7867                           postinc2	equ	0xFDE
  7868                           postdec2	equ	0xFDD
  7869                           plusw2	equ	0xFDB
  7870                           fsr2h	equ	0xFDA
  7871                           fsr2l	equ	0xFD9
  7872                           status	equ	0xFD8
  7873                           
  7874 ;; *************** function _USBTransferOnePacket *****************
  7875 ;; Defined at:
  7876 ;;		line 995 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  ep              1    wreg     unsigned char 
  7879 ;;  dir             1    0[BANK0 ] unsigned char 
  7880 ;;  data            2    1[BANK0 ] PTR unsigned char 
  7881 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7882 ;;  len             1    3[BANK0 ] unsigned char 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  ep              1    4[BANK0 ] unsigned char 
  7885 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
  7886 ;;		 -> NULL(0), BDT(48), 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  2    0[BANK0 ] PTR void 
  7889 ;; Registers used:
  7890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7896 ;;      Params:         0       4       0       0       0       0       0       0       0
  7897 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7899 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7900 ;;Total ram usage:        7 bytes
  7901 ;; Hardware stack levels used:    1
  7902 ;; Hardware stack levels required when called:    4
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_CDCInitEP
  7907 ;;		_getsUSBUSART
  7908 ;;		_CDCTxService
  7909 ;;		_USBCDCEventHandler
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text27
  7914  0021B0                     __ptext27:
  7915                           	opt stack 0
  7916  0021B0                     _USBTransferOnePacket:
  7917                           	opt stack 22
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;incstack = 0
  7921                           ;USBTransferOnePacket@ep stored from wreg
  7922  0021B0  0100               	movlb	0	; () banked
  7923  0021B2  6FB8               	movwf	USBTransferOnePacket@ep& (0+255),b
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7927                           ;usb_device.c: 1000: if(dir != 0)
  7928  0021B4  0100               	movlb	0	; () banked
  7929  0021B6  51B4               	movf	USBTransferOnePacket@dir& (0+255),w,b
  7930  0021B8  0100               	movlb	0	; () banked
  7931  0021BA  B4D8               	btfsc	status,2,c
  7932  0021BC  D008               	goto	l5593
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;usb_device.c: 1001: {
  7936                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7937  0021BE  0100               	movlb	0	; () banked
  7938  0021C0  51B8               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7939  0021C2  0D02               	mullw	2
  7940  0021C4  0E2B               	movlw	low _pBDTEntryIn
  7941  0021C6  24F3               	addwf	prodl,w,c
  7942  0021C8  6ED9               	movwf	fsr2l,c
  7943  0021CA  0E00               	movlw	high _pBDTEntryIn
  7944  0021CC  D007               	goto	L9
  7945  0021CE                     l5593:
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;usb_device.c: 1005: else
  7949                           ;usb_device.c: 1006: {
  7950                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7951  0021CE  0100               	movlb	0	; () banked
  7952  0021D0  51B8               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7953  0021D2  0D02               	mullw	2
  7954  0021D4  0E6A               	movlw	low _pBDTEntryOut
  7955  0021D6  24F3               	addwf	prodl,w,c
  7956  0021D8  6ED9               	movwf	fsr2l,c
  7957  0021DA  0E00               	movlw	high _pBDTEntryOut
  7958  0021DC                     L9:
  7959  0021DC  20F4               	addwfc	prodh,w,c
  7960  0021DE  6EDA               	movwf	fsr2h,c
  7961  0021E0  CFDE F0B9          	movff	postinc2,USBTransferOnePacket@handle
  7962  0021E4  CFDD F0BA          	movff	postdec2,USBTransferOnePacket@handle+1
  7963  0021E8  D000               	goto	l5595
  7964  0021EA                     l5595:
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;usb_device.c: 1009: }
  7968                           ;usb_device.c: 1013: if(handle == 0)
  7969  0021EA  0100               	movlb	0	; () banked
  7970  0021EC  51B9               	movf	USBTransferOnePacket@handle& (0+255),w,b
  7971  0021EE  0100               	movlb	0	; () banked
  7972  0021F0  11BA               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  7973  0021F2  A4D8               	btfss	status,2,c
  7974  0021F4  D007               	goto	l5601
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;usb_device.c: 1014: {
  7978                           ;usb_device.c: 1015: return 0;
  7979  0021F6  0E00               	movlw	0
  7980  0021F8  0100               	movlb	0	; () banked
  7981  0021FA  6FB4               	movwf	?_USBTransferOnePacket& (0+255),b
  7982  0021FC  0E00               	movlw	0
  7983  0021FE  0100               	movlb	0	; () banked
  7984  002200  6FB5               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  7985                           
  7986                           ; BSR set to: 0
  7987  002202  0012               	return	
  7988  002204                     l5601:
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;usb_device.c: 1016: }
  7992                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  7993  002204  0100               	movlb	0	; () banked
  7994  002206  EE20 F002          	lfsr	2,2
  7995  00220A  51B9               	movf	USBTransferOnePacket@handle& (0+255),w,b
  7996  00220C  26D9               	addwf	fsr2l,f,c
  7997  00220E  51BA               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  7998  002210  22DA               	addwfc	fsr2h,f,c
  7999  002212  C0B5  FFDE         	movff	USBTransferOnePacket@data,postinc2
  8000  002216  C0B6  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  8001                           
  8002                           ;usb_device.c: 1030: handle->CNT = len;
  8003  00221A  0100               	movlb	0	; () banked
  8004  00221C  EE20 F001          	lfsr	2,1
  8005  002220  51B9               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8006  002222  26D9               	addwf	fsr2l,f,c
  8007  002224  51BA               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8008  002226  22DA               	addwfc	fsr2h,f,c
  8009  002228  C0B7  FFDF         	movff	USBTransferOnePacket@len,indf2
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8013  00222C  C0B9  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8014  002230  C0BA  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8015  002234  0E40               	movlw	64
  8016  002236  16DF               	andwf	indf2,f,c
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8020  002238  C0B9  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8021  00223C  C0BA  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8022  002240  0E00               	movlw	0
  8023  002242  86DB               	bsf	plusw2,3,c
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8027  002244  C0B9  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8028  002248  C0BA  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8029  00224C  0E00               	movlw	0
  8030  00224E  8EDB               	bsf	plusw2,7,c
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;usb_device.c: 1036: if(dir != 0)
  8034  002250  0100               	movlb	0	; () banked
  8035  002252  51B4               	movf	USBTransferOnePacket@dir& (0+255),w,b
  8036  002254  0100               	movlb	0	; () banked
  8037  002256  B4D8               	btfsc	status,2,c
  8038  002258  D008               	goto	l5613
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;usb_device.c: 1037: {
  8042                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  8043  00225A  0100               	movlb	0	; () banked
  8044  00225C  51B8               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8045  00225E  0D02               	mullw	2
  8046  002260  0E2B               	movlw	low _pBDTEntryIn
  8047  002262  24F3               	addwf	prodl,w,c
  8048  002264  6ED9               	movwf	fsr2l,c
  8049  002266  0E00               	movlw	high _pBDTEntryIn
  8050  002268  D007               	goto	L10
  8051  00226A                     l5613:
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;usb_device.c: 1041: else
  8055                           ;usb_device.c: 1042: {
  8056                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8057  00226A  0100               	movlb	0	; () banked
  8058  00226C  51B8               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8059  00226E  0D02               	mullw	2
  8060  002270  0E6A               	movlw	low _pBDTEntryOut
  8061  002272  24F3               	addwf	prodl,w,c
  8062  002274  6ED9               	movwf	fsr2l,c
  8063  002276  0E00               	movlw	high _pBDTEntryOut
  8064  002278                     L10:
  8065  002278  20F4               	addwfc	prodh,w,c
  8066  00227A  6EDA               	movwf	fsr2h,c
  8067  00227C  0E04               	movlw	4
  8068  00227E  1ADF               	xorwf	indf2,f,c
  8069  002280  D000               	goto	l5615
  8070  002282                     l5615:
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;usb_device.c: 1045: }
  8074                           ;usb_device.c: 1046: return (void*)handle;
  8075  002282  C0B9  F0B4         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  8076  002286  C0BA  F0B5         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  8077  00228A  0012               	return	
  8078                           
  8079                           ; BSR set to: 0
  8080                           
  8081                           ; BSR set to: 0
  8082  00228C  0012               	return		;funcret
  8083  00228E                     __end_of_USBTransferOnePacket:
  8084                           	opt stack 0
  8085                           tblptru	equ	0xFF8
  8086                           tblptrh	equ	0xFF7
  8087                           tblptrl	equ	0xFF6
  8088                           tablat	equ	0xFF5
  8089                           prodh	equ	0xFF4
  8090                           prodl	equ	0xFF3
  8091                           intcon	equ	0xFF2
  8092                           postinc0	equ	0xFEE
  8093                           wreg	equ	0xFE8
  8094                           indf1	equ	0xFE7
  8095                           postdec1	equ	0xFE5
  8096                           fsr1h	equ	0xFE2
  8097                           fsr1l	equ	0xFE1
  8098                           indf2	equ	0xFDF
  8099                           postinc2	equ	0xFDE
  8100                           postdec2	equ	0xFDD
  8101                           plusw2	equ	0xFDB
  8102                           fsr2h	equ	0xFDA
  8103                           fsr2l	equ	0xFD9
  8104                           status	equ	0xFD8
  8105                           
  8106 ;; *************** function _USBEnableEndpoint *****************
  8107 ;; Defined at:
  8108 ;;		line 878 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  ep              1    wreg     unsigned char 
  8111 ;;  options         1    8[BANK0 ] unsigned char 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  ep              1   11[BANK0 ] unsigned char 
  8114 ;;  p               2    9[BANK0 ] PTR unsigned char 
  8115 ;;		 -> UEP0(1), 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;		None               void
  8118 ;; Registers used:
  8119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8125 ;;      Params:         0       1       0       0       0       0       0       0       0
  8126 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8128 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8129 ;;Total ram usage:        4 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    5
  8132 ;; This function calls:
  8133 ;;		_USBConfigureEndpoint
  8134 ;; This function is called by:
  8135 ;;		_CDCInitEP
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text28
  8140  002F6C                     __ptext28:
  8141                           	opt stack 0
  8142  002F6C                     _USBEnableEndpoint:
  8143                           	opt stack 21
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;incstack = 0
  8147                           ;USBEnableEndpoint@ep stored from wreg
  8148  002F6C  0100               	movlb	0	; () banked
  8149  002F6E  6FBF               	movwf	USBEnableEndpoint@ep& (0+255),b
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;usb_device.c: 880: unsigned char* p;
  8153                           ;usb_device.c: 884: if(options & 0x04)
  8154  002F70  0100               	movlb	0	; () banked
  8155  002F72  A5BC               	btfss	USBEnableEndpoint@options& (0+255),2,b
  8156  002F74  D008               	goto	l5581
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;usb_device.c: 885: {
  8160                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8161  002F76  0E00               	movlw	0
  8162  002F78  0100               	movlb	0	; () banked
  8163  002F7A  6FB4               	movwf	USBConfigureEndpoint@direction& (0+255),b
  8164  002F7C  0100               	movlb	0	; () banked
  8165  002F7E  51BF               	movf	USBEnableEndpoint@ep& (0+255),w,b
  8166  002F80  ECED  F012         	call	_USBConfigureEndpoint
  8167  002F84  D000               	goto	l5581
  8168  002F86                     l5581:
  8169                           
  8170                           ;usb_device.c: 887: }
  8171                           ;usb_device.c: 888: if(options & 0x02)
  8172  002F86  0100               	movlb	0	; () banked
  8173  002F88  A3BC               	btfss	USBEnableEndpoint@options& (0+255),1,b
  8174  002F8A  D008               	goto	l5585
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;usb_device.c: 889: {
  8178                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8179  002F8C  0E01               	movlw	1
  8180  002F8E  0100               	movlb	0	; () banked
  8181  002F90  6FB4               	movwf	USBConfigureEndpoint@direction& (0+255),b
  8182  002F92  0100               	movlb	0	; () banked
  8183  002F94  51BF               	movf	USBEnableEndpoint@ep& (0+255),w,b
  8184  002F96  ECED  F012         	call	_USBConfigureEndpoint
  8185  002F9A  D000               	goto	l5585
  8186  002F9C                     l5585:
  8187                           
  8188                           ;usb_device.c: 891: }
  8189                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8190  002F9C  0100               	movlb	0	; () banked
  8191  002F9E  51BF               	movf	USBEnableEndpoint@ep& (0+255),w,b
  8192  002FA0  0D01               	mullw	1
  8193  002FA2  0E6A               	movlw	106
  8194  002FA4  24F3               	addwf	prodl,w,c
  8195  002FA6  0100               	movlb	0	; () banked
  8196  002FA8  6FBD               	movwf	USBEnableEndpoint@p& (0+255),b
  8197  002FAA  0E0F               	movlw	15
  8198  002FAC  20F4               	addwfc	prodh,w,c
  8199  002FAE  0100               	movlb	0	; () banked
  8200  002FB0  6FBE               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;usb_device.c: 901: *p = options;
  8204  002FB2  C0BD  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8205  002FB6  C0BE  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8206  002FBA  C0BC  FFDF         	movff	USBEnableEndpoint@options,indf2
  8207                           
  8208                           ; BSR set to: 0
  8209  002FBE  0012               	return		;funcret
  8210  002FC0                     __end_of_USBEnableEndpoint:
  8211                           	opt stack 0
  8212                           tblptru	equ	0xFF8
  8213                           tblptrh	equ	0xFF7
  8214                           tblptrl	equ	0xFF6
  8215                           tablat	equ	0xFF5
  8216                           prodh	equ	0xFF4
  8217                           prodl	equ	0xFF3
  8218                           intcon	equ	0xFF2
  8219                           postinc0	equ	0xFEE
  8220                           wreg	equ	0xFE8
  8221                           indf1	equ	0xFE7
  8222                           postdec1	equ	0xFE5
  8223                           fsr1h	equ	0xFE2
  8224                           fsr1l	equ	0xFE1
  8225                           indf2	equ	0xFDF
  8226                           postinc2	equ	0xFDE
  8227                           postdec2	equ	0xFDD
  8228                           plusw2	equ	0xFDB
  8229                           fsr2h	equ	0xFDA
  8230                           fsr2l	equ	0xFD9
  8231                           status	equ	0xFD8
  8232                           
  8233 ;; *************** function _USBConfigureEndpoint *****************
  8234 ;; Defined at:
  8235 ;;		line 1543 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  EPNum           1    wreg     unsigned char 
  8238 ;;  direction       1    0[BANK0 ] unsigned char 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  EPNum           1    5[BANK0 ] unsigned char 
  8241 ;;  handle          2    6[BANK0 ] PTR volatile struct __BD
  8242 ;;		 -> BDT(48), 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;		None               void
  8245 ;; Registers used:
  8246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8252 ;;      Params:         0       1       0       0       0       0       0       0       0
  8253 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8254 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8255 ;;      Totals:         0       8       0       0       0       0       0       0       0
  8256 ;;Total ram usage:        8 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    4
  8259 ;; This function calls:
  8260 ;;		Nothing
  8261 ;; This function is called by:
  8262 ;;		_USBEnableEndpoint
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text29
  8267  0025DA                     __ptext29:
  8268                           	opt stack 0
  8269  0025DA                     _USBConfigureEndpoint:
  8270                           	opt stack 21
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;incstack = 0
  8274                           ;USBConfigureEndpoint@EPNum stored from wreg
  8275  0025DA  0100               	movlb	0	; () banked
  8276  0025DC  6FB9               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8280                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8281  0025DE  0E00               	movlw	0
  8282  0025E0  0100               	movlb	0	; () banked
  8283  0025E2  6FBA               	movwf	USBConfigureEndpoint@handle& (0+255),b
  8284  0025E4  0E04               	movlw	4
  8285  0025E6  0100               	movlb	0	; () banked
  8286  0025E8  6FBB               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
  8287                           
  8288                           ; BSR set to: 0
  8289                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8290  0025EA  0100               	movlb	0	; () banked
  8291  0025EC  51B4               	movf	USBConfigureEndpoint@direction& (0+255),w,b
  8292  0025EE  0100               	movlb	0	; () banked
  8293  0025F0  6FB5               	movwf	??_USBConfigureEndpoint& (0+255),b
  8294  0025F2  6BB6               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
  8295  0025F4  90D8               	bcf	status,0,c
  8296  0025F6  0100               	movlb	0	; () banked
  8297  0025F8  37B5               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
  8298  0025FA  37B6               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
  8299  0025FC  0100               	movlb	0	; () banked
  8300  0025FE  51B9               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
  8301  002600  0100               	movlb	0	; () banked
  8302  002602  6FB7               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
  8303  002604  6BB8               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
  8304  002606  0100               	movlb	0	; () banked
  8305  002608  90D8               	bcf	status,0,c
  8306  00260A  37B7               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8307  00260C  37B8               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8308  00260E  0100               	movlb	0	; () banked
  8309  002610  90D8               	bcf	status,0,c
  8310  002612  37B7               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8311  002614  37B8               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8312  002616  0100               	movlb	0	; () banked
  8313  002618  51B5               	movf	??_USBConfigureEndpoint& (0+255),w,b
  8314  00261A  0100               	movlb	0	; () banked
  8315  00261C  27B7               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8316  00261E  0100               	movlb	0	; () banked
  8317  002620  51B6               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
  8318  002622  0100               	movlb	0	; () banked
  8319  002624  23B8               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8320  002626  0100               	movlb	0	; () banked
  8321  002628  90D8               	bcf	status,0,c
  8322  00262A  37B7               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8323  00262C  37B8               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8324  00262E  0100               	movlb	0	; () banked
  8325  002630  90D8               	bcf	status,0,c
  8326  002632  37B7               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8327  002634  37B8               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8328  002636  0100               	movlb	0	; () banked
  8329  002638  51B7               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
  8330  00263A  0100               	movlb	0	; () banked
  8331  00263C  27BA               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
  8332  00263E  0100               	movlb	0	; () banked
  8333  002640  51B8               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
  8334  002642  0100               	movlb	0	; () banked
  8335  002644  23BB               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8339  002646  C0BA  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8340  00264A  C0BB  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8341  00264E  0100               	movlb	0	; () banked
  8342  002650  9EDF               	bcf	indf2,7,c
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;usb_device.c: 1557: if(direction == 0)
  8346  002652  0100               	movlb	0	; () banked
  8347  002654  51B4               	movf	USBConfigureEndpoint@direction& (0+255),w,b
  8348  002656  0100               	movlb	0	; () banked
  8349  002658  A4D8               	btfss	status,2,c
  8350  00265A  D008               	goto	l5571
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;usb_device.c: 1558: {
  8354                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8355  00265C  0100               	movlb	0	; () banked
  8356  00265E  51B9               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
  8357  002660  0D02               	mullw	2
  8358  002662  0E6A               	movlw	low _pBDTEntryOut
  8359  002664  24F3               	addwf	prodl,w,c
  8360  002666  6ED9               	movwf	fsr2l,c
  8361  002668  0E00               	movlw	high _pBDTEntryOut
  8362  00266A  D007               	goto	L11
  8363  00266C                     l5571:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;usb_device.c: 1561: else
  8367                           ;usb_device.c: 1562: {
  8368                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8369  00266C  0100               	movlb	0	; () banked
  8370  00266E  51B9               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
  8371  002670  0D02               	mullw	2
  8372  002672  0E2B               	movlw	low _pBDTEntryIn
  8373  002674  24F3               	addwf	prodl,w,c
  8374  002676  6ED9               	movwf	fsr2l,c
  8375  002678  0E00               	movlw	high _pBDTEntryIn
  8376  00267A                     L11:
  8377  00267A  20F4               	addwfc	prodh,w,c
  8378  00267C  6EDA               	movwf	fsr2h,c
  8379  00267E  C0BA  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8380  002682  C0BB  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8381  002686  D000               	goto	l5573
  8382  002688                     l5573:
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;usb_device.c: 1564: }
  8386                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8387  002688  C0BA  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8388  00268C  C0BB  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8389  002690  0100               	movlb	0	; () banked
  8390  002692  9CDF               	bcf	indf2,6,c
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8394  002694  0100               	movlb	0	; () banked
  8395  002696  EE20 F004          	lfsr	2,4
  8396  00269A  51BA               	movf	USBConfigureEndpoint@handle& (0+255),w,b
  8397  00269C  26D9               	addwf	fsr2l,f,c
  8398  00269E  51BB               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
  8399  0026A0  22DA               	addwfc	fsr2h,f,c
  8400  0026A2  0100               	movlb	0	; () banked
  8401  0026A4  8CDF               	bsf	indf2,6,c
  8402                           
  8403                           ; BSR set to: 0
  8404  0026A6  0012               	return		;funcret
  8405  0026A8                     __end_of_USBConfigureEndpoint:
  8406                           	opt stack 0
  8407                           tblptru	equ	0xFF8
  8408                           tblptrh	equ	0xFF7
  8409                           tblptrl	equ	0xFF6
  8410                           tablat	equ	0xFF5
  8411                           prodh	equ	0xFF4
  8412                           prodl	equ	0xFF3
  8413                           intcon	equ	0xFF2
  8414                           postinc0	equ	0xFEE
  8415                           wreg	equ	0xFE8
  8416                           indf1	equ	0xFE7
  8417                           postdec1	equ	0xFE5
  8418                           fsr1h	equ	0xFE2
  8419                           fsr1l	equ	0xFE1
  8420                           indf2	equ	0xFDF
  8421                           postinc2	equ	0xFDE
  8422                           postdec2	equ	0xFDD
  8423                           plusw2	equ	0xFDB
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function _USBCtrlTrfOutHandler *****************
  8429 ;; Defined at:
  8430 ;;		line 2541 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;		None               void
  8437 ;; Registers used:
  8438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8447 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8448 ;;Total ram usage:        0 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    6
  8451 ;; This function calls:
  8452 ;;		_USBCtrlTrfRxService
  8453 ;; This function is called by:
  8454 ;;		_USBCtrlEPService
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text30
  8459  002E50                     __ptext30:
  8460                           	opt stack 0
  8461  002E50                     _USBCtrlTrfOutHandler:
  8462                           	opt stack 21
  8463                           
  8464                           ;usb_device.c: 2543: if(controlTransferState == 2)
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;incstack = 0
  8468  002E50  0E02               	movlw	2
  8469  002E52  1839               	xorwf	_controlTransferState,w,c	;volatile
  8470  002E54  A4D8               	btfss	status,2,c
  8471  002E56  D003               	goto	l6163
  8472                           
  8473                           ;usb_device.c: 2544: {
  8474                           ;usb_device.c: 2545: USBCtrlTrfRxService();
  8475  002E58  ECF1  F00C         	call	_USBCtrlTrfRxService	;wreg free
  8476                           
  8477                           ;usb_device.c: 2546: }
  8478  002E5C  0012               	return	
  8479  002E5E                     l6163:
  8480                           
  8481                           ;usb_device.c: 2547: else
  8482                           ;usb_device.c: 2548: {
  8483                           ;usb_device.c: 2551: controlTransferState = 0;
  8484  002E5E  0E00               	movlw	0
  8485  002E60  6E39               	movwf	_controlTransferState,c	;volatile
  8486                           
  8487                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
  8488  002E62  0100               	movlb	0	; () banked
  8489  002E64  5190               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
  8490  002E66  A4D8               	btfss	status,2,c
  8491  002E68  D01F               	goto	l6171
  8492                           
  8493                           ; BSR set to: 0
  8494                           ;usb_device.c: 2559: {
  8495                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
  8496  002E6A  EE20 F001          	lfsr	2,1
  8497  002E6E  5033               	movf	_pBDTEntryEP0OutNext,w,c
  8498  002E70  26D9               	addwf	fsr2l,f,c
  8499  002E72  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  8500  002E74  22DA               	addwfc	fsr2h,f,c
  8501  002E76  0E08               	movlw	8
  8502  002E78  6EDF               	movwf	indf2,c
  8503                           
  8504                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8505  002E7A  EE20 F002          	lfsr	2,2
  8506  002E7E  5033               	movf	_pBDTEntryEP0OutNext,w,c
  8507  002E80  26D9               	addwf	fsr2l,f,c
  8508  002E82  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  8509  002E84  22DA               	addwfc	fsr2h,f,c
  8510  002E86  0E30               	movlw	48
  8511  002E88  6EDE               	movwf	postinc2,c
  8512  002E8A  0E04               	movlw	4
  8513  002E8C  6EDD               	movwf	postdec2,c
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8517  002E8E  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8518  002E92  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8519  002E96  0E0C               	movlw	12
  8520  002E98  6EDF               	movwf	indf2,c
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8524  002E9A  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8525  002E9E  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8526  002EA2  0E00               	movlw	0
  8527  002EA4  8EDB               	bsf	plusw2,7,c
  8528                           
  8529                           ;usb_device.c: 2564: }
  8530  002EA6  0012               	return	
  8531  002EA8                     l6171:
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;usb_device.c: 2565: else
  8535                           ;usb_device.c: 2566: {
  8536                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
  8537  002EA8  0E00               	movlw	0
  8538  002EAA  0100               	movlb	0	; () banked
  8539  002EAC  6F90               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
  8540                           
  8541                           ; BSR set to: 0
  8542  002EAE  0012               	return	
  8543                           
  8544                           ; BSR set to: 0
  8545  002EB0  0012               	return		;funcret
  8546  002EB2                     __end_of_USBCtrlTrfOutHandler:
  8547                           	opt stack 0
  8548                           tblptru	equ	0xFF8
  8549                           tblptrh	equ	0xFF7
  8550                           tblptrl	equ	0xFF6
  8551                           tablat	equ	0xFF5
  8552                           prodh	equ	0xFF4
  8553                           prodl	equ	0xFF3
  8554                           intcon	equ	0xFF2
  8555                           postinc0	equ	0xFEE
  8556                           wreg	equ	0xFE8
  8557                           indf1	equ	0xFE7
  8558                           postdec1	equ	0xFE5
  8559                           fsr1h	equ	0xFE2
  8560                           fsr1l	equ	0xFE1
  8561                           indf2	equ	0xFDF
  8562                           postinc2	equ	0xFDE
  8563                           postdec2	equ	0xFDD
  8564                           plusw2	equ	0xFDB
  8565                           fsr2h	equ	0xFDA
  8566                           fsr2l	equ	0xFD9
  8567                           status	equ	0xFD8
  8568                           
  8569 ;; *************** function _USBCtrlTrfRxService *****************
  8570 ;; Defined at:
  8571 ;;		line 1852 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;  byteToRead      1    1[BANK0 ] unsigned char 
  8576 ;;  i               1    0[BANK0 ] unsigned char 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;		None               void
  8579 ;; Registers used:
  8580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8586 ;;      Params:         0       0       0       0       0       0       0       0       0
  8587 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8589 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8590 ;;Total ram usage:        2 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:    5
  8593 ;; This function calls:
  8594 ;;		_USBCtrlEPAllowStatusStage
  8595 ;; This function is called by:
  8596 ;;		_USBCtrlTrfOutHandler
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text31
  8601  0019E2                     __ptext31:
  8602                           	opt stack 0
  8603  0019E2                     _USBCtrlTrfRxService:
  8604                           	opt stack 21
  8605                           
  8606                           ;usb_device.c: 1854: uint8_t byteToRead;
  8607                           ;usb_device.c: 1855: uint8_t i;
  8608                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8609                           
  8610                           ;incstack = 0
  8611  0019E2  EE20 F001          	lfsr	2,1
  8612  0019E6  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  8613  0019E8  26D9               	addwf	fsr2l,f,c
  8614  0019EA  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8615  0019EC  22DA               	addwfc	fsr2h,f,c
  8616  0019EE  50DF               	movf	indf2,w,c
  8617  0019F0  0100               	movlb	0	; () banked
  8618  0019F2  6FB5               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  8622  0019F4  0100               	movlb	0	; () banked
  8623  0019F6  51B5               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
  8624  0019F8  5C27               	subwf	_outPipes+4,w,c	;volatile
  8625  0019FA  0E00               	movlw	0
  8626  0019FC  5828               	subwfb	_outPipes+5,w,c	;volatile
  8627  0019FE  B0D8               	btfsc	status,0,c
  8628  001A00  D003               	goto	l6035
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;usb_device.c: 1866: {
  8632                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  8633  001A02  C027  F0B5         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  8634  001A06  D000               	goto	l6035
  8635  001A08                     l6035:
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;usb_device.c: 1868: }
  8639                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  8640  001A08  0100               	movlb	0	; () banked
  8641  001A0A  51B5               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
  8642  001A0C  5E27               	subwf	_outPipes+4,f,c	;volatile
  8643  001A0E  0E00               	movlw	0
  8644  001A10  5A28               	subwfb	_outPipes+5,f,c	;volatile
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  8648  001A12  0E00               	movlw	0
  8649  001A14  0100               	movlb	0	; () banked
  8650  001A16  6FB4               	movwf	USBCtrlTrfRxService@i& (0+255),b
  8651  001A18  D014               	goto	l6045
  8652  001A1A                     l6039:
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;usb_device.c: 1875: {
  8656                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8657  001A1A  0100               	movlb	0	; () banked
  8658  001A1C  51B4               	movf	USBCtrlTrfRxService@i& (0+255),w,b
  8659  001A1E  0D01               	mullw	1
  8660  001A20  0E38               	movlw	56
  8661  001A22  24F3               	addwf	prodl,w,c
  8662  001A24  6ED9               	movwf	fsr2l,c
  8663  001A26  0E04               	movlw	4
  8664  001A28  20F4               	addwfc	prodh,w,c
  8665  001A2A  6EDA               	movwf	fsr2h,c
  8666  001A2C  C023  FFE1         	movff	_outPipes,fsr1l	;volatile
  8667  001A30  C024  FFE2         	movff	_outPipes+1,fsr1h	;volatile
  8668  001A34  CFDF FFE7          	movff	indf2,indf1
  8669                           
  8670                           ; BSR set to: 0
  8671  001A38  4A23               	infsnz	_outPipes,f,c	;volatile
  8672  001A3A  2A24               	incf	_outPipes+1,f,c	;volatile
  8673                           
  8674                           ; BSR set to: 0
  8675  001A3C  0100               	movlb	0	; () banked
  8676  001A3E  2BB4               	incf	USBCtrlTrfRxService@i& (0+255),f,b
  8677  001A40  D000               	goto	l6045
  8678  001A42                     l6045:
  8679                           
  8680                           ; BSR set to: 0
  8681  001A42  0100               	movlb	0	; () banked
  8682  001A44  51B5               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
  8683  001A46  0100               	movlb	0	; () banked
  8684  001A48  5DB4               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
  8685  001A4A  A0D8               	btfss	status,0,c
  8686  001A4C  D7E6               	goto	l6039
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;usb_device.c: 1877: }
  8690                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  8691                           
  8692                           ; BSR set to: 0
  8693  001A4E  5027               	movf	_outPipes+4,w,c	;volatile
  8694  001A50  1028               	iorwf	_outPipes+5,w,c	;volatile
  8695  001A52  B4D8               	btfsc	status,2,c
  8696  001A54  D032               	goto	l6061
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;usb_device.c: 1882: {
  8700                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  8701  001A56  EE20 F001          	lfsr	2,1
  8702  001A5A  5033               	movf	_pBDTEntryEP0OutNext,w,c
  8703  001A5C  26D9               	addwf	fsr2l,f,c
  8704  001A5E  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  8705  001A60  22DA               	addwfc	fsr2h,f,c
  8706  001A62  0E08               	movlw	8
  8707  001A64  6EDF               	movwf	indf2,c
  8708                           
  8709                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  8710  001A66  EE20 F002          	lfsr	2,2
  8711  001A6A  5033               	movf	_pBDTEntryEP0OutNext,w,c
  8712  001A6C  26D9               	addwf	fsr2l,f,c
  8713  001A6E  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  8714  001A70  22DA               	addwfc	fsr2h,f,c
  8715  001A72  0E38               	movlw	56
  8716  001A74  6EDE               	movwf	postinc2,c
  8717  001A76  0E04               	movlw	4
  8718  001A78  6EDD               	movwf	postdec2,c
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8722  001A7A  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8723  001A7E  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8724  001A82  BCDF               	btfsc	indf2,6,c
  8725  001A84  D00D               	goto	l6057
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;usb_device.c: 1886: {
  8729                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8730  001A86  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8731  001A8A  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8732  001A8E  0E48               	movlw	72
  8733  001A90  6EDF               	movwf	indf2,c
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8737  001A92  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8738  001A96  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8739  001A9A  0E00               	movlw	0
  8740  001A9C  8EDB               	bsf	plusw2,7,c
  8741                           
  8742                           ;usb_device.c: 1889: }
  8743  001A9E  0012               	return	
  8744  001AA0                     l6057:
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;usb_device.c: 1890: else
  8748                           ;usb_device.c: 1891: {
  8749                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8750  001AA0  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8751  001AA4  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8752  001AA8  0E08               	movlw	8
  8753  001AAA  6EDF               	movwf	indf2,c
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8757  001AAC  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8758  001AB0  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8759  001AB4  0E00               	movlw	0
  8760  001AB6  8EDB               	bsf	plusw2,7,c
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;usb_device.c: 1894: }
  8764                           ;usb_device.c: 1895: }
  8765  001AB8  0012               	return	
  8766  001ABA                     l6061:
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;usb_device.c: 1896: else
  8770                           ;usb_device.c: 1897: {
  8771                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8772  001ABA  EE20 F001          	lfsr	2,1
  8773  001ABE  5033               	movf	_pBDTEntryEP0OutNext,w,c
  8774  001AC0  26D9               	addwf	fsr2l,f,c
  8775  001AC2  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  8776  001AC4  22DA               	addwfc	fsr2h,f,c
  8777  001AC6  0E08               	movlw	8
  8778  001AC8  6EDF               	movwf	indf2,c
  8779                           
  8780                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8781  001ACA  EE20 F002          	lfsr	2,2
  8782  001ACE  5033               	movf	_pBDTEntryEP0OutNext,w,c
  8783  001AD0  26D9               	addwf	fsr2l,f,c
  8784  001AD2  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  8785  001AD4  22DA               	addwfc	fsr2h,f,c
  8786  001AD6  0E30               	movlw	48
  8787  001AD8  6EDE               	movwf	postinc2,c
  8788  001ADA  0E04               	movlw	4
  8789  001ADC  6EDD               	movwf	postdec2,c
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8793  001ADE  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8794  001AE2  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8795  001AE6  0E04               	movlw	4
  8796  001AE8  6EDF               	movwf	indf2,c
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8800  001AEA  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8801  001AEE  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8802  001AF2  0E00               	movlw	0
  8803  001AF4  8EDB               	bsf	plusw2,7,c
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;usb_device.c: 1926: }
  8807                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;usb_device.c: 1915: {
  8811                           ;usb_device.c: 1921: outPipes[0].pFunc();
  8812  001AF6  9E26               	bcf	_outPipes+3,7,c	;volatile
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8816  001AF8  5035               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  8817  001AFA  A4D8               	btfss	status,2,c
  8818  001AFC  0012               	return	
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;usb_device.c: 1942: {
  8822                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8823  001AFE  ECB5  F011         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8824  001B02  0012               	return	
  8825  001B04  0012               	return		;funcret
  8826  001B06                     __end_of_USBCtrlTrfRxService:
  8827                           	opt stack 0
  8828                           tblptru	equ	0xFF8
  8829                           tblptrh	equ	0xFF7
  8830                           tblptrl	equ	0xFF6
  8831                           tablat	equ	0xFF5
  8832                           prodh	equ	0xFF4
  8833                           prodl	equ	0xFF3
  8834                           intcon	equ	0xFF2
  8835                           postinc0	equ	0xFEE
  8836                           wreg	equ	0xFE8
  8837                           indf1	equ	0xFE7
  8838                           postdec1	equ	0xFE5
  8839                           fsr1h	equ	0xFE2
  8840                           fsr1l	equ	0xFE1
  8841                           indf2	equ	0xFDF
  8842                           postinc2	equ	0xFDE
  8843                           postdec2	equ	0xFDD
  8844                           plusw2	equ	0xFDB
  8845                           fsr2h	equ	0xFDA
  8846                           fsr2l	equ	0xFD9
  8847                           status	equ	0xFD8
  8848                           
  8849 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8850 ;; Defined at:
  8851 ;;		line 1416 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;		None
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;		None               void
  8858 ;; Registers used:
  8859 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8865 ;;      Params:         0       0       0       0       0       0       0       0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8868 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8869 ;;Total ram usage:        0 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    4
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_USBDeviceTasks
  8876 ;;		_USBCtrlEPServiceComplete
  8877 ;;		_USBCtrlTrfRxService
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text32
  8882  00236A                     __ptext32:
  8883                           	opt stack 0
  8884  00236A                     _USBCtrlEPAllowStatusStage:
  8885                           	opt stack 21
  8886                           
  8887                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  8888                           
  8889                           ;incstack = 0
  8890  00236A  0100               	movlb	0	; () banked
  8891  00236C  5196               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
  8892  00236E  A4D8               	btfss	status,2,c
  8893  002370  0012               	return	
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;usb_device.c: 1424: {
  8897                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  8898  002372  0E01               	movlw	1
  8899  002374  0100               	movlb	0	; () banked
  8900  002376  6F96               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8901                           
  8902                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  8903  002378  0100               	movlb	0	; () banked
  8904  00237A  5197               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
  8905  00237C  A4D8               	btfss	status,2,c
  8906  00237E  0012               	return	
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;usb_device.c: 1427: {
  8910                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  8911  002380  0E01               	movlw	1
  8912  002382  0100               	movlb	0	; () banked
  8913  002384  6F97               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;usb_device.c: 1432: if(controlTransferState == 2)
  8917  002386  0E02               	movlw	2
  8918  002388  1839               	xorwf	_controlTransferState,w,c	;volatile
  8919  00238A  A4D8               	btfss	status,2,c
  8920  00238C  D015               	goto	l5755
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;usb_device.c: 1433: {
  8924                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  8925  00238E  EE20 F001          	lfsr	2,1
  8926  002392  502B               	movf	_pBDTEntryIn,w,c
  8927  002394  26D9               	addwf	fsr2l,f,c
  8928  002396  502C               	movf	_pBDTEntryIn+1,w,c
  8929  002398  22DA               	addwfc	fsr2h,f,c
  8930  00239A  0E00               	movlw	0
  8931  00239C  6EDF               	movwf	indf2,c
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8935  00239E  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  8936  0023A2  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8937  0023A6  0E48               	movlw	72
  8938  0023A8  6EDF               	movwf	indf2,c
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8942  0023AA  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  8943  0023AE  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8944  0023B2  0E00               	movlw	0
  8945  0023B4  8EDB               	bsf	plusw2,7,c
  8946                           
  8947                           ;usb_device.c: 1437: }
  8948  0023B6  0012               	return	
  8949  0023B8                     l5755:
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  8953  0023B8  0439               	decf	_controlTransferState,w,c	;volatile
  8954  0023BA  A4D8               	btfss	status,2,c
  8955  0023BC  0012               	return	
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;usb_device.c: 1439: {
  8959                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  8960  0023BE  0E00               	movlw	0
  8961  0023C0  0100               	movlb	0	; () banked
  8962  0023C2  6F90               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  8966  0023C4  EE20 F001          	lfsr	2,1
  8967  0023C8  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  8968  0023CA  26D9               	addwf	fsr2l,f,c
  8969  0023CC  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8970  0023CE  22DA               	addwfc	fsr2h,f,c
  8971  0023D0  0E08               	movlw	8
  8972  0023D2  6EDF               	movwf	indf2,c
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  8976  0023D4  EE20 F002          	lfsr	2,2
  8977  0023D8  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  8978  0023DA  26D9               	addwf	fsr2l,f,c
  8979  0023DC  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  8980  0023DE  22DA               	addwfc	fsr2h,f,c
  8981  0023E0  0E30               	movlw	48
  8982  0023E2  6EDE               	movwf	postinc2,c
  8983  0023E4  0E04               	movlw	4
  8984  0023E6  6EDD               	movwf	postdec2,c
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8988  0023E8  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8989  0023EC  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8990  0023F0  0E04               	movlw	4
  8991  0023F2  6EDF               	movwf	indf2,c
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8995  0023F4  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8996  0023F8  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8997  0023FC  0E00               	movlw	0
  8998  0023FE  8EDB               	bsf	plusw2,7,c
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9002  002400  0E01               	movlw	1
  9003  002402  0100               	movlb	0	; () banked
  9004  002404  6F90               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9008  002406  EE20 F001          	lfsr	2,1
  9009  00240A  5033               	movf	_pBDTEntryEP0OutNext,w,c
  9010  00240C  26D9               	addwf	fsr2l,f,c
  9011  00240E  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  9012  002410  22DA               	addwfc	fsr2h,f,c
  9013  002412  0E08               	movlw	8
  9014  002414  6EDF               	movwf	indf2,c
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9018  002416  EE20 F002          	lfsr	2,2
  9019  00241A  5033               	movf	_pBDTEntryEP0OutNext,w,c
  9020  00241C  26D9               	addwf	fsr2l,f,c
  9021  00241E  5034               	movf	_pBDTEntryEP0OutNext+1,w,c
  9022  002420  22DA               	addwfc	fsr2h,f,c
  9023  002422  0E30               	movlw	48
  9024  002424  6EDE               	movwf	postinc2,c
  9025  002426  0E04               	movlw	4
  9026  002428  6EDD               	movwf	postdec2,c
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9030  00242A  C033  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9031  00242E  C034  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9032  002432  0E80               	movlw	128
  9033  002434  6EDF               	movwf	indf2,c
  9034                           
  9035                           ; BSR set to: 0
  9036                           
  9037                           ; BSR set to: 0
  9038                           
  9039                           ; BSR set to: 0
  9040  002436  0012               	return	
  9041                           
  9042                           ; BSR set to: 0
  9043                           
  9044                           ; BSR set to: 0
  9045  002438  0012               	return		;funcret
  9046  00243A                     __end_of_USBCtrlEPAllowStatusStage:
  9047                           	opt stack 0
  9048                           tblptru	equ	0xFF8
  9049                           tblptrh	equ	0xFF7
  9050                           tblptrl	equ	0xFF6
  9051                           tablat	equ	0xFF5
  9052                           prodh	equ	0xFF4
  9053                           prodl	equ	0xFF3
  9054                           intcon	equ	0xFF2
  9055                           postinc0	equ	0xFEE
  9056                           wreg	equ	0xFE8
  9057                           indf1	equ	0xFE7
  9058                           postdec1	equ	0xFE5
  9059                           fsr1h	equ	0xFE2
  9060                           fsr1l	equ	0xFE1
  9061                           indf2	equ	0xFDF
  9062                           postinc2	equ	0xFDE
  9063                           postdec2	equ	0xFDD
  9064                           plusw2	equ	0xFDB
  9065                           fsr2h	equ	0xFDA
  9066                           fsr2l	equ	0xFD9
  9067                           status	equ	0xFD8
  9068                           
  9069 ;; *************** function _USBCtrlTrfInHandler *****************
  9070 ;; Defined at:
  9071 ;;		line 2595 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;		None
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;  lastDTS         1    1[BANK0 ] unsigned char 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;		None               void
  9078 ;; Registers used:
  9079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9085 ;;      Params:         0       0       0       0       0       0       0       0       0
  9086 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9088 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9089 ;;Total ram usage:        1 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:    5
  9092 ;; This function calls:
  9093 ;;		_USBCtrlTrfTxService
  9094 ;; This function is called by:
  9095 ;;		_USBCtrlEPService
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           	psect	text33
  9100  0026A8                     __ptext33:
  9101                           	opt stack 0
  9102  0026A8                     _USBCtrlTrfInHandler:
  9103                           	opt stack 22
  9104                           
  9105                           ;usb_device.c: 2597: uint8_t lastDTS;
  9106                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;incstack = 0
  9110  0026A8  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  9111  0026AC  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9112  0026B0  0E00               	movlw	0
  9113  0026B2  BCDF               	btfsc	indf2,6,c
  9114  0026B4  0E01               	movlw	1
  9115  0026B6  0100               	movlb	0	; () banked
  9116  0026B8  6FB5               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9120  0026BA  0E04               	movlw	4
  9121  0026BC  1A2B               	xorwf	_pBDTEntryIn,f,c
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
  9125  0026BE  0E08               	movlw	8
  9126  0026C0  0100               	movlb	0	; () banked
  9127  0026C2  1995               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  9128  0026C4  A4D8               	btfss	status,2,c
  9129  0026C6  D00D               	goto	l6187
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;usb_device.c: 2608: {
  9133                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
  9134  0026C8  0104               	movlb	4	; () banked
  9135  0026CA  5132               	movf	50,w,b	;volatile
  9136  0026CC  0B7F               	andlw	127
  9137  0026CE  6E63               	movwf	3939,c	;volatile
  9138                           
  9139                           ; BSR set to: 4
  9140                           ;usb_device.c: 2610: if(UADDR != 0u)
  9141  0026D0  5063               	movf	3939,w,c	;volatile
  9142  0026D2  B4D8               	btfsc	status,2,c
  9143  0026D4  D002               	goto	l6185
  9144                           
  9145                           ; BSR set to: 4
  9146                           ;usb_device.c: 2611: {
  9147                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
  9148  0026D6  0E10               	movlw	16
  9149  0026D8  D001               	goto	L12
  9150  0026DA                     l6185:
  9151                           
  9152                           ;usb_device.c: 2614: else
  9153                           ;usb_device.c: 2615: {
  9154                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
  9155  0026DA  0E04               	movlw	4
  9156  0026DC                     L12:
  9157  0026DC  0100               	movlb	0	; () banked
  9158  0026DE  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
  9159                           
  9160                           ; BSR set to: 0
  9161  0026E0  D000               	goto	l6187
  9162  0026E2                     l6187:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;usb_device.c: 2617: }
  9166                           ;usb_device.c: 2618: }
  9167                           ;usb_device.c: 2621: if(controlTransferState == 1)
  9168  0026E2  0439               	decf	_controlTransferState,w,c	;volatile
  9169  0026E4  A4D8               	btfss	status,2,c
  9170  0026E6  D03C               	goto	l641
  9171                           
  9172                           ; BSR set to: 0
  9173                           ;usb_device.c: 2622: {
  9174                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
  9175  0026E8  EE20 F002          	lfsr	2,2
  9176  0026EC  502B               	movf	_pBDTEntryIn,w,c
  9177  0026EE  26D9               	addwf	fsr2l,f,c
  9178  0026F0  502C               	movf	_pBDTEntryIn+1,w,c
  9179  0026F2  22DA               	addwfc	fsr2h,f,c
  9180  0026F4  0E38               	movlw	56
  9181  0026F6  6EDE               	movwf	postinc2,c
  9182  0026F8  0E04               	movlw	4
  9183  0026FA  6EDD               	movwf	postdec2,c
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;usb_device.c: 2624: USBCtrlTrfTxService();
  9187  0026FC  EC06  F00F         	call	_USBCtrlTrfTxService	;wreg free
  9188                           
  9189                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
  9190  002700  0E02               	movlw	2
  9191  002702  183B               	xorwf	_shortPacketStatus,w,c	;volatile
  9192  002704  A4D8               	btfss	status,2,c
  9193  002706  D00D               	goto	l6199
  9194                           
  9195                           ;usb_device.c: 2631: {
  9196                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
  9197  002708  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  9198  00270C  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9199  002710  0E04               	movlw	4
  9200  002712  6EDF               	movwf	indf2,c
  9201                           
  9202                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9203  002714  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  9204  002718  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9205  00271C  0E00               	movlw	0
  9206  00271E  8EDB               	bsf	plusw2,7,c
  9207                           
  9208                           ;usb_device.c: 2636: }
  9209  002720  0012               	return	
  9210  002722                     l6199:
  9211                           
  9212                           ;usb_device.c: 2637: else
  9213                           ;usb_device.c: 2638: {
  9214                           ;usb_device.c: 2639: if(lastDTS == 0)
  9215  002722  0100               	movlb	0	; () banked
  9216  002724  51B5               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
  9217  002726  0100               	movlb	0	; () banked
  9218  002728  A4D8               	btfss	status,2,c
  9219  00272A  D00D               	goto	l6205
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;usb_device.c: 2640: {
  9223                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9224  00272C  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  9225  002730  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9226  002734  0E48               	movlw	72
  9227  002736  6EDF               	movwf	indf2,c
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9231  002738  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  9232  00273C  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9233  002740  0E00               	movlw	0
  9234  002742  8EDB               	bsf	plusw2,7,c
  9235                           
  9236                           ;usb_device.c: 2643: }
  9237  002744  0012               	return	
  9238  002746                     l6205:
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;usb_device.c: 2644: else
  9242                           ;usb_device.c: 2645: {
  9243                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9244  002746  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  9245  00274A  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9246  00274E  0E08               	movlw	8
  9247  002750  6EDF               	movwf	indf2,c
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9251  002752  C02B  FFD9         	movff	_pBDTEntryIn,fsr2l
  9252  002756  C02C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9253  00275A  0E00               	movlw	0
  9254  00275C  8EDB               	bsf	plusw2,7,c
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;usb_device.c: 2648: }
  9258                           ;usb_device.c: 2649: }
  9259                           ;usb_device.c: 2650: }
  9260                           
  9261                           ; BSR set to: 0
  9262  00275E  0012               	return	
  9263  002760                     l641:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;usb_device.c: 2651: else
  9267                           ;usb_device.c: 2652: {
  9268                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
  9269  002760  AE26               	btfss	_outPipes+3,7,c	;volatile
  9270  002762  D002               	goto	l6211
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;usb_device.c: 2661: }
  9274                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;usb_device.c: 2659: {
  9278                           ;usb_device.c: 2660: outPipes[0].pFunc();
  9279  002764  9E26               	bcf	_outPipes+3,7,c	;volatile
  9280  002766  D000               	goto	l6211
  9281  002768                     l6211:
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;usb_device.c: 2663: }
  9285                           ;usb_device.c: 2665: controlTransferState = 0;
  9286  002768  0E00               	movlw	0
  9287  00276A  6E39               	movwf	_controlTransferState,c	;volatile
  9288  00276C  0012               	return	
  9289                           
  9290                           ; BSR set to: 0
  9291  00276E  0012               	return		;funcret
  9292  002770                     __end_of_USBCtrlTrfInHandler:
  9293                           	opt stack 0
  9294                           tblptru	equ	0xFF8
  9295                           tblptrh	equ	0xFF7
  9296                           tblptrl	equ	0xFF6
  9297                           tablat	equ	0xFF5
  9298                           prodh	equ	0xFF4
  9299                           prodl	equ	0xFF3
  9300                           intcon	equ	0xFF2
  9301                           postinc0	equ	0xFEE
  9302                           wreg	equ	0xFE8
  9303                           indf1	equ	0xFE7
  9304                           postdec1	equ	0xFE5
  9305                           fsr1h	equ	0xFE2
  9306                           fsr1l	equ	0xFE1
  9307                           indf2	equ	0xFDF
  9308                           postinc2	equ	0xFDE
  9309                           postdec2	equ	0xFDD
  9310                           plusw2	equ	0xFDB
  9311                           fsr2h	equ	0xFDA
  9312                           fsr2l	equ	0xFD9
  9313                           status	equ	0xFD8
  9314                           
  9315 ;; *************** function _USBCtrlTrfTxService *****************
  9316 ;; Defined at:
  9317 ;;		line 1771 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;		None
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;  byteToSend      1    0[BANK0 ] unsigned char 
  9322 ;; Return value:  Size  Location     Type
  9323 ;;		None               void
  9324 ;; Registers used:
  9325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9331 ;;      Params:         0       0       0       0       0       0       0       0       0
  9332 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9334 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9335 ;;Total ram usage:        1 bytes
  9336 ;; Hardware stack levels used:    1
  9337 ;; Hardware stack levels required when called:    4
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_USBCtrlEPAllowDataStage
  9342 ;;		_USBCtrlTrfInHandler
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           	psect	text34
  9347  001E0C                     __ptext34:
  9348                           	opt stack 0
  9349  001E0C                     _USBCtrlTrfTxService:
  9350                           	opt stack 20
  9351                           
  9352                           ;usb_device.c: 1773: uint8_t byteToSend;
  9353                           ;usb_device.c: 1777: byteToSend = 8;
  9354                           
  9355                           ;incstack = 0
  9356  001E0C  0E08               	movlw	8
  9357  001E0E  0100               	movlb	0	; () banked
  9358  001E10  6FB4               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  9362  001E12  5042               	movf	_inPipes+5,w,c	;volatile
  9363  001E14  E111               	bnz	l5711
  9364  001E16  0E08               	movlw	8
  9365  001E18  5C41               	subwf	_inPipes+4,w,c	;volatile
  9366  001E1A  B0D8               	btfsc	status,0,c
  9367  001E1C  D00D               	goto	l5711
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;usb_device.c: 1779: {
  9371                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  9372  001E1E  C041  F0B4         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  9376  001E22  503B               	movf	_shortPacketStatus,w,c	;volatile
  9377  001E24  A4D8               	btfss	status,2,c
  9378  001E26  D002               	goto	l5707
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;usb_device.c: 1788: {
  9382                           ;usb_device.c: 1789: shortPacketStatus = 1;
  9383  001E28  0E01               	movlw	1
  9384  001E2A  D004               	goto	L13
  9385  001E2C                     l5707:
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  9389  001E2C  043B               	decf	_shortPacketStatus,w,c	;volatile
  9390  001E2E  A4D8               	btfss	status,2,c
  9391  001E30  D003               	goto	l5711
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;usb_device.c: 1792: {
  9395                           ;usb_device.c: 1793: shortPacketStatus = 2;
  9396  001E32  0E02               	movlw	2
  9397  001E34                     L13:
  9398  001E34  6E3B               	movwf	_shortPacketStatus,c	;volatile
  9399                           
  9400                           ; BSR set to: 0
  9401                           
  9402                           ; BSR set to: 0
  9403  001E36  D000               	goto	l5711
  9404  001E38                     l5711:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;usb_device.c: 1794: }
  9408                           ;usb_device.c: 1795: }
  9409                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  9410  001E38  0100               	movlb	0	; () banked
  9411  001E3A  51B4               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
  9412  001E3C  5E41               	subwf	_inPipes+4,f,c	;volatile
  9413  001E3E  0E00               	movlw	0
  9414  001E40  5A42               	subwfb	_inPipes+5,f,c	;volatile
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  9418  001E42  EE20 F001          	lfsr	2,1
  9419  001E46  502B               	movf	_pBDTEntryIn,w,c
  9420  001E48  26D9               	addwf	fsr2l,f,c
  9421  001E4A  502C               	movf	_pBDTEntryIn+1,w,c
  9422  001E4C  22DA               	addwfc	fsr2h,f,c
  9423  001E4E  C0B4  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  9427  001E52  0E38               	movlw	56
  9428  001E54  0100               	movlb	0	; () banked
  9429  001E56  6F86               	movwf	_pDst& (0+255),b
  9430  001E58  0E04               	movlw	4
  9431  001E5A  0100               	movlb	0	; () banked
  9432  001E5C  6F87               	movwf	(_pDst+1)& (0+255),b
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9436  001E5E  A040               	btfss	_inPipes+3,0,c	;volatile
  9437  001E60  D01F               	goto	l5729
  9438  001E62  D043               	goto	l5739
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;usb_device.c: 1810: {
  9442                           ;usb_device.c: 1811: while(byteToSend)
  9443  001E64  D01D               	goto	l5729
  9444  001E66                     l5721:
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;usb_device.c: 1812: {
  9448                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  9449  001E66  C03D  FFF6         	movff	_inPipes,tblptrl	;volatile
  9450  001E6A  C03E  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  9451  001E6E  6AF8               	clrf	tblptru,c
  9452  001E70  C086  FFD9         	movff	_pDst,fsr2l
  9453  001E74  C087  FFDA         	movff	_pDst+1,fsr2h
  9454  001E78  0E07               	movlw	(high __ramtop+-1)
  9455  001E7A  64F7               	cpfsgt	tblptrh,c
  9456  001E7C  D003               	bra	u4917
  9457  001E7E  0008               	tblrd		*
  9458  001E80  50F5               	movf	tablat,w,c
  9459  001E82  D005               	bra	u4910
  9460  001E84                     u4917:
  9461  001E84  CFF6 FFE1          	movff	tblptrl,fsr1l
  9462  001E88  CFF7 FFE2          	movff	tblptrh,fsr1h
  9463  001E8C  50E7               	movf	indf1,w,c
  9464  001E8E                     u4910:
  9465  001E8E  6EDF               	movwf	indf2,c
  9466  001E90  4A3D               	infsnz	_inPipes,f,c	;volatile
  9467  001E92  2A3E               	incf	_inPipes+1,f,c	;volatile
  9468  001E94  0100               	movlb	0	; () banked
  9469  001E96  4B86               	infsnz	_pDst& (0+255),f,b
  9470  001E98  2B87               	incf	(_pDst+1)& (0+255),f,b
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;usb_device.c: 1814: byteToSend--;
  9474  001E9A  0100               	movlb	0	; () banked
  9475  001E9C  07B4               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
  9476  001E9E  D000               	goto	l5729
  9477  001EA0                     l5729:
  9478                           
  9479                           ; BSR set to: 0
  9480  001EA0  0100               	movlb	0	; () banked
  9481  001EA2  51B4               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
  9482  001EA4  0100               	movlb	0	; () banked
  9483  001EA6  B4D8               	btfsc	status,2,c
  9484  001EA8  0012               	return	
  9485  001EAA  D7DD               	goto	l5721
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;usb_device.c: 1815: }
  9489                           ;usb_device.c: 1816: }
  9490  001EAC  0012               	return	
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;usb_device.c: 1817: else
  9494                           ;usb_device.c: 1818: {
  9495                           ;usb_device.c: 1819: while(byteToSend)
  9496  001EAE  D01D               	goto	l5739
  9497  001EB0                     l5731:
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;usb_device.c: 1820: {
  9501                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  9502  001EB0  C03D  FFF6         	movff	_inPipes,tblptrl	;volatile
  9503  001EB4  C03E  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  9504  001EB8  6AF8               	clrf	tblptru,c
  9505  001EBA  C086  FFD9         	movff	_pDst,fsr2l
  9506  001EBE  C087  FFDA         	movff	_pDst+1,fsr2h
  9507  001EC2  0E07               	movlw	(high __ramtop+-1)
  9508  001EC4  64F7               	cpfsgt	tblptrh,c
  9509  001EC6  D003               	bra	u4937
  9510  001EC8  0008               	tblrd		*
  9511  001ECA  50F5               	movf	tablat,w,c
  9512  001ECC  D005               	bra	u4930
  9513  001ECE                     u4937:
  9514  001ECE  CFF6 FFE1          	movff	tblptrl,fsr1l
  9515  001ED2  CFF7 FFE2          	movff	tblptrh,fsr1h
  9516  001ED6  50E7               	movf	indf1,w,c
  9517  001ED8                     u4930:
  9518  001ED8  6EDF               	movwf	indf2,c
  9519  001EDA  4A3D               	infsnz	_inPipes,f,c	;volatile
  9520  001EDC  2A3E               	incf	_inPipes+1,f,c	;volatile
  9521  001EDE  0100               	movlb	0	; () banked
  9522  001EE0  4B86               	infsnz	_pDst& (0+255),f,b
  9523  001EE2  2B87               	incf	(_pDst+1)& (0+255),f,b
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;usb_device.c: 1822: byteToSend--;
  9527  001EE4  0100               	movlb	0	; () banked
  9528  001EE6  07B4               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
  9529  001EE8  D000               	goto	l5739
  9530  001EEA                     l5739:
  9531                           
  9532                           ; BSR set to: 0
  9533  001EEA  0100               	movlb	0	; () banked
  9534  001EEC  51B4               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
  9535  001EEE  0100               	movlb	0	; () banked
  9536  001EF0  B4D8               	btfsc	status,2,c
  9537  001EF2  0012               	return	
  9538  001EF4  D7DD               	goto	l5731
  9539                           
  9540                           ; BSR set to: 0
  9541  001EF6  0012               	return	
  9542                           
  9543                           ; BSR set to: 0
  9544                           
  9545                           ; BSR set to: 0
  9546  001EF8  0012               	return		;funcret
  9547  001EFA                     __end_of_USBCtrlTrfTxService:
  9548                           	opt stack 0
  9549                           tblptru	equ	0xFF8
  9550                           tblptrh	equ	0xFF7
  9551                           tblptrl	equ	0xFF6
  9552                           tablat	equ	0xFF5
  9553                           prodh	equ	0xFF4
  9554                           prodl	equ	0xFF3
  9555                           intcon	equ	0xFF2
  9556                           postinc0	equ	0xFEE
  9557                           wreg	equ	0xFE8
  9558                           indf1	equ	0xFE7
  9559                           postdec1	equ	0xFE5
  9560                           fsr1h	equ	0xFE2
  9561                           fsr1l	equ	0xFE1
  9562                           indf2	equ	0xFDF
  9563                           postinc2	equ	0xFDE
  9564                           postdec2	equ	0xFDD
  9565                           plusw2	equ	0xFDB
  9566                           fsr2h	equ	0xFDA
  9567                           fsr2l	equ	0xFD9
  9568                           status	equ	0xFD8
  9569                           
  9570 ;; *************** function _Read_b_eep *****************
  9571 ;; Defined at:
  9572 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\read_B.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  badd            2    0[BANK0 ] unsigned int 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      unsigned char 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9586 ;;      Params:         0       2       0       0       0       0       0       0       0
  9587 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9589 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9590 ;;Total ram usage:        2 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    4
  9593 ;; This function calls:
  9594 ;;		Nothing
  9595 ;; This function is called by:
  9596 ;;		_ProcessCDC
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           	psect	text35
  9601  0033E6                     __ptext35:
  9602                           	opt stack 0
  9603  0033E6                     _Read_b_eep:
  9604                           	opt stack 24
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;incstack = 0
  9608  0033E6  C0B4  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  9609  0033EA  9CA6               	bcf	4006,6,c	;volatile
  9610  0033EC  9EA6               	bcf	4006,7,c	;volatile
  9611  0033EE  80A6               	bsf	4006,0,c	;volatile
  9612  0033F0  F000               	nop	
  9613  0033F2  F000               	nop	
  9614  0033F4  50A8               	movf	4008,w,c	;volatile
  9615  0033F6  0012               	return	
  9616  0033F8  0012               	return		;funcret
  9617  0033FA                     __end_of_Read_b_eep:
  9618                           	opt stack 0
  9619                           tblptru	equ	0xFF8
  9620                           tblptrh	equ	0xFF7
  9621                           tblptrl	equ	0xFF6
  9622                           tablat	equ	0xFF5
  9623                           prodh	equ	0xFF4
  9624                           prodl	equ	0xFF3
  9625                           intcon	equ	0xFF2
  9626                           postinc0	equ	0xFEE
  9627                           wreg	equ	0xFE8
  9628                           indf1	equ	0xFE7
  9629                           postdec1	equ	0xFE5
  9630                           fsr1h	equ	0xFE2
  9631                           fsr1l	equ	0xFE1
  9632                           indf2	equ	0xFDF
  9633                           postinc2	equ	0xFDE
  9634                           postdec2	equ	0xFDD
  9635                           plusw2	equ	0xFDB
  9636                           fsr2h	equ	0xFDA
  9637                           fsr2l	equ	0xFD9
  9638                           status	equ	0xFD8
  9639                           
  9640 ;; *************** function _ReadADC *****************
  9641 ;; Defined at:
  9642 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  2    0[BANK0 ] int 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9656 ;;      Params:         0       2       0       0       0       0       0       0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9658 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9659 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9660 ;;Total ram usage:        4 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    4
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_ProcessCDC
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text36
  9671  0033FA                     __ptext36:
  9672                           	opt stack 0
  9673  0033FA                     _ReadADC:
  9674                           	opt stack 24
  9675                           
  9676                           ;incstack = 0
  9677  0033FA  50C4               	movf	4036,w,c	;volatile
  9678  0033FC  0100               	movlb	0	; () banked
  9679  0033FE  6FB6               	movwf	??_ReadADC& (0+255),b
  9680  003400  50C3               	movf	4035,w,c	;volatile
  9681  003402  0100               	movlb	0	; () banked
  9682  003404  6FB4               	movwf	?_ReadADC& (0+255),b
  9683  003406  C0B6  F0B5         	movff	??_ReadADC,?_ReadADC+1
  9684  00340A  0012               	return	
  9685                           
  9686                           ; BSR set to: 0
  9687                           
  9688                           ; BSR set to: 0
  9689  00340C  0012               	return		;funcret
  9690  00340E                     __end_of_ReadADC:
  9691                           	opt stack 0
  9692                           tblptru	equ	0xFF8
  9693                           tblptrh	equ	0xFF7
  9694                           tblptrl	equ	0xFF6
  9695                           tablat	equ	0xFF5
  9696                           prodh	equ	0xFF4
  9697                           prodl	equ	0xFF3
  9698                           intcon	equ	0xFF2
  9699                           postinc0	equ	0xFEE
  9700                           wreg	equ	0xFE8
  9701                           indf1	equ	0xFE7
  9702                           postdec1	equ	0xFE5
  9703                           fsr1h	equ	0xFE2
  9704                           fsr1l	equ	0xFE1
  9705                           indf2	equ	0xFDF
  9706                           postinc2	equ	0xFDE
  9707                           postdec2	equ	0xFDD
  9708                           plusw2	equ	0xFDB
  9709                           fsr2h	equ	0xFDA
  9710                           fsr2l	equ	0xFD9
  9711                           status	equ	0xFD8
  9712                           
  9713 ;; *************** function _ConvertADC *****************
  9714 ;; Defined at:
  9715 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;		None
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;		None
  9720 ;; Return value:  Size  Location     Type
  9721 ;;		None               void
  9722 ;; Registers used:
  9723 ;;		None
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9729 ;;      Params:         0       0       0       0       0       0       0       0       0
  9730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9732 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9733 ;;Total ram usage:        0 bytes
  9734 ;; Hardware stack levels used:    1
  9735 ;; Hardware stack levels required when called:    4
  9736 ;; This function calls:
  9737 ;;		Nothing
  9738 ;; This function is called by:
  9739 ;;		_ProcessCDC
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text37
  9744  003452                     __ptext37:
  9745                           	opt stack 0
  9746  003452                     _ConvertADC:
  9747                           	opt stack 24
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;incstack = 0
  9751  003452  82C2               	bsf	4034,1,c	;volatile
  9752  003454  0012               	return		;funcret
  9753  003456                     __end_of_ConvertADC:
  9754                           	opt stack 0
  9755                           tblptru	equ	0xFF8
  9756                           tblptrh	equ	0xFF7
  9757                           tblptrl	equ	0xFF6
  9758                           tablat	equ	0xFF5
  9759                           prodh	equ	0xFF4
  9760                           prodl	equ	0xFF3
  9761                           intcon	equ	0xFF2
  9762                           postinc0	equ	0xFEE
  9763                           wreg	equ	0xFE8
  9764                           indf1	equ	0xFE7
  9765                           postdec1	equ	0xFE5
  9766                           fsr1h	equ	0xFE2
  9767                           fsr1l	equ	0xFE1
  9768                           indf2	equ	0xFDF
  9769                           postinc2	equ	0xFDE
  9770                           postdec2	equ	0xFDD
  9771                           plusw2	equ	0xFDB
  9772                           fsr2h	equ	0xFDA
  9773                           fsr2l	equ	0xFD9
  9774                           status	equ	0xFD8
  9775                           
  9776 ;; *************** function _Busy_eep *****************
  9777 ;; Defined at:
  9778 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\busy_eep.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;		None               void
  9785 ;; Registers used:
  9786 ;;		None
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9792 ;;      Params:         0       0       0       0       0       0       0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9795 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9796 ;;Total ram usage:        0 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; Hardware stack levels required when called:    4
  9799 ;; This function calls:
  9800 ;;		Nothing
  9801 ;; This function is called by:
  9802 ;;		_ProcessCDC
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text38
  9807  00344A                     __ptext38:
  9808                           	opt stack 0
  9809  00344A                     _Busy_eep:
  9810                           	opt stack 24
  9811                           
  9812                           ;incstack = 0
  9813  00344A  D000               	goto	l996
  9814  00344C                     l996:
  9815  00344C  B2A6               	btfsc	4006,1,c	;volatile
  9816  00344E  D7FE               	goto	l996
  9817  003450  0012               	return		;funcret
  9818  003452                     __end_of_Busy_eep:
  9819                           	opt stack 0
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodh	equ	0xFF4
  9825                           prodl	equ	0xFF3
  9826                           intcon	equ	0xFF2
  9827                           postinc0	equ	0xFEE
  9828                           wreg	equ	0xFE8
  9829                           indf1	equ	0xFE7
  9830                           postdec1	equ	0xFE5
  9831                           fsr1h	equ	0xFE2
  9832                           fsr1l	equ	0xFE1
  9833                           indf2	equ	0xFDF
  9834                           postinc2	equ	0xFDE
  9835                           postdec2	equ	0xFDD
  9836                           plusw2	equ	0xFDB
  9837                           fsr2h	equ	0xFDA
  9838                           fsr2l	equ	0xFD9
  9839                           status	equ	0xFD8
  9840                           
  9841 ;; *************** function _BusyADC *****************
  9842 ;; Defined at:
  9843 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;		None
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      unsigned char 
  9850 ;; Registers used:
  9851 ;;		wreg
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9857 ;;      Params:         0       0       0       0       0       0       0       0       0
  9858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9860 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9861 ;;Total ram usage:        0 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    4
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_ProcessCDC
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text39
  9872  003432                     __ptext39:
  9873                           	opt stack 0
  9874  003432                     _BusyADC:
  9875                           	opt stack 24
  9876                           
  9877                           ;incstack = 0
  9878  003432  A2C2               	btfss	4034,1,c	;volatile
  9879  003434  D002               	goto	u6470
  9880  003436  0E01               	movlw	1
  9881  003438  0012               	return	
  9882  00343A                     u6470:
  9883  00343A  0E00               	movlw	0
  9884  00343C  0012               	return	
  9885  00343E  0012               	return		;funcret
  9886  003440                     __end_of_BusyADC:
  9887                           	opt stack 0
  9888                           tblptru	equ	0xFF8
  9889                           tblptrh	equ	0xFF7
  9890                           tblptrl	equ	0xFF6
  9891                           tablat	equ	0xFF5
  9892                           prodh	equ	0xFF4
  9893                           prodl	equ	0xFF3
  9894                           intcon	equ	0xFF2
  9895                           postinc0	equ	0xFEE
  9896                           wreg	equ	0xFE8
  9897                           indf1	equ	0xFE7
  9898                           postdec1	equ	0xFE5
  9899                           fsr1h	equ	0xFE2
  9900                           fsr1l	equ	0xFE1
  9901                           indf2	equ	0xFDF
  9902                           postinc2	equ	0xFDE
  9903                           postdec2	equ	0xFDD
  9904                           plusw2	equ	0xFDB
  9905                           fsr2h	equ	0xFDA
  9906                           fsr2l	equ	0xFD9
  9907                           status	equ	0xFD8
  9908                           
  9909 ;; *************** function _BlinkUSBStatus *****************
  9910 ;; Defined at:
  9911 ;;		line 248 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;		None
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;		None               void
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9925 ;;      Params:         0       0       0       0       0       0       0       0       0
  9926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9927 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9928 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9929 ;;Total ram usage:        1 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    4
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_ProcessIO
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           	psect	text40
  9940  002FC0                     __ptext40:
  9941                           	opt stack 0
  9942  002FC0                     _BlinkUSBStatus:
  9943                           	opt stack 25
  9944                           
  9945                           ;karate.c: 250: if(led_count-- == 0) {
  9946                           
  9947                           ;incstack = 0
  9948  002FC0  0100               	movlb	0	; () banked
  9949  002FC2  0784               	decf	_led_count& (0+255),f,b
  9950  002FC4  A0D8               	btfss	status,0,c
  9951  002FC6  0785               	decf	(_led_count+1)& (0+255),f,b
  9952  002FC8  0100               	movlb	0	; () banked
  9953  002FCA  2984               	incf	_led_count& (0+255),w,b
  9954  002FCC  E120               	bnz	l207
  9955  002FCE  0100               	movlb	0	; () banked
  9956  002FD0  2985               	incf	(_led_count+1)& (0+255),w,b
  9957  002FD2  A4D8               	btfss	status,2,c
  9958  002FD4  0012               	return	
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;karate.c: 251: led_count = 10000U;
  9962  002FD6  0E27               	movlw	39
  9963  002FD8  0100               	movlb	0	; () banked
  9964  002FDA  6F85               	movwf	(_led_count+1)& (0+255),b
  9965  002FDC  0E10               	movlw	16
  9966  002FDE  6F84               	movwf	_led_count& (0+255),b
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;karate.c: 252: if ((USBDeviceState == CONFIGURED_STATE) & (UCONbits.SUSPND != 1)) {
  9970  002FE0  B260               	btfsc	3936,1,c	;volatile
  9971  002FE2  D002               	goto	u6590
  9972  002FE4  0E01               	movlw	1
  9973  002FE6  D001               	goto	u6592
  9974  002FE8                     u6590:
  9975  002FE8  0E00               	movlw	0
  9976  002FEA                     u6592:
  9977  002FEA  0100               	movlb	0	; () banked
  9978  002FEC  6FB4               	movwf	??_BlinkUSBStatus& (0+255),b
  9979  002FEE  0E20               	movlw	32
  9980  002FF0  0100               	movlb	0	; () banked
  9981  002FF2  1995               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  9982  002FF4  A4D8               	btfss	status,2,c
  9983  002FF6  D002               	goto	u6600
  9984  002FF8  0E01               	movlw	1
  9985  002FFA  D001               	goto	u6602
  9986  002FFC                     u6600:
  9987  002FFC  0E00               	movlw	0
  9988  002FFE                     u6602:
  9989  002FFE  0100               	movlb	0	; () banked
  9990  003000  15B4               	andwf	??_BlinkUSBStatus& (0+255),w,b
  9991  003002  A0E8               	btfss	wreg,0,c
  9992  003004  D002               	goto	l205
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;karate.c: 253: LATCbits.LATC1 = !LATCbits.LATC1;;
  9996  003006  728B               	btg	3979,1,c	;volatile
  9997                           
  9998                           ;karate.c: 254: } else {
  9999  003008  0012               	return	
 10000  00300A                     l205:
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;karate.c: 255: LATCbits.LATC1 = 0;;
 10004  00300A  928B               	bcf	3979,1,c	;volatile
 10005                           
 10006                           ; BSR set to: 0
 10007  00300C  0012               	return	
 10008  00300E                     l207:
 10009                           
 10010                           ; BSR set to: 0
 10011  00300E  0012               	return		;funcret
 10012  003010                     __end_of_BlinkUSBStatus:
 10013                           	opt stack 0
 10014                           tblptru	equ	0xFF8
 10015                           tblptrh	equ	0xFF7
 10016                           tblptrl	equ	0xFF6
 10017                           tablat	equ	0xFF5
 10018                           prodh	equ	0xFF4
 10019                           prodl	equ	0xFF3
 10020                           intcon	equ	0xFF2
 10021                           postinc0	equ	0xFEE
 10022                           wreg	equ	0xFE8
 10023                           indf1	equ	0xFE7
 10024                           postdec1	equ	0xFE5
 10025                           fsr1h	equ	0xFE2
 10026                           fsr1l	equ	0xFE1
 10027                           indf2	equ	0xFDF
 10028                           postinc2	equ	0xFDE
 10029                           postdec2	equ	0xFDD
 10030                           plusw2	equ	0xFDB
 10031                           fsr2h	equ	0xFDA
 10032                           fsr2l	equ	0xFD9
 10033                           status	equ	0xFD8
 10034                           
 10035 ;; *************** function _InitializeSystem *****************
 10036 ;; Defined at:
 10037 ;;		line 84 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;		None
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;		None
 10042 ;; Return value:  Size  Location     Type
 10043 ;;		None               void
 10044 ;; Registers used:
 10045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10051 ;;      Params:         0       0       0       0       0       0       0       0       0
 10052 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10053 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10054 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10055 ;;Total ram usage:        0 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; Hardware stack levels required when called:    7
 10058 ;; This function calls:
 10059 ;;		_CloseTimer3
 10060 ;;		_OpenSPI1
 10061 ;;		_OpenTimer3
 10062 ;;		_USBDeviceInit
 10063 ;;		_readDeviceID
 10064 ;;		_tlc5947_count_channels
 10065 ;;		_tlc5947_pwm_readback
 10066 ;; This function is called by:
 10067 ;;		_main
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text41
 10072  00228E                     __ptext41:
 10073                           	opt stack 0
 10074  00228E                     _InitializeSystem:
 10075                           	opt stack 23
 10076                           
 10077                           ;karate.c: 87: if (readDeviceID() == 0x0097) {
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;incstack = 0
 10081  00228E  ECBE  F016         	call	_readDeviceID	;wreg free
 10082  002292  0E97               	movlw	151
 10083  002294  0100               	movlb	0	; () banked
 10084  002296  19B4               	xorwf	?_readDeviceID& (0+255),w,b
 10085  002298  0100               	movlb	0	; () banked
 10086  00229A  11B5               	iorwf	(?_readDeviceID+1)& (0+255),w,b
 10087  00229C  A4D8               	btfss	status,2,c
 10088  00229E  D003               	goto	l7125
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;karate.c: 88: ADCON1 = 0x0F;
 10092  0022A0  0E0F               	movlw	15
 10093  0022A2  6EC1               	movwf	4033,c	;volatile
 10094                           
 10095                           ;karate.c: 89: } else {
 10096  0022A4  D010               	goto	l176
 10097  0022A6                     l7125:
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;karate.c: 90: OSCTUNE = 0x80;
 10101  0022A6  0E80               	movlw	128
 10102  0022A8  6E9B               	movwf	3995,c	;volatile
 10103                           
 10104                           ;karate.c: 91: OSCCON = 0x70;
 10105  0022AA  0E70               	movlw	112
 10106  0022AC  6ED3               	movwf	4051,c	;volatile
 10107                           
 10108                           ;karate.c: 92: OSCCON2 = 0x10;
 10109  0022AE  0E10               	movlw	16
 10110  0022B0  6ED2               	movwf	4050,c	;volatile
 10111                           
 10112                           ;karate.c: 93: while(OSCCON2bits.PLLRDY != 1);
 10113  0022B2  D000               	goto	l177
 10114  0022B4                     l177:
 10115  0022B4  AED2               	btfss	4050,7,c	;volatile
 10116  0022B6  D7FE               	goto	l177
 10117                           
 10118                           ;karate.c: 94: ACTCON = 0x90;
 10119  0022B8  0E90               	movlw	144
 10120  0022BA  6EB5               	movwf	4021,c	;volatile
 10121                           
 10122                           ;karate.c: 95: ANSELCbits.ANSC6 = 0;
 10123  0022BC  010F               	movlb	15	; () banked
 10124  0022BE  9D5D               	bcf	93,6,b	;volatile
 10125                           
 10126                           ; BSR set to: 15
 10127                           ;karate.c: 96: ANSELAbits.ANSA1 = 0;
 10128  0022C0  010F               	movlb	15	; () banked
 10129  0022C2  935B               	bcf	91,1,b	;volatile
 10130                           
 10131                           ; BSR set to: 15
 10132                           ;karate.c: 97: IOCBbits.IOCB4 = 1;
 10133  0022C4  8886               	bsf	3974,4,c	;volatile
 10134  0022C6                     l176:
 10135                           
 10136                           ;karate.c: 98: }
 10137                           ;karate.c: 101: DDRE &= 0x00; DDRD &= 0x00; DDRC &= 0xFF; DDRB &= 0x3F; DDRA &= 0xC3;;
 10138  0022C6  0E00               	movlw	0
 10139  0022C8  6E96               	movwf	3990,c	;volatile
 10140  0022CA  0E00               	movlw	0
 10141  0022CC  6E95               	movwf	3989,c	;volatile
 10142  0022CE  5094               	movf	3988,w,c	;volatile
 10143  0022D0  0E3F               	movlw	63
 10144  0022D2  1693               	andwf	3987,f,c	;volatile
 10145  0022D4  0EC3               	movlw	195
 10146  0022D6  1692               	andwf	3986,f,c	;volatile
 10147                           
 10148                           ;karate.c: 102: LATC &= 0xF9; TRISC &= 0xF9;;
 10149  0022D8  0EF9               	movlw	249
 10150  0022DA  168B               	andwf	3979,f,c	;volatile
 10151  0022DC  0EF9               	movlw	249
 10152  0022DE  1694               	andwf	3988,f,c	;volatile
 10153                           
 10154                           ;karate.c: 104: DDRAbits.RA1 = 1;
 10155  0022E0  8292               	bsf	3986,1,c	;volatile
 10156                           
 10157                           ;karate.c: 105: DDRBbits.RB2 = 1;
 10158  0022E2  8493               	bsf	3987,2,c	;volatile
 10159                           
 10160                           ;karate.c: 106: DDRBbits.RB4 = 1;
 10161  0022E4  8893               	bsf	3987,4,c	;volatile
 10162                           
 10163                           ;karate.c: 107: TRISCbits.TRISC6 = 1;
 10164  0022E6  8C94               	bsf	3988,6,c	;volatile
 10165                           
 10166                           ;karate.c: 110: OpenSPI1(0b00000010, 0b00000000, 0b00000000);
 10167  0022E8  0E00               	movlw	0
 10168  0022EA  0100               	movlb	0	; () banked
 10169  0022EC  6FB4               	movwf	OpenSPI1@bus_mode& (0+255),b
 10170  0022EE  0E00               	movlw	0
 10171  0022F0  0100               	movlb	0	; () banked
 10172  0022F2  6FB5               	movwf	OpenSPI1@smp_phase& (0+255),b
 10173  0022F4  0E02               	movlw	2
 10174  0022F6  EC59  F017         	call	_OpenSPI1
 10175                           
 10176                           ;karate.c: 112: TRISBbits.TRISB1 = 0;
 10177  0022FA  9293               	bcf	3987,1,c	;volatile
 10178                           
 10179                           ;karate.c: 113: TRISBbits.TRISB0 = 1;
 10180  0022FC  8093               	bsf	3987,0,c	;volatile
 10181                           
 10182                           ;karate.c: 114: TRISCbits.TRISC7 = 0;
 10183  0022FE  9E94               	bcf	3988,7,c	;volatile
 10184                           
 10185                           ;karate.c: 115: TRISBbits.TRISB3=0; TRISCbits.TRISC0=0; TRISBbits.TRISB5=0; LATBbits.LAT
      +                          B3=0; LATCbits.LATC0=1; LATBbits.LATB5=0;;
 10186  002300  9693               	bcf	3987,3,c	;volatile
 10187  002302  9094               	bcf	3988,0,c	;volatile
 10188  002304  9A93               	bcf	3987,5,c	;volatile
 10189  002306  968A               	bcf	3978,3,c	;volatile
 10190  002308  808B               	bsf	3979,0,c	;volatile
 10191  00230A  9A8A               	bcf	3978,5,c	;volatile
 10192                           
 10193                           ;karate.c: 117: tlc5947_count_channels();
 10194  00230C  EC41  F016         	call	_tlc5947_count_channels	;wreg free
 10195                           
 10196                           ;karate.c: 120: OpenTimer3(0b10111111 & 0b11111111 & 0b11111111 & 0b11111011, 0b01111111
      +                          );
 10197  002310  0E7F               	movlw	127
 10198  002312  0100               	movlb	0	; () banked
 10199  002314  6FB4               	movwf	OpenTimer3@config1& (0+255),b
 10200  002316  0EBB               	movlw	187
 10201  002318  EC08  F018         	call	_OpenTimer3
 10202                           
 10203                           ;karate.c: 121: tlc5947_pwm_readback();
 10204  00231C  EC1D  F012         	call	_tlc5947_pwm_readback	;wreg free
 10205                           
 10206                           ;karate.c: 122: CloseTimer3();
 10207  002320  EC20  F01A         	call	_CloseTimer3	;wreg free
 10208                           
 10209                           ;karate.c: 123: OpenTimer3(0b10111111 & 0b11111111 & 0b11111111 & 0b11111011 & 0b1111111
      +                          1 , 0b01111111);
 10210  002324  0E7F               	movlw	127
 10211  002326  0100               	movlb	0	; () banked
 10212  002328  6FB4               	movwf	OpenTimer3@config1& (0+255),b
 10213  00232A  0EBB               	movlw	187
 10214  00232C  EC08  F018         	call	_OpenTimer3
 10215                           
 10216                           ;karate.c: 124: tmr3h_cal = (uint8_t)((tlc_pwm_readback_value >> 8 & 0xFF)^0xFF);
 10217  002330  0100               	movlb	0	; () banked
 10218  002332  518B               	movf	(_tlc_pwm_readback_value+1)& (0+255),w,b
 10219  002334  0AFF               	xorlw	255
 10220  002336  0100               	movlb	0	; () banked
 10221  002338  6FA0               	movwf	_tmr3h_cal& (0+255),b
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;karate.c: 125: tmr3l_cal = (uint8_t)((tlc_pwm_readback_value & 0xFF)^0xFF);
 10225  00233A  0100               	movlb	0	; () banked
 10226  00233C  518A               	movf	_tlc_pwm_readback_value& (0+255),w,b
 10227  00233E  0AFF               	xorlw	255
 10228  002340  0100               	movlb	0	; () banked
 10229  002342  6FA1               	movwf	_tmr3l_cal& (0+255),b
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;karate.c: 130: ADCON0 = 0x01;
 10233  002344  0E01               	movlw	1
 10234  002346  6EC2               	movwf	4034,c	;volatile
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;karate.c: 131: ADCON1 = 0x0E;
 10238  002348  0E0E               	movlw	14
 10239  00234A  6EC1               	movwf	4033,c	;volatile
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;karate.c: 132: ADCON2 = 0xBE;
 10243  00234C  0EBE               	movlw	190
 10244  00234E  6EC0               	movwf	4032,c	;volatile
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;karate.c: 135: INTCONbits.INT0IE = 0;
 10248  002350  98F2               	bcf	intcon,4,c	;volatile
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;karate.c: 138: INTCONbits.IOCIE = 0;
 10252  002352  96F2               	bcf	intcon,3,c	;volatile
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;karate.c: 141: T2CON = 0xFF;
 10256  002354  68BA               	setf	4026,c	;volatile
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;karate.c: 142: PR2 = 234;
 10260  002356  0EEA               	movlw	234
 10261  002358  6EBB               	movwf	4027,c	;volatile
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;karate.c: 143: PIE1bits.TMR2IE = 0;
 10265  00235A  929D               	bcf	3997,1,c	;volatile
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;karate.c: 144: IPR1bits.TMR2IP = 0;
 10269  00235C  929F               	bcf	3999,1,c	;volatile
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;karate.c: 146: USBDeviceInit();
 10273  00235E  ECAD  F00B         	call	_USBDeviceInit	;wreg free
 10274                           
 10275                           ;karate.c: 149: RCONbits.IPEN = 1;
 10276  002362  8ED0               	bsf	4048,7,c	;volatile
 10277                           
 10278                           ;karate.c: 150: INTCONbits.GIEL = 1;
 10279  002364  8CF2               	bsf	intcon,6,c	;volatile
 10280                           
 10281                           ;karate.c: 151: INTCONbits.GIEH = 1;
 10282  002366  8EF2               	bsf	intcon,7,c	;volatile
 10283  002368  0012               	return		;funcret
 10284  00236A                     __end_of_InitializeSystem:
 10285                           	opt stack 0
 10286                           tblptru	equ	0xFF8
 10287                           tblptrh	equ	0xFF7
 10288                           tblptrl	equ	0xFF6
 10289                           tablat	equ	0xFF5
 10290                           prodh	equ	0xFF4
 10291                           prodl	equ	0xFF3
 10292                           intcon	equ	0xFF2
 10293                           postinc0	equ	0xFEE
 10294                           wreg	equ	0xFE8
 10295                           indf1	equ	0xFE7
 10296                           postdec1	equ	0xFE5
 10297                           fsr1h	equ	0xFE2
 10298                           fsr1l	equ	0xFE1
 10299                           indf2	equ	0xFDF
 10300                           postinc2	equ	0xFDE
 10301                           postdec2	equ	0xFDD
 10302                           plusw2	equ	0xFDB
 10303                           fsr2h	equ	0xFDA
 10304                           fsr2l	equ	0xFD9
 10305                           status	equ	0xFD8
 10306                           
 10307 ;; *************** function _tlc5947_pwm_readback *****************
 10308 ;; Defined at:
 10309 ;;		line 120 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;  i               1   22[BANK0 ] unsigned char 
 10314 ;; Return value:  Size  Location     Type
 10315 ;;		None               void
 10316 ;; Registers used:
 10317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10323 ;;      Params:         0       0       0       0       0       0       0       0       0
 10324 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10325 ;;      Temps:          0       6       0       0       0       0       0       0       0
 10326 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10327 ;;Total ram usage:        7 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    6
 10330 ;; This function calls:
 10331 ;;		_Delay10TCYx
 10332 ;;		___lwdiv
 10333 ;;		_tlc5947_latch
 10334 ;;		_tlc5947_setChannel
 10335 ;;		_tlc5947_update
 10336 ;; This function is called by:
 10337 ;;		_InitializeSystem
 10338 ;;		_ProcessCDC
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           	psect	text42
 10343  00243A                     __ptext42:
 10344                           	opt stack 0
 10345  00243A                     _tlc5947_pwm_readback:
 10346                           	opt stack 22
 10347                           
 10348                           ;tlc5947.c: 122: uint8_t i;
 10349                           ;tlc5947.c: 125: tlc_request = -1;
 10350                           
 10351                           ;incstack = 0
 10352  00243A  683C               	setf	_tlc_request,c
 10353                           
 10354                           ;tlc5947.c: 128: tlc5947_setChannel(23, 190);
 10355  00243C  0EBE               	movlw	190
 10356  00243E  0100               	movlb	0	; () banked
 10357  002440  6FBC               	movwf	tlc5947_setChannel@val& (0+255),b
 10358  002442  0E17               	movlw	23
 10359  002444  EC41  F006         	call	_tlc5947_setChannel
 10360                           
 10361                           ;tlc5947.c: 129: tlc5947_update();
 10362  002448  ECCD  F018         	call	_tlc5947_update	;wreg free
 10363                           
 10364                           ;tlc5947.c: 130: tlc5947_latch();
 10365  00244C  EC49  F019         	call	_tlc5947_latch	;wreg free
 10366                           
 10367                           ;tlc5947.c: 132: INTCONbits.IOCIF = 0;
 10368  002450  90F2               	bcf	intcon,0,c	;volatile
 10369                           
 10370                           ;tlc5947.c: 134: i = 0;
 10371  002452  0E00               	movlw	0
 10372  002454  0100               	movlb	0	; () banked
 10373  002456  6FCA               	movwf	tlc5947_pwm_readback@i& (0+255),b
 10374  002458  D000               	goto	l6617
 10375  00245A                     l6617:
 10376                           
 10377                           ;tlc5947.c: 136: if (INTCONbits.IOCIF) {
 10378  00245A  A0F2               	btfss	intcon,0,c	;volatile
 10379  00245C  D7FE               	goto	l6617
 10380                           
 10381                           ;tlc5947.c: 137: Delay10TCYx(2);
 10382  00245E  0E02               	movlw	2
 10383  002460  ECD2  F019         	call	_Delay10TCYx
 10384                           
 10385                           ;tlc5947.c: 138: if (PORTBbits.RB4 == 0) {
 10386  002464  B881               	btfsc	3969,4,c	;volatile
 10387  002466  D014               	goto	l6633
 10388                           
 10389                           ;tlc5947.c: 139: if (i == 0) {
 10390  002468  0100               	movlb	0	; () banked
 10391  00246A  51CA               	movf	tlc5947_pwm_readback@i& (0+255),w,b
 10392  00246C  0100               	movlb	0	; () banked
 10393  00246E  A4D8               	btfss	status,2,c
 10394  002470  D005               	goto	l6627
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;tlc5947.c: 140: TMR3H = 0x00;
 10398  002472  0E00               	movlw	0
 10399  002474  6EB3               	movwf	4019,c	;volatile
 10400                           
 10401                           ;tlc5947.c: 141: TMR3L = 0x00;
 10402  002476  0E00               	movlw	0
 10403  002478  6EB2               	movwf	4018,c	;volatile
 10404  00247A  D000               	goto	l6627
 10405  00247C                     l6627:
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;tlc5947.c: 142: }
 10409                           ;tlc5947.c: 143: if (i == 8) {
 10410  00247C  0E08               	movlw	8
 10411  00247E  0100               	movlb	0	; () banked
 10412  002480  19CA               	xorwf	tlc5947_pwm_readback@i& (0+255),w,b
 10413  002482  B4D8               	btfsc	status,2,c
 10414  002484  D007               	goto	l297
 10415  002486  D001               	goto	l6631
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;tlc5947.c: 144: break;
 10419  002488  D005               	goto	l297
 10420  00248A                     l6631:
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;tlc5947.c: 145: }
 10424                           ;tlc5947.c: 146: i++;
 10425  00248A  0100               	movlb	0	; () banked
 10426  00248C  2BCA               	incf	tlc5947_pwm_readback@i& (0+255),f,b
 10427  00248E  D000               	goto	l6633
 10428  002490                     l6633:
 10429                           
 10430                           ;tlc5947.c: 147: }
 10431                           ;tlc5947.c: 148: INTCONbits.IOCIF = 0;
 10432  002490  90F2               	bcf	intcon,0,c	;volatile
 10433  002492  D7E3               	goto	l6617
 10434  002494                     l297:
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;tlc5947.c: 149: }
 10438                           ;tlc5947.c: 150: }
 10439                           ;tlc5947.c: 152: tlc_pwm_readback_value = TMR3L;
 10440  002494  CFB2 F08A          	movff	4018,_tlc_pwm_readback_value	;volatile
 10441  002498  0100               	movlb	0	; () banked
 10442  00249A  6B8B               	clrf	(_tlc_pwm_readback_value+1)& (0+255),b
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;tlc5947.c: 153: tlc_pwm_readback_value += 256 * TMR3H;
 10446  00249C  50B3               	movf	4019,w,c	;volatile
 10447  00249E  0100               	movlb	0	; () banked
 10448  0024A0  278B               	addwf	(_tlc_pwm_readback_value+1)& (0+255),f,b
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;tlc5947.c: 155: pwr_delay = (tlc_pwm_readback_value - (2 * 40)) / 2 / 100;
 10452  0024A2  0EB0               	movlw	176
 10453  0024A4  0100               	movlb	0	; () banked
 10454  0024A6  6FC4               	movwf	??_tlc5947_pwm_readback& (0+255),b
 10455  0024A8  0EFF               	movlw	255
 10456  0024AA  0100               	movlb	0	; () banked
 10457  0024AC  6FC5               	movwf	(??_tlc5947_pwm_readback+1)& (0+255),b
 10458  0024AE  C08A  F0C6         	movff	_tlc_pwm_readback_value,??_tlc5947_pwm_readback+2
 10459  0024B2  C08B  F0C7         	movff	_tlc_pwm_readback_value+1,??_tlc5947_pwm_readback+3
 10460  0024B6  0100               	movlb	0	; () banked
 10461  0024B8  51C4               	movf	??_tlc5947_pwm_readback& (0+255),w,b
 10462  0024BA  0100               	movlb	0	; () banked
 10463  0024BC  27C6               	addwf	(??_tlc5947_pwm_readback+2)& (0+255),f,b
 10464  0024BE  0100               	movlb	0	; () banked
 10465  0024C0  51C5               	movf	(??_tlc5947_pwm_readback+1)& (0+255),w,b
 10466  0024C2  0100               	movlb	0	; () banked
 10467  0024C4  23C7               	addwfc	(??_tlc5947_pwm_readback+3)& (0+255),f,b
 10468  0024C6  90D8               	bcf	status,0,c
 10469  0024C8  0100               	movlb	0	; () banked
 10470  0024CA  31C7               	rrcf	(??_tlc5947_pwm_readback+3)& (0+255),w,b
 10471  0024CC  0100               	movlb	0	; () banked
 10472  0024CE  6FC8               	movwf	(??_tlc5947_pwm_readback+4)& (0+255),b
 10473  0024D0  0100               	movlb	0	; () banked
 10474  0024D2  31C6               	rrcf	(??_tlc5947_pwm_readback+2)& (0+255),w,b
 10475  0024D4  0100               	movlb	0	; () banked
 10476  0024D6  6FB4               	movwf	___lwdiv@dividend& (0+255),b
 10477  0024D8  C0C8  F0B5         	movff	??_tlc5947_pwm_readback+4,___lwdiv@dividend+1
 10478  0024DC  0E00               	movlw	0
 10479  0024DE  0100               	movlb	0	; () banked
 10480  0024E0  6FB7               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10481  0024E2  0E64               	movlw	100
 10482  0024E4  6FB6               	movwf	___lwdiv@divisor& (0+255),b
 10483  0024E6  EC00  F016         	call	___lwdiv	;wreg free
 10484  0024EA  0100               	movlb	0	; () banked
 10485  0024EC  51B4               	movf	?___lwdiv& (0+255),w,b
 10486  0024EE  6E3A               	movwf	_pwr_delay,c
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;tlc5947.c: 159: tlc5947_setChannel(23, 0);
 10490  0024F0  0E00               	movlw	0
 10491  0024F2  0100               	movlb	0	; () banked
 10492  0024F4  6FBC               	movwf	tlc5947_setChannel@val& (0+255),b
 10493  0024F6  0E17               	movlw	23
 10494  0024F8  EC41  F006         	call	_tlc5947_setChannel
 10495                           
 10496                           ;tlc5947.c: 160: tlc5947_update();
 10497  0024FC  ECCD  F018         	call	_tlc5947_update	;wreg free
 10498                           
 10499                           ;tlc5947.c: 161: tlc5947_latch();
 10500  002500  EC49  F019         	call	_tlc5947_latch	;wreg free
 10501                           
 10502                           ;tlc5947.c: 164: tlc_request = 0;
 10503  002504  0E00               	movlw	0
 10504  002506  6E3C               	movwf	_tlc_request,c
 10505  002508  0012               	return		;funcret
 10506  00250A                     __end_of_tlc5947_pwm_readback:
 10507                           	opt stack 0
 10508                           tblptru	equ	0xFF8
 10509                           tblptrh	equ	0xFF7
 10510                           tblptrl	equ	0xFF6
 10511                           tablat	equ	0xFF5
 10512                           prodh	equ	0xFF4
 10513                           prodl	equ	0xFF3
 10514                           intcon	equ	0xFF2
 10515                           postinc0	equ	0xFEE
 10516                           wreg	equ	0xFE8
 10517                           indf1	equ	0xFE7
 10518                           postdec1	equ	0xFE5
 10519                           fsr1h	equ	0xFE2
 10520                           fsr1l	equ	0xFE1
 10521                           indf2	equ	0xFDF
 10522                           postinc2	equ	0xFDE
 10523                           postdec2	equ	0xFDD
 10524                           plusw2	equ	0xFDB
 10525                           fsr2h	equ	0xFDA
 10526                           fsr2l	equ	0xFD9
 10527                           status	equ	0xFD8
 10528                           
 10529 ;; *************** function _tlc5947_setChannel *****************
 10530 ;; Defined at:
 10531 ;;		line 43 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  ch              1    wreg     unsigned char 
 10534 ;;  val             1    8[BANK0 ] unsigned char 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  ch              1   12[BANK0 ] unsigned char 
 10537 ;;  col             2   13[BANK0 ] unsigned int 
 10538 ;;  pos             1   15[BANK0 ] unsigned char 
 10539 ;; Return value:  Size  Location     Type
 10540 ;;		None               void
 10541 ;; Registers used:
 10542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10548 ;;      Params:         0       1       0       0       0       0       0       0       0
 10549 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10550 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10551 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10552 ;;Total ram usage:        8 bytes
 10553 ;; Hardware stack levels used:    1
 10554 ;; Hardware stack levels required when called:    5
 10555 ;; This function calls:
 10556 ;;		___awdiv
 10557 ;;		_gamma_lookup
 10558 ;; This function is called by:
 10559 ;;		_ProcessIO
 10560 ;;		_tlc5947_pwm_readback
 10561 ;;		_ProcessCDC
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           	psect	text43
 10566  000C82                     __ptext43:
 10567                           	opt stack 0
 10568  000C82                     _tlc5947_setChannel:
 10569                           	opt stack 24
 10570                           
 10571                           ;incstack = 0
 10572                           ;tlc5947_setChannel@ch stored from wreg
 10573  000C82  0100               	movlb	0	; () banked
 10574  000C84  6FC0               	movwf	tlc5947_setChannel@ch& (0+255),b
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;tlc5947.c: 45: uint8_t pos = 0;
 10578  000C86  0E00               	movlw	0
 10579  000C88  0100               	movlb	0	; () banked
 10580  000C8A  6FC3               	movwf	tlc5947_setChannel@pos& (0+255),b
 10581                           
 10582                           ;tlc5947.c: 46: uint16_t col = 0;
 10583  000C8C  0E00               	movlw	0
 10584  000C8E  0100               	movlb	0	; () banked
 10585  000C90  6FC2               	movwf	(tlc5947_setChannel@col+1)& (0+255),b
 10586  000C92  0E00               	movlw	0
 10587  000C94  6FC1               	movwf	tlc5947_setChannel@col& (0+255),b
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;tlc5947.c: 49: if (ch >= tlc_nchannels) return;
 10591  000C96  0100               	movlb	0	; () banked
 10592  000C98  51F9               	movf	_tlc_nchannels& (0+255),w,b
 10593  000C9A  0100               	movlb	0	; () banked
 10594  000C9C  5DC0               	subwf	tlc5947_setChannel@ch& (0+255),w,b
 10595  000C9E  B0D8               	btfsc	status,0,c
 10596  000CA0  0012               	return	
 10597  000CA2  D001               	goto	l6359
 10598                           
 10599                           ; BSR set to: 0
 10600  000CA4  0012               	return	
 10601  000CA6                     l6359:
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;tlc5947.c: 51: col = ~gamma_lookup(val);
 10605  000CA6  0100               	movlb	0	; () banked
 10606  000CA8  51BC               	movf	tlc5947_setChannel@val& (0+255),w,b
 10607  000CAA  ECA4  F019         	call	_gamma_lookup
 10608  000CAE  0100               	movlb	0	; () banked
 10609  000CB0  1DB4               	comf	?_gamma_lookup& (0+255),w,b
 10610  000CB2  0100               	movlb	0	; () banked
 10611  000CB4  6FC1               	movwf	tlc5947_setChannel@col& (0+255),b
 10612  000CB6  0100               	movlb	0	; () banked
 10613  000CB8  1DB5               	comf	(?_gamma_lookup+1)& (0+255),w,b
 10614  000CBA  0100               	movlb	0	; () banked
 10615  000CBC  6FC2               	movwf	(tlc5947_setChannel@col+1)& (0+255),b
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;tlc5947.c: 54: if (tlc_nchannels == 48) {
 10619  000CBE  0E30               	movlw	48
 10620  000CC0  0100               	movlb	0	; () banked
 10621  000CC2  19F9               	xorwf	_tlc_nchannels& (0+255),w,b
 10622  000CC4  A4D8               	btfss	status,2,c
 10623  000CC6  D00C               	goto	l6369
 10624                           
 10625                           ; BSR set to: 0
 10626                           ;tlc5947.c: 55: if (ch < 24) {
 10627  000CC8  0E18               	movlw	24
 10628  000CCA  0100               	movlb	0	; () banked
 10629  000CCC  61C0               	cpfslt	tlc5947_setChannel@ch& (0+255),b
 10630  000CCE  D004               	goto	l6367
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;tlc5947.c: 56: ch+=24;
 10634  000CD0  0E18               	movlw	24
 10635  000CD2  0100               	movlb	0	; () banked
 10636  000CD4  27C0               	addwf	tlc5947_setChannel@ch& (0+255),f,b
 10637                           
 10638                           ;tlc5947.c: 57: } else {
 10639  000CD6  D004               	goto	l6369
 10640  000CD8                     l6367:
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;tlc5947.c: 58: ch-=24;
 10644  000CD8  0E18               	movlw	24
 10645  000CDA  0100               	movlb	0	; () banked
 10646  000CDC  5FC0               	subwf	tlc5947_setChannel@ch& (0+255),f,b
 10647                           
 10648                           ; BSR set to: 0
 10649  000CDE  D000               	goto	l6369
 10650  000CE0                     l6369:
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;tlc5947.c: 59: }
 10654                           ;tlc5947.c: 60: }
 10655                           ;tlc5947.c: 62: pos = ch * 3;
 10656  000CE0  0100               	movlb	0	; () banked
 10657  000CE2  51C0               	movf	tlc5947_setChannel@ch& (0+255),w,b
 10658  000CE4  0D03               	mullw	3
 10659  000CE6  CFF3 F0C3          	movff	prodl,tlc5947_setChannel@pos
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;tlc5947.c: 66: if (pos & 0x01) {
 10663  000CEA  0100               	movlb	0	; () banked
 10664  000CEC  A1C3               	btfss	tlc5947_setChannel@pos& (0+255),0,b
 10665  000CEE  D02C               	goto	l6375
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;tlc5947.c: 67: tlc_memory[(pos/2)] &= 0xF0;
 10669  000CF0  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10670  000CF4  0100               	movlb	0	; () banked
 10671  000CF6  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10672  000CF8  0E00               	movlw	0
 10673  000CFA  0100               	movlb	0	; () banked
 10674  000CFC  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10675  000CFE  0E02               	movlw	2
 10676  000D00  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10677  000D02  EC85  F012         	call	___awdiv	;wreg free
 10678  000D06  0E80               	movlw	low _tlc_memory
 10679  000D08  0100               	movlb	0	; () banked
 10680  000D0A  25B4               	addwf	?___awdiv& (0+255),w,b
 10681  000D0C  6ED9               	movwf	fsr2l,c
 10682  000D0E  0E01               	movlw	high _tlc_memory
 10683  000D10  0100               	movlb	0	; () banked
 10684  000D12  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10685  000D14  6EDA               	movwf	fsr2h,c
 10686  000D16  0EF0               	movlw	240
 10687  000D18  16DF               	andwf	indf2,f,c
 10688                           
 10689                           ;tlc5947.c: 68: tlc_memory[(pos/2)] |= ((col & 0xF00) >> 8);
 10690  000D1A  C0C1  F0BD         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10691  000D1E  C0C2  F0BE         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10692  000D22  C0BE  F0BD         	movff	??_tlc5947_setChannel+1,??_tlc5947_setChannel
 10693  000D26  0100               	movlb	0	; () banked
 10694  000D28  6BBE               	clrf	(??_tlc5947_setChannel+1)& (0+255),b
 10695  000D2A  0E0F               	movlw	15
 10696  000D2C  0100               	movlb	0	; () banked
 10697  000D2E  17BD               	andwf	??_tlc5947_setChannel& (0+255),f,b
 10698  000D30  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10699  000D34  0100               	movlb	0	; () banked
 10700  000D36  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10701  000D38  0E00               	movlw	0
 10702  000D3A  0100               	movlb	0	; () banked
 10703  000D3C  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10704  000D3E  0E02               	movlw	2
 10705  000D40  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10706  000D42  EC85  F012         	call	___awdiv	;wreg free
 10707  000D46  D031               	goto	L14
 10708  000D48                     l6375:
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;tlc5947.c: 70: tlc_memory[(pos/2)] &= 0x0F;
 10712  000D48  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10713  000D4C  0100               	movlb	0	; () banked
 10714  000D4E  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10715  000D50  0E00               	movlw	0
 10716  000D52  0100               	movlb	0	; () banked
 10717  000D54  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10718  000D56  0E02               	movlw	2
 10719  000D58  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10720  000D5A  EC85  F012         	call	___awdiv	;wreg free
 10721  000D5E  0E80               	movlw	low _tlc_memory
 10722  000D60  0100               	movlb	0	; () banked
 10723  000D62  25B4               	addwf	?___awdiv& (0+255),w,b
 10724  000D64  6ED9               	movwf	fsr2l,c
 10725  000D66  0E01               	movlw	high _tlc_memory
 10726  000D68  0100               	movlb	0	; () banked
 10727  000D6A  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10728  000D6C  6EDA               	movwf	fsr2h,c
 10729  000D6E  0E0F               	movlw	15
 10730  000D70  16DF               	andwf	indf2,f,c
 10731                           
 10732                           ;tlc5947.c: 71: tlc_memory[(pos/2)] |= ((col & 0xF00) >> 4);
 10733  000D72  C0C1  F0BD         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10734  000D76  C0C2  F0BE         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10735  000D7A  0E04               	movlw	4
 10736  000D7C  0100               	movlb	0	; () banked
 10737  000D7E  6FBF               	movwf	(??_tlc5947_setChannel+2)& (0+255),b
 10738  000D80                     u5725:
 10739  000D80  0100               	movlb	0	; () banked
 10740  000D82  90D8               	bcf	status,0,c
 10741  000D84  33BE               	rrcf	(??_tlc5947_setChannel+1)& (0+255),f,b
 10742  000D86  33BD               	rrcf	??_tlc5947_setChannel& (0+255),f,b
 10743  000D88  0100               	movlb	0	; () banked
 10744  000D8A  2FBF               	decfsz	(??_tlc5947_setChannel+2)& (0+255),f,b
 10745  000D8C  D7F9               	goto	u5725
 10746  000D8E  0EF0               	movlw	240
 10747  000D90  0100               	movlb	0	; () banked
 10748  000D92  17BD               	andwf	??_tlc5947_setChannel& (0+255),f,b
 10749  000D94  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10750  000D98  0100               	movlb	0	; () banked
 10751  000D9A  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10752  000D9C  0E00               	movlw	0
 10753  000D9E  0100               	movlb	0	; () banked
 10754  000DA0  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10755  000DA2  0E02               	movlw	2
 10756  000DA4  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10757  000DA6  EC85  F012         	call	___awdiv	;wreg free
 10758  000DAA                     L14:
 10759  000DAA  0E80               	movlw	low _tlc_memory
 10760  000DAC  0100               	movlb	0	; () banked
 10761  000DAE  25B4               	addwf	?___awdiv& (0+255),w,b
 10762  000DB0  6ED9               	movwf	fsr2l,c
 10763  000DB2  0E01               	movlw	high _tlc_memory
 10764  000DB4  0100               	movlb	0	; () banked
 10765  000DB6  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10766  000DB8  6EDA               	movwf	fsr2h,c
 10767  000DBA  0100               	movlb	0	; () banked
 10768  000DBC  51BD               	movf	??_tlc5947_setChannel& (0+255),w,b
 10769  000DBE  12DF               	iorwf	indf2,f,c
 10770  000DC0  D000               	goto	l6377
 10771  000DC2                     l6377:
 10772                           
 10773                           ; BSR set to: 0
 10774                           ;tlc5947.c: 72: }
 10775                           ;tlc5947.c: 74: pos++;
 10776  000DC2  0100               	movlb	0	; () banked
 10777  000DC4  2BC3               	incf	tlc5947_setChannel@pos& (0+255),f,b
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;tlc5947.c: 75: if (pos & 0x01) {
 10781  000DC6  0100               	movlb	0	; () banked
 10782  000DC8  A1C3               	btfss	tlc5947_setChannel@pos& (0+255),0,b
 10783  000DCA  D032               	goto	l6383
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;tlc5947.c: 76: tlc_memory[(pos/2)] &= 0xF0;
 10787  000DCC  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10788  000DD0  0100               	movlb	0	; () banked
 10789  000DD2  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10790  000DD4  0E00               	movlw	0
 10791  000DD6  0100               	movlb	0	; () banked
 10792  000DD8  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10793  000DDA  0E02               	movlw	2
 10794  000DDC  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10795  000DDE  EC85  F012         	call	___awdiv	;wreg free
 10796  000DE2  0E80               	movlw	low _tlc_memory
 10797  000DE4  0100               	movlb	0	; () banked
 10798  000DE6  25B4               	addwf	?___awdiv& (0+255),w,b
 10799  000DE8  6ED9               	movwf	fsr2l,c
 10800  000DEA  0E01               	movlw	high _tlc_memory
 10801  000DEC  0100               	movlb	0	; () banked
 10802  000DEE  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10803  000DF0  6EDA               	movwf	fsr2h,c
 10804  000DF2  0EF0               	movlw	240
 10805  000DF4  16DF               	andwf	indf2,f,c
 10806                           
 10807                           ;tlc5947.c: 77: tlc_memory[(pos/2)] |= ((col & 0x0F0) >> 4);
 10808  000DF6  C0C1  F0BD         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10809  000DFA  C0C2  F0BE         	movff	tlc5947_setChannel@col+1,??_tlc5947_setChannel+1
 10810  000DFE  0E04               	movlw	4
 10811  000E00  0100               	movlb	0	; () banked
 10812  000E02  6FBF               	movwf	(??_tlc5947_setChannel+2)& (0+255),b
 10813  000E04                     u5745:
 10814  000E04  0100               	movlb	0	; () banked
 10815  000E06  90D8               	bcf	status,0,c
 10816  000E08  33BE               	rrcf	(??_tlc5947_setChannel+1)& (0+255),f,b
 10817  000E0A  33BD               	rrcf	??_tlc5947_setChannel& (0+255),f,b
 10818  000E0C  0100               	movlb	0	; () banked
 10819  000E0E  2FBF               	decfsz	(??_tlc5947_setChannel+2)& (0+255),f,b
 10820  000E10  D7F9               	goto	u5745
 10821  000E12  0E0F               	movlw	15
 10822  000E14  0100               	movlb	0	; () banked
 10823  000E16  17BD               	andwf	??_tlc5947_setChannel& (0+255),f,b
 10824  000E18  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10825  000E1C  0100               	movlb	0	; () banked
 10826  000E1E  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10827  000E20  0E00               	movlw	0
 10828  000E22  0100               	movlb	0	; () banked
 10829  000E24  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10830  000E26  0E02               	movlw	2
 10831  000E28  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10832  000E2A  EC85  F012         	call	___awdiv	;wreg free
 10833  000E2E  D025               	goto	L15
 10834  000E30                     l6383:
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;tlc5947.c: 79: tlc_memory[(pos/2)] &= 0x0F;
 10838  000E30  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10839  000E34  0100               	movlb	0	; () banked
 10840  000E36  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10841  000E38  0E00               	movlw	0
 10842  000E3A  0100               	movlb	0	; () banked
 10843  000E3C  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10844  000E3E  0E02               	movlw	2
 10845  000E40  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10846  000E42  EC85  F012         	call	___awdiv	;wreg free
 10847  000E46  0E80               	movlw	low _tlc_memory
 10848  000E48  0100               	movlb	0	; () banked
 10849  000E4A  25B4               	addwf	?___awdiv& (0+255),w,b
 10850  000E4C  6ED9               	movwf	fsr2l,c
 10851  000E4E  0E01               	movlw	high _tlc_memory
 10852  000E50  0100               	movlb	0	; () banked
 10853  000E52  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10854  000E54  6EDA               	movwf	fsr2h,c
 10855  000E56  0E0F               	movlw	15
 10856  000E58  16DF               	andwf	indf2,f,c
 10857                           
 10858                           ;tlc5947.c: 80: tlc_memory[(pos/2)] |= (col & 0x0F0);
 10859  000E5A  C0C1  F0BD         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10860  000E5E  0EF0               	movlw	240
 10861  000E60  0100               	movlb	0	; () banked
 10862  000E62  17BD               	andwf	??_tlc5947_setChannel& (0+255),f,b
 10863  000E64  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10864  000E68  0100               	movlb	0	; () banked
 10865  000E6A  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10866  000E6C  0E00               	movlw	0
 10867  000E6E  0100               	movlb	0	; () banked
 10868  000E70  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10869  000E72  0E02               	movlw	2
 10870  000E74  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10871  000E76  EC85  F012         	call	___awdiv	;wreg free
 10872  000E7A                     L15:
 10873  000E7A  0E80               	movlw	low _tlc_memory
 10874  000E7C  0100               	movlb	0	; () banked
 10875  000E7E  25B4               	addwf	?___awdiv& (0+255),w,b
 10876  000E80  6ED9               	movwf	fsr2l,c
 10877  000E82  0E01               	movlw	high _tlc_memory
 10878  000E84  0100               	movlb	0	; () banked
 10879  000E86  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10880  000E88  6EDA               	movwf	fsr2h,c
 10881  000E8A  0100               	movlb	0	; () banked
 10882  000E8C  51BD               	movf	??_tlc5947_setChannel& (0+255),w,b
 10883  000E8E  12DF               	iorwf	indf2,f,c
 10884  000E90  D000               	goto	l6385
 10885  000E92                     l6385:
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;tlc5947.c: 81: }
 10889                           ;tlc5947.c: 83: pos++;
 10890  000E92  0100               	movlb	0	; () banked
 10891  000E94  2BC3               	incf	tlc5947_setChannel@pos& (0+255),f,b
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;tlc5947.c: 84: if (pos & 0x01) {
 10895  000E96  0100               	movlb	0	; () banked
 10896  000E98  A1C3               	btfss	tlc5947_setChannel@pos& (0+255),0,b
 10897  000E9A  D031               	goto	l6391
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;tlc5947.c: 85: tlc_memory[(pos/2)] &= 0xF0;
 10901  000E9C  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10902  000EA0  0100               	movlb	0	; () banked
 10903  000EA2  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10904  000EA4  0E00               	movlw	0
 10905  000EA6  0100               	movlb	0	; () banked
 10906  000EA8  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10907  000EAA  0E02               	movlw	2
 10908  000EAC  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10909  000EAE  EC85  F012         	call	___awdiv	;wreg free
 10910  000EB2  0E80               	movlw	low _tlc_memory
 10911  000EB4  0100               	movlb	0	; () banked
 10912  000EB6  25B4               	addwf	?___awdiv& (0+255),w,b
 10913  000EB8  6ED9               	movwf	fsr2l,c
 10914  000EBA  0E01               	movlw	high _tlc_memory
 10915  000EBC  0100               	movlb	0	; () banked
 10916  000EBE  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10917  000EC0  6EDA               	movwf	fsr2h,c
 10918  000EC2  0EF0               	movlw	240
 10919  000EC4  16DF               	andwf	indf2,f,c
 10920                           
 10921                           ;tlc5947.c: 86: tlc_memory[(pos/2)] |= (col & 0x00F);
 10922  000EC6  C0C1  F0BD         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10923  000ECA  0E0F               	movlw	15
 10924  000ECC  0100               	movlb	0	; () banked
 10925  000ECE  17BD               	andwf	??_tlc5947_setChannel& (0+255),f,b
 10926  000ED0  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10927  000ED4  0100               	movlb	0	; () banked
 10928  000ED6  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10929  000ED8  0E00               	movlw	0
 10930  000EDA  0100               	movlb	0	; () banked
 10931  000EDC  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10932  000EDE  0E02               	movlw	2
 10933  000EE0  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10934  000EE2  EC85  F012         	call	___awdiv	;wreg free
 10935  000EE6  0E80               	movlw	low _tlc_memory
 10936  000EE8  0100               	movlb	0	; () banked
 10937  000EEA  25B4               	addwf	?___awdiv& (0+255),w,b
 10938  000EEC  6ED9               	movwf	fsr2l,c
 10939  000EEE  0E01               	movlw	high _tlc_memory
 10940  000EF0  0100               	movlb	0	; () banked
 10941  000EF2  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10942  000EF4  6EDA               	movwf	fsr2h,c
 10943  000EF6  0100               	movlb	0	; () banked
 10944  000EF8  51BD               	movf	??_tlc5947_setChannel& (0+255),w,b
 10945  000EFA  12DF               	iorwf	indf2,f,c
 10946                           
 10947                           ;tlc5947.c: 87: } else {
 10948  000EFC  0012               	return	
 10949  000EFE                     l6391:
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;tlc5947.c: 88: tlc_memory[(pos/2)] &= 0x0F;
 10953  000EFE  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10954  000F02  0100               	movlb	0	; () banked
 10955  000F04  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10956  000F06  0E00               	movlw	0
 10957  000F08  0100               	movlb	0	; () banked
 10958  000F0A  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10959  000F0C  0E02               	movlw	2
 10960  000F0E  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10961  000F10  EC85  F012         	call	___awdiv	;wreg free
 10962  000F14  0E80               	movlw	low _tlc_memory
 10963  000F16  0100               	movlb	0	; () banked
 10964  000F18  25B4               	addwf	?___awdiv& (0+255),w,b
 10965  000F1A  6ED9               	movwf	fsr2l,c
 10966  000F1C  0E01               	movlw	high _tlc_memory
 10967  000F1E  0100               	movlb	0	; () banked
 10968  000F20  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10969  000F22  6EDA               	movwf	fsr2h,c
 10970  000F24  0E0F               	movlw	15
 10971  000F26  16DF               	andwf	indf2,f,c
 10972                           
 10973                           ;tlc5947.c: 89: tlc_memory[(pos/2)] |= ((col & 0x00F) << 4);
 10974  000F28  C0C1  F0BD         	movff	tlc5947_setChannel@col,??_tlc5947_setChannel
 10975  000F2C  0E0F               	movlw	15
 10976  000F2E  0100               	movlb	0	; () banked
 10977  000F30  17BD               	andwf	??_tlc5947_setChannel& (0+255),f,b
 10978  000F32  0100               	movlb	0	; () banked
 10979  000F34  3BBD               	swapf	??_tlc5947_setChannel& (0+255),f,b
 10980  000F36  0EF0               	movlw	240
 10981  000F38  17BD               	andwf	??_tlc5947_setChannel& (0+255),f,b
 10982  000F3A  C0C3  F0B4         	movff	tlc5947_setChannel@pos,___awdiv@dividend
 10983  000F3E  0100               	movlb	0	; () banked
 10984  000F40  6BB5               	clrf	(___awdiv@dividend+1)& (0+255),b
 10985  000F42  0E00               	movlw	0
 10986  000F44  0100               	movlb	0	; () banked
 10987  000F46  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 10988  000F48  0E02               	movlw	2
 10989  000F4A  6FB6               	movwf	___awdiv@divisor& (0+255),b
 10990  000F4C  EC85  F012         	call	___awdiv	;wreg free
 10991  000F50  0E80               	movlw	low _tlc_memory
 10992  000F52  0100               	movlb	0	; () banked
 10993  000F54  25B4               	addwf	?___awdiv& (0+255),w,b
 10994  000F56  6ED9               	movwf	fsr2l,c
 10995  000F58  0E01               	movlw	high _tlc_memory
 10996  000F5A  0100               	movlb	0	; () banked
 10997  000F5C  21B5               	addwfc	(?___awdiv+1)& (0+255),w,b
 10998  000F5E  6EDA               	movwf	fsr2h,c
 10999  000F60  0100               	movlb	0	; () banked
 11000  000F62  51BD               	movf	??_tlc5947_setChannel& (0+255),w,b
 11001  000F64  12DF               	iorwf	indf2,f,c
 11002  000F66  0012               	return	
 11003                           
 11004                           ; BSR set to: 0
 11005                           
 11006                           ; BSR set to: 0
 11007  000F68  0012               	return		;funcret
 11008  000F6A                     __end_of_tlc5947_setChannel:
 11009                           	opt stack 0
 11010                           tblptru	equ	0xFF8
 11011                           tblptrh	equ	0xFF7
 11012                           tblptrl	equ	0xFF6
 11013                           tablat	equ	0xFF5
 11014                           prodh	equ	0xFF4
 11015                           prodl	equ	0xFF3
 11016                           intcon	equ	0xFF2
 11017                           postinc0	equ	0xFEE
 11018                           wreg	equ	0xFE8
 11019                           indf1	equ	0xFE7
 11020                           postdec1	equ	0xFE5
 11021                           fsr1h	equ	0xFE2
 11022                           fsr1l	equ	0xFE1
 11023                           indf2	equ	0xFDF
 11024                           postinc2	equ	0xFDE
 11025                           postdec2	equ	0xFDD
 11026                           plusw2	equ	0xFDB
 11027                           fsr2h	equ	0xFDA
 11028                           fsr2l	equ	0xFD9
 11029                           status	equ	0xFD8
 11030                           
 11031 ;; *************** function _gamma_lookup *****************
 11032 ;; Defined at:
 11033 ;;		line 23 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/gamma.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  c               1    wreg     unsigned char 
 11036 ;; Auto vars:     Size  Location     Type
 11037 ;;  c               1    2[BANK0 ] unsigned char 
 11038 ;; Return value:  Size  Location     Type
 11039 ;;                  2    0[BANK0 ] unsigned int 
 11040 ;; Registers used:
 11041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11042 ;; Tracked objects:
 11043 ;;		On entry : 0/0
 11044 ;;		On exit  : 0/0
 11045 ;;		Unchanged: 0/0
 11046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11047 ;;      Params:         0       2       0       0       0       0       0       0       0
 11048 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11050 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11051 ;;Total ram usage:        3 bytes
 11052 ;; Hardware stack levels used:    1
 11053 ;; Hardware stack levels required when called:    4
 11054 ;; This function calls:
 11055 ;;		Nothing
 11056 ;; This function is called by:
 11057 ;;		_tlc5947_setChannel
 11058 ;; This function uses a non-reentrant model
 11059 ;;
 11060                           
 11061                           	psect	text44
 11062  003348                     __ptext44:
 11063                           	opt stack 0
 11064  003348                     _gamma_lookup:
 11065                           	opt stack 24
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;incstack = 0
 11069                           ;gamma_lookup@c stored from wreg
 11070  003348  0100               	movlb	0	; () banked
 11071  00334A  6FB6               	movwf	gamma_lookup@c& (0+255),b
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;gamma.c: 25: return gamma_table[c];
 11075  00334C  0100               	movlb	0	; () banked
 11076  00334E  51B6               	movf	gamma_lookup@c& (0+255),w,b
 11077  003350  0D02               	mullw	2
 11078  003352  0E40               	movlw	low _gamma_table
 11079  003354  24F3               	addwf	prodl,w,c
 11080  003356  6ED9               	movwf	fsr2l,c
 11081  003358  0E04               	movlw	high _gamma_table
 11082  00335A  20F4               	addwfc	prodh,w,c
 11083  00335C  6EDA               	movwf	fsr2h,c
 11084  00335E  CFDE F0B4          	movff	postinc2,?_gamma_lookup
 11085  003362  CFDD F0B5          	movff	postdec2,?_gamma_lookup+1
 11086  003366  0012               	return	
 11087                           
 11088                           ; BSR set to: 0
 11089                           
 11090                           ; BSR set to: 0
 11091  003368  0012               	return		;funcret
 11092  00336A                     __end_of_gamma_lookup:
 11093                           	opt stack 0
 11094                           tblptru	equ	0xFF8
 11095                           tblptrh	equ	0xFF7
 11096                           tblptrl	equ	0xFF6
 11097                           tablat	equ	0xFF5
 11098                           prodh	equ	0xFF4
 11099                           prodl	equ	0xFF3
 11100                           intcon	equ	0xFF2
 11101                           postinc0	equ	0xFEE
 11102                           wreg	equ	0xFE8
 11103                           indf1	equ	0xFE7
 11104                           postdec1	equ	0xFE5
 11105                           fsr1h	equ	0xFE2
 11106                           fsr1l	equ	0xFE1
 11107                           indf2	equ	0xFDF
 11108                           postinc2	equ	0xFDE
 11109                           postdec2	equ	0xFDD
 11110                           plusw2	equ	0xFDB
 11111                           fsr2h	equ	0xFDA
 11112                           fsr2l	equ	0xFD9
 11113                           status	equ	0xFD8
 11114                           
 11115 ;; *************** function _tlc5947_latch *****************
 11116 ;; Defined at:
 11117 ;;		line 177 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;		None
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;		None
 11122 ;; Return value:  Size  Location     Type
 11123 ;;		None               void
 11124 ;; Registers used:
 11125 ;;		wreg, status,2, cstack
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11131 ;;      Params:         0       0       0       0       0       0       0       0       0
 11132 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11133 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11134 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11135 ;;Total ram usage:        0 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; Hardware stack levels required when called:    5
 11138 ;; This function calls:
 11139 ;;		_Delay100TCYx
 11140 ;;		_Delay10TCYx
 11141 ;; This function is called by:
 11142 ;;		_tlc5947_pwm_readback
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146                           	psect	text45
 11147  003292                     __ptext45:
 11148                           	opt stack 0
 11149  003292                     _tlc5947_latch:
 11150                           	opt stack 22
 11151                           
 11152                           ;tlc5947.c: 179: LATBbits.LATB5 = 1;;
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;incstack = 0
 11156  003292  8A8A               	bsf	3978,5,c	;volatile
 11157                           
 11158                           ;tlc5947.c: 180: Delay100TCYx (pwr_delay);
 11159  003294  503A               	movf	_pwr_delay,w,c
 11160  003296  ECDD  F019         	call	_Delay100TCYx
 11161                           
 11162                           ;tlc5947.c: 182: LATCbits.LATC0 = 1;;
 11163  00329A  808B               	bsf	3979,0,c	;volatile
 11164                           
 11165                           ;tlc5947.c: 183: LATBbits.LATB3 = 1;;
 11166  00329C  868A               	bsf	3978,3,c	;volatile
 11167                           
 11168                           ;tlc5947.c: 184: Delay10TCYx(40);
 11169  00329E  0E28               	movlw	40
 11170  0032A0  ECD2  F019         	call	_Delay10TCYx
 11171                           
 11172                           ;tlc5947.c: 185: LATBbits.LATB3 = 0;;
 11173  0032A4  968A               	bcf	3978,3,c	;volatile
 11174                           
 11175                           ;tlc5947.c: 186: Delay10TCYx(40);
 11176  0032A6  0E28               	movlw	40
 11177  0032A8  ECD2  F019         	call	_Delay10TCYx
 11178                           
 11179                           ;tlc5947.c: 187: LATCbits.LATC0 = 0;;
 11180  0032AC  908B               	bcf	3979,0,c	;volatile
 11181                           
 11182                           ;tlc5947.c: 189: Delay100TCYx(pwr_delay);
 11183  0032AE  503A               	movf	_pwr_delay,w,c
 11184  0032B0  ECDD  F019         	call	_Delay100TCYx
 11185                           
 11186                           ;tlc5947.c: 190: LATBbits.LATB5 = 0;;
 11187  0032B4  9A8A               	bcf	3978,5,c	;volatile
 11188  0032B6  0012               	return		;funcret
 11189  0032B8                     __end_of_tlc5947_latch:
 11190                           	opt stack 0
 11191                           tblptru	equ	0xFF8
 11192                           tblptrh	equ	0xFF7
 11193                           tblptrl	equ	0xFF6
 11194                           tablat	equ	0xFF5
 11195                           prodh	equ	0xFF4
 11196                           prodl	equ	0xFF3
 11197                           intcon	equ	0xFF2
 11198                           postinc0	equ	0xFEE
 11199                           wreg	equ	0xFE8
 11200                           indf1	equ	0xFE7
 11201                           postdec1	equ	0xFE5
 11202                           fsr1h	equ	0xFE2
 11203                           fsr1l	equ	0xFE1
 11204                           indf2	equ	0xFDF
 11205                           postinc2	equ	0xFDE
 11206                           postdec2	equ	0xFDD
 11207                           plusw2	equ	0xFDB
 11208                           fsr2h	equ	0xFDA
 11209                           fsr2l	equ	0xFD9
 11210                           status	equ	0xFD8
 11211                           
 11212 ;; *************** function _Delay10TCYx *****************
 11213 ;; Defined at:
 11214 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10tcyx.c"
 11215 ;; Parameters:    Size  Location     Type
 11216 ;;  unit            1    wreg     unsigned char 
 11217 ;; Auto vars:     Size  Location     Type
 11218 ;;  unit            1    0[BANK0 ] unsigned char 
 11219 ;; Return value:  Size  Location     Type
 11220 ;;		None               void
 11221 ;; Registers used:
 11222 ;;		wreg
 11223 ;; Tracked objects:
 11224 ;;		On entry : 0/0
 11225 ;;		On exit  : 0/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11228 ;;      Params:         0       0       0       0       0       0       0       0       0
 11229 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11230 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11231 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11232 ;;Total ram usage:        1 bytes
 11233 ;; Hardware stack levels used:    1
 11234 ;; Hardware stack levels required when called:    4
 11235 ;; This function calls:
 11236 ;;		Nothing
 11237 ;; This function is called by:
 11238 ;;		_tlc5947_pwm_readback
 11239 ;;		_tlc5947_latch
 11240 ;;		_ProcessCDC
 11241 ;; This function uses a non-reentrant model
 11242 ;;
 11243                           
 11244                           	psect	text46
 11245  0033A4                     __ptext46:
 11246                           	opt stack 0
 11247  0033A4                     _Delay10TCYx:
 11248                           	opt stack 22
 11249                           
 11250                           ;incstack = 0
 11251                           ;Delay10TCYx@unit stored from wreg
 11252  0033A4  0100               	movlb	0	; () banked
 11253  0033A6  6FB4               	movwf	Delay10TCYx@unit& (0+255),b
 11254  0033A8                     
 11255                           ; BSR set to: 0
 11256  0033A8  0E03               	movlw	3
 11257  0033AA                     u7007:
 11258  0033AA  2EE8               	decfsz	wreg,f,c
 11259  0033AC  D7FE               	goto	u7007
 11260  0033AE  F000               	nop	
 11261  0033B0  0100               	movlb	0	; () banked
 11262  0033B2  2FB4               	decfsz	Delay10TCYx@unit& (0+255),f,b
 11263  0033B4  D7F9               	goto	l6125
 11264  0033B6  0012               	return	
 11265                           
 11266                           ; BSR set to: 0
 11267                           
 11268                           ; BSR set to: 0
 11269  0033B8  0012               	return		;funcret
 11270  0033BA                     __end_of_Delay10TCYx:
 11271                           	opt stack 0
 11272                           tblptru	equ	0xFF8
 11273                           tblptrh	equ	0xFF7
 11274                           tblptrl	equ	0xFF6
 11275                           tablat	equ	0xFF5
 11276                           prodh	equ	0xFF4
 11277                           prodl	equ	0xFF3
 11278                           intcon	equ	0xFF2
 11279                           postinc0	equ	0xFEE
 11280                           wreg	equ	0xFE8
 11281                           indf1	equ	0xFE7
 11282                           postdec1	equ	0xFE5
 11283                           fsr1h	equ	0xFE2
 11284                           fsr1l	equ	0xFE1
 11285                           indf2	equ	0xFDF
 11286                           postinc2	equ	0xFDE
 11287                           postdec2	equ	0xFDD
 11288                           plusw2	equ	0xFDB
 11289                           fsr2h	equ	0xFDA
 11290                           fsr2l	equ	0xFD9
 11291                           status	equ	0xFD8
 11292                           
 11293 ;; *************** function _Delay100TCYx *****************
 11294 ;; Defined at:
 11295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  unit            1    wreg     unsigned char 
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;  unit            1    0[BANK0 ] unsigned char 
 11300 ;; Return value:  Size  Location     Type
 11301 ;;		None               void
 11302 ;; Registers used:
 11303 ;;		wreg
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/0
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11309 ;;      Params:         0       0       0       0       0       0       0       0       0
 11310 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11311 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11312 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11313 ;;Total ram usage:        1 bytes
 11314 ;; Hardware stack levels used:    1
 11315 ;; Hardware stack levels required when called:    4
 11316 ;; This function calls:
 11317 ;;		Nothing
 11318 ;; This function is called by:
 11319 ;;		_tlc5947_latch
 11320 ;; This function uses a non-reentrant model
 11321 ;;
 11322                           
 11323                           	psect	text47
 11324  0033BA                     __ptext47:
 11325                           	opt stack 0
 11326  0033BA                     _Delay100TCYx:
 11327                           	opt stack 22
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;incstack = 0
 11331                           ;Delay100TCYx@unit stored from wreg
 11332  0033BA  0100               	movlb	0	; () banked
 11333  0033BC  6FB4               	movwf	Delay100TCYx@unit& (0+255),b
 11334  0033BE                     
 11335                           ; BSR set to: 0
 11336  0033BE  0E21               	movlw	33
 11337  0033C0                     u7017:
 11338  0033C0  2EE8               	decfsz	wreg,f,c
 11339  0033C2  D7FE               	goto	u7017
 11340  0033C4  F000               	nop	
 11341  0033C6  0100               	movlb	0	; () banked
 11342  0033C8  2FB4               	decfsz	Delay100TCYx@unit& (0+255),f,b
 11343  0033CA  D7F9               	goto	l6129
 11344  0033CC  0012               	return	
 11345                           
 11346                           ; BSR set to: 0
 11347                           
 11348                           ; BSR set to: 0
 11349  0033CE  0012               	return		;funcret
 11350  0033D0                     __end_of_Delay100TCYx:
 11351                           	opt stack 0
 11352                           tblptru	equ	0xFF8
 11353                           tblptrh	equ	0xFF7
 11354                           tblptrl	equ	0xFF6
 11355                           tablat	equ	0xFF5
 11356                           prodh	equ	0xFF4
 11357                           prodl	equ	0xFF3
 11358                           intcon	equ	0xFF2
 11359                           postinc0	equ	0xFEE
 11360                           wreg	equ	0xFE8
 11361                           indf1	equ	0xFE7
 11362                           postdec1	equ	0xFE5
 11363                           fsr1h	equ	0xFE2
 11364                           fsr1l	equ	0xFE1
 11365                           indf2	equ	0xFDF
 11366                           postinc2	equ	0xFDE
 11367                           postdec2	equ	0xFDD
 11368                           plusw2	equ	0xFDB
 11369                           fsr2h	equ	0xFDA
 11370                           fsr2l	equ	0xFD9
 11371                           status	equ	0xFD8
 11372                           
 11373 ;; *************** function ___lwdiv *****************
 11374 ;; Defined at:
 11375 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  dividend        2    0[BANK0 ] unsigned int 
 11378 ;;  divisor         2    2[BANK0 ] unsigned int 
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;  quotient        2    5[BANK0 ] unsigned int 
 11381 ;;  counter         1    4[BANK0 ] unsigned char 
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  2    0[BANK0 ] unsigned int 
 11384 ;; Registers used:
 11385 ;;		wreg, status,2, status,0
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11391 ;;      Params:         0       4       0       0       0       0       0       0       0
 11392 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11394 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11395 ;;Total ram usage:        7 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; Hardware stack levels required when called:    4
 11398 ;; This function calls:
 11399 ;;		Nothing
 11400 ;; This function is called by:
 11401 ;;		_tlc5947_pwm_readback
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text48
 11406  002C00                     __ptext48:
 11407                           	opt stack 0
 11408  002C00                     ___lwdiv:
 11409                           	opt stack 23
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;incstack = 0
 11413  002C00  0E00               	movlw	0
 11414  002C02  0100               	movlb	0	; () banked
 11415  002C04  6FBA               	movwf	(___lwdiv@quotient+1)& (0+255),b
 11416  002C06  0E00               	movlw	0
 11417  002C08  6FB9               	movwf	___lwdiv@quotient& (0+255),b
 11418                           
 11419                           ; BSR set to: 0
 11420  002C0A  0100               	movlb	0	; () banked
 11421  002C0C  51B6               	movf	___lwdiv@divisor& (0+255),w,b
 11422  002C0E  0100               	movlb	0	; () banked
 11423  002C10  11B7               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11424  002C12  B4D8               	btfsc	status,2,c
 11425  002C14  D031               	goto	l1652
 11426                           
 11427                           ; BSR set to: 0
 11428  002C16  0E01               	movlw	1
 11429  002C18  0100               	movlb	0	; () banked
 11430  002C1A  6FB8               	movwf	___lwdiv@counter& (0+255),b
 11431  002C1C  D007               	goto	l6563
 11432  002C1E                     l6561:
 11433                           
 11434                           ; BSR set to: 0
 11435  002C1E  0100               	movlb	0	; () banked
 11436  002C20  90D8               	bcf	status,0,c
 11437  002C22  37B6               	rlcf	___lwdiv@divisor& (0+255),f,b
 11438  002C24  37B7               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11439  002C26  0100               	movlb	0	; () banked
 11440  002C28  2BB8               	incf	___lwdiv@counter& (0+255),f,b
 11441  002C2A  D000               	goto	l6563
 11442  002C2C                     l6563:
 11443                           
 11444                           ; BSR set to: 0
 11445  002C2C  0100               	movlb	0	; () banked
 11446  002C2E  BFB7               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
 11447  002C30  D002               	goto	l6565
 11448  002C32  D7F5               	goto	l6561
 11449                           
 11450                           ; BSR set to: 0
 11451  002C34  D000               	goto	l6565
 11452  002C36                     l6565:
 11453                           
 11454                           ; BSR set to: 0
 11455  002C36  0100               	movlb	0	; () banked
 11456  002C38  90D8               	bcf	status,0,c
 11457  002C3A  37B9               	rlcf	___lwdiv@quotient& (0+255),f,b
 11458  002C3C  37BA               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11459                           
 11460                           ; BSR set to: 0
 11461  002C3E  0100               	movlb	0	; () banked
 11462  002C40  51B6               	movf	___lwdiv@divisor& (0+255),w,b
 11463  002C42  0100               	movlb	0	; () banked
 11464  002C44  5DB4               	subwf	___lwdiv@dividend& (0+255),w,b
 11465  002C46  0100               	movlb	0	; () banked
 11466  002C48  51B7               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11467  002C4A  0100               	movlb	0	; () banked
 11468  002C4C  59B5               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11469  002C4E  A0D8               	btfss	status,0,c
 11470  002C50  D00B               	goto	l6573
 11471                           
 11472                           ; BSR set to: 0
 11473  002C52  0100               	movlb	0	; () banked
 11474  002C54  51B6               	movf	___lwdiv@divisor& (0+255),w,b
 11475  002C56  0100               	movlb	0	; () banked
 11476  002C58  5FB4               	subwf	___lwdiv@dividend& (0+255),f,b
 11477  002C5A  0100               	movlb	0	; () banked
 11478  002C5C  51B7               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11479  002C5E  0100               	movlb	0	; () banked
 11480  002C60  5BB5               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11481                           
 11482                           ; BSR set to: 0
 11483  002C62  0100               	movlb	0	; () banked
 11484  002C64  81B9               	bsf	___lwdiv@quotient& (0+255),0,b
 11485  002C66  D000               	goto	l6573
 11486  002C68                     l6573:
 11487                           
 11488                           ; BSR set to: 0
 11489  002C68  0100               	movlb	0	; () banked
 11490  002C6A  90D8               	bcf	status,0,c
 11491  002C6C  33B7               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11492  002C6E  33B6               	rrcf	___lwdiv@divisor& (0+255),f,b
 11493                           
 11494                           ; BSR set to: 0
 11495  002C70  0100               	movlb	0	; () banked
 11496  002C72  2FB8               	decfsz	___lwdiv@counter& (0+255),f,b
 11497  002C74  D7E0               	goto	l6565
 11498  002C76  D000               	goto	l1652
 11499  002C78                     l1652:
 11500                           
 11501                           ; BSR set to: 0
 11502  002C78  C0B9  F0B4         	movff	___lwdiv@quotient,?___lwdiv
 11503  002C7C  C0BA  F0B5         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11504                           
 11505                           ; BSR set to: 0
 11506  002C80  0012               	return		;funcret
 11507  002C82                     __end_of___lwdiv:
 11508                           	opt stack 0
 11509                           tblptru	equ	0xFF8
 11510                           tblptrh	equ	0xFF7
 11511                           tblptrl	equ	0xFF6
 11512                           tablat	equ	0xFF5
 11513                           prodh	equ	0xFF4
 11514                           prodl	equ	0xFF3
 11515                           intcon	equ	0xFF2
 11516                           postinc0	equ	0xFEE
 11517                           wreg	equ	0xFE8
 11518                           indf1	equ	0xFE7
 11519                           postdec1	equ	0xFE5
 11520                           fsr1h	equ	0xFE2
 11521                           fsr1l	equ	0xFE1
 11522                           indf2	equ	0xFDF
 11523                           postinc2	equ	0xFDE
 11524                           postdec2	equ	0xFDD
 11525                           plusw2	equ	0xFDB
 11526                           fsr2h	equ	0xFDA
 11527                           fsr2l	equ	0xFD9
 11528                           status	equ	0xFD8
 11529                           
 11530 ;; *************** function _tlc5947_count_channels *****************
 11531 ;; Defined at:
 11532 ;;		line 93 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;		None
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  pos             1   10[BANK0 ] unsigned char 
 11537 ;;  data            1    9[BANK0 ] unsigned char 
 11538 ;;  old_data        1    8[BANK0 ] unsigned char 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;		None               void
 11541 ;; Registers used:
 11542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11548 ;;      Params:         0       0       0       0       0       0       0       0       0
 11549 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11550 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11551 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11552 ;;Total ram usage:        3 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:    6
 11555 ;; This function calls:
 11556 ;;		_ReadSPI1
 11557 ;;		_WriteSPI1
 11558 ;;		___awdiv
 11559 ;;		_tlc5947_update
 11560 ;; This function is called by:
 11561 ;;		_InitializeSystem
 11562 ;;		_ProcessCDC
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           	psect	text49
 11567  002C82                     __ptext49:
 11568                           	opt stack 0
 11569  002C82                     _tlc5947_count_channels:
 11570                           	opt stack 22
 11571                           
 11572                           ;tlc5947.c: 95: uint8_t pos, data, old_data;
 11573                           ;tlc5947.c: 97: tlc_request = -1;
 11574                           
 11575                           ; BSR set to: 0
 11576                           ;incstack = 0
 11577  002C82  683C               	setf	_tlc_request,c
 11578                           
 11579                           ;tlc5947.c: 100: tlc_nbytes = 72;
 11580  002C84  0E48               	movlw	72
 11581  002C86  6E44               	movwf	_tlc_nbytes,c
 11582                           
 11583                           ;tlc5947.c: 103: WriteSPI1(tcl5947_testbyte0);
 11584  002C88  0100               	movlb	0	; () banked
 11585  002C8A  51F7               	movf	_tcl5947_testbyte0& (0+255),w,b
 11586  002C8C  EC81  F019         	call	_WriteSPI1
 11587                           
 11588                           ;tlc5947.c: 104: WriteSPI1(tcl5947_testbyte1);
 11589  002C90  0100               	movlb	0	; () banked
 11590  002C92  51F8               	movf	_tcl5947_testbyte1& (0+255),w,b
 11591  002C94  EC81  F019         	call	_WriteSPI1
 11592                           
 11593                           ;tlc5947.c: 107: for (pos = 1; pos <= 72; pos++) {
 11594  002C98  0E01               	movlw	1
 11595  002C9A  0100               	movlb	0	; () banked
 11596  002C9C  6FBE               	movwf	tlc5947_count_channels@pos& (0+255),b
 11597  002C9E                     l6585:
 11598                           
 11599                           ; BSR set to: 0
 11600  002C9E  0E48               	movlw	72
 11601  002CA0  0100               	movlb	0	; () banked
 11602  002CA2  65BE               	cpfsgt	tlc5947_count_channels@pos& (0+255),b
 11603  002CA4  D001               	goto	l6589
 11604                           
 11605                           ; BSR set to: 0
 11606  002CA6  D018               	goto	l6601
 11607  002CA8                     l6589:
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;tlc5947.c: 108: data = ReadSPI1();
 11611  002CA8  ECE8  F019         	call	_ReadSPI1	;wreg free
 11612  002CAC  0100               	movlb	0	; () banked
 11613  002CAE  6FBD               	movwf	tlc5947_count_channels@data& (0+255),b
 11614                           
 11615                           ; BSR set to: 0
 11616                           ;tlc5947.c: 109: if ((data == tcl5947_testbyte1) && (old_data == tcl5947_testbyte0)) {
 11617  002CB0  0100               	movlb	0	; () banked
 11618  002CB2  51F8               	movf	_tcl5947_testbyte1& (0+255),w,b
 11619  002CB4  0100               	movlb	0	; () banked
 11620  002CB6  19BD               	xorwf	tlc5947_count_channels@data& (0+255),w,b
 11621  002CB8  A4D8               	btfss	status,2,c
 11622  002CBA  D009               	goto	l288
 11623                           
 11624                           ; BSR set to: 0
 11625  002CBC  0100               	movlb	0	; () banked
 11626  002CBE  51F7               	movf	_tcl5947_testbyte0& (0+255),w,b
 11627  002CC0  0100               	movlb	0	; () banked
 11628  002CC2  19BC               	xorwf	tlc5947_count_channels@old_data& (0+255),w,b
 11629  002CC4  A4D8               	btfss	status,2,c
 11630  002CC6  D003               	goto	l288
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;tlc5947.c: 110: tlc_nbytes = pos;
 11634  002CC8  C0BE  F044         	movff	tlc5947_count_channels@pos,_tlc_nbytes
 11635                           
 11636                           ;tlc5947.c: 111: break;
 11637  002CCC  D005               	goto	l6601
 11638  002CCE                     l288:
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;tlc5947.c: 112: }
 11642                           ;tlc5947.c: 113: old_data = data;
 11643  002CCE  C0BD  F0BC         	movff	tlc5947_count_channels@data,tlc5947_count_channels@old_data
 11644                           
 11645                           ; BSR set to: 0
 11646  002CD2  0100               	movlb	0	; () banked
 11647  002CD4  2BBE               	incf	tlc5947_count_channels@pos& (0+255),f,b
 11648  002CD6  D7E3               	goto	l6585
 11649  002CD8                     l6601:
 11650                           
 11651                           ; BSR set to: 0
 11652                           ;tlc5947.c: 114: }
 11653                           ;tlc5947.c: 115: tlc5947_update();
 11654  002CD8  ECCD  F018         	call	_tlc5947_update	;wreg free
 11655                           
 11656                           ;tlc5947.c: 116: tlc_nchannels = tlc_nbytes * 2 / 3;
 11657  002CDC  5044               	movf	_tlc_nbytes,w,c
 11658  002CDE  0D02               	mullw	2
 11659  002CE0  CFF3 F0B4          	movff	prodl,___awdiv@dividend
 11660  002CE4  CFF4 F0B5          	movff	prodh,___awdiv@dividend+1
 11661  002CE8  0E00               	movlw	0
 11662  002CEA  0100               	movlb	0	; () banked
 11663  002CEC  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
 11664  002CEE  0E03               	movlw	3
 11665  002CF0  6FB6               	movwf	___awdiv@divisor& (0+255),b
 11666  002CF2  EC85  F012         	call	___awdiv	;wreg free
 11667  002CF6  0100               	movlb	0	; () banked
 11668  002CF8  51B4               	movf	?___awdiv& (0+255),w,b
 11669  002CFA  0100               	movlb	0	; () banked
 11670  002CFC  6FF9               	movwf	_tlc_nchannels& (0+255),b
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;tlc5947.c: 117: tlc_request = 0;
 11674  002CFE  0E00               	movlw	0
 11675  002D00  6E3C               	movwf	_tlc_request,c
 11676                           
 11677                           ; BSR set to: 0
 11678  002D02  0012               	return		;funcret
 11679  002D04                     __end_of_tlc5947_count_channels:
 11680                           	opt stack 0
 11681                           tblptru	equ	0xFF8
 11682                           tblptrh	equ	0xFF7
 11683                           tblptrl	equ	0xFF6
 11684                           tablat	equ	0xFF5
 11685                           prodh	equ	0xFF4
 11686                           prodl	equ	0xFF3
 11687                           intcon	equ	0xFF2
 11688                           postinc0	equ	0xFEE
 11689                           wreg	equ	0xFE8
 11690                           indf1	equ	0xFE7
 11691                           postdec1	equ	0xFE5
 11692                           fsr1h	equ	0xFE2
 11693                           fsr1l	equ	0xFE1
 11694                           indf2	equ	0xFDF
 11695                           postinc2	equ	0xFDE
 11696                           postdec2	equ	0xFDD
 11697                           plusw2	equ	0xFDB
 11698                           fsr2h	equ	0xFDA
 11699                           fsr2l	equ	0xFD9
 11700                           status	equ	0xFD8
 11701                           
 11702 ;; *************** function _tlc5947_update *****************
 11703 ;; Defined at:
 11704 ;;		line 167 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;  x               1    2[BANK0 ] unsigned char 
 11709 ;; Return value:  Size  Location     Type
 11710 ;;		None               void
 11711 ;; Registers used:
 11712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0
 11719 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11721 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11722 ;;Total ram usage:        1 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; Hardware stack levels required when called:    5
 11725 ;; This function calls:
 11726 ;;		_WriteSPI1
 11727 ;; This function is called by:
 11728 ;;		_tlc5947_count_channels
 11729 ;;		_tlc5947_pwm_readback
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text50
 11734  00319A                     __ptext50:
 11735                           	opt stack 0
 11736  00319A                     _tlc5947_update:
 11737                           	opt stack 22
 11738                           
 11739                           ;tlc5947.c: 169: uint8_t x;
 11740                           ;tlc5947.c: 171: for (x = 0; x < tlc_nbytes; x++) {
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;incstack = 0
 11744  00319A  0E00               	movlw	0
 11745  00319C  0100               	movlb	0	; () banked
 11746  00319E  6FB6               	movwf	tlc5947_update@x& (0+255),b
 11747  0031A0  D00F               	goto	l6281
 11748  0031A2                     l6277:
 11749                           
 11750                           ; BSR set to: 0
 11751                           ;tlc5947.c: 172: WriteSPI1(tlc_memory[x]);
 11752  0031A2  0100               	movlb	0	; () banked
 11753  0031A4  51B6               	movf	tlc5947_update@x& (0+255),w,b
 11754  0031A6  0D01               	mullw	1
 11755  0031A8  0E80               	movlw	low _tlc_memory
 11756  0031AA  24F3               	addwf	prodl,w,c
 11757  0031AC  6ED9               	movwf	fsr2l,c
 11758  0031AE  0E01               	movlw	high _tlc_memory
 11759  0031B0  20F4               	addwfc	prodh,w,c
 11760  0031B2  6EDA               	movwf	fsr2h,c
 11761  0031B4  50DF               	movf	indf2,w,c
 11762  0031B6  EC81  F019         	call	_WriteSPI1
 11763  0031BA  0100               	movlb	0	; () banked
 11764  0031BC  2BB6               	incf	tlc5947_update@x& (0+255),f,b
 11765  0031BE  D000               	goto	l6281
 11766  0031C0                     l6281:
 11767                           
 11768                           ; BSR set to: 0
 11769  0031C0  5044               	movf	_tlc_nbytes,w,c
 11770  0031C2  0100               	movlb	0	; () banked
 11771  0031C4  5DB6               	subwf	tlc5947_update@x& (0+255),w,b
 11772  0031C6  A0D8               	btfss	status,0,c
 11773  0031C8  D7EC               	goto	l6277
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;tlc5947.c: 173: }
 11777                           ;tlc5947.c: 174: tlc_request = 0;
 11778                           
 11779                           ; BSR set to: 0
 11780  0031CA  0E00               	movlw	0
 11781  0031CC  6E3C               	movwf	_tlc_request,c
 11782                           
 11783                           ; BSR set to: 0
 11784  0031CE  0012               	return		;funcret
 11785  0031D0                     __end_of_tlc5947_update:
 11786                           	opt stack 0
 11787                           tblptru	equ	0xFF8
 11788                           tblptrh	equ	0xFF7
 11789                           tblptrl	equ	0xFF6
 11790                           tablat	equ	0xFF5
 11791                           prodh	equ	0xFF4
 11792                           prodl	equ	0xFF3
 11793                           intcon	equ	0xFF2
 11794                           postinc0	equ	0xFEE
 11795                           wreg	equ	0xFE8
 11796                           indf1	equ	0xFE7
 11797                           postdec1	equ	0xFE5
 11798                           fsr1h	equ	0xFE2
 11799                           fsr1l	equ	0xFE1
 11800                           indf2	equ	0xFDF
 11801                           postinc2	equ	0xFDE
 11802                           postdec2	equ	0xFDD
 11803                           plusw2	equ	0xFDB
 11804                           fsr2h	equ	0xFDA
 11805                           fsr2l	equ	0xFD9
 11806                           status	equ	0xFD8
 11807                           
 11808 ;; *************** function _WriteSPI1 *****************
 11809 ;; Defined at:
 11810 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1writ.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;  data_out        1    wreg     unsigned char 
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;  data_out        1    1[BANK0 ] unsigned char 
 11815 ;;  TempVar         1    0[BANK0 ] unsigned char 
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      char 
 11818 ;; Registers used:
 11819 ;;		wreg
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0
 11826 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11828 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11829 ;;Total ram usage:        2 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:    4
 11832 ;; This function calls:
 11833 ;;		Nothing
 11834 ;; This function is called by:
 11835 ;;		_tlc5947_count_channels
 11836 ;;		_tlc5947_update
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text51
 11841  003302                     __ptext51:
 11842                           	opt stack 0
 11843  003302                     _WriteSPI1:
 11844                           	opt stack 22
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;incstack = 0
 11848                           ;WriteSPI1@data_out stored from wreg
 11849  003302  0100               	movlb	0	; () banked
 11850  003304  6FB5               	movwf	WriteSPI1@data_out& (0+255),b
 11851                           
 11852                           ; BSR set to: 0
 11853  003306  CFC9 F0B4          	movff	4041,WriteSPI1@TempVar	;volatile
 11854  00330A  969E               	bcf	3998,3,c	;volatile
 11855  00330C  9EC6               	bcf	4038,7,c	;volatile
 11856                           
 11857                           ; BSR set to: 0
 11858  00330E  C0B5  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
 11859                           
 11860                           ; BSR set to: 0
 11861  003312  BEC6               	btfsc	4038,7,c	;volatile
 11862  003314  0012               	return	
 11863  003316  D002               	goto	l1076
 11864                           
 11865                           ; BSR set to: 0
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;	Return value of _WriteSPI1 is never used
 11869  003318  0012               	return	
 11870                           
 11871                           ; BSR set to: 0
 11872  00331A  D000               	goto	l1076
 11873  00331C                     l1076:
 11874  00331C  B69E               	btfsc	3998,3,c	;volatile
 11875  00331E  0012               	return	
 11876  003320  D7FD               	goto	l1076
 11877  003322  0012               	return	
 11878                           
 11879                           ;	Return value of _WriteSPI1 is never used
 11880  003324  0012               	return		;funcret
 11881  003326                     __end_of_WriteSPI1:
 11882                           	opt stack 0
 11883                           tblptru	equ	0xFF8
 11884                           tblptrh	equ	0xFF7
 11885                           tblptrl	equ	0xFF6
 11886                           tablat	equ	0xFF5
 11887                           prodh	equ	0xFF4
 11888                           prodl	equ	0xFF3
 11889                           intcon	equ	0xFF2
 11890                           postinc0	equ	0xFEE
 11891                           wreg	equ	0xFE8
 11892                           indf1	equ	0xFE7
 11893                           postdec1	equ	0xFE5
 11894                           fsr1h	equ	0xFE2
 11895                           fsr1l	equ	0xFE1
 11896                           indf2	equ	0xFDF
 11897                           postinc2	equ	0xFDE
 11898                           postdec2	equ	0xFDD
 11899                           plusw2	equ	0xFDB
 11900                           fsr2h	equ	0xFDA
 11901                           fsr2l	equ	0xFD9
 11902                           status	equ	0xFD8
 11903                           
 11904 ;; *************** function ___awdiv *****************
 11905 ;; Defined at:
 11906 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;  dividend        2    0[BANK0 ] int 
 11909 ;;  divisor         2    2[BANK0 ] int 
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;  quotient        2    6[BANK0 ] int 
 11912 ;;  sign            1    5[BANK0 ] unsigned char 
 11913 ;;  counter         1    4[BANK0 ] unsigned char 
 11914 ;; Return value:  Size  Location     Type
 11915 ;;                  2    0[BANK0 ] int 
 11916 ;; Registers used:
 11917 ;;		wreg, status,2, status,0
 11918 ;; Tracked objects:
 11919 ;;		On entry : 0/0
 11920 ;;		On exit  : 0/0
 11921 ;;		Unchanged: 0/0
 11922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11923 ;;      Params:         0       4       0       0       0       0       0       0       0
 11924 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11926 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11927 ;;Total ram usage:        8 bytes
 11928 ;; Hardware stack levels used:    1
 11929 ;; Hardware stack levels required when called:    4
 11930 ;; This function calls:
 11931 ;;		Nothing
 11932 ;; This function is called by:
 11933 ;;		_tlc5947_setChannel
 11934 ;;		_tlc5947_count_channels
 11935 ;; This function uses a non-reentrant model
 11936 ;;
 11937                           
 11938                           	psect	text52
 11939  00250A                     __ptext52:
 11940                           	opt stack 0
 11941  00250A                     ___awdiv:
 11942                           	opt stack 24
 11943                           
 11944                           ;incstack = 0
 11945  00250A  0E00               	movlw	0
 11946  00250C  0100               	movlb	0	; () banked
 11947  00250E  6FB9               	movwf	___awdiv@sign& (0+255),b
 11948                           
 11949                           ; BSR set to: 0
 11950  002510  0100               	movlb	0	; () banked
 11951  002512  AFB7               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11952  002514  D009               	goto	l6221
 11953                           
 11954                           ; BSR set to: 0
 11955  002516  0100               	movlb	0	; () banked
 11956  002518  6DB6               	negf	___awdiv@divisor& (0+255),b
 11957  00251A  1FB7               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11958  00251C  B0D8               	btfsc	status,0,c
 11959  00251E  2BB7               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11960                           
 11961                           ; BSR set to: 0
 11962  002520  0E01               	movlw	1
 11963  002522  0100               	movlb	0	; () banked
 11964  002524  6FB9               	movwf	___awdiv@sign& (0+255),b
 11965  002526  D000               	goto	l6221
 11966  002528                     l6221:
 11967                           
 11968                           ; BSR set to: 0
 11969  002528  0100               	movlb	0	; () banked
 11970  00252A  AFB5               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11971  00252C  D009               	goto	l6227
 11972                           
 11973                           ; BSR set to: 0
 11974  00252E  0100               	movlb	0	; () banked
 11975  002530  6DB4               	negf	___awdiv@dividend& (0+255),b
 11976  002532  1FB5               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11977  002534  B0D8               	btfsc	status,0,c
 11978  002536  2BB5               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11979                           
 11980                           ; BSR set to: 0
 11981  002538  0E01               	movlw	1
 11982  00253A  0100               	movlb	0	; () banked
 11983  00253C  1BB9               	xorwf	___awdiv@sign& (0+255),f,b
 11984  00253E  D000               	goto	l6227
 11985  002540                     l6227:
 11986                           
 11987                           ; BSR set to: 0
 11988  002540  0E00               	movlw	0
 11989  002542  0100               	movlb	0	; () banked
 11990  002544  6FBB               	movwf	(___awdiv@quotient+1)& (0+255),b
 11991  002546  0E00               	movlw	0
 11992  002548  6FBA               	movwf	___awdiv@quotient& (0+255),b
 11993                           
 11994                           ; BSR set to: 0
 11995  00254A  0100               	movlb	0	; () banked
 11996  00254C  51B6               	movf	___awdiv@divisor& (0+255),w,b
 11997  00254E  0100               	movlb	0	; () banked
 11998  002550  11B7               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11999  002552  B4D8               	btfsc	status,2,c
 12000  002554  D031               	goto	l6249
 12001                           
 12002                           ; BSR set to: 0
 12003  002556  0E01               	movlw	1
 12004  002558  0100               	movlb	0	; () banked
 12005  00255A  6FB8               	movwf	___awdiv@counter& (0+255),b
 12006  00255C  D007               	goto	l6235
 12007  00255E                     l6233:
 12008                           
 12009                           ; BSR set to: 0
 12010  00255E  0100               	movlb	0	; () banked
 12011  002560  90D8               	bcf	status,0,c
 12012  002562  37B6               	rlcf	___awdiv@divisor& (0+255),f,b
 12013  002564  37B7               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12014  002566  0100               	movlb	0	; () banked
 12015  002568  2BB8               	incf	___awdiv@counter& (0+255),f,b
 12016  00256A  D000               	goto	l6235
 12017  00256C                     l6235:
 12018                           
 12019                           ; BSR set to: 0
 12020  00256C  0100               	movlb	0	; () banked
 12021  00256E  BFB7               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 12022  002570  D002               	goto	l6237
 12023  002572  D7F5               	goto	l6233
 12024                           
 12025                           ; BSR set to: 0
 12026  002574  D000               	goto	l6237
 12027  002576                     l6237:
 12028                           
 12029                           ; BSR set to: 0
 12030  002576  0100               	movlb	0	; () banked
 12031  002578  90D8               	bcf	status,0,c
 12032  00257A  37BA               	rlcf	___awdiv@quotient& (0+255),f,b
 12033  00257C  37BB               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12034                           
 12035                           ; BSR set to: 0
 12036  00257E  0100               	movlb	0	; () banked
 12037  002580  51B6               	movf	___awdiv@divisor& (0+255),w,b
 12038  002582  0100               	movlb	0	; () banked
 12039  002584  5DB4               	subwf	___awdiv@dividend& (0+255),w,b
 12040  002586  0100               	movlb	0	; () banked
 12041  002588  51B7               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12042  00258A  0100               	movlb	0	; () banked
 12043  00258C  59B5               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12044  00258E  A0D8               	btfss	status,0,c
 12045  002590  D00B               	goto	l6245
 12046                           
 12047                           ; BSR set to: 0
 12048  002592  0100               	movlb	0	; () banked
 12049  002594  51B6               	movf	___awdiv@divisor& (0+255),w,b
 12050  002596  0100               	movlb	0	; () banked
 12051  002598  5FB4               	subwf	___awdiv@dividend& (0+255),f,b
 12052  00259A  0100               	movlb	0	; () banked
 12053  00259C  51B7               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12054  00259E  0100               	movlb	0	; () banked
 12055  0025A0  5BB5               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12056                           
 12057                           ; BSR set to: 0
 12058  0025A2  0100               	movlb	0	; () banked
 12059  0025A4  81BA               	bsf	___awdiv@quotient& (0+255),0,b
 12060  0025A6  D000               	goto	l6245
 12061  0025A8                     l6245:
 12062                           
 12063                           ; BSR set to: 0
 12064  0025A8  0100               	movlb	0	; () banked
 12065  0025AA  90D8               	bcf	status,0,c
 12066  0025AC  33B7               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12067  0025AE  33B6               	rrcf	___awdiv@divisor& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070  0025B0  0100               	movlb	0	; () banked
 12071  0025B2  2FB8               	decfsz	___awdiv@counter& (0+255),f,b
 12072  0025B4  D7E0               	goto	l6237
 12073                           
 12074                           ; BSR set to: 0
 12075  0025B6  D000               	goto	l6249
 12076  0025B8                     l6249:
 12077                           
 12078                           ; BSR set to: 0
 12079  0025B8  0100               	movlb	0	; () banked
 12080  0025BA  51B9               	movf	___awdiv@sign& (0+255),w,b
 12081  0025BC  0100               	movlb	0	; () banked
 12082  0025BE  B4D8               	btfsc	status,2,c
 12083  0025C0  D006               	goto	l6253
 12084                           
 12085                           ; BSR set to: 0
 12086  0025C2  0100               	movlb	0	; () banked
 12087  0025C4  6DBA               	negf	___awdiv@quotient& (0+255),b
 12088  0025C6  1FBB               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12089  0025C8  B0D8               	btfsc	status,0,c
 12090  0025CA  2BBB               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12091  0025CC  D000               	goto	l6253
 12092  0025CE                     l6253:
 12093                           
 12094                           ; BSR set to: 0
 12095  0025CE  C0BA  F0B4         	movff	___awdiv@quotient,?___awdiv
 12096  0025D2  C0BB  F0B5         	movff	___awdiv@quotient+1,?___awdiv+1
 12097  0025D6  0012               	return	
 12098                           
 12099                           ; BSR set to: 0
 12100                           
 12101                           ; BSR set to: 0
 12102  0025D8  0012               	return		;funcret
 12103  0025DA                     __end_of___awdiv:
 12104                           	opt stack 0
 12105                           tblptru	equ	0xFF8
 12106                           tblptrh	equ	0xFF7
 12107                           tblptrl	equ	0xFF6
 12108                           tablat	equ	0xFF5
 12109                           prodh	equ	0xFF4
 12110                           prodl	equ	0xFF3
 12111                           intcon	equ	0xFF2
 12112                           postinc0	equ	0xFEE
 12113                           wreg	equ	0xFE8
 12114                           indf1	equ	0xFE7
 12115                           postdec1	equ	0xFE5
 12116                           fsr1h	equ	0xFE2
 12117                           fsr1l	equ	0xFE1
 12118                           indf2	equ	0xFDF
 12119                           postinc2	equ	0xFDE
 12120                           postdec2	equ	0xFDD
 12121                           plusw2	equ	0xFDB
 12122                           fsr2h	equ	0xFDA
 12123                           fsr2l	equ	0xFD9
 12124                           status	equ	0xFD8
 12125                           
 12126 ;; *************** function _ReadSPI1 *****************
 12127 ;; Defined at:
 12128 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1read.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;  TempVar         1    0[BANK0 ] unsigned char 
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  1    wreg      unsigned char 
 12135 ;; Registers used:
 12136 ;;		wreg, status,2
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12142 ;;      Params:         0       0       0       0       0       0       0       0       0
 12143 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12145 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12146 ;;Total ram usage:        1 bytes
 12147 ;; Hardware stack levels used:    1
 12148 ;; Hardware stack levels required when called:    4
 12149 ;; This function calls:
 12150 ;;		Nothing
 12151 ;; This function is called by:
 12152 ;;		_tlc5947_count_channels
 12153 ;; This function uses a non-reentrant model
 12154 ;;
 12155                           
 12156                           	psect	text53
 12157  0033D0                     __ptext53:
 12158                           	opt stack 0
 12159  0033D0                     _ReadSPI1:
 12160                           	opt stack 23
 12161                           
 12162                           ; BSR set to: 0
 12163                           ;incstack = 0
 12164  0033D0  CFC9 F0B4          	movff	4041,ReadSPI1@TempVar	;volatile
 12165  0033D4  969E               	bcf	3998,3,c	;volatile
 12166  0033D6  0E00               	movlw	0
 12167  0033D8  6EC9               	movwf	4041,c	;volatile
 12168  0033DA  D000               	goto	l1059
 12169  0033DC                     l1059:
 12170  0033DC  A69E               	btfss	3998,3,c	;volatile
 12171  0033DE  D7FE               	goto	l1059
 12172  0033E0  50C9               	movf	4041,w,c	;volatile
 12173  0033E2  0012               	return	
 12174  0033E4  0012               	return		;funcret
 12175  0033E6                     __end_of_ReadSPI1:
 12176                           	opt stack 0
 12177                           tblptru	equ	0xFF8
 12178                           tblptrh	equ	0xFF7
 12179                           tblptrl	equ	0xFF6
 12180                           tablat	equ	0xFF5
 12181                           prodh	equ	0xFF4
 12182                           prodl	equ	0xFF3
 12183                           intcon	equ	0xFF2
 12184                           postinc0	equ	0xFEE
 12185                           wreg	equ	0xFE8
 12186                           indf1	equ	0xFE7
 12187                           postdec1	equ	0xFE5
 12188                           fsr1h	equ	0xFE2
 12189                           fsr1l	equ	0xFE1
 12190                           indf2	equ	0xFDF
 12191                           postinc2	equ	0xFDE
 12192                           postdec2	equ	0xFDD
 12193                           plusw2	equ	0xFDB
 12194                           fsr2h	equ	0xFDA
 12195                           fsr2l	equ	0xFD9
 12196                           status	equ	0xFD8
 12197                           
 12198 ;; *************** function _readDeviceID *****************
 12199 ;; Defined at:
 12200 ;;		line 154 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;		None
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;  pic18_devid     2    6[BANK0 ] unsigned int 
 12205 ;;  devID2          1    9[BANK0 ] unsigned char 
 12206 ;;  devID1          1    8[BANK0 ] unsigned char 
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  2    0[BANK0 ] unsigned int 
 12209 ;; Registers used:
 12210 ;;		wreg, status,2, status,0
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12216 ;;      Params:         0       2       0       0       0       0       0       0       0
 12217 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12218 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12219 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12220 ;;Total ram usage:       10 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; Hardware stack levels required when called:    4
 12223 ;; This function calls:
 12224 ;;		Nothing
 12225 ;; This function is called by:
 12226 ;;		_InitializeSystem
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           	psect	text54
 12231  002D7C                     __ptext54:
 12232                           	opt stack 0
 12233  002D7C                     _readDeviceID:
 12234                           	opt stack 25
 12235                           
 12236                           ;karate.c: 156: uint8_t devID1, devID2;
 12237                           ;karate.c: 157: uint16_t pic18_devid;
 12238                           ;karate.c: 159: TBLPTRU = 0x3F;
 12239                           
 12240                           ;incstack = 0
 12241  002D7C  0E3F               	movlw	63
 12242  002D7E  6EF8               	movwf	tblptru,c	;volatile
 12243                           
 12244                           ;karate.c: 160: TBLPTRH = 0xFF;
 12245  002D80  68F7               	setf	tblptrh,c	;volatile
 12246                           
 12247                           ;karate.c: 161: TBLPTRL = 0xFE;
 12248  002D82  0EFE               	movlw	254
 12249  002D84  6EF6               	movwf	tblptrl,c	;volatile
 12250  002D86  0008               	tblrd		*	;# 
 12251                           
 12252                           ;karate.c: 163: devID1 = TABLAT;
 12253  002D88  CFF5 F0BC          	movff	tablat,readDeviceID@devID1	;volatile
 12254                           
 12255                           ;karate.c: 165: TBLPTRL = 0xFF;
 12256  002D8C  68F6               	setf	tblptrl,c	;volatile
 12257  002D8E  0008               	tblrd		*	;# 
 12258                           
 12259                           ;karate.c: 167: devID2 = TABLAT;
 12260  002D90  CFF5 F0BD          	movff	tablat,readDeviceID@devID2	;volatile
 12261                           
 12262                           ;karate.c: 169: pic18_devid = ((uint16_t)devID2 << 3) | (devID1 >> 5);
 12263  002D94  C0BC  F0B6         	movff	readDeviceID@devID1,??_readDeviceID
 12264  002D98  0E05               	movlw	5
 12265  002D9A  0100               	movlb	0	; () banked
 12266  002D9C  6FB7               	movwf	(??_readDeviceID+1)& (0+255),b
 12267  002D9E                     u6515:
 12268  002D9E  0100               	movlb	0	; () banked
 12269  002DA0  90D8               	bcf	status,0,c
 12270  002DA2  33B6               	rrcf	??_readDeviceID& (0+255),f,b
 12271  002DA4  0100               	movlb	0	; () banked
 12272  002DA6  2FB7               	decfsz	(??_readDeviceID+1)& (0+255),f,b
 12273  002DA8  D7FA               	goto	u6515
 12274  002DAA  0100               	movlb	0	; () banked
 12275  002DAC  51B6               	movf	??_readDeviceID& (0+255),w,b
 12276  002DAE  C0BD  F0B8         	movff	readDeviceID@devID2,??_readDeviceID+2
 12277  002DB2  0100               	movlb	0	; () banked
 12278  002DB4  6BB9               	clrf	(??_readDeviceID+3)& (0+255),b
 12279  002DB6  0100               	movlb	0	; () banked
 12280  002DB8  90D8               	bcf	status,0,c
 12281  002DBA  37B8               	rlcf	(??_readDeviceID+2)& (0+255),f,b
 12282  002DBC  37B9               	rlcf	(??_readDeviceID+3)& (0+255),f,b
 12283  002DBE  0100               	movlb	0	; () banked
 12284  002DC0  90D8               	bcf	status,0,c
 12285  002DC2  37B8               	rlcf	(??_readDeviceID+2)& (0+255),f,b
 12286  002DC4  37B9               	rlcf	(??_readDeviceID+3)& (0+255),f,b
 12287  002DC6  0100               	movlb	0	; () banked
 12288  002DC8  90D8               	bcf	status,0,c
 12289  002DCA  37B8               	rlcf	(??_readDeviceID+2)& (0+255),f,b
 12290  002DCC  37B9               	rlcf	(??_readDeviceID+3)& (0+255),f,b
 12291  002DCE  0100               	movlb	0	; () banked
 12292  002DD0  11B8               	iorwf	(??_readDeviceID+2)& (0+255),w,b
 12293  002DD2  0100               	movlb	0	; () banked
 12294  002DD4  6FBA               	movwf	readDeviceID@pic18_devid& (0+255),b
 12295  002DD6  0100               	movlb	0	; () banked
 12296  002DD8  51B9               	movf	(??_readDeviceID+3)& (0+255),w,b
 12297  002DDA  0100               	movlb	0	; () banked
 12298  002DDC  6FBB               	movwf	(readDeviceID@pic18_devid+1)& (0+255),b
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;karate.c: 170: return pic18_devid;
 12302  002DDE  C0BA  F0B4         	movff	readDeviceID@pic18_devid,?_readDeviceID
 12303  002DE2  C0BB  F0B5         	movff	readDeviceID@pic18_devid+1,?_readDeviceID+1
 12304  002DE6  0012               	return	
 12305                           
 12306                           ; BSR set to: 0
 12307                           
 12308                           ; BSR set to: 0
 12309  002DE8  0012               	return		;funcret
 12310  002DEA                     __end_of_readDeviceID:
 12311                           	opt stack 0
 12312                           tblptru	equ	0xFF8
 12313                           tblptrh	equ	0xFF7
 12314                           tblptrl	equ	0xFF6
 12315                           tablat	equ	0xFF5
 12316                           prodh	equ	0xFF4
 12317                           prodl	equ	0xFF3
 12318                           intcon	equ	0xFF2
 12319                           postinc0	equ	0xFEE
 12320                           wreg	equ	0xFE8
 12321                           indf1	equ	0xFE7
 12322                           postdec1	equ	0xFE5
 12323                           fsr1h	equ	0xFE2
 12324                           fsr1l	equ	0xFE1
 12325                           indf2	equ	0xFDF
 12326                           postinc2	equ	0xFDE
 12327                           postdec2	equ	0xFDD
 12328                           plusw2	equ	0xFDB
 12329                           fsr2h	equ	0xFDA
 12330                           fsr2l	equ	0xFD9
 12331                           status	equ	0xFD8
 12332                           
 12333 ;; *************** function _USBDeviceInit *****************
 12334 ;; Defined at:
 12335 ;;		line 298 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/usb/src/usb_device.c"
 12336 ;; Parameters:    Size  Location     Type
 12337 ;;		None
 12338 ;; Auto vars:     Size  Location     Type
 12339 ;;  i               1    8[BANK0 ] unsigned char 
 12340 ;; Return value:  Size  Location     Type
 12341 ;;		None               void
 12342 ;; Registers used:
 12343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12344 ;; Tracked objects:
 12345 ;;		On entry : 0/0
 12346 ;;		On exit  : 0/0
 12347 ;;		Unchanged: 0/0
 12348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12349 ;;      Params:         0       0       0       0       0       0       0       0       0
 12350 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12351 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12352 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12353 ;;Total ram usage:        1 bytes
 12354 ;; Hardware stack levels used:    1
 12355 ;; Hardware stack levels required when called:    5
 12356 ;; This function calls:
 12357 ;;		_memset
 12358 ;; This function is called by:
 12359 ;;		_InitializeSystem
 12360 ;;		_USBDeviceTasks
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           	psect	text55
 12365  00175A                     __ptext55:
 12366                           	opt stack 0
 12367  00175A                     _USBDeviceInit:
 12368                           	opt stack 23
 12369                           
 12370                           ;usb_device.c: 300: uint8_t i;
 12371                           ;usb_device.c: 302: {PIE3bits.USBIE = 0;};
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;incstack = 0
 12375  00175A  94A3               	bcf	4003,2,c	;volatile
 12376                           
 12377                           ;usb_device.c: 305: {UEIR = 0;};
 12378  00175C  0E00               	movlw	0
 12379  00175E  6E67               	movwf	3943,c	;volatile
 12380                           
 12381                           ;usb_device.c: 308: {UIR = 0;};
 12382  001760  0E00               	movlw	0
 12383  001762  6E65               	movwf	3941,c	;volatile
 12384                           
 12385                           ;usb_device.c: 311: UEP0 = 0;
 12386  001764  0E00               	movlw	0
 12387  001766  6E6A               	movwf	3946,c	;volatile
 12388                           
 12389                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 12390  001768  0E6B               	movlw	107
 12391  00176A  0100               	movlb	0	; () banked
 12392  00176C  6FB4               	movwf	memset@p1& (0+255),b
 12393  00176E  0E0F               	movlw	15
 12394  001770  0100               	movlb	0	; () banked
 12395  001772  6FB5               	movwf	(memset@p1+1)& (0+255),b
 12396  001774  0E00               	movlw	0
 12397  001776  0100               	movlb	0	; () banked
 12398  001778  6FB7               	movwf	(memset@c+1)& (0+255),b
 12399  00177A  0E00               	movlw	0
 12400  00177C  6FB6               	movwf	memset@c& (0+255),b
 12401  00177E  0E00               	movlw	0
 12402  001780  0100               	movlb	0	; () banked
 12403  001782  6FB9               	movwf	(memset@n+1)& (0+255),b
 12404  001784  0E02               	movlw	2
 12405  001786  6FB8               	movwf	memset@n& (0+255),b
 12406  001788  ECE8  F018         	call	_memset	;wreg free
 12407                           
 12408                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12409  00178C  0E16               	movlw	22
 12410  00178E  6E62               	movwf	3938,c	;volatile
 12411  001790  0E9F               	movlw	159
 12412  001792  6E66               	movwf	3942,c	;volatile
 12413  001794  0E7B               	movlw	123
 12414  001796  6E64               	movwf	3940,c	;volatile
 12415                           
 12416                           ;usb_device.c: 318: ;
 12417                           ;usb_device.c: 321: ;
 12418                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12419  001798  0E00               	movlw	0
 12420  00179A  0100               	movlb	0	; () banked
 12421  00179C  6FBC               	movwf	USBDeviceInit@i& (0+255),b
 12422  00179E  D010               	goto	l6307
 12423                           
 12424                           ; BSR set to: 0
 12425                           
 12426                           ; BSR set to: 0
 12427  0017A0  D013               	goto	l442
 12428  0017A2                     l6303:
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;usb_device.c: 325: {
 12432                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 12433  0017A2  0100               	movlb	0	; () banked
 12434  0017A4  51BC               	movf	USBDeviceInit@i& (0+255),w,b
 12435  0017A6  0D04               	mullw	4
 12436  0017A8  0E00               	movlw	0
 12437  0017AA  24F3               	addwf	prodl,w,c
 12438  0017AC  6ED9               	movwf	fsr2l,c
 12439  0017AE  0E04               	movlw	4
 12440  0017B0  20F4               	addwfc	prodh,w,c
 12441  0017B2  6EDA               	movwf	fsr2h,c
 12442  0017B4  6ADE               	clrf	postinc2,c
 12443  0017B6  6ADE               	clrf	postinc2,c
 12444  0017B8  6ADE               	clrf	postinc2,c
 12445  0017BA  6ADD               	clrf	postdec2,c
 12446                           
 12447                           ; BSR set to: 0
 12448  0017BC  0100               	movlb	0	; () banked
 12449  0017BE  2BBC               	incf	USBDeviceInit@i& (0+255),f,b
 12450  0017C0                     l6307:
 12451                           
 12452                           ; BSR set to: 0
 12453  0017C0  0E0B               	movlw	11
 12454  0017C2  0100               	movlb	0	; () banked
 12455  0017C4  65BC               	cpfsgt	USBDeviceInit@i& (0+255),b
 12456  0017C6  D7ED               	goto	l6303
 12457  0017C8                     l442:
 12458                           
 12459                           ; BSR set to: 0
 12460                           ;usb_device.c: 327: }
 12461                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 12462  0017C8  8C60               	bsf	3936,6,c	;volatile
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;usb_device.c: 333: UADDR = 0x00;
 12466  0017CA  0E00               	movlw	0
 12467  0017CC  6E63               	movwf	3939,c	;volatile
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 12471  0017CE  9860               	bcf	3936,4,c	;volatile
 12472                           
 12473                           ; BSR set to: 0
 12474                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 12475  0017D0  9C60               	bcf	3936,6,c	;volatile
 12476                           
 12477                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 12478  0017D2  D00A               	goto	l6323
 12479  0017D4                     l6315:
 12480                           
 12481                           ;usb_device.c: 343: {
 12482                           ;usb_device.c: 344: (UIR &= 0xF7);
 12483  0017D4  9665               	bcf	3941,3,c	;volatile
 12484                           
 12485                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 12486  0017D6  0E00               	movlw	0
 12487  0017D8  6E40               	movwf	_inPipes+3,c	;volatile
 12488                           
 12489                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 12490  0017DA  0E00               	movlw	0
 12491  0017DC  6E26               	movwf	_outPipes+3,c	;volatile
 12492                           
 12493                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 12494  0017DE  0E00               	movlw	0
 12495  0017E0  6E28               	movwf	_outPipes+5,c	;volatile
 12496  0017E2  0E00               	movlw	0
 12497  0017E4  6E27               	movwf	_outPipes+4,c	;volatile
 12498  0017E6  D000               	goto	l6323
 12499  0017E8                     l6323:
 12500  0017E8  B665               	btfsc	3941,3,c	;volatile
 12501  0017EA  D7F4               	goto	l6315
 12502                           
 12503                           ;usb_device.c: 349: }
 12504                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 12505  0017EC  0E01               	movlw	1
 12506  0017EE  0100               	movlb	0	; () banked
 12507  0017F0  6F96               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12508                           
 12509                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 12510  0017F2  0E01               	movlw	1
 12511  0017F4  0100               	movlb	0	; () banked
 12512  0017F6  6F97               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12513                           
 12514                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 12515  0017F8  0E00               	movlw	0
 12516  0017FA  0100               	movlb	0	; () banked
 12517  0017FC  6F93               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12518                           
 12519                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 12520  0017FE  0E00               	movlw	0
 12521  001800  0100               	movlb	0	; () banked
 12522  001802  6F94               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12523                           
 12524                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 12525  001804  0E00               	movlw	0
 12526  001806  0100               	movlb	0	; () banked
 12527  001808  6F92               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12528                           
 12529                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 12530  00180A  0E00               	movlw	0
 12531  00180C  0100               	movlb	0	; () banked
 12532  00180E  6FBC               	movwf	USBDeviceInit@i& (0+255),b
 12533  001810                     l6327:
 12534                           
 12535                           ; BSR set to: 0
 12536  001810  0E02               	movlw	2
 12537  001812  0100               	movlb	0	; () banked
 12538  001814  65BC               	cpfsgt	USBDeviceInit@i& (0+255),b
 12539  001816  D001               	goto	l6331
 12540                           
 12541                           ; BSR set to: 0
 12542  001818  D033               	goto	l6337
 12543  00181A                     l6331:
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;usb_device.c: 363: {
 12547                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 12548  00181A  0100               	movlb	0	; () banked
 12549  00181C  51BC               	movf	USBDeviceInit@i& (0+255),w,b
 12550  00181E  0D02               	mullw	2
 12551  001820  0E2B               	movlw	low _pBDTEntryIn
 12552  001822  24F3               	addwf	prodl,w,c
 12553  001824  6ED9               	movwf	fsr2l,c
 12554  001826  0E00               	movlw	high _pBDTEntryIn
 12555  001828  20F4               	addwfc	prodh,w,c
 12556  00182A  6EDA               	movwf	fsr2h,c
 12557  00182C  0E00               	movlw	0
 12558  00182E  6EDE               	movwf	postinc2,c
 12559  001830  0E00               	movlw	0
 12560  001832  6EDD               	movwf	postdec2,c
 12561                           
 12562                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 12563  001834  0100               	movlb	0	; () banked
 12564  001836  51BC               	movf	USBDeviceInit@i& (0+255),w,b
 12565  001838  0D02               	mullw	2
 12566  00183A  0E6A               	movlw	low _pBDTEntryOut
 12567  00183C  24F3               	addwf	prodl,w,c
 12568  00183E  6ED9               	movwf	fsr2l,c
 12569  001840  0E00               	movlw	high _pBDTEntryOut
 12570  001842  20F4               	addwfc	prodh,w,c
 12571  001844  6EDA               	movwf	fsr2h,c
 12572  001846  0E00               	movlw	0
 12573  001848  6EDE               	movwf	postinc2,c
 12574  00184A  0E00               	movlw	0
 12575  00184C  6EDD               	movwf	postdec2,c
 12576                           
 12577                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 12578  00184E  0100               	movlb	0	; () banked
 12579  001850  51BC               	movf	USBDeviceInit@i& (0+255),w,b
 12580  001852  0D01               	mullw	1
 12581  001854  0E74               	movlw	low _ep_data_in
 12582  001856  24F3               	addwf	prodl,w,c
 12583  001858  6ED9               	movwf	fsr2l,c
 12584  00185A  0E00               	movlw	high _ep_data_in
 12585  00185C  20F4               	addwfc	prodh,w,c
 12586  00185E  6EDA               	movwf	fsr2h,c
 12587  001860  0E00               	movlw	0
 12588  001862  6EDF               	movwf	indf2,c
 12589                           
 12590                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 12591  001864  0100               	movlb	0	; () banked
 12592  001866  51BC               	movf	USBDeviceInit@i& (0+255),w,b
 12593  001868  0D01               	mullw	1
 12594  00186A  0E77               	movlw	low _ep_data_out
 12595  00186C  24F3               	addwf	prodl,w,c
 12596  00186E  6ED9               	movwf	fsr2l,c
 12597  001870  0E00               	movlw	high _ep_data_out
 12598  001872  20F4               	addwfc	prodh,w,c
 12599  001874  6EDA               	movwf	fsr2h,c
 12600  001876  0E00               	movlw	0
 12601  001878  6EDF               	movwf	indf2,c
 12602                           
 12603                           ; BSR set to: 0
 12604  00187A  0100               	movlb	0	; () banked
 12605  00187C  2BBC               	incf	USBDeviceInit@i& (0+255),f,b
 12606  00187E  D7C8               	goto	l6327
 12607  001880                     l6337:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;usb_device.c: 368: }
 12611                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12612  001880  0E08               	movlw	8
 12613  001882  6E2B               	movwf	_pBDTEntryIn,c
 12614  001884  0E04               	movlw	4
 12615  001886  6E2C               	movwf	_pBDTEntryIn+1,c
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 12619  001888  0E16               	movlw	22
 12620  00188A  6E6A               	movwf	3946,c	;volatile
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12624  00188C  0E04               	movlw	4
 12625  00188E  0104               	movlb	4	; () banked
 12626  001890  6F03               	movwf	3,b	;volatile
 12627  001892  0E30               	movlw	48
 12628  001894  6F02               	movwf	2,b	;volatile
 12629                           
 12630                           ; BSR set to: 4
 12631                           ;usb_device.c: 376: BDT[0].CNT = 8;
 12632  001896  0E08               	movlw	8
 12633  001898  0104               	movlb	4	; () banked
 12634  00189A  6F01               	movwf	1,b	;volatile
 12635                           
 12636                           ; BSR set to: 4
 12637                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 12638  00189C  0E04               	movlw	4
 12639  00189E  0104               	movlb	4	; () banked
 12640  0018A0  6F00               	movwf	0,b	;volatile
 12641                           
 12642                           ; BSR set to: 4
 12643                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 12644  0018A2  0104               	movlb	4	; () banked
 12645  0018A4  8F00               	bsf	0,7,b	;volatile
 12646                           
 12647                           ; BSR set to: 4
 12648                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 12649  0018A6  0E00               	movlw	0
 12650  0018A8  6E43               	movwf	_USBActiveConfiguration,c	;volatile
 12651                           
 12652                           ; BSR set to: 4
 12653                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 12654  0018AA  0E00               	movlw	0
 12655  0018AC  0100               	movlb	0	; () banked
 12656  0018AE  6F95               	movwf	_USBDeviceState& (0+255),b	;volatile
 12657                           
 12658                           ; BSR set to: 0
 12659  0018B0  0012               	return		;funcret
 12660  0018B2                     __end_of_USBDeviceInit:
 12661                           	opt stack 0
 12662                           tblptru	equ	0xFF8
 12663                           tblptrh	equ	0xFF7
 12664                           tblptrl	equ	0xFF6
 12665                           tablat	equ	0xFF5
 12666                           prodh	equ	0xFF4
 12667                           prodl	equ	0xFF3
 12668                           intcon	equ	0xFF2
 12669                           postinc0	equ	0xFEE
 12670                           wreg	equ	0xFE8
 12671                           indf1	equ	0xFE7
 12672                           postdec1	equ	0xFE5
 12673                           fsr1h	equ	0xFE2
 12674                           fsr1l	equ	0xFE1
 12675                           indf2	equ	0xFDF
 12676                           postinc2	equ	0xFDE
 12677                           postdec2	equ	0xFDD
 12678                           plusw2	equ	0xFDB
 12679                           fsr2h	equ	0xFDA
 12680                           fsr2l	equ	0xFD9
 12681                           status	equ	0xFD8
 12682                           
 12683 ;; *************** function _memset *****************
 12684 ;; Defined at:
 12685 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 12686 ;; Parameters:    Size  Location     Type
 12687 ;;  p1              2    0[BANK0 ] PTR void 
 12688 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 12689 ;;  c               2    2[BANK0 ] int 
 12690 ;;  n               2    4[BANK0 ] unsigned int 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;  p               2    6[BANK0 ] PTR unsigned char 
 12693 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  2    0[BANK0 ] PTR void 
 12696 ;; Registers used:
 12697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12698 ;; Tracked objects:
 12699 ;;		On entry : 0/0
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12703 ;;      Params:         0       6       0       0       0       0       0       0       0
 12704 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12706 ;;      Totals:         0       8       0       0       0       0       0       0       0
 12707 ;;Total ram usage:        8 bytes
 12708 ;; Hardware stack levels used:    1
 12709 ;; Hardware stack levels required when called:    4
 12710 ;; This function calls:
 12711 ;;		Nothing
 12712 ;; This function is called by:
 12713 ;;		_USBDeviceInit
 12714 ;;		_USBStdSetCfgHandler
 12715 ;; This function uses a non-reentrant model
 12716 ;;
 12717                           
 12718                           	psect	text56
 12719  0031D0                     __ptext56:
 12720                           	opt stack 0
 12721  0031D0                     _memset:
 12722                           	opt stack 23
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;incstack = 0
 12726  0031D0  C0B4  F0BA         	movff	memset@p1,memset@p
 12727  0031D4  C0B5  F0BB         	movff	memset@p1+1,memset@p+1
 12728  0031D8  D00A               	goto	l5695
 12729  0031DA                     l5691:
 12730  0031DA  C0BA  FFD9         	movff	memset@p,fsr2l
 12731  0031DE  C0BB  FFDA         	movff	memset@p+1,fsr2h
 12732  0031E2  C0B6  FFDF         	movff	memset@c,indf2
 12733  0031E6  0100               	movlb	0	; () banked
 12734  0031E8  4BBA               	infsnz	memset@p& (0+255),f,b
 12735  0031EA  2BBB               	incf	(memset@p+1)& (0+255),f,b
 12736  0031EC  D000               	goto	l5695
 12737  0031EE                     l5695:
 12738  0031EE  0100               	movlb	0	; () banked
 12739  0031F0  07B8               	decf	memset@n& (0+255),f,b
 12740  0031F2  A0D8               	btfss	status,0,c
 12741  0031F4  07B9               	decf	(memset@n+1)& (0+255),f,b
 12742  0031F6  0100               	movlb	0	; () banked
 12743  0031F8  29B8               	incf	memset@n& (0+255),w,b
 12744  0031FA  E1EF               	bnz	l5691
 12745  0031FC  0100               	movlb	0	; () banked
 12746  0031FE  29B9               	incf	(memset@n+1)& (0+255),w,b
 12747  003200  A4D8               	btfss	status,2,c
 12748  003202  D7EB               	goto	l5691
 12749                           
 12750                           ; BSR set to: 0
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;	Return value of _memset is never used
 12754  003204  0012               	return		;funcret
 12755  003206                     __end_of_memset:
 12756                           	opt stack 0
 12757                           tblptru	equ	0xFF8
 12758                           tblptrh	equ	0xFF7
 12759                           tblptrl	equ	0xFF6
 12760                           tablat	equ	0xFF5
 12761                           prodh	equ	0xFF4
 12762                           prodl	equ	0xFF3
 12763                           intcon	equ	0xFF2
 12764                           postinc0	equ	0xFEE
 12765                           wreg	equ	0xFE8
 12766                           indf1	equ	0xFE7
 12767                           postdec1	equ	0xFE5
 12768                           fsr1h	equ	0xFE2
 12769                           fsr1l	equ	0xFE1
 12770                           indf2	equ	0xFDF
 12771                           postinc2	equ	0xFDE
 12772                           postdec2	equ	0xFDD
 12773                           plusw2	equ	0xFDB
 12774                           fsr2h	equ	0xFDA
 12775                           fsr2l	equ	0xFD9
 12776                           status	equ	0xFD8
 12777                           
 12778 ;; *************** function _OpenTimer3 *****************
 12779 ;; Defined at:
 12780 ;;		line 94 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t3open.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;  config          1    wreg     unsigned char 
 12783 ;;  config1         1    0[BANK0 ] unsigned char 
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;  config          1    2[BANK0 ] unsigned char 
 12786 ;; Return value:  Size  Location     Type
 12787 ;;		None               void
 12788 ;; Registers used:
 12789 ;;		wreg, status,2, status,0
 12790 ;; Tracked objects:
 12791 ;;		On entry : 0/0
 12792 ;;		On exit  : 0/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12795 ;;      Params:         0       1       0       0       0       0       0       0       0
 12796 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12797 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12798 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12799 ;;Total ram usage:        3 bytes
 12800 ;; Hardware stack levels used:    1
 12801 ;; Hardware stack levels required when called:    4
 12802 ;; This function calls:
 12803 ;;		Nothing
 12804 ;; This function is called by:
 12805 ;;		_InitializeSystem
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           	psect	text57
 12810  003010                     __ptext57:
 12811                           	opt stack 0
 12812  003010                     _OpenTimer3:
 12813                           	opt stack 25
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;incstack = 0
 12817                           ;OpenTimer3@config stored from wreg
 12818  003010  0100               	movlb	0	; () banked
 12819  003012  6FB6               	movwf	OpenTimer3@config& (0+255),b
 12820                           
 12821                           ; BSR set to: 0
 12822  003014  0100               	movlb	0	; () banked
 12823  003016  51B4               	movf	OpenTimer3@config1& (0+255),w,b
 12824  003018  0BF3               	andlw	243
 12825  00301A  6EB4               	movwf	4020,c	;volatile
 12826  00301C  C0B6  F0B5         	movff	OpenTimer3@config,??_OpenTimer3
 12827  003020  0E7F               	movlw	127
 12828  003022  0100               	movlb	0	; () banked
 12829  003024  17B5               	andwf	??_OpenTimer3& (0+255),f,b
 12830  003026  0100               	movlb	0	; () banked
 12831  003028  90D8               	bcf	status,0,c
 12832  00302A  35B5               	rlcf	??_OpenTimer3& (0+255),w,b
 12833  00302C  6EB1               	movwf	4017,c	;volatile
 12834                           
 12835                           ; BSR set to: 0
 12836  00302E  0E00               	movlw	0
 12837  003030  6EB3               	movwf	4019,c	;volatile
 12838                           
 12839                           ; BSR set to: 0
 12840  003032  0E00               	movlw	0
 12841  003034  6EB2               	movwf	4018,c	;volatile
 12842                           
 12843                           ; BSR set to: 0
 12844  003036  92A1               	bcf	4001,1,c	;volatile
 12845                           
 12846                           ; BSR set to: 0
 12847  003038  92A4               	bcf	4004,1,c	;volatile
 12848                           
 12849                           ; BSR set to: 0
 12850  00303A  0100               	movlb	0	; () banked
 12851  00303C  AFB6               	btfss	OpenTimer3@config& (0+255),7,b
 12852  00303E  D002               	goto	l1112
 12853                           
 12854                           ; BSR set to: 0
 12855  003040  82A0               	bsf	4000,1,c	;volatile
 12856  003042  D001               	goto	l1113
 12857  003044                     l1112:
 12858                           
 12859                           ; BSR set to: 0
 12860  003044  92A0               	bcf	4000,1,c	;volatile
 12861  003046                     l1113:
 12862                           
 12863                           ; BSR set to: 0
 12864  003046  0100               	movlb	0	; () banked
 12865  003048  A5B4               	btfss	OpenTimer3@config1& (0+255),2,b
 12866  00304A  D002               	goto	l1114
 12867                           
 12868                           ; BSR set to: 0
 12869  00304C  82A3               	bsf	4003,1,c	;volatile
 12870  00304E  D001               	goto	l1115
 12871  003050                     l1114:
 12872                           
 12873                           ; BSR set to: 0
 12874  003050  92A3               	bcf	4003,1,c	;volatile
 12875  003052                     l1115:
 12876                           
 12877                           ; BSR set to: 0
 12878  003052  BEB4               	btfsc	4020,7,c	;volatile
 12879                           
 12880                           ; BSR set to: 0
 12881  003054  86B4               	bsf	4020,3,c	;volatile
 12882                           
 12883                           ; BSR set to: 0
 12884  003056  80B1               	bsf	4017,0,c	;volatile
 12885                           
 12886                           ; BSR set to: 0
 12887  003058  0012               	return		;funcret
 12888  00305A                     __end_of_OpenTimer3:
 12889                           	opt stack 0
 12890                           tblptru	equ	0xFF8
 12891                           tblptrh	equ	0xFF7
 12892                           tblptrl	equ	0xFF6
 12893                           tablat	equ	0xFF5
 12894                           prodh	equ	0xFF4
 12895                           prodl	equ	0xFF3
 12896                           intcon	equ	0xFF2
 12897                           postinc0	equ	0xFEE
 12898                           wreg	equ	0xFE8
 12899                           indf1	equ	0xFE7
 12900                           postdec1	equ	0xFE5
 12901                           fsr1h	equ	0xFE2
 12902                           fsr1l	equ	0xFE1
 12903                           indf2	equ	0xFDF
 12904                           postinc2	equ	0xFDE
 12905                           postdec2	equ	0xFDD
 12906                           plusw2	equ	0xFDB
 12907                           fsr2h	equ	0xFDA
 12908                           fsr2l	equ	0xFD9
 12909                           status	equ	0xFD8
 12910                           
 12911 ;; *************** function _OpenSPI1 *****************
 12912 ;; Defined at:
 12913 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1open.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;  sync_mode       1    wreg     unsigned char 
 12916 ;;  bus_mode        1    0[BANK0 ] unsigned char 
 12917 ;;  smp_phase       1    1[BANK0 ] unsigned char 
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;  sync_mode       1    2[BANK0 ] unsigned char 
 12920 ;; Return value:  Size  Location     Type
 12921 ;;		None               void
 12922 ;; Registers used:
 12923 ;;		wreg, status,2, status,0
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12929 ;;      Params:         0       2       0       0       0       0       0       0       0
 12930 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12931 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12932 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12933 ;;Total ram usage:        3 bytes
 12934 ;; Hardware stack levels used:    1
 12935 ;; Hardware stack levels required when called:    4
 12936 ;; This function calls:
 12937 ;;		Nothing
 12938 ;; This function is called by:
 12939 ;;		_InitializeSystem
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943                           	psect	text58
 12944  002EB2                     __ptext58:
 12945                           	opt stack 0
 12946  002EB2                     _OpenSPI1:
 12947                           	opt stack 25
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;incstack = 0
 12951                           ;OpenSPI1@sync_mode stored from wreg
 12952  002EB2  0100               	movlb	0	; () banked
 12953  002EB4  6FB6               	movwf	OpenSPI1@sync_mode& (0+255),b
 12954                           
 12955                           ; BSR set to: 0
 12956  002EB6  0E3F               	movlw	63
 12957  002EB8  16C7               	andwf	4039,f,c	;volatile
 12958                           
 12959                           ; BSR set to: 0
 12960  002EBA  0E00               	movlw	0
 12961  002EBC  6EC6               	movwf	4038,c	;volatile
 12962                           
 12963                           ; BSR set to: 0
 12964  002EBE  0100               	movlb	0	; () banked
 12965  002EC0  51B6               	movf	OpenSPI1@sync_mode& (0+255),w,b
 12966  002EC2  12C6               	iorwf	4038,f,c	;volatile
 12967                           
 12968                           ; BSR set to: 0
 12969  002EC4  0100               	movlb	0	; () banked
 12970  002EC6  51B5               	movf	OpenSPI1@smp_phase& (0+255),w,b
 12971  002EC8  12C7               	iorwf	4039,f,c	;volatile
 12972  002ECA  D005               	goto	l6891
 12973  002ECC                     l1042:
 12974                           
 12975                           ; BSR set to: 0
 12976  002ECC  8CC7               	bsf	4039,6,c	;volatile
 12977  002ECE  D014               	goto	l6895
 12978  002ED0                     l1044:
 12979                           
 12980                           ; BSR set to: 0
 12981  002ED0  8CC7               	bsf	4039,6,c	;volatile
 12982  002ED2                     l1045:
 12983                           
 12984                           ; BSR set to: 0
 12985  002ED2  88C6               	bsf	4038,4,c	;volatile
 12986                           
 12987                           ; BSR set to: 0
 12988                           
 12989                           ; BSR set to: 0
 12990  002ED4  D011               	goto	l6895
 12991  002ED6                     l6891:
 12992                           
 12993                           ; BSR set to: 0
 12994  002ED6  0100               	movlb	0	; () banked
 12995  002ED8  51B4               	movf	OpenSPI1@bus_mode& (0+255),w,b
 12996                           
 12997                           ; Switch size 1, requested type "space"
 12998                           ; Number of cases is 3, Range of values is 0 to 3
 12999                           ; switch strategies available:
 13000                           ; Name         Instructions Cycles
 13001                           ; simple_byte           10     6 (average)
 13002                           ;	Chosen strategy is simple_byte
 13003  002EDA  0A00               	xorlw	0	; case 0
 13004  002EDC  B4D8               	btfsc	status,2,c
 13005  002EDE  D7F6               	goto	l1042
 13006  002EE0  0A02               	xorlw	2	; case 2
 13007  002EE2  B4D8               	btfsc	status,2,c
 13008  002EE4  D7F5               	goto	l1044
 13009  002EE6  0A01               	xorlw	1	; case 3
 13010  002EE8  B4D8               	btfsc	status,2,c
 13011  002EEA  D7F3               	goto	l1045
 13012                           
 13013                           ; BSR set to: 0
 13014  002EEC  D005               	goto	l6895
 13015  002EEE                     l1048:
 13016                           
 13017                           ; BSR set to: 0
 13018  002EEE  8A92               	bsf	3986,5,c	;volatile
 13019  002EF0                     l1050:
 13020                           
 13021                           ; BSR set to: 0
 13022  002EF0  8493               	bsf	3987,2,c	;volatile
 13023  002EF2  D00B               	goto	l1049
 13024  002EF4                     l1051:
 13025                           
 13026                           ; BSR set to: 0
 13027  002EF4  9493               	bcf	3987,2,c	;volatile
 13028                           
 13029                           ; BSR set to: 0
 13030  002EF6  D009               	goto	l1049
 13031  002EF8                     l6895:
 13032                           
 13033                           ; BSR set to: 0
 13034  002EF8  0100               	movlb	0	; () banked
 13035  002EFA  51B6               	movf	OpenSPI1@sync_mode& (0+255),w,b
 13036                           
 13037                           ; Switch size 1, requested type "space"
 13038                           ; Number of cases is 2, Range of values is 4 to 5
 13039                           ; switch strategies available:
 13040                           ; Name         Instructions Cycles
 13041                           ; simple_byte            7     4 (average)
 13042                           ;	Chosen strategy is simple_byte
 13043  002EFC  0A04               	xorlw	4	; case 4
 13044  002EFE  B4D8               	btfsc	status,2,c
 13045  002F00  D7F6               	goto	l1048
 13046  002F02  0A01               	xorlw	1	; case 5
 13047  002F04  B4D8               	btfsc	status,2,c
 13048  002F06  D7F4               	goto	l1050
 13049  002F08  D7F5               	goto	l1051
 13050  002F0A                     l1049:
 13051                           
 13052                           ; BSR set to: 0
 13053  002F0A  8093               	bsf	3987,0,c	;volatile
 13054  002F0C  9693               	bcf	3987,3,c	;volatile
 13055                           
 13056                           ; BSR set to: 0
 13057  002F0E  8AC6               	bsf	4038,5,c	;volatile
 13058                           
 13059                           ; BSR set to: 0
 13060  002F10  0012               	return		;funcret
 13061  002F12                     __end_of_OpenSPI1:
 13062                           	opt stack 0
 13063                           tblptru	equ	0xFF8
 13064                           tblptrh	equ	0xFF7
 13065                           tblptrl	equ	0xFF6
 13066                           tablat	equ	0xFF5
 13067                           prodh	equ	0xFF4
 13068                           prodl	equ	0xFF3
 13069                           intcon	equ	0xFF2
 13070                           postinc0	equ	0xFEE
 13071                           wreg	equ	0xFE8
 13072                           indf1	equ	0xFE7
 13073                           postdec1	equ	0xFE5
 13074                           fsr1h	equ	0xFE2
 13075                           fsr1l	equ	0xFE1
 13076                           indf2	equ	0xFDF
 13077                           postinc2	equ	0xFDE
 13078                           postdec2	equ	0xFDD
 13079                           plusw2	equ	0xFDB
 13080                           fsr2h	equ	0xFDA
 13081                           fsr2l	equ	0xFD9
 13082                           status	equ	0xFD8
 13083                           
 13084 ;; *************** function _CloseTimer3 *****************
 13085 ;; Defined at:
 13086 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t3close.c"
 13087 ;; Parameters:    Size  Location     Type
 13088 ;;		None
 13089 ;; Auto vars:     Size  Location     Type
 13090 ;;		None
 13091 ;; Return value:  Size  Location     Type
 13092 ;;		None               void
 13093 ;; Registers used:
 13094 ;;		None
 13095 ;; Tracked objects:
 13096 ;;		On entry : 0/0
 13097 ;;		On exit  : 0/0
 13098 ;;		Unchanged: 0/0
 13099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13100 ;;      Params:         0       0       0       0       0       0       0       0       0
 13101 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13102 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13103 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13104 ;;Total ram usage:        0 bytes
 13105 ;; Hardware stack levels used:    1
 13106 ;; Hardware stack levels required when called:    4
 13107 ;; This function calls:
 13108 ;;		Nothing
 13109 ;; This function is called by:
 13110 ;;		_InitializeSystem
 13111 ;; This function uses a non-reentrant model
 13112 ;;
 13113                           
 13114                           	psect	text59
 13115  003440                     __ptext59:
 13116                           	opt stack 0
 13117  003440                     _CloseTimer3:
 13118                           	opt stack 25
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;incstack = 0
 13122  003440  90B1               	bcf	4017,0,c	;volatile
 13123  003442  92A0               	bcf	4000,1,c	;volatile
 13124  003444  92A4               	bcf	4004,1,c	;volatile
 13125  003446  92A3               	bcf	4003,1,c	;volatile
 13126  003448  0012               	return		;funcret
 13127  00344A                     __end_of_CloseTimer3:
 13128                           	opt stack 0
 13129                           tblptru	equ	0xFF8
 13130                           tblptrh	equ	0xFF7
 13131                           tblptrl	equ	0xFF6
 13132                           tablat	equ	0xFF5
 13133                           prodh	equ	0xFF4
 13134                           prodl	equ	0xFF3
 13135                           intcon	equ	0xFF2
 13136                           postinc0	equ	0xFEE
 13137                           wreg	equ	0xFE8
 13138                           indf1	equ	0xFE7
 13139                           postdec1	equ	0xFE5
 13140                           fsr1h	equ	0xFE2
 13141                           fsr1l	equ	0xFE1
 13142                           indf2	equ	0xFDF
 13143                           postinc2	equ	0xFDE
 13144                           postdec2	equ	0xFDD
 13145                           plusw2	equ	0xFDB
 13146                           fsr2h	equ	0xFDA
 13147                           fsr2l	equ	0xFD9
 13148                           status	equ	0xFD8
 13149                           
 13150 ;; *************** function _LowPriorityISRCode *****************
 13151 ;; Defined at:
 13152 ;;		line 62 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 13153 ;; Parameters:    Size  Location     Type
 13154 ;;		None
 13155 ;; Auto vars:     Size  Location     Type
 13156 ;;		None
 13157 ;; Return value:  Size  Location     Type
 13158 ;;		None               void
 13159 ;; Registers used:
 13160 ;;		None
 13161 ;; Tracked objects:
 13162 ;;		On entry : 0/0
 13163 ;;		On exit  : 0/0
 13164 ;;		Unchanged: 0/0
 13165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13166 ;;      Params:         0       0       0       0       0       0       0       0       0
 13167 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13168 ;;      Temps:         17       0       0       0       0       0       0       0       0
 13169 ;;      Totals:        17       0       0       0       0       0       0       0       0
 13170 ;;Total ram usage:       17 bytes
 13171 ;; Hardware stack levels used:    1
 13172 ;; Hardware stack levels required when called:    3
 13173 ;; This function calls:
 13174 ;;		Nothing
 13175 ;; This function is called by:
 13176 ;;		Interrupt level 1
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           	psect	intcodelo
 13181  000018                     __pintcodelo:
 13182                           	opt stack 0
 13183  000018                     _LowPriorityISRCode:
 13184                           	opt stack 16
 13185                           
 13186                           ;incstack = 0
 13187  000018  CFD8 F001          	movff	status,??_LowPriorityISRCode
 13188  00001C  CFE8 F002          	movff	wreg,??_LowPriorityISRCode+1
 13189  000020  CFE0 F003          	movff	bsr,??_LowPriorityISRCode+2
 13190  000024  CFFA F004          	movff	pclath,??_LowPriorityISRCode+3
 13191  000028  CFFB F005          	movff	pclatu,??_LowPriorityISRCode+4
 13192  00002C  CFE9 F006          	movff	fsr0l,??_LowPriorityISRCode+5
 13193  000030  CFEA F007          	movff	fsr0h,??_LowPriorityISRCode+6
 13194  000034  CFE1 F008          	movff	fsr1l,??_LowPriorityISRCode+7
 13195  000038  CFE2 F009          	movff	fsr1h,??_LowPriorityISRCode+8
 13196  00003C  CFD9 F00A          	movff	fsr2l,??_LowPriorityISRCode+9
 13197  000040  CFDA F00B          	movff	fsr2h,??_LowPriorityISRCode+10
 13198  000044  CFF3 F00C          	movff	prodl,??_LowPriorityISRCode+11
 13199  000048  CFF4 F00D          	movff	prodh,??_LowPriorityISRCode+12
 13200  00004C  CFF6 F00E          	movff	tblptrl,??_LowPriorityISRCode+13
 13201  000050  CFF7 F00F          	movff	tblptrh,??_LowPriorityISRCode+14
 13202  000054  CFF8 F010          	movff	tblptru,??_LowPriorityISRCode+15
 13203  000058  CFF5 F011          	movff	tablat,??_LowPriorityISRCode+16
 13204                           
 13205                           ;karate.c: 64: if (PIR1bits.TMR2IF) {
 13206  00005C  A29E               	btfss	3998,1,c	;volatile
 13207  00005E  D002               	goto	i1l165
 13208                           
 13209                           ;karate.c: 66: PIR1bits.TMR2IF = 0;
 13210  000060  929E               	bcf	3998,1,c	;volatile
 13211  000062  D000               	goto	i1l165
 13212  000064                     i1l165:
 13213  000064  C011  FFF5         	movff	??_LowPriorityISRCode+16,tablat
 13214  000068  C010  FFF8         	movff	??_LowPriorityISRCode+15,tblptru
 13215  00006C  C00F  FFF7         	movff	??_LowPriorityISRCode+14,tblptrh
 13216  000070  C00E  FFF6         	movff	??_LowPriorityISRCode+13,tblptrl
 13217  000074  C00D  FFF4         	movff	??_LowPriorityISRCode+12,prodh
 13218  000078  C00C  FFF3         	movff	??_LowPriorityISRCode+11,prodl
 13219  00007C  C00B  FFDA         	movff	??_LowPriorityISRCode+10,fsr2h
 13220  000080  C00A  FFD9         	movff	??_LowPriorityISRCode+9,fsr2l
 13221  000084  C009  FFE2         	movff	??_LowPriorityISRCode+8,fsr1h
 13222  000088  C008  FFE1         	movff	??_LowPriorityISRCode+7,fsr1l
 13223  00008C  C007  FFEA         	movff	??_LowPriorityISRCode+6,fsr0h
 13224  000090  C006  FFE9         	movff	??_LowPriorityISRCode+5,fsr0l
 13225  000094  C005  FFFB         	movff	??_LowPriorityISRCode+4,pclatu
 13226  000098  C004  FFFA         	movff	??_LowPriorityISRCode+3,pclath
 13227  00009C  C003  FFE0         	movff	??_LowPriorityISRCode+2,bsr
 13228  0000A0  C002  FFE8         	movff	??_LowPriorityISRCode+1,wreg
 13229  0000A4  C001  FFD8         	movff	??_LowPriorityISRCode,status
 13230  0000A8  0010               	retfie	
 13231  0000AA                     __end_of_LowPriorityISRCode:
 13232                           	opt stack 0
 13233                           pclatu	equ	0xFFB
 13234                           pclath	equ	0xFFA
 13235                           tblptru	equ	0xFF8
 13236                           tblptrh	equ	0xFF7
 13237                           tblptrl	equ	0xFF6
 13238                           tablat	equ	0xFF5
 13239                           prodh	equ	0xFF4
 13240                           prodl	equ	0xFF3
 13241                           intcon	equ	0xFF2
 13242                           postinc0	equ	0xFEE
 13243                           fsr0h	equ	0xFEA
 13244                           fsr0l	equ	0xFE9
 13245                           wreg	equ	0xFE8
 13246                           indf1	equ	0xFE7
 13247                           postdec1	equ	0xFE5
 13248                           fsr1h	equ	0xFE2
 13249                           fsr1l	equ	0xFE1
 13250                           bsr	equ	0xFE0
 13251                           indf2	equ	0xFDF
 13252                           postinc2	equ	0xFDE
 13253                           postdec2	equ	0xFDD
 13254                           plusw2	equ	0xFDB
 13255                           fsr2h	equ	0xFDA
 13256                           fsr2l	equ	0xFD9
 13257                           status	equ	0xFD8
 13258                           
 13259 ;; *************** function _HighPriorityISRCode *****************
 13260 ;; Defined at:
 13261 ;;		line 41 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/karate.c"
 13262 ;; Parameters:    Size  Location     Type
 13263 ;;		None
 13264 ;; Auto vars:     Size  Location     Type
 13265 ;;		None
 13266 ;; Return value:  Size  Location     Type
 13267 ;;		None               void
 13268 ;; Registers used:
 13269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13270 ;; Tracked objects:
 13271 ;;		On entry : 0/0
 13272 ;;		On exit  : 0/0
 13273 ;;		Unchanged: 0/0
 13274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13275 ;;      Params:         0       0       0       0       0       0       0       0       0
 13276 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13277 ;;      Temps:         14       0       0       0       0       0       0       0       0
 13278 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13279 ;;Total ram usage:       14 bytes
 13280 ;; Hardware stack levels used:    1
 13281 ;; Hardware stack levels required when called:    2
 13282 ;; This function calls:
 13283 ;;		i2_tlc5947_latch
 13284 ;;		i2_tlc5947_update
 13285 ;; This function is called by:
 13286 ;;		Interrupt level 2
 13287 ;; This function uses a non-reentrant model
 13288 ;;
 13289                           
 13290                           	psect	intcode
 13291  000008                     __pintcode:
 13292                           	opt stack 0
 13293  000008                     _HighPriorityISRCode:
 13294                           	opt stack 16
 13295                           
 13296                           ;incstack = 0
 13297  000008  CFFA F015          	movff	pclath,??_HighPriorityISRCode
 13298  00000C  CFFB F016          	movff	pclatu,??_HighPriorityISRCode+1
 13299  000010  CFE9 F017          	movff	fsr0l,??_HighPriorityISRCode+2
 13300  000014  EFBB  F015         	goto	int_func
 13301                           pclatu	equ	0xFFB
 13302                           pclath	equ	0xFFA
 13303                           tblptru	equ	0xFF8
 13304                           tblptrh	equ	0xFF7
 13305                           tblptrl	equ	0xFF6
 13306                           tablat	equ	0xFF5
 13307                           prodh	equ	0xFF4
 13308                           prodl	equ	0xFF3
 13309                           intcon	equ	0xFF2
 13310                           postinc0	equ	0xFEE
 13311                           fsr0h	equ	0xFEA
 13312                           fsr0l	equ	0xFE9
 13313                           wreg	equ	0xFE8
 13314                           indf1	equ	0xFE7
 13315                           postdec1	equ	0xFE5
 13316                           fsr1h	equ	0xFE2
 13317                           fsr1l	equ	0xFE1
 13318                           bsr	equ	0xFE0
 13319                           indf2	equ	0xFDF
 13320                           postinc2	equ	0xFDE
 13321                           postdec2	equ	0xFDD
 13322                           plusw2	equ	0xFDB
 13323                           fsr2h	equ	0xFDA
 13324                           fsr2l	equ	0xFD9
 13325                           status	equ	0xFD8
 13326                           
 13327                           	psect	intcode_body
 13328  002B76                     __pintcode_body:
 13329                           	opt stack 16
 13330  002B76                     int_func:
 13331                           	opt stack 16
 13332  002B76  CFEA F018          	movff	fsr0h,??_HighPriorityISRCode+3
 13333  002B7A  CFE1 F019          	movff	fsr1l,??_HighPriorityISRCode+4
 13334  002B7E  CFE2 F01A          	movff	fsr1h,??_HighPriorityISRCode+5
 13335  002B82  CFD9 F01B          	movff	fsr2l,??_HighPriorityISRCode+6
 13336  002B86  CFDA F01C          	movff	fsr2h,??_HighPriorityISRCode+7
 13337  002B8A  CFF3 F01D          	movff	prodl,??_HighPriorityISRCode+8
 13338  002B8E  CFF4 F01E          	movff	prodh,??_HighPriorityISRCode+9
 13339  002B92  CFF6 F01F          	movff	tblptrl,??_HighPriorityISRCode+10
 13340  002B96  CFF7 F020          	movff	tblptrh,??_HighPriorityISRCode+11
 13341  002B9A  CFF8 F021          	movff	tblptru,??_HighPriorityISRCode+12
 13342  002B9E  CFF5 F022          	movff	tablat,??_HighPriorityISRCode+13
 13343                           
 13344                           ;karate.c: 43: if (PIR2bits.TMR3IF) {
 13345  002BA2  A2A1               	btfss	4001,1,c	;volatile
 13346  002BA4  D010               	goto	i2l161
 13347                           
 13348                           ;karate.c: 45: TMR3H = tmr3h_cal;
 13349  002BA6  C0A0  FFB3         	movff	_tmr3h_cal,4019	;volatile
 13350                           
 13351                           ;karate.c: 46: TMR3L = tmr3l_cal;
 13352  002BAA  C0A1  FFB2         	movff	_tmr3l_cal,4018	;volatile
 13353                           
 13354                           ;karate.c: 49: if (tlc_request >= 0) {
 13355  002BAE  BE3C               	btfsc	_tlc_request,7,c
 13356  002BB0  D008               	goto	i2l5431
 13357                           
 13358                           ;karate.c: 50: tlc5947_latch();
 13359  002BB2  EC5C  F019         	call	i2_tlc5947_latch	;wreg free
 13360                           
 13361                           ;karate.c: 53: if (tlc_request == 1) {
 13362  002BB6  043C               	decf	_tlc_request,w,c
 13363  002BB8  A4D8               	btfss	status,2,c
 13364  002BBA  D003               	goto	i2l5431
 13365                           
 13366                           ;karate.c: 54: tlc5947_update();
 13367  002BBC  EC1C  F019         	call	i2_tlc5947_update	;wreg free
 13368  002BC0  D000               	goto	i2l5431
 13369  002BC2                     i2l5431:
 13370                           
 13371                           ;karate.c: 55: }
 13372                           ;karate.c: 56: }
 13373                           ;karate.c: 58: PIR2bits.TMR3IF = 0;
 13374  002BC2  92A1               	bcf	4001,1,c	;volatile
 13375  002BC4  D000               	goto	i2l161
 13376  002BC6                     i2l161:
 13377  002BC6  C022  FFF5         	movff	??_HighPriorityISRCode+13,tablat
 13378  002BCA  C021  FFF8         	movff	??_HighPriorityISRCode+12,tblptru
 13379  002BCE  C020  FFF7         	movff	??_HighPriorityISRCode+11,tblptrh
 13380  002BD2  C01F  FFF6         	movff	??_HighPriorityISRCode+10,tblptrl
 13381  002BD6  C01E  FFF4         	movff	??_HighPriorityISRCode+9,prodh
 13382  002BDA  C01D  FFF3         	movff	??_HighPriorityISRCode+8,prodl
 13383  002BDE  C01C  FFDA         	movff	??_HighPriorityISRCode+7,fsr2h
 13384  002BE2  C01B  FFD9         	movff	??_HighPriorityISRCode+6,fsr2l
 13385  002BE6  C01A  FFE2         	movff	??_HighPriorityISRCode+5,fsr1h
 13386  002BEA  C019  FFE1         	movff	??_HighPriorityISRCode+4,fsr1l
 13387  002BEE  C018  FFEA         	movff	??_HighPriorityISRCode+3,fsr0h
 13388  002BF2  C017  FFE9         	movff	??_HighPriorityISRCode+2,fsr0l
 13389  002BF6  C016  FFFB         	movff	??_HighPriorityISRCode+1,pclatu
 13390  002BFA  C015  FFFA         	movff	??_HighPriorityISRCode,pclath
 13391  002BFE  0011               	retfie		f
 13392  002C00                     __end_of_HighPriorityISRCode:
 13393                           	opt stack 0
 13394                           pclatu	equ	0xFFB
 13395                           pclath	equ	0xFFA
 13396                           tblptru	equ	0xFF8
 13397                           tblptrh	equ	0xFF7
 13398                           tblptrl	equ	0xFF6
 13399                           tablat	equ	0xFF5
 13400                           prodh	equ	0xFF4
 13401                           prodl	equ	0xFF3
 13402                           intcon	equ	0xFF2
 13403                           postinc0	equ	0xFEE
 13404                           fsr0h	equ	0xFEA
 13405                           fsr0l	equ	0xFE9
 13406                           wreg	equ	0xFE8
 13407                           indf1	equ	0xFE7
 13408                           postdec1	equ	0xFE5
 13409                           fsr1h	equ	0xFE2
 13410                           fsr1l	equ	0xFE1
 13411                           bsr	equ	0xFE0
 13412                           indf2	equ	0xFDF
 13413                           postinc2	equ	0xFDE
 13414                           postdec2	equ	0xFDD
 13415                           plusw2	equ	0xFDB
 13416                           fsr2h	equ	0xFDA
 13417                           fsr2l	equ	0xFD9
 13418                           status	equ	0xFD8
 13419                           
 13420 ;; *************** function i2_tlc5947_update *****************
 13421 ;; Defined at:
 13422 ;;		line 167 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 13423 ;; Parameters:    Size  Location     Type
 13424 ;;		None
 13425 ;; Auto vars:     Size  Location     Type
 13426 ;;  tlc5947_upda    1   19[COMRAM] unsigned char 
 13427 ;; Return value:  Size  Location     Type
 13428 ;;		None               void
 13429 ;; Registers used:
 13430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13436 ;;      Params:         0       0       0       0       0       0       0       0       0
 13437 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13439 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13440 ;;Total ram usage:        1 bytes
 13441 ;; Hardware stack levels used:    1
 13442 ;; Hardware stack levels required when called:    1
 13443 ;; This function calls:
 13444 ;;		i2_WriteSPI1
 13445 ;; This function is called by:
 13446 ;;		_HighPriorityISRCode
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           	psect	text62
 13451  003238                     __ptext62:
 13452                           	opt stack 0
 13453  003238                     i2_tlc5947_update:
 13454                           	opt stack 16
 13455                           
 13456                           ;tlc5947.c: 169: uint8_t x;
 13457                           ;tlc5947.c: 171: for (x = 0; x < tlc_nbytes; x++) {
 13458                           
 13459                           ;incstack = 0
 13460  003238  0E00               	movlw	0
 13461  00323A  6E14               	movwf	i2tlc5947_update@x,c
 13462  00323C  D00D               	goto	i2l5397
 13463  00323E                     i2l5393:
 13464                           
 13465                           ;tlc5947.c: 172: WriteSPI1(tlc_memory[x]);
 13466  00323E  5014               	movf	i2tlc5947_update@x,w,c
 13467  003240  0D01               	mullw	1
 13468  003242  0E80               	movlw	low _tlc_memory
 13469  003244  24F3               	addwf	prodl,w,c
 13470  003246  6ED9               	movwf	fsr2l,c
 13471  003248  0E01               	movlw	high _tlc_memory
 13472  00324A  20F4               	addwfc	prodh,w,c
 13473  00324C  6EDA               	movwf	fsr2h,c
 13474  00324E  50DF               	movf	indf2,w,c
 13475  003250  ECB5  F019         	call	i2_WriteSPI1
 13476  003254  2A14               	incf	i2tlc5947_update@x,f,c
 13477  003256  D000               	goto	i2l5397
 13478  003258                     i2l5397:
 13479  003258  5044               	movf	_tlc_nbytes,w,c
 13480  00325A  5C14               	subwf	i2tlc5947_update@x,w,c
 13481  00325C  A0D8               	btfss	status,0,c
 13482  00325E  D7EF               	goto	i2l5393
 13483                           
 13484                           ;tlc5947.c: 173: }
 13485                           ;tlc5947.c: 174: tlc_request = 0;
 13486  003260  0E00               	movlw	0
 13487  003262  6E3C               	movwf	_tlc_request,c
 13488  003264  0012               	return		;funcret
 13489  003266                     __end_ofi2_tlc5947_update:
 13490                           	opt stack 0
 13491                           pclatu	equ	0xFFB
 13492                           pclath	equ	0xFFA
 13493                           tblptru	equ	0xFF8
 13494                           tblptrh	equ	0xFF7
 13495                           tblptrl	equ	0xFF6
 13496                           tablat	equ	0xFF5
 13497                           prodh	equ	0xFF4
 13498                           prodl	equ	0xFF3
 13499                           intcon	equ	0xFF2
 13500                           postinc0	equ	0xFEE
 13501                           fsr0h	equ	0xFEA
 13502                           fsr0l	equ	0xFE9
 13503                           wreg	equ	0xFE8
 13504                           indf1	equ	0xFE7
 13505                           postdec1	equ	0xFE5
 13506                           fsr1h	equ	0xFE2
 13507                           fsr1l	equ	0xFE1
 13508                           bsr	equ	0xFE0
 13509                           indf2	equ	0xFDF
 13510                           postinc2	equ	0xFDE
 13511                           postdec2	equ	0xFDD
 13512                           plusw2	equ	0xFDB
 13513                           fsr2h	equ	0xFDA
 13514                           fsr2l	equ	0xFD9
 13515                           status	equ	0xFD8
 13516                           
 13517 ;; *************** function i2_WriteSPI1 *****************
 13518 ;; Defined at:
 13519 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi1writ.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;  data_out        1    wreg     unsigned char 
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;  data_out        1   18[COMRAM] unsigned char 
 13524 ;;  WriteSPI1       1   17[COMRAM] unsigned char 
 13525 ;; Return value:  Size  Location     Type
 13526 ;;                  1    wreg      char 
 13527 ;; Registers used:
 13528 ;;		wreg
 13529 ;; Tracked objects:
 13530 ;;		On entry : 0/0
 13531 ;;		On exit  : 0/0
 13532 ;;		Unchanged: 0/0
 13533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13534 ;;      Params:         0       0       0       0       0       0       0       0       0
 13535 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13536 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13537 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13538 ;;Total ram usage:        2 bytes
 13539 ;; Hardware stack levels used:    1
 13540 ;; This function calls:
 13541 ;;		Nothing
 13542 ;; This function is called by:
 13543 ;;		i2_tlc5947_update
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547                           	psect	text63
 13548  00336A                     __ptext63:
 13549                           	opt stack 0
 13550  00336A                     i2_WriteSPI1:
 13551                           	opt stack 16
 13552                           
 13553                           ;incstack = 0
 13554                           ;i2WriteSPI1@data_out stored from wreg
 13555  00336A  6E13               	movwf	i2WriteSPI1@data_out,c
 13556  00336C  CFC9 F012          	movff	4041,i2WriteSPI1@TempVar	;volatile
 13557  003370  969E               	bcf	3998,3,c	;volatile
 13558  003372  9EC6               	bcf	4038,7,c	;volatile
 13559  003374  C013  FFC9         	movff	i2WriteSPI1@data_out,4041	;volatile
 13560  003378  BEC6               	btfsc	4038,7,c	;volatile
 13561  00337A  0012               	return	
 13562  00337C  D002               	goto	i2l1076
 13563                           
 13564                           ;	Return value of i2_WriteSPI1 is never used
 13565  00337E  0012               	return	
 13566  003380  D000               	goto	i2l1076
 13567  003382                     i2l1076:
 13568  003382  B69E               	btfsc	3998,3,c	;volatile
 13569  003384  0012               	return	
 13570  003386  D7FD               	goto	i2l1076
 13571  003388  0012               	return	
 13572                           
 13573                           ;	Return value of i2_WriteSPI1 is never used
 13574  00338A  0012               	return		;funcret
 13575  00338C                     __end_ofi2_WriteSPI1:
 13576                           	opt stack 0
 13577                           pclatu	equ	0xFFB
 13578                           pclath	equ	0xFFA
 13579                           tblptru	equ	0xFF8
 13580                           tblptrh	equ	0xFF7
 13581                           tblptrl	equ	0xFF6
 13582                           tablat	equ	0xFF5
 13583                           prodh	equ	0xFF4
 13584                           prodl	equ	0xFF3
 13585                           intcon	equ	0xFF2
 13586                           postinc0	equ	0xFEE
 13587                           fsr0h	equ	0xFEA
 13588                           fsr0l	equ	0xFE9
 13589                           wreg	equ	0xFE8
 13590                           indf1	equ	0xFE7
 13591                           postdec1	equ	0xFE5
 13592                           fsr1h	equ	0xFE2
 13593                           fsr1l	equ	0xFE1
 13594                           bsr	equ	0xFE0
 13595                           indf2	equ	0xFDF
 13596                           postinc2	equ	0xFDE
 13597                           postdec2	equ	0xFDD
 13598                           plusw2	equ	0xFDB
 13599                           fsr2h	equ	0xFDA
 13600                           fsr2l	equ	0xFD9
 13601                           status	equ	0xFD8
 13602                           
 13603 ;; *************** function i2_tlc5947_latch *****************
 13604 ;; Defined at:
 13605 ;;		line 177 in file "C:/Users/cpresser/_Daten/mplab_workspace/20_KarateLight/karate_xc8.X/src/tlc5947.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;		None
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;		None
 13610 ;; Return value:  Size  Location     Type
 13611 ;;		None               void
 13612 ;; Registers used:
 13613 ;;		wreg, status,2, cstack
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13619 ;;      Params:         0       0       0       0       0       0       0       0       0
 13620 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13622 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13623 ;;Total ram usage:        0 bytes
 13624 ;; Hardware stack levels used:    1
 13625 ;; Hardware stack levels required when called:    1
 13626 ;; This function calls:
 13627 ;;		i2_Delay100TCYx
 13628 ;;		i2_Delay10TCYx
 13629 ;; This function is called by:
 13630 ;;		_HighPriorityISRCode
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text64
 13635  0032B8                     __ptext64:
 13636                           	opt stack 0
 13637  0032B8                     i2_tlc5947_latch:
 13638                           	opt stack 16
 13639                           
 13640                           ;tlc5947.c: 179: LATBbits.LATB5 = 1;;
 13641                           
 13642                           ;incstack = 0
 13643  0032B8  8A8A               	bsf	3978,5,c	;volatile
 13644                           
 13645                           ;tlc5947.c: 180: Delay100TCYx (pwr_delay);
 13646  0032BA  503A               	movf	_pwr_delay,w,c
 13647  0032BC  EC10  F01A         	call	i2_Delay100TCYx
 13648                           
 13649                           ;tlc5947.c: 182: LATCbits.LATC0 = 1;;
 13650  0032C0  808B               	bsf	3979,0,c	;volatile
 13651                           
 13652                           ;tlc5947.c: 183: LATBbits.LATB3 = 1;;
 13653  0032C2  868A               	bsf	3978,3,c	;volatile
 13654                           
 13655                           ;tlc5947.c: 184: Delay10TCYx(40);
 13656  0032C4  0E28               	movlw	40
 13657  0032C6  EC07  F01A         	call	i2_Delay10TCYx
 13658                           
 13659                           ;tlc5947.c: 185: LATBbits.LATB3 = 0;;
 13660  0032CA  968A               	bcf	3978,3,c	;volatile
 13661                           
 13662                           ;tlc5947.c: 186: Delay10TCYx(40);
 13663  0032CC  0E28               	movlw	40
 13664  0032CE  EC07  F01A         	call	i2_Delay10TCYx
 13665                           
 13666                           ;tlc5947.c: 187: LATCbits.LATC0 = 0;;
 13667  0032D2  908B               	bcf	3979,0,c	;volatile
 13668                           
 13669                           ;tlc5947.c: 189: Delay100TCYx(pwr_delay);
 13670  0032D4  503A               	movf	_pwr_delay,w,c
 13671  0032D6  EC10  F01A         	call	i2_Delay100TCYx
 13672                           
 13673                           ;tlc5947.c: 190: LATBbits.LATB5 = 0;;
 13674  0032DA  9A8A               	bcf	3978,5,c	;volatile
 13675  0032DC  0012               	return		;funcret
 13676  0032DE                     __end_ofi2_tlc5947_latch:
 13677                           	opt stack 0
 13678                           pclatu	equ	0xFFB
 13679                           pclath	equ	0xFFA
 13680                           tblptru	equ	0xFF8
 13681                           tblptrh	equ	0xFF7
 13682                           tblptrl	equ	0xFF6
 13683                           tablat	equ	0xFF5
 13684                           prodh	equ	0xFF4
 13685                           prodl	equ	0xFF3
 13686                           intcon	equ	0xFF2
 13687                           postinc0	equ	0xFEE
 13688                           fsr0h	equ	0xFEA
 13689                           fsr0l	equ	0xFE9
 13690                           wreg	equ	0xFE8
 13691                           indf1	equ	0xFE7
 13692                           postdec1	equ	0xFE5
 13693                           fsr1h	equ	0xFE2
 13694                           fsr1l	equ	0xFE1
 13695                           bsr	equ	0xFE0
 13696                           indf2	equ	0xFDF
 13697                           postinc2	equ	0xFDE
 13698                           postdec2	equ	0xFDD
 13699                           plusw2	equ	0xFDB
 13700                           fsr2h	equ	0xFDA
 13701                           fsr2l	equ	0xFD9
 13702                           status	equ	0xFD8
 13703                           
 13704 ;; *************** function i2_Delay10TCYx *****************
 13705 ;; Defined at:
 13706 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10tcyx.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  unit            1    wreg     unsigned char 
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;  unit            1   17[COMRAM] unsigned char 
 13711 ;; Return value:  Size  Location     Type
 13712 ;;		None               void
 13713 ;; Registers used:
 13714 ;;		wreg
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0
 13721 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13723 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13724 ;;Total ram usage:        1 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		i2_tlc5947_latch
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           	psect	text65
 13734  00340E                     __ptext65:
 13735                           	opt stack 0
 13736  00340E                     i2_Delay10TCYx:
 13737                           	opt stack 16
 13738                           
 13739                           ;incstack = 0
 13740                           ;i2Delay10TCYx@unit stored from wreg
 13741  00340E  6E12               	movwf	i2Delay10TCYx@unit,c
 13742  003410  0E03               	movlw	3
 13743  003412                     i2u702_47:
 13744  003412  2EE8               	decfsz	wreg,f,c
 13745  003414  D7FE               	goto	i2u702_47
 13746  003416  F000               	nop	
 13747  003418  2E12               	decfsz	i2Delay10TCYx@unit,f,c
 13748  00341A  D7FA               	goto	i2l5245
 13749  00341C  0012               	return	
 13750  00341E  0012               	return		;funcret
 13751  003420                     __end_ofi2_Delay10TCYx:
 13752                           	opt stack 0
 13753                           pclatu	equ	0xFFB
 13754                           pclath	equ	0xFFA
 13755                           tblptru	equ	0xFF8
 13756                           tblptrh	equ	0xFF7
 13757                           tblptrl	equ	0xFF6
 13758                           tablat	equ	0xFF5
 13759                           prodh	equ	0xFF4
 13760                           prodl	equ	0xFF3
 13761                           intcon	equ	0xFF2
 13762                           postinc0	equ	0xFEE
 13763                           fsr0h	equ	0xFEA
 13764                           fsr0l	equ	0xFE9
 13765                           wreg	equ	0xFE8
 13766                           indf1	equ	0xFE7
 13767                           postdec1	equ	0xFE5
 13768                           fsr1h	equ	0xFE2
 13769                           fsr1l	equ	0xFE1
 13770                           bsr	equ	0xFE0
 13771                           indf2	equ	0xFDF
 13772                           postinc2	equ	0xFDE
 13773                           postdec2	equ	0xFDD
 13774                           plusw2	equ	0xFDB
 13775                           fsr2h	equ	0xFDA
 13776                           fsr2l	equ	0xFD9
 13777                           status	equ	0xFD8
 13778                           
 13779 ;; *************** function i2_Delay100TCYx *****************
 13780 ;; Defined at:
 13781 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;  unit            1    wreg     unsigned char 
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;  unit            1   17[COMRAM] unsigned char 
 13786 ;; Return value:  Size  Location     Type
 13787 ;;		None               void
 13788 ;; Registers used:
 13789 ;;		wreg
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13795 ;;      Params:         0       0       0       0       0       0       0       0       0
 13796 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13798 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13799 ;;Total ram usage:        1 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; This function calls:
 13802 ;;		Nothing
 13803 ;; This function is called by:
 13804 ;;		i2_tlc5947_latch
 13805 ;; This function uses a non-reentrant model
 13806 ;;
 13807                           
 13808                           	psect	text66
 13809  003420                     __ptext66:
 13810                           	opt stack 0
 13811  003420                     i2_Delay100TCYx:
 13812                           	opt stack 16
 13813                           
 13814                           ;incstack = 0
 13815                           ;i2Delay100TCYx@unit stored from wreg
 13816  003420  6E12               	movwf	i2Delay100TCYx@unit,c
 13817  003422  0E21               	movlw	33
 13818  003424                     i2u703_47:
 13819  003424  2EE8               	decfsz	wreg,f,c
 13820  003426  D7FE               	goto	i2u703_47
 13821  003428  F000               	nop	
 13822  00342A  2E12               	decfsz	i2Delay100TCYx@unit,f,c
 13823  00342C  D7FA               	goto	i2l5241
 13824  00342E  0012               	return	
 13825  003430  0012               	return		;funcret
 13826  003432                     __end_ofi2_Delay100TCYx:
 13827                           	opt stack 0
 13828                           pclatu	equ	0xFFB
 13829                           pclath	equ	0xFFA
 13830                           tblptru	equ	0xFF8
 13831                           tblptrh	equ	0xFF7
 13832                           tblptrl	equ	0xFF6
 13833                           tablat	equ	0xFF5
 13834                           prodh	equ	0xFF4
 13835                           prodl	equ	0xFF3
 13836                           intcon	equ	0xFF2
 13837                           postinc0	equ	0xFEE
 13838                           fsr0h	equ	0xFEA
 13839                           fsr0l	equ	0xFE9
 13840                           wreg	equ	0xFE8
 13841                           indf1	equ	0xFE7
 13842                           postdec1	equ	0xFE5
 13843                           fsr1h	equ	0xFE2
 13844                           fsr1l	equ	0xFE1
 13845                           bsr	equ	0xFE0
 13846                           indf2	equ	0xFDF
 13847                           postinc2	equ	0xFDE
 13848                           postdec2	equ	0xFDD
 13849                           plusw2	equ	0xFDB
 13850                           fsr2h	equ	0xFDA
 13851                           fsr2l	equ	0xFD9
 13852                           status	equ	0xFD8
 13853                           pclatu	equ	0xFFB
 13854                           pclath	equ	0xFFA
 13855                           tblptru	equ	0xFF8
 13856                           tblptrh	equ	0xFF7
 13857                           tblptrl	equ	0xFF6
 13858                           tablat	equ	0xFF5
 13859                           prodh	equ	0xFF4
 13860                           prodl	equ	0xFF3
 13861                           intcon	equ	0xFF2
 13862                           postinc0	equ	0xFEE
 13863                           fsr0h	equ	0xFEA
 13864                           fsr0l	equ	0xFE9
 13865                           wreg	equ	0xFE8
 13866                           indf1	equ	0xFE7
 13867                           postdec1	equ	0xFE5
 13868                           fsr1h	equ	0xFE2
 13869                           fsr1l	equ	0xFE1
 13870                           bsr	equ	0xFE0
 13871                           indf2	equ	0xFDF
 13872                           postinc2	equ	0xFDE
 13873                           postdec2	equ	0xFDD
 13874                           plusw2	equ	0xFDB
 13875                           fsr2h	equ	0xFDA
 13876                           fsr2l	equ	0xFD9
 13877                           status	equ	0xFD8
 13878                           
 13879                           	psect	rparam
 13880  0000                     pclatu	equ	0xFFB
 13881                           pclath	equ	0xFFA
 13882                           tblptru	equ	0xFF8
 13883                           tblptrh	equ	0xFF7
 13884                           tblptrl	equ	0xFF6
 13885                           tablat	equ	0xFF5
 13886                           prodh	equ	0xFF4
 13887                           prodl	equ	0xFF3
 13888                           intcon	equ	0xFF2
 13889                           postinc0	equ	0xFEE
 13890                           fsr0h	equ	0xFEA
 13891                           fsr0l	equ	0xFE9
 13892                           wreg	equ	0xFE8
 13893                           indf1	equ	0xFE7
 13894                           postdec1	equ	0xFE5
 13895                           fsr1h	equ	0xFE2
 13896                           fsr1l	equ	0xFE1
 13897                           bsr	equ	0xFE0
 13898                           indf2	equ	0xFDF
 13899                           postinc2	equ	0xFDE
 13900                           postdec2	equ	0xFDD
 13901                           plusw2	equ	0xFDB
 13902                           fsr2h	equ	0xFDA
 13903                           fsr2l	equ	0xFD9
 13904                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    201
    Data        609
    BSS         501
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      68
    BANK0           160     46     154
    BANK1           256      0     200
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> CDCBufferOut(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> CDCBufferIn(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2812_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2812_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2812_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2812_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S1520$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    S1510$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S1510$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1486$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1486$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1486$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1486$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighPriorityISRCode in COMRAM

    _HighPriorityISRCode->i2_tlc5947_update
    i2_tlc5947_update->i2_WriteSPI1
    i2_tlc5947_latch->i2_Delay100TCYx
    i2_tlc5947_latch->i2_Delay10TCYx

Critical Paths under _LowPriorityISRCode in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ProcessIO
    _ProcessIO->_ProcessCDC
    _ProcessCDC->_USBDeviceTasks
    _getsUSBUSART->_USBTransferOnePacket
    _comm_send_rply->_CDCTxService
    _comm_send_dat->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _InitializeSystem->_tlc5947_pwm_readback
    _tlc5947_pwm_readback->_tlc5947_setChannel
    _tlc5947_setChannel->___awdiv
    _tlc5947_latch->_Delay100TCYx
    _tlc5947_latch->_Delay10TCYx
    _tlc5947_count_channels->___awdiv
    _tlc5947_update->_WriteSPI1
    _USBDeviceInit->_memset

Critical Paths under _HighPriorityISRCode in BANK0

    None.

Critical Paths under _LowPriorityISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriorityISRCode in BANK1

    None.

Critical Paths under _LowPriorityISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriorityISRCode in BANK2

    None.

Critical Paths under _LowPriorityISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriorityISRCode in BANK3

    None.

Critical Paths under _LowPriorityISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriorityISRCode in BANK4

    None.

Critical Paths under _LowPriorityISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriorityISRCode in BANK5

    None.

Critical Paths under _LowPriorityISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriorityISRCode in BANK6

    None.

Critical Paths under _LowPriorityISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriorityISRCode in BANK7

    None.

Critical Paths under _LowPriorityISRCode in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  136073
                   _InitializeSystem
                          _ProcessIO
                    _USBDeviceAttach
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            1     1      0  124830
                                             45 BANK0      1     1      0
                     _BlinkUSBStatus
                       _CDCTxService
                         _ProcessCDC
                    _SwitchIsPressed
                     _USBDeviceTasks
                 _tlc5947_setChannel
 ---------------------------------------------------------------------------------
 (2) _SwitchIsPressed                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ProcessCDC                                          15    15      0   70437
                                             30 BANK0     15    15      0
                            _BusyADC
                           _Busy_eep
                         _ConvertADC
                        _Delay10TCYx
                            _ReadADC
                         _Read_b_eep
                     _USBDeviceTasks
                        _Write_b_eep
                      _comm_send_dat
                     _comm_send_rply
                       _getsUSBUSART
             _tlc5947_count_channels
               _tlc5947_pwm_readback
                 _tlc5947_setChannel
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2372
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _comm_send_rply                                       1     1      0    2778
                                             12 BANK0      1     1      0
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _comm_send_dat                                        2     2      0    2976
                                             12 BANK0      2     2      0
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     478
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         5     5      0    2269
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Write_b_eep                                          4     1      3     307
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       1     1      0   47391
                                             29 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0   27245
                                             26 BANK0      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               0     0      0   26809
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   0     0      0   20539
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  1     1      0    7649
                                             20 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              6     6      0    6688
                                             20 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (3) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             12 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                 7     3      4    2031
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBEnableEndpoint                                    4     3      1     952
                                              8 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (6) _USBConfigureEndpoint                                 8     7      1     524
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  2     2      0     167
                                              0 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  1     1      0     170
                                              1 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfTxService                                  1     1      0     136
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Read_b_eep                                           2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BlinkUSBStatus                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0   11243
                        _CloseTimer3
                           _OpenSPI1
                         _OpenTimer3
                      _USBDeviceInit
                       _readDeviceID
             _tlc5947_count_channels
               _tlc5947_pwm_readback
 ---------------------------------------------------------------------------------
 (3) _tlc5947_pwm_readback                                 7     7      0    5315
                                             16 BANK0      7     7      0
                        _Delay10TCYx
                            ___lwdiv
                      _tlc5947_latch
                 _tlc5947_setChannel
                     _tlc5947_update
 ---------------------------------------------------------------------------------
 (2) _tlc5947_setChannel                                   8     7      1    4603
                                              8 BANK0      8     7      1
                            ___awdiv
                       _gamma_lookup
 ---------------------------------------------------------------------------------
 (3) _gamma_lookup                                         3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _tlc5947_latch                                        0     0      0      62
                       _Delay100TCYx
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay10TCYx                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Delay100TCYx                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     449
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _tlc5947_count_channels                               3     3      0    3486
                                              8 BANK0      3     3      0
                           _ReadSPI1
                          _WriteSPI1
                            ___awdiv
                     _tlc5947_update
 ---------------------------------------------------------------------------------
 (4) _tlc5947_update                                       1     1      0     102
                                              2 BANK0      1     1      0
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (5) _WriteSPI1                                            2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    3149
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _ReadSPI1                                             1     1      0       3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _readDeviceID                                        10     8      2     102
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1676
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1385
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _OpenTimer3                                           3     2      1     332
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _OpenSPI1                                             3     1      2     332
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CloseTimer3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _LowPriorityISRCode                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HighPriorityISRCode                                14    14      0     113
                                             20 COMRAM    14    14      0
                    i2_tlc5947_latch
                   i2_tlc5947_update
 ---------------------------------------------------------------------------------
 (14) i2_tlc5947_update                                    1     1      0      69
                                             19 COMRAM     1     1      0
                        i2_WriteSPI1
 ---------------------------------------------------------------------------------
 (15) i2_WriteSPI1                                         2     2      0      23
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_tlc5947_latch                                     0     0      0      44
                     i2_Delay100TCYx
                      i2_Delay10TCYx
 ---------------------------------------------------------------------------------
 (15) i2_Delay10TCYx                                       1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_Delay100TCYx                                      1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _CloseTimer3
     _OpenSPI1
     _OpenTimer3
     _USBDeviceInit
       _memset
     _readDeviceID
     _tlc5947_count_channels
       _ReadSPI1
       _WriteSPI1
       ___awdiv
       _tlc5947_update
         _WriteSPI1
     _tlc5947_pwm_readback
       _Delay10TCYx
       ___lwdiv
       _tlc5947_latch
         _Delay100TCYx
         _Delay10TCYx
       _tlc5947_setChannel
         ___awdiv
         _gamma_lookup
       _tlc5947_update
         _WriteSPI1
   _ProcessIO
     _BlinkUSBStatus
     _CDCTxService
       _USBTransferOnePacket
     _ProcessCDC
       _BusyADC
       _Busy_eep
       _ConvertADC
       _Delay10TCYx
       _ReadADC
       _Read_b_eep
       _USBDeviceTasks
         _USBCtrlEPAllowStatusStage
         _USBCtrlEPService
           _USBCtrlTrfInHandler
             _USBCtrlTrfTxService
           _USBCtrlTrfOutHandler
             _USBCtrlTrfRxService
               _USBCtrlEPAllowStatusStage
           _USBCtrlTrfSetupHandler
             _USBCheckStdRequest
               _USBStdFeatureReqHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBStdGetDscHandler
               _USBStdGetStatusHandler
               _USBStdSetCfgHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
                 _memset
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBCtrlEPServiceComplete
               _USBCtrlEPAllowDataStage
                 _USBCtrlTrfTxService
               _USBCtrlEPAllowStatusStage
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
         _USBDeviceInit
           _memset
         _USBStallHandler
         _USBSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBWakeFromSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _Write_b_eep
       _comm_send_dat
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _comm_send_rply
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _getsUSBUSART
         _USBTransferOnePacket
       _tlc5947_count_channels
         _ReadSPI1
         _WriteSPI1
         ___awdiv
         _tlc5947_update
           _WriteSPI1
       _tlc5947_pwm_readback
         _Delay10TCYx
         ___lwdiv
         _tlc5947_latch
           _Delay100TCYx
           _Delay10TCYx
         _tlc5947_setChannel
           ___awdiv
           _gamma_lookup
         _tlc5947_update
           _WriteSPI1
       _tlc5947_setChannel
         ___awdiv
         _gamma_lookup
     _SwitchIsPressed
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
               _memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _USBDeviceInit
         _memset
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _tlc5947_setChannel
       ___awdiv
       _gamma_lookup
   _USBDeviceAttach

 _LowPriorityISRCode (ROOT)

 _HighPriorityISRCode (ROOT)
   i2_tlc5947_latch
     i2_Delay100TCYx
     i2_Delay10TCYx
   i2_tlc5947_update
     i2_WriteSPI1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0     200      22       50.0%
BIGRAMh            3C0      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0       0      14        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      9A       5       96.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      44       1       71.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A6      12        0.0%
DATA                 0      0     4A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 05 20:37:05 2015

                         ReadSPI1@TempVar 00B4                              _update_count 008E  
                              _USB_SD_Ptr 0801                  __size_of_SwitchIsPressed 002C  
                          _BlinkUSBStatus 2FC0                              ___awdiv@sign 00B9  
                                      bsr 000FE0                             _USBDeviceInit 175A  
                           _tlc5947_latch 3292                        __size_of_CDCInitEP 0078  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                          ?_comm_send_dat 0001      USER_USB_CALLBACK_EVENT_HANDLER@event 00C0  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 00C2                                       l205 300A  
                                     l207 300E               __end_of_USBStdGetDscHandler 19E2  
                                     l191 1D32                                       l503 3152  
                                     l176 22C6                                       l504 3150  
                                     l177 22B4                                       l442 17C8  
                                     l194 1D52                                       l604 30E2  
                                     l454 160A                                       l288 2CCE  
                                     l528 1C92                                       l464 16C0  
                                     l800 14AC                                       l297 2494  
                                     l641 2760                                       l465 1756  
                                     l466 16D4                                       l805 14FE  
                                     l670 0F96                                       l591 277E  
                                     l655 1F0E                                       l664 1F60  
                                     l904 29B6                                       l746 288C  
                                     l594 281C                                       l595 2794  
                                     l748 28BE                                       l596 2798  
                                     _BDT 000400                                       l689 11A2  
                                     l996 344C                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _UIE 000F64                                       _UIR 000F65  
                              _USBSuspend 3206                      __size_of_Write_b_eep 0040  
                    USBStdSetCfgHandler@i 00C8                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 15DA  
                          _USBDeviceState 0095                               i2_WriteSPI1 336A  
                   ??_USBCtrlTrfRxService 00B4                            _tlc5947_update 319A  
                          ??_getsUSBUSART 00BE                  USBEnableEndpoint@options 00BC  
                            __CFG_LVP$OFF 000000                  __size_ofi2_tlc5947_latch 0026  
                         ?_comm_send_rply 0001                                      l1023 3112  
                                    l1112 3044                                      l1113 3046  
                                    l1050 2EF0                                      l1042 2ECC  
                                    l1114 3050                                      l1051 2EF4  
                                    l1115 3052                                      l1044 2ED0  
                                    l1045 2ED2                                      l1048 2EEE  
                                    l1049 2F0A                                      l1059 33DC  
                                    l1076 331C                                      l1652 2C78  
              USBConfigureEndpoint@handle 00BA                                      l6003 1CAA  
                                    l6011 1CC2                                      l6105 1F7A  
                                    l6211 2768                                      l6035 1A08  
                                    l6221 2528                                      l6125 33A8  
                                    l6205 2746                                      l6061 1ABA  
                                    l6045 1A42                                      l6109 1FA0  
                                    l7013 0A7A                                      l6303 17A2  
                                    l6039 1A1A                                      l7015 0A82  
                                    l7007 0A68                                      l6233 255E  
                                    l6129 33BE                                      l6057 1AA0  
                                    l5601 2204                                      l6081 1F1E  
                                    l6401 1490                                      l7105 0C00  
                                    l7025 0AA2                                      l7113 0C18  
                                    l6331 181A                                      l6315 17D4  
                                    l6323 17E8                                      l6307 17C0  
                                    l6235 256C                                      l6227 2540  
                                    l6171 2EA8                                      l6163 2E5E  
                                    l6091 1F36                                      l6083 1F24  
                                    l6411 14B6                                      l7107 0C08  
                                    l7027 0AAA                                      l7115 0C68  
                                    l6253 25CE                                      l6245 25A8  
                                    l6237 2576                                      l7125 22A6  
                                    l5613 226A                                      l6093 1F3E  
                                    l6405 14A0                                      l7109 0C10  
                                    l7045 0AFA                                      l7037 0ACC  
                                    l7117 0C70                                      l6327 1810  
                                    l5711 1E38                                      l5615 2282  
                                    l6095 1F44                                      l6079 1F18  
                                    l6503 30E0                                      l6431 152C  
                                    l6423 1504                                      l7055 0B26  
                                    l7047 0B02                                      l7039 0AD4  
                                    l7119 0C78                                      l6337 1880  
                                    l6249 25B8                                      l6281 31C0  
                                    l6601 2CD8                                      l5721 1E66  
                                    l6185 26DA                                      l6441 1562  
                                    l6417 14EA                                      l7081 0B94  
                                    l7073 0B74                                      l7065 0B54  
                                    l7057 0B2E                                      l5731 1EB0  
                                    l5707 1E2C                                      l6187 26E2  
                                    l5571 266C                                      l5635 2842  
                                    l7331 2E14                                      l6531 217C  
                                    l6523 2132                                      l6451 1596  
                                    l7091 0BBE                                      l7083 0B9C  
                                    l7075 0B7C                                      l7067 0B5C  
                                    l6277 31A2                                      l5573 2688  
                                    l5581 2F86                                      l5661 28A8  
                                    l5653 2880                                      l5645 286A  
                                    l7333 2E46                                      l5805 1B58  
                                    l6461 15D6                                      l7245 1D5E  
                                    l7237 1D36                                      l6391 0EFE  
                                    l6383 0E30                                      l6375 0D48  
                                    l6367 0CD8                                      l6359 0CA6  
                                    l6631 248A                                      l6199 2722  
                                    l5639 2854                                      l5831 1BE4  
                                    l5815 1B94                                      l6519 2128  
                                    l6535 2196                                      l6703 167A  
                                    l6439 1552                                      l7255 1DF2  
                                    l7271 333E                                      l6561 2C1E  
                                    l6385 0E92                                      l6377 0DC2  
                                    l6369 0CE0                                      l6633 2490  
                                    l6617 245A                                      l5729 1EA0  
                                    l5585 2F9C                                      l5593 21CE  
                                    l5673 2DEE                                      l5921 1060  
                                    l5905 0F8E                                      l5809 1B62  
                                    l6537 219C                                      l6481 3194  
                                    l6457 15AA                                      l6449 1588  
                                    l6553 32FE                                      l7089 0BB6  
                                    l7249 1DD8                                      l7265 332C  
                                    l5691 31DA                                      l6563 2C2C  
                                    l6627 247C                                      l5739 1EEA  
                                    l5755 23B8                                      l5595 21EA  
                                    l5675 2DF4                                      l5931 1092  
                                    l5851 1960                                      l5843 18D4  
                                    l6723 16CA                                      l6459 15B0  
                                    l6811 29FE                                      l7259 1E02  
                                    l6573 2C68                                      l6565 2C36  
                                    l5669 28C6                                      l5941 10F0  
                                    l5933 10B8                                      l5925 106C  
                                    l5861 19C0                                      l5853 1966  
                                    l6717 16B4                                      l6709 1686  
                                    l6813 2A04                                      l5695 31EE  
                                    l5679 2DFA                                      l5943 1112  
                                    l5927 1072                                      l5919 1018  
                                    l5839 18C2                                      l5871 2786  
                                    l6479 3190                                      l6743 1728  
                                    l6399 1484                                      l6823 2A3C  
                                    l6815 2A14                                      l6807 29DA  
                                    l6585 2C9E                                      l5865 19C6  
                                    l5785 2A98                                      l6745 1750  
                                    l6737 1702                                      l6665 1602  
                                    l6657 15F4                                      l6817 2A1A  
                                    l5947 112C                                      l5859 19BA  
                                    l6739 171A                                      l6763 2062  
                                    l6755 201C                                      l6589 2CA8  
                                    l5973 1212                                      l5957 117A  
                                    l5877 27BA                                      l5789 2AB2  
                                    l6693 165C                                      l6765 2068  
                                    l6773 20C6                                      l6757 2028  
                                    l5975 1220                                      l5967 11C2  
                                    l5959 1188                                      l5879 27E0  
                                    l5887 2804                                      l5991 1C3C  
                                    l6687 162E                                      l6679 1620  
                                    l5969 11E4                                      l6793 2F62  
                                    l6785 2F38                                      l6769 2094  
                                    l6929 328C                                      l6891 2ED6  
                                    l5987 1C2E                                      l6699 166C  
                                    l6787 2F3E                                      l6963 097E  
                                    l6947 08F8                                      l6895 2EF8  
                                    l6991 0A02                                      l6975 09BE  
                                    l6967 099C                                      l6995 0A16  
                                    l6979 09CE                                      l6989 09F8  
                                    l6999 0A20                                      _DDRA 000F92  
                                    _DDRB 000F93                                      _DDRC 000F94  
                                    _DDRD 000F95                                      _DDRE 000F96  
                                    _LATC 000F8B                                      u5060 192A  
                                    u5070 195C                                      u5090 19AC  
                                    u5067 1920                                      u5077 1952  
                                    u7007 33AA                                      u7017 33C0  
                                    u5097 19A2                                      u4910 1E8E  
                                    u6600 2FFC                                      u6360 200C  
                                    u6505 3120                                      u6602 2FFE  
                                    u4930 1ED8                                      u6506 3122  
                                    u6515 2D9E                                      u5725 0D80  
                                    u4917 1E84                                      u6470 343A  
                                    u6550 326E                     ??_USBCtrlTrfTxService 00B4  
                                    u6368 2010                                      u5745 0E04  
                                    u4937 1ECE                                      u5770 1474  
                                    u6556 3270                                      u6661 0968  
                                    u6590 2FE8                                      _UCFG 000F62  
                                    u6592 2FEA                                      u5778 1478  
                                    _UEP0 000F6A                                      _UEP1 000F6B  
                                    _UEIE 000F66                                      _UEIR 000F67  
                                    _UCON 000F60                   readDeviceID@pic18_devid 00BA  
                         _CDCDataInHandle 0080    USBStdFeatureReqHandler@current_ep_data 00CB  
                                    _pDst 0086                                      _main 3326  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 0070  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                           _USBDeviceAttach 3126  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_IESO$OFF 000000  
                           __CFG_ICPRT$ON 000000                __end_of_USBCheckStdRequest 1FE6  
                  ??_USBCtrlTrfOutHandler 00B6                       __end_of_CloseTimer3 344A  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000010  
                         __end_of_BusyADC 3440                 ??_USBStdFeatureReqHandler 00C8  
                  __end_of_BlinkUSBStatus 3010                           __end_of_ReadADC 340E  
                             _Delay10TCYx 33A4                  ??_USBStdGetStatusHandler 00B4  
                          ?_USBDeviceInit 0001                            ?_tlc5947_latch 0001  
                                   ?_main 0001                             _USB_In_Buffer 0200  
                         __end_of___awdiv 25DA                                     _EEADR 000FA9  
                   __size_of_Delay100TCYx 0016         __size_of_USBCtrlEPServiceComplete 010A  
                         ___awdiv@divisor 00B6                    __end_of_USBDeviceTasks 175A  
                                   _T2CON 000FBA                                     _T3CON 000FB1  
               ?_USBCtrlEPServiceComplete 0001                           __end_of___lwdiv 2C82  
                                   i1l165 0064                                     i2l161 2BC6  
                                   _UADDR 000F63                           ___awdiv@counter 00B8  
                       i2Delay10TCYx@unit 0012                            __pidataBIGRAMl 1250  
                                   _TMR3H 000FB3                                     _TMR3L 000FB2  
                                   _TRISC 000F94                                     _USTAT 000F61  
                  __end_of_tlc5947_update 31D0                             __CFG_WRT0$OFF 000000  
      __size_of_USBCtrlEPAllowStatusStage 00D0                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000           __end_of_USBCtrlEPAllowDataStage 2AE6  
                                   _sd000 08C6                                     _sd001 084C  
                                   _sd002 0880                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          Read_b_eep@badd 00B4                            __CFG_EBTRB$OFF 000000  
                  Write_b_eep@GIE_BIT_VAL 00B7                  __end_ofi2_tlc5947_update 3266  
                              _ConvertADC 3452                                     tablat 000FF5  
                                   plusw2 000FDB                         __end_of_CDCInitEP 2D7C  
                                   status 000FD8                            __CFG_T3CMX$RB5 000000  
                         putUSBUSART@data 00B4                      __end_of_gamma_lookup 336A  
            __size_of_USBStdSetCfgHandler 010C                           __initialization 28EC  
                         ?_BlinkUSBStatus 0001                              _Delay100TCYx 33BA  
                            __end_of_main 3348                     _control_signal_bitmap 009A  
                        __end_of_ReadSPI1 33E6                                _Read_b_eep 33E6  
                          _pattern_number 009E                             ?_readDeviceID 00B4  
                        __end_of_Busy_eep 3452                           ??_comm_send_dat 00C0  
                 __size_ofi2_Delay100TCYx 0012                 __size_of_USBCtrlEPService 00E4  
             __size_of_LowPriorityISRCode 0092                          __end_of_OpenSPI1 2F12  
                                  ??_main 00E2                 __size_of_InitializeSystem 00DC  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                       ??_SwitchIsPressed 00B4                               ?_USBSuspend 0001  
                            _CDCBufferOut 0140                           ?_tlc5947_update 0001  
                          __CFG_SDOMX$RC7 000000                           __CFG_CCP2MX$RC1 000000  
                            _cdc_mem_type 0099                   __end_of_USBDeviceAttach 3160  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 0082  
                       _getsUSBUSART$3207 00BF                                    _ACTCON 000FB5  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 00B4                           getsUSBUSART@len 00BD  
                                  _T3GCON 000FB4                     __size_of_CDCTxService 018A  
                                  i2l1076 3382                                _OpenTimer3 3010  
                          __CFG_WDTEN$OFF 000000                                    i2l5241 3422  
                                  i2l5245 3410                                    i2l5431 2BC2  
                                  i2l5393 323E                                    i2l5397 3258  
                                  _TABLAT 000FF5                                    _OSCCON 000FD3  
                             _CloseTimer3 3440                             CDCTxService@i 00BE  
                               ??_BusyADC 00B4                                 ??_ReadADC 00B6  
                       ??i2_tlc5947_latch 0013                         _shortPacketStatus 003B  
                          __CFG_XINST$OFF 000000                          OpenSPI1@bus_mode 00B4  
                         USBDeviceTasks@i 00D1               USBStdFeatureReqHandler@pUEP 00C9  
                USBTransferOnePacket@data 00B5                USBCtrlTrfInHandler@lastDTS 00B5  
                         ??_USBDeviceInit 00BC                           ??_tlc5947_latch 00B5  
                            ?_putUSBUSART 00B4                            ??_readDeviceID 00B6  
                               ??___awdiv 00B8                            __CFG_STVREN$ON 000000  
                   __end_ofi2_Delay10TCYx 3420                      __end_of_getsUSBUSART 20CC  
                               ??___lwdiv 00B8                         _USBEnableEndpoint 2F6C  
         __size_of_USBStdGetStatusHandler 00C2                                    _memset 31D0  
                                  clear_0 28F4                                    clear_1 2906  
                                  clear_2 2912                                    clear_3 291E  
                        ___awdiv@quotient 00BA                                _ProcessCDC 08CC  
                        OpenTimer3@config 00B6                                ProcessIO@x 00E1  
                      ?_USBEnableEndpoint 00BC             __size_of_USBTransferOnePacket 00DE  
                            __pdataCOMRAM 0044                        __size_of_ProcessIO 00F0  
                            _CDCTxService 1450                              _txmiss_count 008C  
                            __mediumconst 0000                           tlc5947_update@x 00B6  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 00BD  
                 ?_tlc5947_count_channels 0001                               _CtrlTrfData 000438  
                             ?_ConvertADC 0001                      _controlTransferState 0039  
                    __CFG_LS48MHZ$SYS48X8 000000                __end_of_tlc5947_setChannel 0F6A  
                              __accesstop 0060                   __end_of__initialization 299A  
                      __size_of_WriteSPI1 0024                           __CFG_PBADEN$OFF 000000  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0044  
                     __size_of_USBSuspend 0032              __size_of_HighPriorityISRCode 2BF8  
            __end_of_tlc5947_pwm_readback 250A                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 2FC0                          __CFG_nPWRTEN$OFF 000000  
                           __end_of_sd000 08CA                             __end_of_sd001 0880  
                           __end_of_sd002 08B4                              __pidataBANK0 338C  
                            __pidataBANK1 305A          __size_of_USBCtrlEPAllowDataStage 00A0  
                             ?_Read_b_eep 00B4             __size_of_USBConfigureEndpoint 00CE  
             __end_of_USBCtrlTrfInHandler 2770                           __CFG_PCLKEN$OFF 000000  
                 ProcessCDC@boot_request0 00DA                   ProcessCDC@boot_request1 00DB  
                          __CFG_nLPBOR$ON 000000                         _CDCTxService$3255 00BC  
                        ??_comm_send_rply 00C0                                _cdc_notice 0060  
          __end_of_tlc5947_count_channels 2D04                                _cdc_rx_len 0036  
                              _cdc_tx_len 0038                              ?i2_WriteSPI1 0001  
                ??_USBCtrlTrfSetupHandler 00CE                            _USB_Out_Buffer 0240  
                        ?_USBDeviceAttach 0001                    _USBStdGetStatusHandler 2770  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                               ?_OpenTimer3 00B4  
                        WriteSPI1@TempVar 00B4                                 ?_ReadSPI1 0001  
                   __size_of_gamma_lookup 0022                                 ?_Busy_eep 0001  
                               ?_OpenSPI1 00B4               __size_of_USBWakeFromSuspend 003A  
                             _pBDTEntryIn 002B                         __end_of_ProcessIO 1E0C  
        __end_of_USBCtrlEPServiceComplete 1D1C               __size_of_USBCheckCDCRequest 00BA  
                       __CFG_PLLSEL$PLL3X 000000                      USBCtrlTrfRxService@i 00B4  
                            ?_Delay10TCYx 0001                            i2_Delay100TCYx 3420  
                                 ?_memset 00B4                                _device_dsc 08B4  
                     __size_of_ConvertADC 0004                               ?_ProcessCDC 0001  
                        _USBCtrlEPService 20CC                             ??_Write_b_eep 00B7  
                              _ep_data_in 0074                         __end_of_WriteSPI1 3326  
                        _InitializeSystem 228E               __end_of_USBCtrlTrfRxService 1B06  
                      _USBCheckStdRequest 1EFA                         _configDescriptor1 0809  
                     i2WriteSPI1@data_out 0013                    _tlc_pwm_readback_value 008A  
             __end_of_USBCtrlTrfTxService 1EFA                       _USBStdSetCfgHandler 1B06  
                                 _OSCCON2 000FD2                            comm_send_dat@i 00C0  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                            _gamma_lookup 3348                                   _TBLPTRU 000FF8  
                                 _OSCTUNE 000F9B                                   _SSP1BUF 000FC9  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 0130  
                                 _UIEbits 000F64                      __end_of_readDeviceID 2DEA  
                                 _UIRbits 000F65                         ?i2_tlc5947_update 0001  
                     __size_of_Read_b_eep 0014                                ??_ReadSPI1 00B4  
                           _cdc_trf_state 0037                                ??_Busy_eep 00B4  
                      ??i2_tlc5947_update 0014                                   _BusyADC 3432  
                        ??_BlinkUSBStatus 00B4                                   _ReadADC 33FA  
                              ??_OpenSPI1 00B6                                   _pCDCDst 007A  
                                 _pCDCSrc 007D                     __size_of_getsUSBUSART 00E6  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 2D04                                   __Lparam 0000  
                         _SwitchIsPressed 3266                __size_of_USBEnableEndpoint 0054  
                  __end_ofi2_Delay100TCYx 3432                         _green_led_counter 009C  
                    ??_USBCheckStdRequest 00CE             __size_of_USBCtrlTrfOutHandler 0062  
                                 ___awdiv 250A                          ??_USBDeviceTasks 00D1  
                                 ___lwdiv 2C00                         ??_USBStallHandler 00B4  
                            __psmallconst 0800                      __size_of_putUSBUSART 0024  
                                 __pcinit 28EC                        getsUSBUSART@buffer 00BB  
                        ??_tlc5947_update 00B6                           __size_of_memset 0036  
                         Delay10TCYx@unit 00B4                 __end_of_configDescriptor1 084C  
                                 __ramtop 0800                       __size_of_OpenTimer3 004A  
                                 __ptext0 3326                                   __ptext1 3126  
                                 __ptext2 1D1C                                   __ptext3 3266  
                                 __ptext4 08CC                                   __ptext5 1FE6  
                                 __ptext6 2F12                                   __ptext7 29A4  
                                 __ptext8 32DE                                   __ptext9 1450  
                                 _inPipes 003D               _USBDeferOUTDataStagePackets 0094  
                            ??_USBSuspend 00C8                                 _T3CONbits 000FB1  
                                 _old_sw2 009D                         OpenTimer3@config1 00B4  
                         i2_tlc5947_latch 32B8                       __end_of_Write_b_eep 3126  
                          ProcessCDC@csum 00D6                        __end_of_USB_CD_Ptr 0809  
                    _tlc5947_pwm_readback 243A           __size_of_USBCtrlTrfSetupHandler 0090  
                          __pintcode_body 2B76                      end_of_initialization 299A  
                            _getsUSBUSART 1FE6                        __end_of_USB_SD_Ptr 0807  
                           __pdataBIGRAMl 0440                              ?_CloseTimer3 0001  
                     _pBDTEntryEP0OutNext 0033                                   memset@c 00B6  
                                 memset@n 00B8                                   memset@p 00BA  
                           __Lmediumconst 0000                                   int_func 2B76  
                       OpenSPI1@smp_phase 00B5                       __size_of_ProcessCDC 03B6  
         _dummy_encapsulated_cmd_response 00A2                  ?_USBStdFeatureReqHandler 0001  
                   ??_USBStdSetCfgHandler 00C8                                ?_CDCInitEP 0001  
                        comm_send_dat@len 00C1                        __end_of_USBSuspend 3238  
                 _USBCtrlEPAllowDataStage 2A46                                _tlc_memory 0180  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _tlc_nbytes 0044                           ?i2_Delay100TCYx 0001  
                                 postinc0 000FEE                                   postinc2 000FDE  
              __end_of_LowPriorityISRCode 00AA                         OpenSPI1@sync_mode 00B6  
                _USBCtrlEPServiceComplete 1C12                _USBStatusStageEnabledFlag1 0096  
              _USBStatusStageEnabledFlag2 0097                        USBEnableEndpoint@p 00BD  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                   __end_of_comm_send_dat 2A46                                 _PORTCbits 000F82  
                        comm_send_rply@cc 00C0            tlc5947_count_channels@old_data 00BC  
                     _HighPriorityISRCode 0008                                 _TRISAbits 000F92  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                      _BothEP0OutUOWNsSet 0090                     ?_tlc5947_pwm_readback 0001  
               USBConfigureEndpoint@EPNum 00B9                              ??_ConvertADC 00B4  
              ?_USBCtrlEPAllowStatusStage 0001                      __size_ofi2_WriteSPI1 0022  
     USER_USB_CALLBACK_EVENT_HANDLER@size 00C4                                 _USTATcopy 00B3  
                 __end_of_SwitchIsPressed 3292              __end_of_USBTransferOnePacket 228E  
                    ?_HighPriorityISRCode 0001                         putUSBUSART@length 00B6  
                        Delay100TCYx@unit 00B4                    _USBCtrlTrfSetupHandler 2AE6  
                      _tlc5947_setChannel 0C82                              ??_Read_b_eep 00B6  
                   __end_of_USBDeviceInit 18B2                     __end_of_tlc5947_latch 32B8  
                    __size_of_Delay10TCYx 0016                             __pidataCOMRAM 3456  
                 __end_ofi2_tlc5947_latch 32DE                        __end_of_ConvertADC 3456  
                             _Write_b_eep 30E6                 tlc5947_count_channels@pos 00BE  
                          __end_of_memset 3206                       ?_tlc5947_setChannel 00BC  
                       _USBBusIsSuspended 0092                     __size_of_readDeviceID 006E  
                     start_initialization 28EC                   ?_USBStdGetStatusHandler 0001  
           USBCtrlTrfRxService@byteToRead 00B5                               _cdc_data_rx 0280  
                             _cdc_data_tx 02C0              __end_of_USBConfigureEndpoint 26A8  
         __end_of_USBStdFeatureReqHandler 1250                              ??_OpenTimer3 00B5  
                  __size_ofi2_Delay10TCYx 0012         __end_of_USBCtrlEPAllowStatusStage 243A  
                             _CDCBufferIn 0100                  __end_of_USBCtrlEPService 21B0  
                      __end_of_Read_b_eep 33FA                      ??_tlc5947_setChannel 00BD  
                __end_of_InitializeSystem 236A                         __size_of_ReadSPI1 0016  
               ??_USBCtrlEPAllowDataStage 00B5                         __size_of_Busy_eep 0008  
                   ??_HighPriorityISRCode 0015                               ??_CDCInitEP 00C0  
                          USBDeviceInit@i 00BC                    _pBDTEntryEP0OutCurrent 0031  
                       __size_of_OpenSPI1 0060                   USBTransferOnePacket@dir 00B4  
                 USBTransferOnePacket@len 00B7                       _USBStdGetDscHandler 18B2  
                               _ProcessIO 1D1C                               __pdataBANK0 00E2  
                             __pdataBANK1 0180                              _readDeviceID 2D7C  
                                ??_memset 00BA                              ??_ProcessCDC 00D2  
                      __end_of_OpenTimer3 305A                    _USBActiveConfiguration 0043  
          __end_of_USBStdGetStatusHandler 2832                               __pbssCOMRAM 0023  
                  ??_tlc5947_pwm_readback 00C4                             __pcstackBANK0 00B4  
            __size_of_USBCtrlTrfInHandler 00C8                                 _WriteSPI1 3302  
                    ?_USBStdGetDscHandler 0001                __end_of_USBWakeFromSuspend 319A  
                        ?_SwitchIsPressed 0001                           _USBStallHandler 30A2  
                            _pBDTEntryOut 006A                                  ?_BusyADC 0001  
                                ?_ReadADC 00B4                __end_of_USBCheckCDCRequest 28EC  
                      __end_of_ProcessCDC 0C82                         WriteSPI1@data_out 00B5  
                    __size_of_CloseTimer3 000A                  __size_of_USBDeviceAttach 003A  
                      i2WriteSPI1@TempVar 0012                          ___lwdiv@dividend 00B4  
                           ?_Delay100TCYx 0001                                 __pintcode 0008  
                               _pic18_rev 009F                                  ?___awdiv 00B4  
                              ?_ProcessIO 0001                 __size_ofi2_tlc5947_update 002E  
                                ?___lwdiv 00B4                             i2_Delay10TCYx 340E  
                             __pintcodelo 0018                               _gamma_table 0440  
                        ?i2_tlc5947_latch 0001                                 _led_count 0084  
                             _pic18_devid 0088                      _USBTransferOnePacket 21B0  
                             __smallconst 0800                tlc5947_count_channels@data 00BD  
                              ?_WriteSPI1 0001              __end_of_USBCtrlTrfOutHandler 2EB2  
                   ??_USBStdGetDscHandler 00B4                               _ep_data_out 0077  
                        ___lwdiv@quotient 00B9                                  _DDRAbits 000F92  
                                _DDRBbits 000F93              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 00B4              __size_of_USBCtrlTrfTxService 00EE  
                           ProcessCDC@cmd 00D9                             ProcessCDC@len 00E0  
                 __size_of_comm_send_rply 005A                                  _IOCBbits 000F86  
                                _LATBbits 000F8A                                  _LATCbits 000F8B  
              ??_USBCtrlEPServiceComplete 00B5                          ??i2_Delay100TCYx 0012  
                                _IPR1bits 000F9F                                  _PIE1bits 000F9D  
                                _IPR3bits 000FA5                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3                                 _tmr3h_cal 00A0  
                               _tmr3l_cal 00A1                            ??_Delay100TCYx 00B4  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                                  i2u702_47 3412  
                                i2u703_47 3424                 USBCtrlEPService@setup_cnt 00D0  
                           gamma_lookup@c 00B6                                  _RCONbits 000FD0  
                           ??_putUSBUSART 00B7                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F6A                _USBDeferINDataStagePackets 0093  
                                _SSP1CON1 000FC6               __size_of_USBCheckStdRequest 00EC  
                          ?i2_Delay10TCYx 0001                                  _SSP1STAT 000FC7  
                                _UCONbits 000F60                      _USBConfigureEndpoint 25DA  
                ??_tlc5947_count_channels 00BC                             _tlc_nchannels 00F9  
        __size_of_USBStdFeatureReqHandler 02E6                                _ADCON0bits 000FC2  
                   ?_USBTransferOnePacket 00B4                                 _pwr_delay 003A  
                         Write_b_eep@badd 00B4                           Write_b_eep@bdat 00B6  
                           ?_CDCTxService 0001                              _RemoteWakeup 0091  
                       __CFG_CFGPLLEN$OFF 000000                        _LowPriorityISRCode 0018  
                 __end_of_USBStallHandler 30E6                                 copy_data0 2938  
                               copy_data1 295C                                 copy_data2 297C  
             ??_USBCtrlEPAllowStatusStage 00B4               __end_of_USBStdSetCfgHandler 1C12  
                                _ReadSPI1 33D0                     tlc5947_setChannel@col 00C1  
                   tlc5947_setChannel@val 00BC                     tlc5947_setChannel@pos 00C3  
                     ?_LowPriorityISRCode 0001                                  _Busy_eep 344A  
                      __end_of_device_dsc 08C6                                _EECON1bits 000FA6  
                                _OpenSPI1 2EB2                          __size_of_BusyADC 000E  
                 ?_USBCtrlTrfSetupHandler 0001                          __size_of_ReadADC 0014  
                 USBStdGetStatusHandler@p 00B5                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 00B8  
                      __CFG_BOREN$SBORDIS 000000                                  _SetupPkt 000430  
                             ??_ProcessIO 00E1                     ?_USBConfigureEndpoint 00B4  
                       ??_USBDeviceAttach 00B4                          __size_of___awdiv 00D0  
                 __size_of_BlinkUSBStatus 0050                          __size_of___lwdiv 0082  
                    ??_LowPriorityISRCode 0001                              ?_Write_b_eep 00B4  
                              _ANSELAbits 000F5B                       __end_of_putUSBUSART 3302  
                             _line_coding 00AA                                _ANSELCbits 000F5D  
                          ??_CDCTxService 00BB                             ??i2_WriteSPI1 0012  
                 __size_of_USBDeviceTasks 0180                               ??_WriteSPI1 00B4  
                         ___lwdiv@divisor 00B6                           ___lwdiv@counter 00B8  
                                __ptext10 30E6                                  __ptext11 15DA  
                                __ptext20 1B06                                  __ptext12 3160  
                                __ptext21 2770                                  __ptext13 3206  
                                __ptext30 2E50                                  __ptext22 18B2  
                                __ptext14 30A2                                  __ptext31 19E2  
                                __ptext23 0F6A                                  __ptext15 20CC  
                                __ptext40 2FC0                                  __ptext32 236A  
                                __ptext24 2DEA                                  __ptext16 2AE6  
                                __ptext41 228E                                  __ptext33 26A8  
                                __ptext25 2832                                  __ptext17 1C12  
                                __ptext50 319A                                  __ptext42 243A  
                                __ptext34 1E0C                                  __ptext26 2D04  
                                __ptext18 2A46                                  __ptext51 3302  
                                __ptext43 0C82                                  __ptext35 33E6  
                                __ptext27 21B0                                  __ptext19 1EFA  
                                __ptext52 250A                                  __ptext44 3348  
                                __ptext36 33FA                                  __ptext28 2F6C  
                                __ptext53 33D0                                  __ptext45 3292  
                                __ptext37 3452                                  __ptext29 25DA  
                                __ptext62 3238                                  __ptext54 2D7C  
                                __ptext46 33A4                                  __ptext38 344A  
                                __ptext63 336A                                  __ptext55 175A  
                                __ptext47 33BA                                  __ptext39 3432  
                                __ptext64 32B8                                  __ptext56 31D0  
                                __ptext48 2C00                                  __ptext65 340E  
                                __ptext57 3010                                  __ptext49 2C82  
                                __ptext66 3420                                  __ptext58 2EB2  
                                __ptext59 3440                              _SSP1CON1bits 000FC6  
                 __size_of_tlc5947_update 0036                                _T3GCONbits 000FB4  
                             _OSCCON2bits 000FD2            __end_of_USBCtrlTrfSetupHandler 2B76  
                           __size_of_main 0022                         ?_USBCtrlEPService 0001  
                  __size_of_comm_send_dat 00A2                         ?_InitializeSystem 0001  
                            ProcessCDC@_c 00D7                              ProcessCDC@_x 00DF  
                            ProcessCDC@_y 00DC                        ??_USBCtrlEPService 00CE  
                       _tcl5947_testbyte0 00F7                         _tcl5947_testbyte1 00F8  
                     _USBCtrlTrfInHandler 26A8                        ??_InitializeSystem 00CB  
                         ??i2_Delay10TCYx 0012                             ??_Delay10TCYx 00B4  
                                _outPipes 0023                      _USBCtrlTrfOutHandler 2E50  
                        i2_tlc5947_update 3238                 _USBCtrlEPAllowStatusStage 236A  
                            _SSP1STATbits 000FC7                    ??_USBTransferOnePacket 00B8  
         __size_of_tlc5947_count_channels 0082                        i2Delay100TCYx@unit 0012  
                    tlc5947_setChannel@ch 00C0                 _USBDeferStatusStagePacket 0035  
                CDCTxService@byte_to_send 00BF                                _INTCONbits 000FF2  
                   tlc5947_pwm_readback@i 00CA                      ?_USBCtrlTrfInHandler 0001  
                           ?_gamma_lookup 00B4             USBCtrlTrfTxService@byteToSend 00B4  
                    __end_of_Delay100TCYx 33D0                                  memset@p1 00B4  
                      readDeviceID@devID1 00BC                        readDeviceID@devID2 00BD  
                        ?_USBStallHandler 0001                         i2tlc5947_update@x 0014  
                USBStdFeatureReqHandler@p 00CC                                  intlevel1 0000  
                                intlevel2 0000               __end_of_HighPriorityISRCode 2C00  
                  __size_of_USBDeviceInit 0158                            _comm_send_rply 2F12  
                  __size_of_tlc5947_latch 0026                       __end_ofi2_WriteSPI1 338C  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 2E50  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0066  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 00C6          ?_USER_USB_CALLBACK_EVENT_HANDLER 00C0  
         _USER_USB_CALLBACK_EVENT_HANDLER 2DEA               __size_of_tlc5947_setChannel 02E8  
                  ??_USBConfigureEndpoint 00B5                     ?_USBCtrlTrfOutHandler 0001  
                             _putUSBUSART 32DE                      __CFG_CPUDIV$NOCLKDIV 000000  
                     _USBCtrlTrfRxService 19E2                        _USBWakeFromSuspend 3160  
                 _USBStdFeatureReqHandler 0F6A                               _tlc_request 003C  
                      _USBCheckCDCRequest 2832                       _USBCtrlTrfTxService 1E0C  
                     __end_of_Delay10TCYx 33BA                             _comm_send_dat 29A4  
                     ?_USBWakeFromSuspend 0001                            ??_gamma_lookup 00B6  
                   ??_USBCtrlTrfInHandler 00B5                     _USBAlternateInterface 00B1  
                            _test_pattern 00E2                        ProcessCDC@checksum 00D8  
                     ?_USBCheckCDCRequest 0001                       USBEnableEndpoint@ep 00BF  
                         _endpoint_number 009B             __size_of_tlc5947_pwm_readback 00D0  
                    ?_USBCtrlTrfRxService 0001                    __end_of_comm_send_rply 2F6C  
                           ?_getsUSBUSART 00BB                        __CFG_FOSC$INTOSCIO 000000  
                ?_USBCtrlEPAllowDataStage 0001                             ??_CloseTimer3 00B4  
                    ?_USBCtrlTrfTxService 0001                    _tlc5947_count_channels 2C82  
            _USBStatusStageTimeoutCounter 0098                      ??_USBWakeFromSuspend 00C8  
              USBTransferOnePacket@handle 00B9                      __end_of_CDCTxService 15DA  
                    ??_USBCheckCDCRequest 00B4                                _USB_CD_Ptr 0807  
                      ProcessCDC@numBytes 00DE  
